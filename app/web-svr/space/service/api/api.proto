// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package space.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

service Space {
  rpc PrivacySetting(PrivacySettingReq) returns (PrivacySettingReply);
  rpc UpdatePrivacySetting(UpdatePrivacysReq) returns (.google.protobuf.Empty);
}

enum PrivacyOption {
  bangumi = 0;
  tags = 1;
  fav_video = 2;
  coins_video = 3;
  groups = 4;
  played_game = 5;
  channel =6;
  user_info = 7;
  likes_video = 8;
  bbq = 9;
  comic = 10;
  dress_up = 11;
  live_playback = 12;
}

enum PrivacyState {
  // 未设置
  no_set = 0;
  // 已关闭
  closed = 1;
  // 已开启
  opened = 2;
}

message PrivacySettingReq {
  int64 mid = 1 [(gogoproto.moretags) = 'form:"name" validate:"min=1"'];
  repeated PrivacyOption privacy_option = 2;
}

message PrivacySettingReply {
  map<string,PrivacySetting> settings = 1;
}

message PrivacySetting {
  PrivacyOption option = 1;
  PrivacyState state = 2;
}

message UpdatePrivacysReq {
  int64 mid = 1 [(gogoproto.moretags) = 'form:"name" validate:"min=1"'];
  repeated PrivacySetting settings = 2 [(gogoproto.moretags) = 'form:"settings" validate:"required"'];
}
