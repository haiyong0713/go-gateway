// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: go-gateway/app/app-svr/app-search/api/v1/api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

It is generated from these files:

	go-gateway/app/app-svr/app-search/api/v1/api.proto
*/
package api

import (
	"context"

	bm "go-common/library/net/http/blademaster"
	"go-common/library/net/http/blademaster/binding"
)

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathSearchSuggest3 = "/bilibili.app.interface.v1.Search/Suggest3"
var PathSearchDefaultWords = "/bilibili.app.interface.v1.Search/DefaultWords"

// SearchBMServer is the server API for Search service.
// Search 搜索
type SearchBMServer interface {
	// 搜索联想词
	Suggest3(ctx context.Context, req *SuggestionResult3Req) (resp *SuggestionResult3Reply, err error)

	// 默认搜索词
	DefaultWords(ctx context.Context, req *DefaultWordsReq) (resp *DefaultWordsReply, err error)
}

var SearchSvc SearchBMServer

func searchSuggest3(c *bm.Context) {
	p := new(SuggestionResult3Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.Suggest3(c, p)
	c.JSON(resp, err)
}

func searchDefaultWords(c *bm.Context) {
	p := new(DefaultWordsReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.DefaultWords(c, p)
	c.JSON(resp, err)
}

// RegisterSearchBMServer Register the blademaster route
func RegisterSearchBMServer(e *bm.Engine, server SearchBMServer) {
	SearchSvc = server
	e.GET("/bilibili.app.interface.v1.Search/Suggest3", searchSuggest3)
	e.GET("/bilibili.app.interface.v1.Search/DefaultWords", searchDefaultWords)
}
