// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: module.proto

package broadcast

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Action int32

const (
	Action_UNKNOWN Action = 0
	Action_DELETE  Action = 1
)

var Action_name = map[int32]string{
	0: "UNKNOWN",
	1: "DELETE",
}

var Action_value = map[string]int32{
	"UNKNOWN": 0,
	"DELETE":  1,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ae7704718fb7daeb, []int{0}
}

type ModuleNotifyReply struct {
	Atcion               Action   `protobuf:"varint,1,opt,name=atcion,proto3,enum=bilibili.broadcast.message.fawkes.Action" json:"atcion,omitempty"`
	AppKey               string   `protobuf:"bytes,2,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	PoolName             string   `protobuf:"bytes,3,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	ModuleName           string   `protobuf:"bytes,4,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleNotifyReply) Reset()         { *m = ModuleNotifyReply{} }
func (m *ModuleNotifyReply) String() string { return proto.CompactTextString(m) }
func (*ModuleNotifyReply) ProtoMessage()    {}
func (*ModuleNotifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae7704718fb7daeb, []int{0}
}
func (m *ModuleNotifyReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleNotifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleNotifyReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleNotifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleNotifyReply.Merge(m, src)
}
func (m *ModuleNotifyReply) XXX_Size() int {
	return m.Size()
}
func (m *ModuleNotifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleNotifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleNotifyReply proto.InternalMessageInfo

func (m *ModuleNotifyReply) GetAtcion() Action {
	if m != nil {
		return m.Atcion
	}
	return Action_UNKNOWN
}

func (m *ModuleNotifyReply) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

func (m *ModuleNotifyReply) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

func (m *ModuleNotifyReply) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func init() {
	proto.RegisterEnum("bilibili.broadcast.message.fawkes.Action", Action_name, Action_value)
	proto.RegisterType((*ModuleNotifyReply)(nil), "bilibili.broadcast.message.fawkes.ModuleNotifyReply")
}

func init() { proto.RegisterFile("module.proto", fileDescriptor_ae7704718fb7daeb) }

var fileDescriptor_ae7704718fb7daeb = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4a, 0xf3, 0x40,
	0x1c, 0xc5, 0xbf, 0xf9, 0x94, 0xa9, 0xfd, 0x47, 0xa4, 0xce, 0xc2, 0x86, 0x16, 0x62, 0xeb, 0xaa,
	0xba, 0x98, 0x4a, 0xf5, 0x02, 0x15, 0xb3, 0xaa, 0x46, 0x08, 0x4a, 0x41, 0x90, 0x32, 0x49, 0x27,
	0x31, 0x34, 0xc9, 0x7f, 0x68, 0xa6, 0x48, 0x0e, 0xe5, 0x3d, 0x5c, 0x7a, 0x04, 0xc9, 0x49, 0x24,
	0x99, 0xea, 0xc6, 0x85, 0x2e, 0x66, 0x31, 0xef, 0xcd, 0x9b, 0xc7, 0xfb, 0xc1, 0x7e, 0x86, 0xcb,
	0x4d, 0x2a, 0xb9, 0x5a, 0xa3, 0x46, 0x36, 0x0c, 0x92, 0x34, 0xa9, 0x0f, 0x0f, 0xd6, 0x28, 0x96,
	0xa1, 0x28, 0x34, 0xcf, 0x64, 0x51, 0x88, 0x58, 0xf2, 0x48, 0xbc, 0xac, 0x64, 0xd1, 0xeb, 0xc7,
	0x88, 0x71, 0x2a, 0xc7, 0x4d, 0x20, 0xd8, 0x44, 0x63, 0x99, 0x29, 0x5d, 0x9a, 0xfc, 0xc9, 0x2b,
	0x81, 0xc3, 0xdb, 0xe6, 0x43, 0x0f, 0x75, 0x12, 0x95, 0xbe, 0x54, 0x69, 0xc9, 0xa6, 0x40, 0x85,
	0x0e, 0x13, 0xcc, 0x6d, 0x32, 0x20, 0xa3, 0x83, 0xc9, 0x29, 0xff, 0xb5, 0x86, 0x4f, 0x43, 0x9d,
	0x60, 0xee, 0x6f, 0x83, 0xac, 0x0b, 0x2d, 0xa1, 0xd4, 0x62, 0x25, 0x4b, 0xfb, 0xff, 0x80, 0x8c,
	0xda, 0x3e, 0x15, 0x4a, 0xcd, 0x64, 0xc9, 0xfa, 0xd0, 0x56, 0x88, 0xe9, 0x22, 0x17, 0x99, 0xb4,
	0x77, 0x1a, 0x6b, 0xaf, 0x16, 0x3c, 0x91, 0x49, 0x76, 0x0c, 0x96, 0x99, 0x67, 0xec, 0xdd, 0xc6,
	0x06, 0x23, 0xd5, 0x0f, 0xce, 0x86, 0x40, 0x4d, 0x11, 0xb3, 0xa0, 0xf5, 0xe0, 0xcd, 0xbc, 0xbb,
	0xb9, 0xd7, 0xf9, 0xc7, 0x00, 0xe8, 0xb5, 0x7b, 0xe3, 0xde, 0xbb, 0x1d, 0x32, 0x89, 0x81, 0x9a,
	0x45, 0xec, 0x09, 0xac, 0xb9, 0xd0, 0xe1, 0xf3, 0xf6, 0x7a, 0xc4, 0x0d, 0x09, 0xfe, 0x45, 0x82,
	0xbb, 0x35, 0x89, 0xde, 0xe5, 0x1f, 0xd6, 0xfd, 0x60, 0x74, 0x4e, 0xae, 0xba, 0x6f, 0x95, 0x43,
	0xde, 0x2b, 0x87, 0x7c, 0x54, 0x0e, 0x79, 0x6c, 0x7f, 0x67, 0x03, 0xda, 0x14, 0x5c, 0x7c, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x86, 0x29, 0x04, 0x82, 0xab, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ModuleClient is the client API for Module service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModuleClient interface {
	WatchModule(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Module_WatchModuleClient, error)
}

type moduleClient struct {
	cc *grpc.ClientConn
}

func NewModuleClient(cc *grpc.ClientConn) ModuleClient {
	return &moduleClient{cc}
}

func (c *moduleClient) WatchModule(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Module_WatchModuleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Module_serviceDesc.Streams[0], "/bilibili.broadcast.message.fawkes.Module/WatchModule", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleWatchModuleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Module_WatchModuleClient interface {
	Recv() (*ModuleNotifyReply, error)
	grpc.ClientStream
}

type moduleWatchModuleClient struct {
	grpc.ClientStream
}

func (x *moduleWatchModuleClient) Recv() (*ModuleNotifyReply, error) {
	m := new(ModuleNotifyReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ModuleServer is the server API for Module service.
type ModuleServer interface {
	WatchModule(*empty.Empty, Module_WatchModuleServer) error
}

// UnimplementedModuleServer can be embedded to have forward compatible implementations.
type UnimplementedModuleServer struct {
}

func (*UnimplementedModuleServer) WatchModule(req *empty.Empty, srv Module_WatchModuleServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchModule not implemented")
}

func RegisterModuleServer(s *grpc.Server, srv ModuleServer) {
	s.RegisterService(&_Module_serviceDesc, srv)
}

func _Module_WatchModule_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ModuleServer).WatchModule(m, &moduleWatchModuleServer{stream})
}

type Module_WatchModuleServer interface {
	Send(*ModuleNotifyReply) error
	grpc.ServerStream
}

type moduleWatchModuleServer struct {
	grpc.ServerStream
}

func (x *moduleWatchModuleServer) Send(m *ModuleNotifyReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Module_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.broadcast.message.fawkes.Module",
	HandlerType: (*ModuleServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchModule",
			Handler:       _Module_WatchModule_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "module.proto",
}

func (m *ModuleNotifyReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleNotifyReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleNotifyReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ModuleName) > 0 {
		i -= len(m.ModuleName)
		copy(dAtA[i:], m.ModuleName)
		i = encodeVarintModule(dAtA, i, uint64(len(m.ModuleName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PoolName) > 0 {
		i -= len(m.PoolName)
		copy(dAtA[i:], m.PoolName)
		i = encodeVarintModule(dAtA, i, uint64(len(m.PoolName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AppKey) > 0 {
		i -= len(m.AppKey)
		copy(dAtA[i:], m.AppKey)
		i = encodeVarintModule(dAtA, i, uint64(len(m.AppKey)))
		i--
		dAtA[i] = 0x12
	}
	if m.Atcion != 0 {
		i = encodeVarintModule(dAtA, i, uint64(m.Atcion))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintModule(dAtA []byte, offset int, v uint64) int {
	offset -= sovModule(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ModuleNotifyReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Atcion != 0 {
		n += 1 + sovModule(uint64(m.Atcion))
	}
	l = len(m.AppKey)
	if l > 0 {
		n += 1 + l + sovModule(uint64(l))
	}
	l = len(m.PoolName)
	if l > 0 {
		n += 1 + l + sovModule(uint64(l))
	}
	l = len(m.ModuleName)
	if l > 0 {
		n += 1 + l + sovModule(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovModule(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozModule(x uint64) (n int) {
	return sovModule(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ModuleNotifyReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModule
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleNotifyReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleNotifyReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Atcion", wireType)
			}
			m.Atcion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Atcion |= Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModule
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModule
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModule
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModule
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModule
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModule
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModule
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModule(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModule
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModule(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModule
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModule
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModule
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthModule
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupModule
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthModule
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthModule        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModule          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupModule = fmt.Errorf("proto: unexpected end of group")
)
