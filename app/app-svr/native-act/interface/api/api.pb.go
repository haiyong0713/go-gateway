// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/native-act/interface/api/api.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v2 "go-gateway/app/app-svr/app-dynamic/interface/api/v2"
	v1 "go-gateway/app/app-svr/archive/middleware/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SortCategory int32

const (
	// Default
	SortCategory_StTypeDefault SortCategory = 0
	//随机
	SortCategory_StRandom SortCategory = 3
)

var SortCategory_name = map[int32]string{
	0: "StTypeDefault",
	3: "StRandom",
}

var SortCategory_value = map[string]int32{
	"StTypeDefault": 0,
	"StRandom":      3,
}

func (x SortCategory) String() string {
	return proto.EnumName(SortCategory_name, int32(x))
}

func (SortCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{0}
}

type RedirectType int32

const (
	// Default
	RedirectType_RtTypeDefault RedirectType = 0
	// 个人空间
	RedirectType_RtTypeSpace RedirectType = 1
	// 指定链接
	RedirectType_RtTypeUri RedirectType = 2
)

var RedirectType_name = map[int32]string{
	0: "RtTypeDefault",
	1: "RtTypeSpace",
	2: "RtTypeUri",
}

var RedirectType_value = map[string]int32{
	"RtTypeDefault": 0,
	"RtTypeSpace":   1,
	"RtTypeUri":     2,
}

func (x RedirectType) String() string {
	return proto.EnumName(RedirectType_name, int32(x))
}

func (RedirectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{1}
}

type MessageBoxType int32

const (
	// 对话框
	MessageBoxType_Dialog MessageBoxType = 0
	// toast
	MessageBoxType_Toast MessageBoxType = 1
)

var MessageBoxType_name = map[int32]string{
	0: "Dialog",
	1: "Toast",
}

var MessageBoxType_value = map[string]int32{
	"Dialog": 0,
	"Toast":  1,
}

func (x MessageBoxType) String() string {
	return proto.EnumName(MessageBoxType_name, int32(x))
}

func (MessageBoxType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{2}
}

type VoteProgressStyle int32

const (
	// Default
	VoteProgressStyle_VPStyleDefault VoteProgressStyle = 0
	// 圆角进度条
	VoteProgressStyle_VPStyleCircle VoteProgressStyle = 1
	// 方角进度条
	VoteProgressStyle_VPStyleSquare VoteProgressStyle = 2
)

var VoteProgressStyle_name = map[int32]string{
	0: "VPStyleDefault",
	1: "VPStyleCircle",
	2: "VPStyleSquare",
}

var VoteProgressStyle_value = map[string]int32{
	"VPStyleDefault": 0,
	"VPStyleCircle":  1,
	"VPStyleSquare":  2,
}

func (x VoteProgressStyle) String() string {
	return proto.EnumName(VoteProgressStyle_name, int32(x))
}

func (VoteProgressStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{3}
}

type ActionType int32

const (
	// 无操作
	ActionType_Default ActionType = 0
	// 操作
	ActionType_Do ActionType = 1
	// 取消操作
	ActionType_Undo ActionType = 2
)

var ActionType_name = map[int32]string{
	0: "Default",
	1: "Do",
	2: "Undo",
}

var ActionType_value = map[string]int32{
	"Default": 0,
	"Do":      1,
	"Undo":    2,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}

func (ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{4}
}

type ReserveGoto int32

const (
	// 预约
	ReserveGoto_Reserve ReserveGoto = 0
	// 跳转
	ReserveGoto_Redirect ReserveGoto = 1
	// 不可操作
	ReserveGoto_Unable ReserveGoto = 2
)

var ReserveGoto_name = map[int32]string{
	0: "Reserve",
	1: "Redirect",
	2: "Unable",
}

var ReserveGoto_value = map[string]int32{
	"Reserve":  0,
	"Redirect": 1,
	"Unable":   2,
}

func (x ReserveGoto) String() string {
	return proto.EnumName(ReserveGoto_name, int32(x))
}

func (ReserveGoto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{5}
}

type TabStyle int32

const (
	// Default
	TabStyle_TabStyleDefault TabStyle = 0
	// 纯色
	TabStyle_TabStyleColor TabStyle = 1
	// 图片
	TabStyle_TabStyleImage TabStyle = 2
)

var TabStyle_name = map[int32]string{
	0: "TabStyleDefault",
	1: "TabStyleColor",
	2: "TabStyleImage",
}

var TabStyle_value = map[string]int32{
	"TabStyleDefault": 0,
	"TabStyleColor":   1,
	"TabStyleImage":   2,
}

func (x TabStyle) String() string {
	return proto.EnumName(TabStyle_name, int32(x))
}

func (TabStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{6}
}

type ProgressStyle int32

const (
	// Default
	ProgressStyle_PStyleDefault ProgressStyle = 0
	// 圆角条
	ProgressStyle_PStyleRound ProgressStyle = 1
	// 矩形条
	ProgressStyle_PStyleRectangle ProgressStyle = 2
	// 分节条
	ProgressStyle_PStyleNode ProgressStyle = 3
)

var ProgressStyle_name = map[int32]string{
	0: "PStyleDefault",
	1: "PStyleRound",
	2: "PStyleRectangle",
	3: "PStyleNode",
}

var ProgressStyle_value = map[string]int32{
	"PStyleDefault":   0,
	"PStyleRound":     1,
	"PStyleRectangle": 2,
	"PStyleNode":      3,
}

func (x ProgressStyle) String() string {
	return proto.EnumName(ProgressStyle_name, int32(x))
}

func (ProgressStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{7}
}

type ProgressSlot int32

const (
	// Zero
	ProgressSlot_PSlotDefault ProgressSlot = 0
	// 描边
	ProgressSlot_PSlotOutline ProgressSlot = 1
	// 填充
	ProgressSlot_PSlotFill ProgressSlot = 2
)

var ProgressSlot_name = map[int32]string{
	0: "PSlotDefault",
	1: "PSlotOutline",
	2: "PSlotFill",
}

var ProgressSlot_value = map[string]int32{
	"PSlotDefault": 0,
	"PSlotOutline": 1,
	"PSlotFill":    2,
}

func (x ProgressSlot) String() string {
	return proto.EnumName(ProgressSlot_name, int32(x))
}

func (ProgressSlot) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{8}
}

type ProgressBar int32

const (
	// Zero
	ProgressBar_PBarDefault ProgressBar = 0
	// 纯色填充
	ProgressBar_PBarColor ProgressBar = 1
	// 纹理颜色填充
	ProgressBar_PBarTexture ProgressBar = 2
)

var ProgressBar_name = map[int32]string{
	0: "PBarDefault",
	1: "PBarColor",
	2: "PBarTexture",
}

var ProgressBar_value = map[string]int32{
	"PBarDefault": 0,
	"PBarColor":   1,
	"PBarTexture": 2,
}

func (x ProgressBar) String() string {
	return proto.EnumName(ProgressBar_name, int32(x))
}

func (ProgressBar) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{9}
}

type BottomTabBgType int32

const (
	// Unknown
	BottomTabBgType_BTBTUnknown BottomTabBgType = 0
	// 图片
	BottomTabBgType_BTBTImage BottomTabBgType = 1
	// 纯色
	BottomTabBgType_BTBTColor BottomTabBgType = 2
)

var BottomTabBgType_name = map[int32]string{
	0: "BTBTUnknown",
	1: "BTBTImage",
	2: "BTBTColor",
}

var BottomTabBgType_value = map[string]int32{
	"BTBTUnknown": 0,
	"BTBTImage":   1,
	"BTBTColor":   2,
}

func (x BottomTabBgType) String() string {
	return proto.EnumName(BottomTabBgType_name, int32(x))
}

func (BottomTabBgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{10}
}

type BottomTabIconType int32

const (
	// Unknown
	BottomTabIconType_BTITUnknown BottomTabIconType = 0
	// 自定义图标+文字
	BottomTabIconType_BTITIconText BottomTabIconType = 1
	// 文字
	BottomTabIconType_BTITText BottomTabIconType = 2
)

var BottomTabIconType_name = map[int32]string{
	0: "BTITUnknown",
	1: "BTITIconText",
	2: "BTITText",
}

var BottomTabIconType_value = map[string]int32{
	"BTITUnknown":  0,
	"BTITIconText": 1,
	"BTITText":     2,
}

func (x BottomTabIconType) String() string {
	return proto.EnumName(BottomTabIconType_name, int32(x))
}

func (BottomTabIconType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{11}
}

type BottomTabGoto int32

const (
	// Unknown
	BottomTabGoto_BTGUnknown BottomTabGoto = 0
	// 活动页
	BottomTabGoto_BTGNaPage BottomTabGoto = 1
	// 链接
	BottomTabGoto_BTGRedirect BottomTabGoto = 2
)

var BottomTabGoto_name = map[int32]string{
	0: "BTGUnknown",
	1: "BTGNaPage",
	2: "BTGRedirect",
}

var BottomTabGoto_value = map[string]int32{
	"BTGUnknown":  0,
	"BTGNaPage":   1,
	"BTGRedirect": 2,
}

func (x BottomTabGoto) String() string {
	return proto.EnumName(BottomTabGoto_name, int32(x))
}

func (BottomTabGoto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{12}
}

type ClickRequestType int32

const (
	// Unknown
	ClickRequestType_CRTypeUnknown ClickRequestType = 0
	// 关注用户
	ClickRequestType_CRTypeFollowUser ClickRequestType = 1
	// 追番/追剧
	ClickRequestType_CRTypeFollowEpisode ClickRequestType = 2
	// 追漫
	ClickRequestType_CRTypeFollowComic ClickRequestType = 3
	// 预约数据源
	ClickRequestType_CRTypeReserve ClickRequestType = 4
	// 奖励领取
	ClickRequestType_CRTypeReceiveAward ClickRequestType = 5
	// 会员购票务「想去」
	ClickRequestType_CRTypeMallWantGo ClickRequestType = 6
	// 活动项目（预约+其他操作）
	ClickRequestType_CRTypeActivity ClickRequestType = 7
	// UP主预约
	ClickRequestType_CRTypeUpReserve ClickRequestType = 8
)

var ClickRequestType_name = map[int32]string{
	0: "CRTypeUnknown",
	1: "CRTypeFollowUser",
	2: "CRTypeFollowEpisode",
	3: "CRTypeFollowComic",
	4: "CRTypeReserve",
	5: "CRTypeReceiveAward",
	6: "CRTypeMallWantGo",
	7: "CRTypeActivity",
	8: "CRTypeUpReserve",
}

var ClickRequestType_value = map[string]int32{
	"CRTypeUnknown":       0,
	"CRTypeFollowUser":    1,
	"CRTypeFollowEpisode": 2,
	"CRTypeFollowComic":   3,
	"CRTypeReserve":       4,
	"CRTypeReceiveAward":  5,
	"CRTypeMallWantGo":    6,
	"CRTypeActivity":      7,
	"CRTypeUpReserve":     8,
}

func (x ClickRequestType) String() string {
	return proto.EnumName(ClickRequestType_name, int32(x))
}

func (ClickRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{13}
}

type ClickRequestState int32

const (
	// Unknown
	ClickRequestState_CRSUnknown ClickRequestState = 0
	// 已完成
	ClickRequestState_CRSDone ClickRequestState = 1
	// 未完成
	ClickRequestState_CRSUndone ClickRequestState = 2
	// 禁止点击
	ClickRequestState_CRSDisable ClickRequestState = 3
)

var ClickRequestState_name = map[int32]string{
	0: "CRSUnknown",
	1: "CRSDone",
	2: "CRSUndone",
	3: "CRSDisable",
}

var ClickRequestState_value = map[string]int32{
	"CRSUnknown": 0,
	"CRSDone":    1,
	"CRSUndone":  2,
	"CRSDisable": 3,
}

func (x ClickRequestState) String() string {
	return proto.EnumName(ClickRequestState_name, int32(x))
}

func (ClickRequestState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{14}
}

type FontType int32

const (
	// Unknown
	FontType_FontTypeUnknown FontType = 0
	// 正常
	FontType_FontTypeNormal FontType = 1
	// 加粗
	FontType_FontTypeBold FontType = 2
)

var FontType_name = map[int32]string{
	0: "FontTypeUnknown",
	1: "FontTypeNormal",
	2: "FontTypeBold",
}

var FontType_value = map[string]int32{
	"FontTypeUnknown": 0,
	"FontTypeNormal":  1,
	"FontTypeBold":    2,
}

func (x FontType) String() string {
	return proto.EnumName(FontType_name, int32(x))
}

func (FontType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{15}
}

type ClickItem_Action int32

const (
	// Unknown
	ClickItem_ActUnknown ClickItem_Action = 0
	// 链接跳转
	ClickItem_ActRedirect ClickItem_Action = 1
	// 发起请求
	ClickItem_ActRequest ClickItem_Action = 2
	// 实时进度条
	ClickItem_ActRTProgress ClickItem_Action = 3
	// 非实时进度条
	ClickItem_ActNRTProgress ClickItem_Action = 4
	// 展示图片
	ClickItem_ActImage ClickItem_Action = 5
	// 拉起浮层
	ClickItem_ActLayer ClickItem_Action = 6
)

var ClickItem_Action_name = map[int32]string{
	0: "ActUnknown",
	1: "ActRedirect",
	2: "ActRequest",
	3: "ActRTProgress",
	4: "ActNRTProgress",
	5: "ActImage",
	6: "ActLayer",
}

var ClickItem_Action_value = map[string]int32{
	"ActUnknown":     0,
	"ActRedirect":    1,
	"ActRequest":     2,
	"ActRTProgress":  3,
	"ActNRTProgress": 4,
	"ActImage":       5,
	"ActLayer":       6,
}

func (x ClickItem_Action) String() string {
	return proto.EnumName(ClickItem_Action_name, int32(x))
}

func (ClickItem_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{120, 0}
}

type ClickActProgress_DisplayMode int32

const (
	// Unknown
	ClickActProgress_DisplayUnknown ClickActProgress_DisplayMode = 0
	// 当前进度数值
	ClickActProgress_DisplayCurr ClickActProgress_DisplayMode = 1
	// 当前进度数值/目标值
	ClickActProgress_DisplayCurrTarget ClickActProgress_DisplayMode = 2
)

var ClickActProgress_DisplayMode_name = map[int32]string{
	0: "DisplayUnknown",
	1: "DisplayCurr",
	2: "DisplayCurrTarget",
}

var ClickActProgress_DisplayMode_value = map[string]int32{
	"DisplayUnknown":    0,
	"DisplayCurr":       1,
	"DisplayCurrTarget": 2,
}

func (x ClickActProgress_DisplayMode) String() string {
	return proto.EnumName(ClickActProgress_DisplayMode_name, int32(x))
}

func (ClickActProgress_DisplayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{124, 0}
}

type ClickActLayer_LayerStyle int32

const (
	// Unknown
	ClickActLayer_LTUnknown ClickActLayer_LayerStyle = 0
	// 纯色
	ClickActLayer_LTColor ClickActLayer_LayerStyle = 1
	// 图片
	ClickActLayer_LTImage ClickActLayer_LayerStyle = 2
)

var ClickActLayer_LayerStyle_name = map[int32]string{
	0: "LTUnknown",
	1: "LTColor",
	2: "LTImage",
}

var ClickActLayer_LayerStyle_value = map[string]int32{
	"LTUnknown": 0,
	"LTColor":   1,
	"LTImage":   2,
}

func (x ClickActLayer_LayerStyle) String() string {
	return proto.EnumName(ClickActLayer_LayerStyle_name, int32(x))
}

func (ClickActLayer_LayerStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{126, 0}
}

type ClickActLayer_LayerMode int32

const (
	// Unknown
	ClickActLayer_LMUnknown ClickActLayer_LayerMode = 0
	// 图片模式
	ClickActLayer_LMImage ClickActLayer_LayerMode = 1
	// 链接模式
	ClickActLayer_LMRedirect ClickActLayer_LayerMode = 2
)

var ClickActLayer_LayerMode_name = map[int32]string{
	0: "LMUnknown",
	1: "LMImage",
	2: "LMRedirect",
}

var ClickActLayer_LayerMode_value = map[string]int32{
	"LMUnknown":  0,
	"LMImage":    1,
	"LMRedirect": 2,
}

func (x ClickActLayer_LayerMode) String() string {
	return proto.EnumName(ClickActLayer_LayerMode_name, int32(x))
}

func (ClickActLayer_LayerMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{126, 1}
}

type IndexReq struct {
	// 页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty" validate:"required"`
	// 页面来源
	ActivityFrom string `protobuf:"bytes,2,opt,name=activity_from,json=activityFrom,proto3" json:"activity_from,omitempty"`
	// 动态id：来源天马
	DynamicId int64 `protobuf:"varint,3,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 分享origin
	ShareOrigin string `protobuf:"bytes,4,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	// 分享：底栏id
	TabId int64 `protobuf:"varint,5,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	// 分享：底栏module_id
	TabModuleId int64 `protobuf:"varint,6,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty"`
	// 直播:是否需要https
	HttpsUrlReq int32 `protobuf:"varint,7,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	// 页面spmid
	FromSpmid string `protobuf:"bytes,8,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 定位tab
	CurrentTab string `protobuf:"bytes,9,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty" form:"current_tab"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,10,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,11,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 是否冷启动
	IsColdStart bool `protobuf:"varint,12,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	// 一级页page_id（Tab子页面需传）
	PrimaryPageId int64 `protobuf:"varint,13,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	// 内嵌页类型
	TabFrom              string   `protobuf:"bytes,14,opt,name=tab_from,json=tabFrom,proto3" json:"tab_from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexReq) Reset()         { *m = IndexReq{} }
func (m *IndexReq) String() string { return proto.CompactTextString(m) }
func (*IndexReq) ProtoMessage()    {}
func (*IndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{0}
}
func (m *IndexReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IndexReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexReq.Merge(m, src)
}
func (m *IndexReq) XXX_Size() int {
	return m.Size()
}
func (m *IndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_IndexReq proto.InternalMessageInfo

func (m *IndexReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *IndexReq) GetActivityFrom() string {
	if m != nil {
		return m.ActivityFrom
	}
	return ""
}

func (m *IndexReq) GetDynamicId() int64 {
	if m != nil {
		return m.DynamicId
	}
	return 0
}

func (m *IndexReq) GetShareOrigin() string {
	if m != nil {
		return m.ShareOrigin
	}
	return ""
}

func (m *IndexReq) GetTabId() int64 {
	if m != nil {
		return m.TabId
	}
	return 0
}

func (m *IndexReq) GetTabModuleId() int64 {
	if m != nil {
		return m.TabModuleId
	}
	return 0
}

func (m *IndexReq) GetHttpsUrlReq() int32 {
	if m != nil {
		return m.HttpsUrlReq
	}
	return 0
}

func (m *IndexReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *IndexReq) GetCurrentTab() string {
	if m != nil {
		return m.CurrentTab
	}
	return ""
}

func (m *IndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *IndexReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *IndexReq) GetIsColdStart() bool {
	if m != nil {
		return m.IsColdStart
	}
	return false
}

func (m *IndexReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

func (m *IndexReq) GetTabFrom() string {
	if m != nil {
		return m.TabFrom
	}
	return ""
}

type TopicIndexReq struct {
	//页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty" validate:"required"`
	//页面来源
	ActivityFrom string `protobuf:"bytes,2,opt,name=activity_from,json=activityFrom,proto3" json:"activity_from,omitempty"`
	//动态id：来源天马
	DynamicId int64 `protobuf:"varint,3,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	//分享origin
	ShareOrigin string `protobuf:"bytes,4,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	//分享：底栏id
	TabId int64 `protobuf:"varint,5,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	//分享：底栏module_id
	TabModuleId int64 `protobuf:"varint,6,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty"`
	//直播:是否需要https
	HttpsUrlReq int32 `protobuf:"varint,7,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	//页面spmid
	FromSpmid string `protobuf:"bytes,8,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	//定位tab
	CurrentTab string `protobuf:"bytes,9,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,10,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,11,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 是否冷启动
	IsColdStart          bool     `protobuf:"varint,12,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicIndexReq) Reset()         { *m = TopicIndexReq{} }
func (m *TopicIndexReq) String() string { return proto.CompactTextString(m) }
func (*TopicIndexReq) ProtoMessage()    {}
func (*TopicIndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{1}
}
func (m *TopicIndexReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicIndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicIndexReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicIndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicIndexReq.Merge(m, src)
}
func (m *TopicIndexReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicIndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicIndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicIndexReq proto.InternalMessageInfo

func (m *TopicIndexReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *TopicIndexReq) GetActivityFrom() string {
	if m != nil {
		return m.ActivityFrom
	}
	return ""
}

func (m *TopicIndexReq) GetDynamicId() int64 {
	if m != nil {
		return m.DynamicId
	}
	return 0
}

func (m *TopicIndexReq) GetShareOrigin() string {
	if m != nil {
		return m.ShareOrigin
	}
	return ""
}

func (m *TopicIndexReq) GetTabId() int64 {
	if m != nil {
		return m.TabId
	}
	return 0
}

func (m *TopicIndexReq) GetTabModuleId() int64 {
	if m != nil {
		return m.TabModuleId
	}
	return 0
}

func (m *TopicIndexReq) GetHttpsUrlReq() int32 {
	if m != nil {
		return m.HttpsUrlReq
	}
	return 0
}

func (m *TopicIndexReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *TopicIndexReq) GetCurrentTab() string {
	if m != nil {
		return m.CurrentTab
	}
	return ""
}

func (m *TopicIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *TopicIndexReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *TopicIndexReq) GetIsColdStart() bool {
	if m != nil {
		return m.IsColdStart
	}
	return false
}

type InlineIndexReq struct {
	//页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty" validate:"required"`
	//直播:是否需要https
	HttpsUrlReq int32 `protobuf:"varint,2,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	//页面spmid
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 是否冷启动
	IsColdStart          bool     `protobuf:"varint,6,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InlineIndexReq) Reset()         { *m = InlineIndexReq{} }
func (m *InlineIndexReq) String() string { return proto.CompactTextString(m) }
func (*InlineIndexReq) ProtoMessage()    {}
func (*InlineIndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{2}
}
func (m *InlineIndexReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InlineIndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InlineIndexReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InlineIndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InlineIndexReq.Merge(m, src)
}
func (m *InlineIndexReq) XXX_Size() int {
	return m.Size()
}
func (m *InlineIndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InlineIndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_InlineIndexReq proto.InternalMessageInfo

func (m *InlineIndexReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *InlineIndexReq) GetHttpsUrlReq() int32 {
	if m != nil {
		return m.HttpsUrlReq
	}
	return 0
}

func (m *InlineIndexReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *InlineIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *InlineIndexReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *InlineIndexReq) GetIsColdStart() bool {
	if m != nil {
		return m.IsColdStart
	}
	return false
}

type TabIndexReq struct {
	// 页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty" validate:"required"`
	// 直播:是否需要https
	HttpsUrlReq int32 `protobuf:"varint,2,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	// 页面spmid
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 一级页page_id
	PrimaryPageId int64 `protobuf:"varint,5,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 是否冷启动
	IsColdStart          bool     `protobuf:"varint,7,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TabIndexReq) Reset()         { *m = TabIndexReq{} }
func (m *TabIndexReq) String() string { return proto.CompactTextString(m) }
func (*TabIndexReq) ProtoMessage()    {}
func (*TabIndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{3}
}
func (m *TabIndexReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TabIndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TabIndexReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TabIndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabIndexReq.Merge(m, src)
}
func (m *TabIndexReq) XXX_Size() int {
	return m.Size()
}
func (m *TabIndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TabIndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_TabIndexReq proto.InternalMessageInfo

func (m *TabIndexReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *TabIndexReq) GetHttpsUrlReq() int32 {
	if m != nil {
		return m.HttpsUrlReq
	}
	return 0
}

func (m *TabIndexReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *TabIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *TabIndexReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

func (m *TabIndexReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *TabIndexReq) GetIsColdStart() bool {
	if m != nil {
		return m.IsColdStart
	}
	return false
}

type PageResp struct {
	// 是否在线
	IsOnline bool `protobuf:"varint,1,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	// 是否忽略夜间模式
	IgnoreAppDarkTheme bool `protobuf:"varint,2,opt,name=ignore_app_dark_theme,json=ignoreAppDarkTheme,proto3" json:"ignore_app_dark_theme,omitempty"`
	// 页面全局颜色
	PageColor *Color `protobuf:"bytes,3,opt,name=page_color,json=pageColor,proto3" json:"page_color,omitempty"`
	// 页面分享相关
	PageShare *PageShare `protobuf:"bytes,4,opt,name=page_share,json=pageShare,proto3" json:"page_share,omitempty"`
	// 版头
	PageHeader *Module `protobuf:"bytes,5,opt,name=page_header,json=pageHeader,proto3" json:"page_header,omitempty"`
	// 投稿按钮
	Participation *Module `protobuf:"bytes,6,opt,name=participation,proto3" json:"participation,omitempty"`
	// 组件列表
	ModuleList []*Module `protobuf:"bytes,7,rep,name=module_list,json=moduleList,proto3" json:"module_list,omitempty"`
	// 是否是动态无限feed模式
	IsDynamicFeed bool `protobuf:"varint,8,opt,name=is_dynamic_feed,json=isDynamicFeed,proto3" json:"is_dynamic_feed,omitempty"` // Deprecated: Do not use.
	// 浮层动态卡
	LayerDynamic *LayerDynamic `protobuf:"bytes,9,opt,name=layer_dynamic,json=layerDynamic,proto3" json:"layer_dynamic,omitempty"`
	// 是否是编辑推荐卡无限feed模式
	IsEditorFeed bool `protobuf:"varint,10,opt,name=is_editor_feed,json=isEditorFeed,proto3" json:"is_editor_feed,omitempty"` // Deprecated: Do not use.
	// 页面发起类型
	SponsorType int64 `protobuf:"varint,11,opt,name=sponsor_type,json=sponsorType,proto3" json:"sponsor_type,omitempty"`
	// 顶栏配置
	TopTab *TopTab `protobuf:"bytes,12,opt,name=top_tab,json=topTab,proto3" json:"top_tab,omitempty"`
	// 自定义悬浮按钮
	HoverButton *Module `protobuf:"bytes,13,opt,name=hover_button,json=hoverButton,proto3" json:"hover_button,omitempty"`
	// 吸底按钮
	BottomButton *Module `protobuf:"bytes,14,opt,name=bottom_button,json=bottomButton,proto3" json:"bottom_button,omitempty"`
	// 页面id
	PageId int64 `protobuf:"varint,15,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	//话题活动
	TopicInfo            *TopicInfo `protobuf:"bytes,16,opt,name=topic_info,json=topicInfo,proto3" json:"topic_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PageResp) Reset()         { *m = PageResp{} }
func (m *PageResp) String() string { return proto.CompactTextString(m) }
func (*PageResp) ProtoMessage()    {}
func (*PageResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{4}
}
func (m *PageResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PageResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PageResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PageResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageResp.Merge(m, src)
}
func (m *PageResp) XXX_Size() int {
	return m.Size()
}
func (m *PageResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PageResp.DiscardUnknown(m)
}

var xxx_messageInfo_PageResp proto.InternalMessageInfo

func (m *PageResp) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *PageResp) GetIgnoreAppDarkTheme() bool {
	if m != nil {
		return m.IgnoreAppDarkTheme
	}
	return false
}

func (m *PageResp) GetPageColor() *Color {
	if m != nil {
		return m.PageColor
	}
	return nil
}

func (m *PageResp) GetPageShare() *PageShare {
	if m != nil {
		return m.PageShare
	}
	return nil
}

func (m *PageResp) GetPageHeader() *Module {
	if m != nil {
		return m.PageHeader
	}
	return nil
}

func (m *PageResp) GetParticipation() *Module {
	if m != nil {
		return m.Participation
	}
	return nil
}

func (m *PageResp) GetModuleList() []*Module {
	if m != nil {
		return m.ModuleList
	}
	return nil
}

// Deprecated: Do not use.
func (m *PageResp) GetIsDynamicFeed() bool {
	if m != nil {
		return m.IsDynamicFeed
	}
	return false
}

func (m *PageResp) GetLayerDynamic() *LayerDynamic {
	if m != nil {
		return m.LayerDynamic
	}
	return nil
}

// Deprecated: Do not use.
func (m *PageResp) GetIsEditorFeed() bool {
	if m != nil {
		return m.IsEditorFeed
	}
	return false
}

func (m *PageResp) GetSponsorType() int64 {
	if m != nil {
		return m.SponsorType
	}
	return 0
}

func (m *PageResp) GetTopTab() *TopTab {
	if m != nil {
		return m.TopTab
	}
	return nil
}

func (m *PageResp) GetHoverButton() *Module {
	if m != nil {
		return m.HoverButton
	}
	return nil
}

func (m *PageResp) GetBottomButton() *Module {
	if m != nil {
		return m.BottomButton
	}
	return nil
}

func (m *PageResp) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *PageResp) GetTopicInfo() *TopicInfo {
	if m != nil {
		return m.TopicInfo
	}
	return nil
}

type TopicInfo struct {
	//话题id
	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	//话题名
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicInfo) Reset()         { *m = TopicInfo{} }
func (m *TopicInfo) String() string { return proto.CompactTextString(m) }
func (*TopicInfo) ProtoMessage()    {}
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{5}
}
func (m *TopicInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicInfo.Merge(m, src)
}
func (m *TopicInfo) XXX_Size() int {
	return m.Size()
}
func (m *TopicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicInfo proto.InternalMessageInfo

func (m *TopicInfo) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *TopicInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type PageShare struct {
	// 分享类型
	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 分享标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 分享描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 分享封面图
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// 站内分享链接
	InsideUri string `protobuf:"bytes,5,opt,name=inside_uri,json=insideUri,proto3" json:"inside_uri,omitempty"`
	// 站外分享链接
	OutsideUri string `protobuf:"bytes,6,opt,name=outside_uri,json=outsideUri,proto3" json:"outside_uri,omitempty"`
	// 来源
	Origin string `protobuf:"bytes,7,opt,name=origin,proto3" json:"origin,omitempty"`
	// 自定义参数
	Sid string `protobuf:"bytes,8,opt,name=sid,proto3" json:"sid,omitempty"`
	// UP主发起-空间页链接
	SpacePageUrl string `protobuf:"bytes,9,opt,name=space_page_url,json=spacePageUrl,proto3" json:"space_page_url,omitempty"`
	// UP主发起-空间专属页链接
	SpaceExclusivePageUrl string   `protobuf:"bytes,10,opt,name=space_exclusive_page_url,json=spaceExclusivePageUrl,proto3" json:"space_exclusive_page_url,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *PageShare) Reset()         { *m = PageShare{} }
func (m *PageShare) String() string { return proto.CompactTextString(m) }
func (*PageShare) ProtoMessage()    {}
func (*PageShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{6}
}
func (m *PageShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PageShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PageShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PageShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageShare.Merge(m, src)
}
func (m *PageShare) XXX_Size() int {
	return m.Size()
}
func (m *PageShare) XXX_DiscardUnknown() {
	xxx_messageInfo_PageShare.DiscardUnknown(m)
}

var xxx_messageInfo_PageShare proto.InternalMessageInfo

func (m *PageShare) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PageShare) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PageShare) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *PageShare) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *PageShare) GetInsideUri() string {
	if m != nil {
		return m.InsideUri
	}
	return ""
}

func (m *PageShare) GetOutsideUri() string {
	if m != nil {
		return m.OutsideUri
	}
	return ""
}

func (m *PageShare) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *PageShare) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *PageShare) GetSpacePageUrl() string {
	if m != nil {
		return m.SpacePageUrl
	}
	return ""
}

func (m *PageShare) GetSpaceExclusivePageUrl() string {
	if m != nil {
		return m.SpaceExclusivePageUrl
	}
	return ""
}

type Module struct {
	// 组件类型
	ModuleType string `protobuf:"bytes,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	// 组件id
	ModuleId int64 `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 组件全局颜色
	ModuleColor *Color `protobuf:"bytes,3,opt,name=module_color,json=moduleColor,proto3" json:"module_color,omitempty"`
	// 组件开关
	ModuleSetting *Setting `protobuf:"bytes,4,opt,name=module_setting,json=moduleSetting,proto3" json:"module_setting,omitempty"`
	// 组件卡片
	ModuleItems []*ModuleItem `protobuf:"bytes,5,rep,name=module_items,json=moduleItems,proto3" json:"module_items,omitempty"`
	// 二级列表透传参数
	SubpageParams string `protobuf:"bytes,6,opt,name=subpage_params,json=subpageParams,proto3" json:"subpage_params,omitempty"`
	// 组件唯一标识
	ModuleUkey string `protobuf:"bytes,7,opt,name=module_ukey,json=moduleUkey,proto3" json:"module_ukey,omitempty"`
	// 是否还有更多卡片
	HasMore bool `protobuf:"varint,8,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 是否是无限feed模式
	IsFeed               bool     `protobuf:"varint,9,opt,name=is_feed,json=isFeed,proto3" json:"is_feed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Module) Reset()         { *m = Module{} }
func (m *Module) String() string { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()    {}
func (*Module) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{7}
}
func (m *Module) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Module) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Module.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Module) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Module.Merge(m, src)
}
func (m *Module) XXX_Size() int {
	return m.Size()
}
func (m *Module) XXX_DiscardUnknown() {
	xxx_messageInfo_Module.DiscardUnknown(m)
}

var xxx_messageInfo_Module proto.InternalMessageInfo

func (m *Module) GetModuleType() string {
	if m != nil {
		return m.ModuleType
	}
	return ""
}

func (m *Module) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *Module) GetModuleColor() *Color {
	if m != nil {
		return m.ModuleColor
	}
	return nil
}

func (m *Module) GetModuleSetting() *Setting {
	if m != nil {
		return m.ModuleSetting
	}
	return nil
}

func (m *Module) GetModuleItems() []*ModuleItem {
	if m != nil {
		return m.ModuleItems
	}
	return nil
}

func (m *Module) GetSubpageParams() string {
	if m != nil {
		return m.SubpageParams
	}
	return ""
}

func (m *Module) GetModuleUkey() string {
	if m != nil {
		return m.ModuleUkey
	}
	return ""
}

func (m *Module) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *Module) GetIsFeed() bool {
	if m != nil {
		return m.IsFeed
	}
	return false
}

type SubpageData struct {
	// 二级页标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 二级页透传参数
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// tab栏透传参数
	Tabs                 []*SubpageTab `protobuf:"bytes,3,rep,name=tabs,proto3" json:"tabs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubpageData) Reset()         { *m = SubpageData{} }
func (m *SubpageData) String() string { return proto.CompactTextString(m) }
func (*SubpageData) ProtoMessage()    {}
func (*SubpageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{8}
}
func (m *SubpageData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubpageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubpageData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubpageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubpageData.Merge(m, src)
}
func (m *SubpageData) XXX_Size() int {
	return m.Size()
}
func (m *SubpageData) XXX_DiscardUnknown() {
	xxx_messageInfo_SubpageData.DiscardUnknown(m)
}

var xxx_messageInfo_SubpageData proto.InternalMessageInfo

func (m *SubpageData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SubpageData) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

func (m *SubpageData) GetTabs() []*SubpageTab {
	if m != nil {
		return m.Tabs
	}
	return nil
}

type SubpageTab struct {
	// tab名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 透传参数
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 排序类型
	Sort                 SortCategory `protobuf:"varint,3,opt,name=sort,proto3,enum=bilibili.app.nativeact.v1.SortCategory" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SubpageTab) Reset()         { *m = SubpageTab{} }
func (m *SubpageTab) String() string { return proto.CompactTextString(m) }
func (*SubpageTab) ProtoMessage()    {}
func (*SubpageTab) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{9}
}
func (m *SubpageTab) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubpageTab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubpageTab.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubpageTab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubpageTab.Merge(m, src)
}
func (m *SubpageTab) XXX_Size() int {
	return m.Size()
}
func (m *SubpageTab) XXX_DiscardUnknown() {
	xxx_messageInfo_SubpageTab.DiscardUnknown(m)
}

var xxx_messageInfo_SubpageTab proto.InternalMessageInfo

func (m *SubpageTab) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SubpageTab) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

func (m *SubpageTab) GetSort() SortCategory {
	if m != nil {
		return m.Sort
	}
	return SortCategory_StTypeDefault
}

type Setting struct {
	// 是否展示三点操作
	DisplayMoreButton bool `protobuf:"varint,1,opt,name=display_more_button,json=displayMoreButton,proto3" json:"display_more_button,omitempty"`
	//是否展示标题
	DisplayTitle bool `protobuf:"varint,2,opt,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty"`
	// 是否自动轮播
	AutoCarousel bool `protobuf:"varint,3,opt,name=auto_carousel,json=autoCarousel,proto3" json:"auto_carousel,omitempty"`
	// 是否首页顶栏跟随图片变化
	TopTabFollowImg bool `protobuf:"varint,4,opt,name=top_tab_follow_img,json=topTabFollowImg,proto3" json:"top_tab_follow_img,omitempty"`
	// 是否轮播组件滑出屏幕后顶栏配置样式消失
	TopTabFadeAway bool `protobuf:"varint,5,opt,name=top_tab_fade_away,json=topTabFadeAway,proto3" json:"top_tab_fade_away,omitempty"`
	// 是否开启自动播放
	AutoPlay bool `protobuf:"varint,6,opt,name=auto_play,json=autoPlay,proto3" json:"auto_play,omitempty"`
	// 是否展示展开收起按钮
	DisplayUnfoldButton bool `protobuf:"varint,7,opt,name=display_unfold_button,json=displayUnfoldButton,proto3" json:"display_unfold_button,omitempty"`
	// 是否展示数量
	DisplayNum bool `protobuf:"varint,8,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	// 是否展示浏览量、讨论数
	DisplayViewNum bool `protobuf:"varint,9,opt,name=display_view_num,json=displayViewNum,proto3" json:"display_view_num,omitempty"`
	// 是否展示订阅按钮
	DisplaySubscribeBtn bool `protobuf:"varint,10,opt,name=display_subscribe_btn,json=displaySubscribeBtn,proto3" json:"display_subscribe_btn,omitempty"`
	// 是否展开收起按钮
	UnfoldRest bool `protobuf:"varint,11,opt,name=unfold_rest,json=unfoldRest,proto3" json:"unfold_rest,omitempty"` // Deprecated: Do not use.
	// 是否展示进度数值
	DisplayProgressNum bool `protobuf:"varint,12,opt,name=display_progress_num,json=displayProgressNum,proto3" json:"display_progress_num,omitempty"`
	// 是否展示节点数值
	DisplayNodeNum bool `protobuf:"varint,13,opt,name=display_node_num,json=displayNodeNum,proto3" json:"display_node_num,omitempty"`
	// 是否展示节点描述
	DisplayNodeDesc bool `protobuf:"varint,14,opt,name=display_node_desc,json=displayNodeDesc,proto3" json:"display_node_desc,omitempty"`
	// 长按保存
	PressSave            bool     `protobuf:"varint,15,opt,name=press_save,json=pressSave,proto3" json:"press_save,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{10}
}
func (m *Setting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return m.Size()
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetDisplayMoreButton() bool {
	if m != nil {
		return m.DisplayMoreButton
	}
	return false
}

func (m *Setting) GetDisplayTitle() bool {
	if m != nil {
		return m.DisplayTitle
	}
	return false
}

func (m *Setting) GetAutoCarousel() bool {
	if m != nil {
		return m.AutoCarousel
	}
	return false
}

func (m *Setting) GetTopTabFollowImg() bool {
	if m != nil {
		return m.TopTabFollowImg
	}
	return false
}

func (m *Setting) GetTopTabFadeAway() bool {
	if m != nil {
		return m.TopTabFadeAway
	}
	return false
}

func (m *Setting) GetAutoPlay() bool {
	if m != nil {
		return m.AutoPlay
	}
	return false
}

func (m *Setting) GetDisplayUnfoldButton() bool {
	if m != nil {
		return m.DisplayUnfoldButton
	}
	return false
}

func (m *Setting) GetDisplayNum() bool {
	if m != nil {
		return m.DisplayNum
	}
	return false
}

func (m *Setting) GetDisplayViewNum() bool {
	if m != nil {
		return m.DisplayViewNum
	}
	return false
}

func (m *Setting) GetDisplaySubscribeBtn() bool {
	if m != nil {
		return m.DisplaySubscribeBtn
	}
	return false
}

// Deprecated: Do not use.
func (m *Setting) GetUnfoldRest() bool {
	if m != nil {
		return m.UnfoldRest
	}
	return false
}

func (m *Setting) GetDisplayProgressNum() bool {
	if m != nil {
		return m.DisplayProgressNum
	}
	return false
}

func (m *Setting) GetDisplayNodeNum() bool {
	if m != nil {
		return m.DisplayNodeNum
	}
	return false
}

func (m *Setting) GetDisplayNodeDesc() bool {
	if m != nil {
		return m.DisplayNodeDesc
	}
	return false
}

func (m *Setting) GetPressSave() bool {
	if m != nil {
		return m.PressSave
	}
	return false
}

type ModuleItem struct {
	// 卡片类型
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 卡片id
	CardId string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	// 卡片详情
	//
	// Types that are valid to be assigned to CardDetail:
	//	*ModuleItem_EditorRecommendCard
	//	*ModuleItem_ParticipationCard
	//	*ModuleItem_HeaderCard
	//	*ModuleItem_DynamicCard
	//	*ModuleItem_TextCard
	//	*ModuleItem_TextTitleCard
	//	*ModuleItem_ImageTitleCard
	//	*ModuleItem_DynamicMoreCard
	//	*ModuleItem_DynamicActMoreCard
	//	*ModuleItem_LiveCard
	//	*ModuleItem_CarouselImgCard
	//	*ModuleItem_CarouselWordCard
	//	*ModuleItem_ResourceCard
	//	*ModuleItem_ResourceMoreCard
	//	*ModuleItem_GameCard
	//	*ModuleItem_VideoCard
	//	*ModuleItem_VideoMoreCard
	//	*ModuleItem_RecommendCard
	//	*ModuleItem_RecommendVerticalCard
	//	*ModuleItem_RelativeactCard
	//	*ModuleItem_RelativeactCapsuleCard
	//	*ModuleItem_StatementCard
	//	*ModuleItem_IconCard
	//	*ModuleItem_VoteCard
	//	*ModuleItem_ReserveCard
	//	*ModuleItem_TimelineHeadCard
	//	*ModuleItem_TimelineEventTextCard
	//	*ModuleItem_TimelineEventImageCard
	//	*ModuleItem_TimelineEventImagetextCard
	//	*ModuleItem_TimelineEventResourceCard
	//	*ModuleItem_TimelineMoreCard
	//	*ModuleItem_TimelineUnfoldCard
	//	*ModuleItem_OgvOneCard
	//	*ModuleItem_OgvThreeCard
	//	*ModuleItem_OgvMoreCard
	//	*ModuleItem_NavigationCard
	//	*ModuleItem_ReplyCard
	//	*ModuleItem_TabCard
	//	*ModuleItem_NewactHeaderCard
	//	*ModuleItem_NewactAwardCard
	//	*ModuleItem_NewactStatementCard
	//	*ModuleItem_ProgressCard
	//	*ModuleItem_SelectCard
	//	*ModuleItem_ClickCard
	//	*ModuleItem_HoverButtonCard
	//	*ModuleItem_BottomButtonCard
	CardDetail           isModuleItem_CardDetail `protobuf_oneof:"card_detail"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModuleItem) Reset()         { *m = ModuleItem{} }
func (m *ModuleItem) String() string { return proto.CompactTextString(m) }
func (*ModuleItem) ProtoMessage()    {}
func (*ModuleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{11}
}
func (m *ModuleItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleItem.Merge(m, src)
}
func (m *ModuleItem) XXX_Size() int {
	return m.Size()
}
func (m *ModuleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleItem.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleItem proto.InternalMessageInfo

type isModuleItem_CardDetail interface {
	isModuleItem_CardDetail()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ModuleItem_EditorRecommendCard struct {
	EditorRecommendCard *EditorRecommendCard `protobuf:"bytes,10,opt,name=editor_recommend_card,json=editorRecommendCard,proto3,oneof" json:"editor_recommend_card,omitempty"`
}
type ModuleItem_ParticipationCard struct {
	ParticipationCard *ParticipationCard `protobuf:"bytes,11,opt,name=participation_card,json=participationCard,proto3,oneof" json:"participation_card,omitempty"`
}
type ModuleItem_HeaderCard struct {
	HeaderCard *HeaderCard `protobuf:"bytes,12,opt,name=header_card,json=headerCard,proto3,oneof" json:"header_card,omitempty"`
}
type ModuleItem_DynamicCard struct {
	DynamicCard *DynamicCard `protobuf:"bytes,13,opt,name=dynamic_card,json=dynamicCard,proto3,oneof" json:"dynamic_card,omitempty"`
}
type ModuleItem_TextCard struct {
	TextCard *TextCard `protobuf:"bytes,14,opt,name=text_card,json=textCard,proto3,oneof" json:"text_card,omitempty"`
}
type ModuleItem_TextTitleCard struct {
	TextTitleCard *TextTitleCard `protobuf:"bytes,15,opt,name=text_title_card,json=textTitleCard,proto3,oneof" json:"text_title_card,omitempty"`
}
type ModuleItem_ImageTitleCard struct {
	ImageTitleCard *ImageTitleCard `protobuf:"bytes,16,opt,name=image_title_card,json=imageTitleCard,proto3,oneof" json:"image_title_card,omitempty"`
}
type ModuleItem_DynamicMoreCard struct {
	DynamicMoreCard *DynamicMoreCard `protobuf:"bytes,17,opt,name=dynamic_more_card,json=dynamicMoreCard,proto3,oneof" json:"dynamic_more_card,omitempty"`
}
type ModuleItem_DynamicActMoreCard struct {
	DynamicActMoreCard *DynamicActMoreCard `protobuf:"bytes,18,opt,name=dynamic_act_more_card,json=dynamicActMoreCard,proto3,oneof" json:"dynamic_act_more_card,omitempty"`
}
type ModuleItem_LiveCard struct {
	LiveCard *LiveCard `protobuf:"bytes,19,opt,name=live_card,json=liveCard,proto3,oneof" json:"live_card,omitempty"`
}
type ModuleItem_CarouselImgCard struct {
	CarouselImgCard *CarouselImgCard `protobuf:"bytes,20,opt,name=carousel_img_card,json=carouselImgCard,proto3,oneof" json:"carousel_img_card,omitempty"`
}
type ModuleItem_CarouselWordCard struct {
	CarouselWordCard *CarouselWordCard `protobuf:"bytes,21,opt,name=carousel_word_card,json=carouselWordCard,proto3,oneof" json:"carousel_word_card,omitempty"`
}
type ModuleItem_ResourceCard struct {
	ResourceCard *ResourceCard `protobuf:"bytes,22,opt,name=resource_card,json=resourceCard,proto3,oneof" json:"resource_card,omitempty"`
}
type ModuleItem_ResourceMoreCard struct {
	ResourceMoreCard *ResourceMoreCard `protobuf:"bytes,23,opt,name=resource_more_card,json=resourceMoreCard,proto3,oneof" json:"resource_more_card,omitempty"`
}
type ModuleItem_GameCard struct {
	GameCard *GameCard `protobuf:"bytes,24,opt,name=game_card,json=gameCard,proto3,oneof" json:"game_card,omitempty"`
}
type ModuleItem_VideoCard struct {
	VideoCard *VideoCard `protobuf:"bytes,25,opt,name=video_card,json=videoCard,proto3,oneof" json:"video_card,omitempty"`
}
type ModuleItem_VideoMoreCard struct {
	VideoMoreCard *VideoMoreCard `protobuf:"bytes,26,opt,name=video_more_card,json=videoMoreCard,proto3,oneof" json:"video_more_card,omitempty"`
}
type ModuleItem_RecommendCard struct {
	RecommendCard *RcmdCard `protobuf:"bytes,27,opt,name=recommend_card,json=recommendCard,proto3,oneof" json:"recommend_card,omitempty"`
}
type ModuleItem_RecommendVerticalCard struct {
	RecommendVerticalCard *RcmdVerticalCard `protobuf:"bytes,28,opt,name=recommend_vertical_card,json=recommendVerticalCard,proto3,oneof" json:"recommend_vertical_card,omitempty"`
}
type ModuleItem_RelativeactCard struct {
	RelativeactCard *RelativeactCard `protobuf:"bytes,29,opt,name=relativeact_card,json=relativeactCard,proto3,oneof" json:"relativeact_card,omitempty"`
}
type ModuleItem_RelativeactCapsuleCard struct {
	RelativeactCapsuleCard *RelativeactCapsuleCard `protobuf:"bytes,30,opt,name=relativeact_capsule_card,json=relativeactCapsuleCard,proto3,oneof" json:"relativeact_capsule_card,omitempty"`
}
type ModuleItem_StatementCard struct {
	StatementCard *StatementCard `protobuf:"bytes,31,opt,name=statement_card,json=statementCard,proto3,oneof" json:"statement_card,omitempty"`
}
type ModuleItem_IconCard struct {
	IconCard *IconCard `protobuf:"bytes,32,opt,name=icon_card,json=iconCard,proto3,oneof" json:"icon_card,omitempty"`
}
type ModuleItem_VoteCard struct {
	VoteCard *VoteCard `protobuf:"bytes,33,opt,name=vote_card,json=voteCard,proto3,oneof" json:"vote_card,omitempty"`
}
type ModuleItem_ReserveCard struct {
	ReserveCard *ReserveCard `protobuf:"bytes,34,opt,name=reserve_card,json=reserveCard,proto3,oneof" json:"reserve_card,omitempty"`
}
type ModuleItem_TimelineHeadCard struct {
	TimelineHeadCard *TimelineHeadCard `protobuf:"bytes,35,opt,name=timeline_head_card,json=timelineHeadCard,proto3,oneof" json:"timeline_head_card,omitempty"`
}
type ModuleItem_TimelineEventTextCard struct {
	TimelineEventTextCard *TimelineEventTextCard `protobuf:"bytes,36,opt,name=timeline_event_text_card,json=timelineEventTextCard,proto3,oneof" json:"timeline_event_text_card,omitempty"`
}
type ModuleItem_TimelineEventImageCard struct {
	TimelineEventImageCard *TimelineEventImageCard `protobuf:"bytes,37,opt,name=timeline_event_image_card,json=timelineEventImageCard,proto3,oneof" json:"timeline_event_image_card,omitempty"`
}
type ModuleItem_TimelineEventImagetextCard struct {
	TimelineEventImagetextCard *TimelineEventImagetextCard `protobuf:"bytes,38,opt,name=timeline_event_imagetext_card,json=timelineEventImagetextCard,proto3,oneof" json:"timeline_event_imagetext_card,omitempty"`
}
type ModuleItem_TimelineEventResourceCard struct {
	TimelineEventResourceCard *TimelineEventResourceCard `protobuf:"bytes,39,opt,name=timeline_event_resource_card,json=timelineEventResourceCard,proto3,oneof" json:"timeline_event_resource_card,omitempty"`
}
type ModuleItem_TimelineMoreCard struct {
	TimelineMoreCard *TimelineMoreCard `protobuf:"bytes,40,opt,name=timeline_more_card,json=timelineMoreCard,proto3,oneof" json:"timeline_more_card,omitempty"`
}
type ModuleItem_TimelineUnfoldCard struct {
	TimelineUnfoldCard *TimelineUnfoldCard `protobuf:"bytes,41,opt,name=timeline_unfold_card,json=timelineUnfoldCard,proto3,oneof" json:"timeline_unfold_card,omitempty"`
}
type ModuleItem_OgvOneCard struct {
	OgvOneCard *OgvOneCard `protobuf:"bytes,42,opt,name=ogv_one_card,json=ogvOneCard,proto3,oneof" json:"ogv_one_card,omitempty"`
}
type ModuleItem_OgvThreeCard struct {
	OgvThreeCard *OgvThreeCard `protobuf:"bytes,43,opt,name=ogv_three_card,json=ogvThreeCard,proto3,oneof" json:"ogv_three_card,omitempty"`
}
type ModuleItem_OgvMoreCard struct {
	OgvMoreCard *OgvMoreCard `protobuf:"bytes,44,opt,name=ogv_more_card,json=ogvMoreCard,proto3,oneof" json:"ogv_more_card,omitempty"`
}
type ModuleItem_NavigationCard struct {
	NavigationCard *NavigationCard `protobuf:"bytes,45,opt,name=navigation_card,json=navigationCard,proto3,oneof" json:"navigation_card,omitempty"`
}
type ModuleItem_ReplyCard struct {
	ReplyCard *ReplyCard `protobuf:"bytes,46,opt,name=reply_card,json=replyCard,proto3,oneof" json:"reply_card,omitempty"`
}
type ModuleItem_TabCard struct {
	TabCard *TabCard `protobuf:"bytes,47,opt,name=tab_card,json=tabCard,proto3,oneof" json:"tab_card,omitempty"`
}
type ModuleItem_NewactHeaderCard struct {
	NewactHeaderCard *NewactHeader `protobuf:"bytes,48,opt,name=newact_header_card,json=newactHeaderCard,proto3,oneof" json:"newact_header_card,omitempty"`
}
type ModuleItem_NewactAwardCard struct {
	NewactAwardCard *NewactAward `protobuf:"bytes,49,opt,name=newact_award_card,json=newactAwardCard,proto3,oneof" json:"newact_award_card,omitempty"`
}
type ModuleItem_NewactStatementCard struct {
	NewactStatementCard *NewactStatement `protobuf:"bytes,50,opt,name=newact_statement_card,json=newactStatementCard,proto3,oneof" json:"newact_statement_card,omitempty"`
}
type ModuleItem_ProgressCard struct {
	ProgressCard *ProgressCard `protobuf:"bytes,51,opt,name=progress_card,json=progressCard,proto3,oneof" json:"progress_card,omitempty"`
}
type ModuleItem_SelectCard struct {
	SelectCard *SelectCard `protobuf:"bytes,52,opt,name=select_card,json=selectCard,proto3,oneof" json:"select_card,omitempty"`
}
type ModuleItem_ClickCard struct {
	ClickCard *ClickCard `protobuf:"bytes,53,opt,name=click_card,json=clickCard,proto3,oneof" json:"click_card,omitempty"`
}
type ModuleItem_HoverButtonCard struct {
	HoverButtonCard *HoverButtonCard `protobuf:"bytes,54,opt,name=hover_button_card,json=hoverButtonCard,proto3,oneof" json:"hover_button_card,omitempty"`
}
type ModuleItem_BottomButtonCard struct {
	BottomButtonCard *ClickCard `protobuf:"bytes,55,opt,name=bottom_button_card,json=bottomButtonCard,proto3,oneof" json:"bottom_button_card,omitempty"`
}

func (*ModuleItem_EditorRecommendCard) isModuleItem_CardDetail()        {}
func (*ModuleItem_ParticipationCard) isModuleItem_CardDetail()          {}
func (*ModuleItem_HeaderCard) isModuleItem_CardDetail()                 {}
func (*ModuleItem_DynamicCard) isModuleItem_CardDetail()                {}
func (*ModuleItem_TextCard) isModuleItem_CardDetail()                   {}
func (*ModuleItem_TextTitleCard) isModuleItem_CardDetail()              {}
func (*ModuleItem_ImageTitleCard) isModuleItem_CardDetail()             {}
func (*ModuleItem_DynamicMoreCard) isModuleItem_CardDetail()            {}
func (*ModuleItem_DynamicActMoreCard) isModuleItem_CardDetail()         {}
func (*ModuleItem_LiveCard) isModuleItem_CardDetail()                   {}
func (*ModuleItem_CarouselImgCard) isModuleItem_CardDetail()            {}
func (*ModuleItem_CarouselWordCard) isModuleItem_CardDetail()           {}
func (*ModuleItem_ResourceCard) isModuleItem_CardDetail()               {}
func (*ModuleItem_ResourceMoreCard) isModuleItem_CardDetail()           {}
func (*ModuleItem_GameCard) isModuleItem_CardDetail()                   {}
func (*ModuleItem_VideoCard) isModuleItem_CardDetail()                  {}
func (*ModuleItem_VideoMoreCard) isModuleItem_CardDetail()              {}
func (*ModuleItem_RecommendCard) isModuleItem_CardDetail()              {}
func (*ModuleItem_RecommendVerticalCard) isModuleItem_CardDetail()      {}
func (*ModuleItem_RelativeactCard) isModuleItem_CardDetail()            {}
func (*ModuleItem_RelativeactCapsuleCard) isModuleItem_CardDetail()     {}
func (*ModuleItem_StatementCard) isModuleItem_CardDetail()              {}
func (*ModuleItem_IconCard) isModuleItem_CardDetail()                   {}
func (*ModuleItem_VoteCard) isModuleItem_CardDetail()                   {}
func (*ModuleItem_ReserveCard) isModuleItem_CardDetail()                {}
func (*ModuleItem_TimelineHeadCard) isModuleItem_CardDetail()           {}
func (*ModuleItem_TimelineEventTextCard) isModuleItem_CardDetail()      {}
func (*ModuleItem_TimelineEventImageCard) isModuleItem_CardDetail()     {}
func (*ModuleItem_TimelineEventImagetextCard) isModuleItem_CardDetail() {}
func (*ModuleItem_TimelineEventResourceCard) isModuleItem_CardDetail()  {}
func (*ModuleItem_TimelineMoreCard) isModuleItem_CardDetail()           {}
func (*ModuleItem_TimelineUnfoldCard) isModuleItem_CardDetail()         {}
func (*ModuleItem_OgvOneCard) isModuleItem_CardDetail()                 {}
func (*ModuleItem_OgvThreeCard) isModuleItem_CardDetail()               {}
func (*ModuleItem_OgvMoreCard) isModuleItem_CardDetail()                {}
func (*ModuleItem_NavigationCard) isModuleItem_CardDetail()             {}
func (*ModuleItem_ReplyCard) isModuleItem_CardDetail()                  {}
func (*ModuleItem_TabCard) isModuleItem_CardDetail()                    {}
func (*ModuleItem_NewactHeaderCard) isModuleItem_CardDetail()           {}
func (*ModuleItem_NewactAwardCard) isModuleItem_CardDetail()            {}
func (*ModuleItem_NewactStatementCard) isModuleItem_CardDetail()        {}
func (*ModuleItem_ProgressCard) isModuleItem_CardDetail()               {}
func (*ModuleItem_SelectCard) isModuleItem_CardDetail()                 {}
func (*ModuleItem_ClickCard) isModuleItem_CardDetail()                  {}
func (*ModuleItem_HoverButtonCard) isModuleItem_CardDetail()            {}
func (*ModuleItem_BottomButtonCard) isModuleItem_CardDetail()           {}

func (m *ModuleItem) GetCardDetail() isModuleItem_CardDetail {
	if m != nil {
		return m.CardDetail
	}
	return nil
}

func (m *ModuleItem) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *ModuleItem) GetCardId() string {
	if m != nil {
		return m.CardId
	}
	return ""
}

func (m *ModuleItem) GetEditorRecommendCard() *EditorRecommendCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_EditorRecommendCard); ok {
		return x.EditorRecommendCard
	}
	return nil
}

func (m *ModuleItem) GetParticipationCard() *ParticipationCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ParticipationCard); ok {
		return x.ParticipationCard
	}
	return nil
}

func (m *ModuleItem) GetHeaderCard() *HeaderCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_HeaderCard); ok {
		return x.HeaderCard
	}
	return nil
}

func (m *ModuleItem) GetDynamicCard() *DynamicCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_DynamicCard); ok {
		return x.DynamicCard
	}
	return nil
}

func (m *ModuleItem) GetTextCard() *TextCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TextCard); ok {
		return x.TextCard
	}
	return nil
}

func (m *ModuleItem) GetTextTitleCard() *TextTitleCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TextTitleCard); ok {
		return x.TextTitleCard
	}
	return nil
}

func (m *ModuleItem) GetImageTitleCard() *ImageTitleCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ImageTitleCard); ok {
		return x.ImageTitleCard
	}
	return nil
}

func (m *ModuleItem) GetDynamicMoreCard() *DynamicMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_DynamicMoreCard); ok {
		return x.DynamicMoreCard
	}
	return nil
}

func (m *ModuleItem) GetDynamicActMoreCard() *DynamicActMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_DynamicActMoreCard); ok {
		return x.DynamicActMoreCard
	}
	return nil
}

func (m *ModuleItem) GetLiveCard() *LiveCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_LiveCard); ok {
		return x.LiveCard
	}
	return nil
}

func (m *ModuleItem) GetCarouselImgCard() *CarouselImgCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_CarouselImgCard); ok {
		return x.CarouselImgCard
	}
	return nil
}

func (m *ModuleItem) GetCarouselWordCard() *CarouselWordCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_CarouselWordCard); ok {
		return x.CarouselWordCard
	}
	return nil
}

func (m *ModuleItem) GetResourceCard() *ResourceCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ResourceCard); ok {
		return x.ResourceCard
	}
	return nil
}

func (m *ModuleItem) GetResourceMoreCard() *ResourceMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ResourceMoreCard); ok {
		return x.ResourceMoreCard
	}
	return nil
}

func (m *ModuleItem) GetGameCard() *GameCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_GameCard); ok {
		return x.GameCard
	}
	return nil
}

func (m *ModuleItem) GetVideoCard() *VideoCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_VideoCard); ok {
		return x.VideoCard
	}
	return nil
}

func (m *ModuleItem) GetVideoMoreCard() *VideoMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_VideoMoreCard); ok {
		return x.VideoMoreCard
	}
	return nil
}

func (m *ModuleItem) GetRecommendCard() *RcmdCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_RecommendCard); ok {
		return x.RecommendCard
	}
	return nil
}

func (m *ModuleItem) GetRecommendVerticalCard() *RcmdVerticalCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_RecommendVerticalCard); ok {
		return x.RecommendVerticalCard
	}
	return nil
}

func (m *ModuleItem) GetRelativeactCard() *RelativeactCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_RelativeactCard); ok {
		return x.RelativeactCard
	}
	return nil
}

func (m *ModuleItem) GetRelativeactCapsuleCard() *RelativeactCapsuleCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_RelativeactCapsuleCard); ok {
		return x.RelativeactCapsuleCard
	}
	return nil
}

func (m *ModuleItem) GetStatementCard() *StatementCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_StatementCard); ok {
		return x.StatementCard
	}
	return nil
}

func (m *ModuleItem) GetIconCard() *IconCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_IconCard); ok {
		return x.IconCard
	}
	return nil
}

func (m *ModuleItem) GetVoteCard() *VoteCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_VoteCard); ok {
		return x.VoteCard
	}
	return nil
}

func (m *ModuleItem) GetReserveCard() *ReserveCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ReserveCard); ok {
		return x.ReserveCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineHeadCard() *TimelineHeadCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineHeadCard); ok {
		return x.TimelineHeadCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineEventTextCard() *TimelineEventTextCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineEventTextCard); ok {
		return x.TimelineEventTextCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineEventImageCard() *TimelineEventImageCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineEventImageCard); ok {
		return x.TimelineEventImageCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineEventImagetextCard() *TimelineEventImagetextCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineEventImagetextCard); ok {
		return x.TimelineEventImagetextCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineEventResourceCard() *TimelineEventResourceCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineEventResourceCard); ok {
		return x.TimelineEventResourceCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineMoreCard() *TimelineMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineMoreCard); ok {
		return x.TimelineMoreCard
	}
	return nil
}

func (m *ModuleItem) GetTimelineUnfoldCard() *TimelineUnfoldCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TimelineUnfoldCard); ok {
		return x.TimelineUnfoldCard
	}
	return nil
}

func (m *ModuleItem) GetOgvOneCard() *OgvOneCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_OgvOneCard); ok {
		return x.OgvOneCard
	}
	return nil
}

func (m *ModuleItem) GetOgvThreeCard() *OgvThreeCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_OgvThreeCard); ok {
		return x.OgvThreeCard
	}
	return nil
}

func (m *ModuleItem) GetOgvMoreCard() *OgvMoreCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_OgvMoreCard); ok {
		return x.OgvMoreCard
	}
	return nil
}

func (m *ModuleItem) GetNavigationCard() *NavigationCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_NavigationCard); ok {
		return x.NavigationCard
	}
	return nil
}

func (m *ModuleItem) GetReplyCard() *ReplyCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ReplyCard); ok {
		return x.ReplyCard
	}
	return nil
}

func (m *ModuleItem) GetTabCard() *TabCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_TabCard); ok {
		return x.TabCard
	}
	return nil
}

func (m *ModuleItem) GetNewactHeaderCard() *NewactHeader {
	if x, ok := m.GetCardDetail().(*ModuleItem_NewactHeaderCard); ok {
		return x.NewactHeaderCard
	}
	return nil
}

func (m *ModuleItem) GetNewactAwardCard() *NewactAward {
	if x, ok := m.GetCardDetail().(*ModuleItem_NewactAwardCard); ok {
		return x.NewactAwardCard
	}
	return nil
}

func (m *ModuleItem) GetNewactStatementCard() *NewactStatement {
	if x, ok := m.GetCardDetail().(*ModuleItem_NewactStatementCard); ok {
		return x.NewactStatementCard
	}
	return nil
}

func (m *ModuleItem) GetProgressCard() *ProgressCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ProgressCard); ok {
		return x.ProgressCard
	}
	return nil
}

func (m *ModuleItem) GetSelectCard() *SelectCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_SelectCard); ok {
		return x.SelectCard
	}
	return nil
}

func (m *ModuleItem) GetClickCard() *ClickCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_ClickCard); ok {
		return x.ClickCard
	}
	return nil
}

func (m *ModuleItem) GetHoverButtonCard() *HoverButtonCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_HoverButtonCard); ok {
		return x.HoverButtonCard
	}
	return nil
}

func (m *ModuleItem) GetBottomButtonCard() *ClickCard {
	if x, ok := m.GetCardDetail().(*ModuleItem_BottomButtonCard); ok {
		return x.BottomButtonCard
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ModuleItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ModuleItem_EditorRecommendCard)(nil),
		(*ModuleItem_ParticipationCard)(nil),
		(*ModuleItem_HeaderCard)(nil),
		(*ModuleItem_DynamicCard)(nil),
		(*ModuleItem_TextCard)(nil),
		(*ModuleItem_TextTitleCard)(nil),
		(*ModuleItem_ImageTitleCard)(nil),
		(*ModuleItem_DynamicMoreCard)(nil),
		(*ModuleItem_DynamicActMoreCard)(nil),
		(*ModuleItem_LiveCard)(nil),
		(*ModuleItem_CarouselImgCard)(nil),
		(*ModuleItem_CarouselWordCard)(nil),
		(*ModuleItem_ResourceCard)(nil),
		(*ModuleItem_ResourceMoreCard)(nil),
		(*ModuleItem_GameCard)(nil),
		(*ModuleItem_VideoCard)(nil),
		(*ModuleItem_VideoMoreCard)(nil),
		(*ModuleItem_RecommendCard)(nil),
		(*ModuleItem_RecommendVerticalCard)(nil),
		(*ModuleItem_RelativeactCard)(nil),
		(*ModuleItem_RelativeactCapsuleCard)(nil),
		(*ModuleItem_StatementCard)(nil),
		(*ModuleItem_IconCard)(nil),
		(*ModuleItem_VoteCard)(nil),
		(*ModuleItem_ReserveCard)(nil),
		(*ModuleItem_TimelineHeadCard)(nil),
		(*ModuleItem_TimelineEventTextCard)(nil),
		(*ModuleItem_TimelineEventImageCard)(nil),
		(*ModuleItem_TimelineEventImagetextCard)(nil),
		(*ModuleItem_TimelineEventResourceCard)(nil),
		(*ModuleItem_TimelineMoreCard)(nil),
		(*ModuleItem_TimelineUnfoldCard)(nil),
		(*ModuleItem_OgvOneCard)(nil),
		(*ModuleItem_OgvThreeCard)(nil),
		(*ModuleItem_OgvMoreCard)(nil),
		(*ModuleItem_NavigationCard)(nil),
		(*ModuleItem_ReplyCard)(nil),
		(*ModuleItem_TabCard)(nil),
		(*ModuleItem_NewactHeaderCard)(nil),
		(*ModuleItem_NewactAwardCard)(nil),
		(*ModuleItem_NewactStatementCard)(nil),
		(*ModuleItem_ProgressCard)(nil),
		(*ModuleItem_SelectCard)(nil),
		(*ModuleItem_ClickCard)(nil),
		(*ModuleItem_HoverButtonCard)(nil),
		(*ModuleItem_BottomButtonCard)(nil),
	}
}

type GameCard struct {
	// 游戏icon
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 游戏名
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 游戏描述
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 游戏标签
	Content              string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameCard) Reset()         { *m = GameCard{} }
func (m *GameCard) String() string { return proto.CompactTextString(m) }
func (*GameCard) ProtoMessage()    {}
func (*GameCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{12}
}
func (m *GameCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GameCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GameCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GameCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameCard.Merge(m, src)
}
func (m *GameCard) XXX_Size() int {
	return m.Size()
}
func (m *GameCard) XXX_DiscardUnknown() {
	xxx_messageInfo_GameCard.DiscardUnknown(m)
}

var xxx_messageInfo_GameCard proto.InternalMessageInfo

func (m *GameCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *GameCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GameCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *GameCard) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *GameCard) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type LiveCard struct {
	// 0:未开播 1:开播
	HasLive int32 `protobuf:"varint,1,opt,name=has_live,json=hasLive,proto3" json:"has_live,omitempty"`
	// 直播透传信息,因无法import git.bilibili.co数据，重新定义一份pb
	Content              *LiveItem `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LiveCard) Reset()         { *m = LiveCard{} }
func (m *LiveCard) String() string { return proto.CompactTextString(m) }
func (*LiveCard) ProtoMessage()    {}
func (*LiveCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{13}
}
func (m *LiveCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveCard.Merge(m, src)
}
func (m *LiveCard) XXX_Size() int {
	return m.Size()
}
func (m *LiveCard) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveCard.DiscardUnknown(m)
}

var xxx_messageInfo_LiveCard proto.InternalMessageInfo

func (m *LiveCard) GetHasLive() int32 {
	if m != nil {
		return m.HasLive
	}
	return 0
}

func (m *LiveCard) GetContent() *LiveItem {
	if m != nil {
		return m.Content
	}
	return nil
}

type LiveItem struct {
	// 主播id
	RoomId int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 主播uid
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 0关播 1直播中 2轮播中
	LiveStatus int64 `protobuf:"varint,3,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	// 0普通 3付费 4拜年祭 10lpl
	RoomType int64 `protobuf:"varint,4,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`
	// 0正常 2加密 3封禁 4IP限
	PlayType int64 `protobuf:"varint,5,opt,name=play_type,json=playType,proto3" json:"play_type,omitempty"`
	// 直播间标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 直播间封面
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	// 人气值
	Online int64 `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"`
	// 直播间分区id
	AreaId int64 `protobuf:"varint,9,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	// 直播间分区名称
	AreaName string `protobuf:"bytes,10,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	// 直播间父分区id
	ParentAreaId int64 `protobuf:"varint,11,opt,name=parent_area_id,json=parentAreaId,proto3" json:"parent_area_id,omitempty"`
	// 直播间父分区名称
	ParentAreaName string `protobuf:"bytes,12,opt,name=parent_area_name,json=parentAreaName,proto3" json:"parent_area_name,omitempty"`
	// 横竖屏方向 0横屏，1竖屏
	LiveScreenType int64 `protobuf:"varint,13,opt,name=live_screen_type,json=liveScreenType,proto3" json:"live_screen_type,omitempty"`
	// 上次关播的时间戳
	LastEndTime int64 `protobuf:"varint,14,opt,name=last_end_time,json=lastEndTime,proto3" json:"last_end_time,omitempty"`
	// 新秒开字段
	Link string `protobuf:"bytes,15,opt,name=link,proto3" json:"link,omitempty"`
	// 直播唯一标识id
	LiveId uint64 `protobuf:"varint,16,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`
	// 看过
	WatchedShow          *LiveWatchedShow `protobuf:"bytes,17,opt,name=watched_show,json=watchedShow,proto3" json:"watched_show,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LiveItem) Reset()         { *m = LiveItem{} }
func (m *LiveItem) String() string { return proto.CompactTextString(m) }
func (*LiveItem) ProtoMessage()    {}
func (*LiveItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{14}
}
func (m *LiveItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveItem.Merge(m, src)
}
func (m *LiveItem) XXX_Size() int {
	return m.Size()
}
func (m *LiveItem) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveItem.DiscardUnknown(m)
}

var xxx_messageInfo_LiveItem proto.InternalMessageInfo

func (m *LiveItem) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *LiveItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LiveItem) GetLiveStatus() int64 {
	if m != nil {
		return m.LiveStatus
	}
	return 0
}

func (m *LiveItem) GetRoomType() int64 {
	if m != nil {
		return m.RoomType
	}
	return 0
}

func (m *LiveItem) GetPlayType() int64 {
	if m != nil {
		return m.PlayType
	}
	return 0
}

func (m *LiveItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LiveItem) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *LiveItem) GetOnline() int64 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *LiveItem) GetAreaId() int64 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *LiveItem) GetAreaName() string {
	if m != nil {
		return m.AreaName
	}
	return ""
}

func (m *LiveItem) GetParentAreaId() int64 {
	if m != nil {
		return m.ParentAreaId
	}
	return 0
}

func (m *LiveItem) GetParentAreaName() string {
	if m != nil {
		return m.ParentAreaName
	}
	return ""
}

func (m *LiveItem) GetLiveScreenType() int64 {
	if m != nil {
		return m.LiveScreenType
	}
	return 0
}

func (m *LiveItem) GetLastEndTime() int64 {
	if m != nil {
		return m.LastEndTime
	}
	return 0
}

func (m *LiveItem) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *LiveItem) GetLiveId() uint64 {
	if m != nil {
		return m.LiveId
	}
	return 0
}

func (m *LiveItem) GetWatchedShow() *LiveWatchedShow {
	if m != nil {
		return m.WatchedShow
	}
	return nil
}

type LiveWatchedShow struct {
	// 该房间是否使用"看过"
	Switch bool `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	// 数值
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 短文案  小于1万时为"6541",大于1万且小于1亿值为"XX.X万",大于1亿为"XX.X亿"
	TextSmall string `protobuf:"bytes,3,opt,name=text_small,json=textSmall,proto3" json:"text_small,omitempty"`
	// 长文案  值为"XX人看过"
	TextLarge string `protobuf:"bytes,4,opt,name=text_large,json=textLarge,proto3" json:"text_large,omitempty"`
	// icon地址
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// icon与文案的位置 0 在文案的左边 1 在文案的右边
	IconLocation         string   `protobuf:"bytes,6,opt,name=icon_location,json=iconLocation,proto3" json:"icon_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveWatchedShow) Reset()         { *m = LiveWatchedShow{} }
func (m *LiveWatchedShow) String() string { return proto.CompactTextString(m) }
func (*LiveWatchedShow) ProtoMessage()    {}
func (*LiveWatchedShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{15}
}
func (m *LiveWatchedShow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveWatchedShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveWatchedShow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveWatchedShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveWatchedShow.Merge(m, src)
}
func (m *LiveWatchedShow) XXX_Size() int {
	return m.Size()
}
func (m *LiveWatchedShow) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveWatchedShow.DiscardUnknown(m)
}

var xxx_messageInfo_LiveWatchedShow proto.InternalMessageInfo

func (m *LiveWatchedShow) GetSwitch() bool {
	if m != nil {
		return m.Switch
	}
	return false
}

func (m *LiveWatchedShow) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *LiveWatchedShow) GetTextSmall() string {
	if m != nil {
		return m.TextSmall
	}
	return ""
}

func (m *LiveWatchedShow) GetTextLarge() string {
	if m != nil {
		return m.TextLarge
	}
	return ""
}

func (m *LiveWatchedShow) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *LiveWatchedShow) GetIconLocation() string {
	if m != nil {
		return m.IconLocation
	}
	return ""
}

type Color struct {
	// 背景色
	BgColor string `protobuf:"bytes,1,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 标题字体色
	TitleColor string `protobuf:"bytes,2,opt,name=title_color,json=titleColor,proto3" json:"title_color,omitempty"`
	// 顶部字体色
	TopFontColor string `protobuf:"bytes,3,opt,name=top_font_color,json=topFontColor,proto3" json:"top_font_color,omitempty"`
	// 底部字体色
	BottomFontColor string `protobuf:"bytes,4,opt,name=bottom_font_color,json=bottomFontColor,proto3" json:"bottom_font_color,omitempty"`
	// 字体色
	FontColor string `protobuf:"bytes,5,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	// 文字标题-文字颜色
	TextTitleFontColor string `protobuf:"bytes,6,opt,name=text_title_font_color,json=textTitleFontColor,proto3" json:"text_title_font_color,omitempty"`
	// 指示符颜色
	IndicatorColor string `protobuf:"bytes,7,opt,name=indicator_color,json=indicatorColor,proto3" json:"indicator_color,omitempty"`
	// 卡片背景色
	CardBgColor string `protobuf:"bytes,8,opt,name=card_bg_color,json=cardBgColor,proto3" json:"card_bg_color,omitempty"`
	// 卡片标题文字色
	CardTitleFontColor string `protobuf:"bytes,9,opt,name=card_title_font_color,json=cardTitleFontColor,proto3" json:"card_title_font_color,omitempty"`
	// 卡片标题背景色
	CardTitleBgColor string `protobuf:"bytes,10,opt,name=card_title_bg_color,json=cardTitleBgColor,proto3" json:"card_title_bg_color,omitempty"`
	// 查看更多文字色
	ViewMoreFontColor string `protobuf:"bytes,11,opt,name=view_more_font_color,json=viewMoreFontColor,proto3" json:"view_more_font_color,omitempty"`
	// 查看更多背景色
	ViewMoreBgColor string `protobuf:"bytes,12,opt,name=view_more_bg_color,json=viewMoreBgColor,proto3" json:"view_more_bg_color,omitempty"`
	// 时间轴色
	TimelineColor string `protobuf:"bytes,13,opt,name=timeline_color,json=timelineColor,proto3" json:"timeline_color,omitempty"`
	// 推荐语文字色
	RcmdFontColor string `protobuf:"bytes,14,opt,name=rcmd_font_color,json=rcmdFontColor,proto3" json:"rcmd_font_color,omitempty"`
	// 副标题文字色
	SubtitleFontColor string `protobuf:"bytes,15,opt,name=subtitle_font_color,json=subtitleFontColor,proto3" json:"subtitle_font_color,omitempty"`
	// 选中态字体色
	SelectedFontColor string `protobuf:"bytes,16,opt,name=selected_font_color,json=selectedFontColor,proto3" json:"selected_font_color,omitempty"`
	// 选中态背景色
	SelectedBgColor string `protobuf:"bytes,17,opt,name=selected_bg_color,json=selectedBgColor,proto3" json:"selected_bg_color,omitempty"`
	// 未选中态字体色
	UnselectedFontColor string `protobuf:"bytes,18,opt,name=unselected_font_color,json=unselectedFontColor,proto3" json:"unselected_font_color,omitempty"`
	// 未选中态背景色
	UnselectedBgColor string `protobuf:"bytes,19,opt,name=unselected_bg_color,json=unselectedBgColor,proto3" json:"unselected_bg_color,omitempty"`
	// 夜间-选中态字体色
	NtSelectedFontColor string `protobuf:"bytes,20,opt,name=nt_selected_font_color,json=ntSelectedFontColor,proto3" json:"nt_selected_font_color,omitempty"`
	// 夜间-选中态背景色
	NtSelectedBgColor string `protobuf:"bytes,21,opt,name=nt_selected_bg_color,json=ntSelectedBgColor,proto3" json:"nt_selected_bg_color,omitempty"`
	// 夜间-未选中态字体色
	NtUnselectedFontColor string `protobuf:"bytes,22,opt,name=nt_unselected_font_color,json=ntUnselectedFontColor,proto3" json:"nt_unselected_font_color,omitempty"`
	// 夜间-未选中态背景色
	NtUnselectedBgColor string `protobuf:"bytes,23,opt,name=nt_unselected_bg_color,json=ntUnselectedBgColor,proto3" json:"nt_unselected_bg_color,omitempty"`
	// 进度条颜色
	ProgressBarColor string `protobuf:"bytes,24,opt,name=progress_bar_color,json=progressBarColor,proto3" json:"progress_bar_color,omitempty"`
	//展开面板背景色
	PanelBgColor string `protobuf:"bytes,25,opt,name=panel_bg_color,json=panelBgColor,proto3" json:"panel_bg_color,omitempty"`
	//展开面板选中色
	PanelSelectColor string `protobuf:"bytes,26,opt,name=panel_select_color,json=panelSelectColor,proto3" json:"panel_select_color,omitempty"`
	//展开面板选中背景色
	PanelSelectFontColor string `protobuf:"bytes,27,opt,name=panel_select_font_color,json=panelSelectFontColor,proto3" json:"panel_select_font_color,omitempty"`
	//展开面板未选中色
	PanelNtSelectFontColor string   `protobuf:"bytes,28,opt,name=panel_nt_select_font_color,json=panelNtSelectFontColor,proto3" json:"panel_nt_select_font_color,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Color) Reset()         { *m = Color{} }
func (m *Color) String() string { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()    {}
func (*Color) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{16}
}
func (m *Color) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Color) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Color.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Color) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Color.Merge(m, src)
}
func (m *Color) XXX_Size() int {
	return m.Size()
}
func (m *Color) XXX_DiscardUnknown() {
	xxx_messageInfo_Color.DiscardUnknown(m)
}

var xxx_messageInfo_Color proto.InternalMessageInfo

func (m *Color) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *Color) GetTitleColor() string {
	if m != nil {
		return m.TitleColor
	}
	return ""
}

func (m *Color) GetTopFontColor() string {
	if m != nil {
		return m.TopFontColor
	}
	return ""
}

func (m *Color) GetBottomFontColor() string {
	if m != nil {
		return m.BottomFontColor
	}
	return ""
}

func (m *Color) GetFontColor() string {
	if m != nil {
		return m.FontColor
	}
	return ""
}

func (m *Color) GetTextTitleFontColor() string {
	if m != nil {
		return m.TextTitleFontColor
	}
	return ""
}

func (m *Color) GetIndicatorColor() string {
	if m != nil {
		return m.IndicatorColor
	}
	return ""
}

func (m *Color) GetCardBgColor() string {
	if m != nil {
		return m.CardBgColor
	}
	return ""
}

func (m *Color) GetCardTitleFontColor() string {
	if m != nil {
		return m.CardTitleFontColor
	}
	return ""
}

func (m *Color) GetCardTitleBgColor() string {
	if m != nil {
		return m.CardTitleBgColor
	}
	return ""
}

func (m *Color) GetViewMoreFontColor() string {
	if m != nil {
		return m.ViewMoreFontColor
	}
	return ""
}

func (m *Color) GetViewMoreBgColor() string {
	if m != nil {
		return m.ViewMoreBgColor
	}
	return ""
}

func (m *Color) GetTimelineColor() string {
	if m != nil {
		return m.TimelineColor
	}
	return ""
}

func (m *Color) GetRcmdFontColor() string {
	if m != nil {
		return m.RcmdFontColor
	}
	return ""
}

func (m *Color) GetSubtitleFontColor() string {
	if m != nil {
		return m.SubtitleFontColor
	}
	return ""
}

func (m *Color) GetSelectedFontColor() string {
	if m != nil {
		return m.SelectedFontColor
	}
	return ""
}

func (m *Color) GetSelectedBgColor() string {
	if m != nil {
		return m.SelectedBgColor
	}
	return ""
}

func (m *Color) GetUnselectedFontColor() string {
	if m != nil {
		return m.UnselectedFontColor
	}
	return ""
}

func (m *Color) GetUnselectedBgColor() string {
	if m != nil {
		return m.UnselectedBgColor
	}
	return ""
}

func (m *Color) GetNtSelectedFontColor() string {
	if m != nil {
		return m.NtSelectedFontColor
	}
	return ""
}

func (m *Color) GetNtSelectedBgColor() string {
	if m != nil {
		return m.NtSelectedBgColor
	}
	return ""
}

func (m *Color) GetNtUnselectedFontColor() string {
	if m != nil {
		return m.NtUnselectedFontColor
	}
	return ""
}

func (m *Color) GetNtUnselectedBgColor() string {
	if m != nil {
		return m.NtUnselectedBgColor
	}
	return ""
}

func (m *Color) GetProgressBarColor() string {
	if m != nil {
		return m.ProgressBarColor
	}
	return ""
}

func (m *Color) GetPanelBgColor() string {
	if m != nil {
		return m.PanelBgColor
	}
	return ""
}

func (m *Color) GetPanelSelectColor() string {
	if m != nil {
		return m.PanelSelectColor
	}
	return ""
}

func (m *Color) GetPanelSelectFontColor() string {
	if m != nil {
		return m.PanelSelectFontColor
	}
	return ""
}

func (m *Color) GetPanelNtSelectFontColor() string {
	if m != nil {
		return m.PanelNtSelectFontColor
	}
	return ""
}

type EditorRecommendCard struct {
	// 顶部icon地址
	TopIcon string `protobuf:"bytes,1,opt,name=top_icon,json=topIcon,proto3" json:"top_icon,omitempty"`
	// 顶部推荐语
	TopContent string `protobuf:"bytes,2,opt,name=top_content,json=topContent,proto3" json:"top_content,omitempty"`
	// 底部icon地址
	BottomIcon string `protobuf:"bytes,3,opt,name=bottom_icon,json=bottomIcon,proto3" json:"bottom_icon,omitempty"`
	// 底部推荐语
	BottomContent string `protobuf:"bytes,4,opt,name=bottom_content,json=bottomContent,proto3" json:"bottom_content,omitempty"`
	// 封面图
	CoverImageUri string `protobuf:"bytes,5,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// 属性展示：位置1
	Position1 string `protobuf:"bytes,8,opt,name=position1,proto3" json:"position1,omitempty"`
	// 属性展示：位置2
	Position2 string `protobuf:"bytes,9,opt,name=position2,proto3" json:"position2,omitempty"`
	// 属性展示：位置3
	Position3 string `protobuf:"bytes,10,opt,name=position3,proto3" json:"position3,omitempty"`
	// 属性展示：位置4
	Position4 string `protobuf:"bytes,11,opt,name=position4,proto3" json:"position4,omitempty"`
	// 属性展示：位置5
	Position5 string `protobuf:"bytes,12,opt,name=position5,proto3" json:"position5,omitempty"`
	// 分享
	Share *Share `protobuf:"bytes,13,opt,name=share,proto3" json:"share,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"` // Deprecated: Do not use.
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,15,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 开关，优先级高于组件
	Setting *Setting `protobuf:"bytes,16,opt,name=setting,proto3" json:"setting,omitempty"`
	// 中间icon地址
	MiddleIcon string `protobuf:"bytes,17,opt,name=middle_icon,json=middleIcon,proto3" json:"middle_icon,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,18,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditorRecommendCard) Reset()         { *m = EditorRecommendCard{} }
func (m *EditorRecommendCard) String() string { return proto.CompactTextString(m) }
func (*EditorRecommendCard) ProtoMessage()    {}
func (*EditorRecommendCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{17}
}
func (m *EditorRecommendCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditorRecommendCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditorRecommendCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditorRecommendCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditorRecommendCard.Merge(m, src)
}
func (m *EditorRecommendCard) XXX_Size() int {
	return m.Size()
}
func (m *EditorRecommendCard) XXX_DiscardUnknown() {
	xxx_messageInfo_EditorRecommendCard.DiscardUnknown(m)
}

var xxx_messageInfo_EditorRecommendCard proto.InternalMessageInfo

func (m *EditorRecommendCard) GetTopIcon() string {
	if m != nil {
		return m.TopIcon
	}
	return ""
}

func (m *EditorRecommendCard) GetTopContent() string {
	if m != nil {
		return m.TopContent
	}
	return ""
}

func (m *EditorRecommendCard) GetBottomIcon() string {
	if m != nil {
		return m.BottomIcon
	}
	return ""
}

func (m *EditorRecommendCard) GetBottomContent() string {
	if m != nil {
		return m.BottomContent
	}
	return ""
}

func (m *EditorRecommendCard) GetCoverImageUri() string {
	if m != nil {
		return m.CoverImageUri
	}
	return ""
}

func (m *EditorRecommendCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EditorRecommendCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *EditorRecommendCard) GetPosition1() string {
	if m != nil {
		return m.Position1
	}
	return ""
}

func (m *EditorRecommendCard) GetPosition2() string {
	if m != nil {
		return m.Position2
	}
	return ""
}

func (m *EditorRecommendCard) GetPosition3() string {
	if m != nil {
		return m.Position3
	}
	return ""
}

func (m *EditorRecommendCard) GetPosition4() string {
	if m != nil {
		return m.Position4
	}
	return ""
}

func (m *EditorRecommendCard) GetPosition5() string {
	if m != nil {
		return m.Position5
	}
	return ""
}

func (m *EditorRecommendCard) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

// Deprecated: Do not use.
func (m *EditorRecommendCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *EditorRecommendCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *EditorRecommendCard) GetSetting() *Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *EditorRecommendCard) GetMiddleIcon() string {
	if m != nil {
		return m.MiddleIcon
	}
	return ""
}

func (m *EditorRecommendCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type ParticipationCard struct {
	// 投稿按钮图-日间模式
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 投稿按钮图-夜间模式
	SelectedImage string `protobuf:"bytes,2,opt,name=selected_image,json=selectedImage,proto3" json:"selected_image,omitempty"`
	// 投稿类型列表
	Items                []*ParticipationCardItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ParticipationCard) Reset()         { *m = ParticipationCard{} }
func (m *ParticipationCard) String() string { return proto.CompactTextString(m) }
func (*ParticipationCard) ProtoMessage()    {}
func (*ParticipationCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{18}
}
func (m *ParticipationCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ParticipationCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ParticipationCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ParticipationCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipationCard.Merge(m, src)
}
func (m *ParticipationCard) XXX_Size() int {
	return m.Size()
}
func (m *ParticipationCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipationCard.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipationCard proto.InternalMessageInfo

func (m *ParticipationCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ParticipationCard) GetSelectedImage() string {
	if m != nil {
		return m.SelectedImage
	}
	return ""
}

func (m *ParticipationCard) GetItems() []*ParticipationCardItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ParticipationCardItem struct {
	// 投稿按钮图
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 投稿文案
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 投稿类型
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipationCardItem) Reset()         { *m = ParticipationCardItem{} }
func (m *ParticipationCardItem) String() string { return proto.CompactTextString(m) }
func (*ParticipationCardItem) ProtoMessage()    {}
func (*ParticipationCardItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{19}
}
func (m *ParticipationCardItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ParticipationCardItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ParticipationCardItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ParticipationCardItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipationCardItem.Merge(m, src)
}
func (m *ParticipationCardItem) XXX_Size() int {
	return m.Size()
}
func (m *ParticipationCardItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipationCardItem.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipationCardItem proto.InternalMessageInfo

func (m *ParticipationCardItem) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ParticipationCardItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ParticipationCardItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParticipationCardItem) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type HeaderCard struct {
	// 用户头像
	UserImage string `protobuf:"bytes,1,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"`
	// 用户昵称
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 发起文案
	SponsorContent string `protobuf:"bytes,3,opt,name=sponsor_content,json=sponsorContent,proto3" json:"sponsor_content,omitempty"`
	// 高亮度背景图
	HighLightImage string `protobuf:"bytes,4,opt,name=high_light_image,json=highLightImage,proto3" json:"high_light_image,omitempty"`
	// 低亮度背景图
	LowLightImage string `protobuf:"bytes,5,opt,name=low_light_image,json=lowLightImage,proto3" json:"low_light_image,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	// 浏览数
	ViewNum string `protobuf:"bytes,7,opt,name=view_num,json=viewNum,proto3" json:"view_num,omitempty"`
	// 讨论数
	DiscussNum string `protobuf:"bytes,8,opt,name=discuss_num,json=discussNum,proto3" json:"discuss_num,omitempty"`
	// 是否已订阅
	IsSubscribed bool `protobuf:"varint,9,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	// 用户mid
	Mid                  int64    `protobuf:"varint,10,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderCard) Reset()         { *m = HeaderCard{} }
func (m *HeaderCard) String() string { return proto.CompactTextString(m) }
func (*HeaderCard) ProtoMessage()    {}
func (*HeaderCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{20}
}
func (m *HeaderCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HeaderCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HeaderCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HeaderCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderCard.Merge(m, src)
}
func (m *HeaderCard) XXX_Size() int {
	return m.Size()
}
func (m *HeaderCard) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderCard.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderCard proto.InternalMessageInfo

func (m *HeaderCard) GetUserImage() string {
	if m != nil {
		return m.UserImage
	}
	return ""
}

func (m *HeaderCard) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *HeaderCard) GetSponsorContent() string {
	if m != nil {
		return m.SponsorContent
	}
	return ""
}

func (m *HeaderCard) GetHighLightImage() string {
	if m != nil {
		return m.HighLightImage
	}
	return ""
}

func (m *HeaderCard) GetLowLightImage() string {
	if m != nil {
		return m.LowLightImage
	}
	return ""
}

func (m *HeaderCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *HeaderCard) GetViewNum() string {
	if m != nil {
		return m.ViewNum
	}
	return ""
}

func (m *HeaderCard) GetDiscussNum() string {
	if m != nil {
		return m.DiscussNum
	}
	return ""
}

func (m *HeaderCard) GetIsSubscribed() bool {
	if m != nil {
		return m.IsSubscribed
	}
	return false
}

func (m *HeaderCard) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

// 分享
type Share struct {
	// 是否展示稍后再看
	DisplayLater bool `protobuf:"varint,1,opt,name=display_later,json=displayLater,proto3" json:"display_later,omitempty"`
	// 资源id
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 分享来源
	ShareOrigin string `protobuf:"bytes,3,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	// 资源类型
	ShareType            int64    `protobuf:"varint,4,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Share) Reset()         { *m = Share{} }
func (m *Share) String() string { return proto.CompactTextString(m) }
func (*Share) ProtoMessage()    {}
func (*Share) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{21}
}
func (m *Share) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Share) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Share.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Share) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Share.Merge(m, src)
}
func (m *Share) XXX_Size() int {
	return m.Size()
}
func (m *Share) XXX_DiscardUnknown() {
	xxx_messageInfo_Share.DiscardUnknown(m)
}

var xxx_messageInfo_Share proto.InternalMessageInfo

func (m *Share) GetDisplayLater() bool {
	if m != nil {
		return m.DisplayLater
	}
	return false
}

func (m *Share) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *Share) GetShareOrigin() string {
	if m != nil {
		return m.ShareOrigin
	}
	return ""
}

func (m *Share) GetShareType() int64 {
	if m != nil {
		return m.ShareType
	}
	return 0
}

// 角标
type Badge struct {
	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 背景色
	BgColor string `protobuf:"bytes,2,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 背景色（夜间模式）
	BgColorNight         string   `protobuf:"bytes,3,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Badge) Reset()         { *m = Badge{} }
func (m *Badge) String() string { return proto.CompactTextString(m) }
func (*Badge) ProtoMessage()    {}
func (*Badge) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{22}
}
func (m *Badge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Badge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Badge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Badge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Badge.Merge(m, src)
}
func (m *Badge) XXX_Size() int {
	return m.Size()
}
func (m *Badge) XXX_DiscardUnknown() {
	xxx_messageInfo_Badge.DiscardUnknown(m)
}

var xxx_messageInfo_Badge proto.InternalMessageInfo

func (m *Badge) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Badge) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *Badge) GetBgColorNight() string {
	if m != nil {
		return m.BgColorNight
	}
	return ""
}

// 上报
type ReportDic struct {
	BizType              string   `protobuf:"bytes,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	SeasonType           string   `protobuf:"bytes,2,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	Aid                  int64    `protobuf:"varint,3,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid                  int64    `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	SubType              int32    `protobuf:"varint,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	EpId                 int64    `protobuf:"varint,6,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	IsPreview            int32    `protobuf:"varint,7,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	SeasonId             int64    `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	AuthorName           string   `protobuf:"bytes,9,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportDic) Reset()         { *m = ReportDic{} }
func (m *ReportDic) String() string { return proto.CompactTextString(m) }
func (*ReportDic) ProtoMessage()    {}
func (*ReportDic) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{23}
}
func (m *ReportDic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportDic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportDic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportDic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDic.Merge(m, src)
}
func (m *ReportDic) XXX_Size() int {
	return m.Size()
}
func (m *ReportDic) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDic.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDic proto.InternalMessageInfo

func (m *ReportDic) GetBizType() string {
	if m != nil {
		return m.BizType
	}
	return ""
}

func (m *ReportDic) GetSeasonType() string {
	if m != nil {
		return m.SeasonType
	}
	return ""
}

func (m *ReportDic) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ReportDic) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *ReportDic) GetSubType() int32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *ReportDic) GetEpId() int64 {
	if m != nil {
		return m.EpId
	}
	return 0
}

func (m *ReportDic) GetIsPreview() int32 {
	if m != nil {
		return m.IsPreview
	}
	return 0
}

func (m *ReportDic) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *ReportDic) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

type DynamicCard struct {
	// 透传动态详情
	Dynamic              *v2.DynamicItem `protobuf:"bytes,1,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DynamicCard) Reset()         { *m = DynamicCard{} }
func (m *DynamicCard) String() string { return proto.CompactTextString(m) }
func (*DynamicCard) ProtoMessage()    {}
func (*DynamicCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{24}
}
func (m *DynamicCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicCard.Merge(m, src)
}
func (m *DynamicCard) XXX_Size() int {
	return m.Size()
}
func (m *DynamicCard) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicCard.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicCard proto.InternalMessageInfo

func (m *DynamicCard) GetDynamic() *v2.DynamicItem {
	if m != nil {
		return m.Dynamic
	}
	return nil
}

type DynamicReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *DynamicParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 页面spmid
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty" form:"from_spmid"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty" form:"player_args"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty" form:"local_time"`
	// 是否冷启动
	IsColdStart bool `protobuf:"varint,6,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty" form:"is_cold_start"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,7,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicReq) Reset()         { *m = DynamicReq{} }
func (m *DynamicReq) String() string { return proto.CompactTextString(m) }
func (*DynamicReq) ProtoMessage()    {}
func (*DynamicReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{25}
}
func (m *DynamicReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicReq.Merge(m, src)
}
func (m *DynamicReq) XXX_Size() int {
	return m.Size()
}
func (m *DynamicReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicReq proto.InternalMessageInfo

func (m *DynamicReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *DynamicReq) GetParams() *DynamicParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *DynamicReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *DynamicReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynamicReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynamicReq) GetIsColdStart() bool {
	if m != nil {
		return m.IsColdStart
	}
	return false
}

func (m *DynamicReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type DynamicParams struct {
	// 动态模式-feed流偏移量
	FeedOffset *types.Any `protobuf:"bytes,1,opt,name=feed_offset,json=feedOffset,proto3" json:"feed_offset,omitempty"`
	// 活动数据源模式-偏移量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 最后一次出现的分组
	LastGroup int64 `protobuf:"varint,3,opt,name=last_group,json=lastGroup,proto3" json:"last_group,omitempty"`
	// 组件id
	ModuleId int64 `protobuf:"varint,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 排序类型
	SortType             int64    `protobuf:"varint,5,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicParams) Reset()         { *m = DynamicParams{} }
func (m *DynamicParams) String() string { return proto.CompactTextString(m) }
func (*DynamicParams) ProtoMessage()    {}
func (*DynamicParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{26}
}
func (m *DynamicParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicParams.Merge(m, src)
}
func (m *DynamicParams) XXX_Size() int {
	return m.Size()
}
func (m *DynamicParams) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicParams.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicParams proto.InternalMessageInfo

func (m *DynamicParams) GetFeedOffset() *types.Any {
	if m != nil {
		return m.FeedOffset
	}
	return nil
}

func (m *DynamicParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DynamicParams) GetLastGroup() int64 {
	if m != nil {
		return m.LastGroup
	}
	return 0
}

func (m *DynamicParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *DynamicParams) GetSortType() int64 {
	if m != nil {
		return m.SortType
	}
	return 0
}

type DynamicResp struct {
	// 动态组件
	Module               *Module  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicResp) Reset()         { *m = DynamicResp{} }
func (m *DynamicResp) String() string { return proto.CompactTextString(m) }
func (*DynamicResp) ProtoMessage()    {}
func (*DynamicResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{27}
}
func (m *DynamicResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicResp.Merge(m, src)
}
func (m *DynamicResp) XXX_Size() int {
	return m.Size()
}
func (m *DynamicResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicResp.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicResp proto.InternalMessageInfo

func (m *DynamicResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type TextCard struct {
	// 文本内容
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextCard) Reset()         { *m = TextCard{} }
func (m *TextCard) String() string { return proto.CompactTextString(m) }
func (*TextCard) ProtoMessage()    {}
func (*TextCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{28}
}
func (m *TextCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TextCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TextCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TextCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextCard.Merge(m, src)
}
func (m *TextCard) XXX_Size() int {
	return m.Size()
}
func (m *TextCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TextCard.DiscardUnknown(m)
}

var xxx_messageInfo_TextCard proto.InternalMessageInfo

func (m *TextCard) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type TextTitleCard struct {
	// 文字标题
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextTitleCard) Reset()         { *m = TextTitleCard{} }
func (m *TextTitleCard) String() string { return proto.CompactTextString(m) }
func (*TextTitleCard) ProtoMessage()    {}
func (*TextTitleCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{29}
}
func (m *TextTitleCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TextTitleCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TextTitleCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TextTitleCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextTitleCard.Merge(m, src)
}
func (m *TextTitleCard) XXX_Size() int {
	return m.Size()
}
func (m *TextTitleCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TextTitleCard.DiscardUnknown(m)
}

var xxx_messageInfo_TextTitleCard proto.InternalMessageInfo

func (m *TextTitleCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ImageTitleCard struct {
	// 图片地址
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageTitleCard) Reset()         { *m = ImageTitleCard{} }
func (m *ImageTitleCard) String() string { return proto.CompactTextString(m) }
func (*ImageTitleCard) ProtoMessage()    {}
func (*ImageTitleCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{30}
}
func (m *ImageTitleCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ImageTitleCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ImageTitleCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ImageTitleCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageTitleCard.Merge(m, src)
}
func (m *ImageTitleCard) XXX_Size() int {
	return m.Size()
}
func (m *ImageTitleCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageTitleCard.DiscardUnknown(m)
}

var xxx_messageInfo_ImageTitleCard proto.InternalMessageInfo

func (m *ImageTitleCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type DynamicMoreCard struct {
	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 二级列表附加数据
	SubpageData          *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynamicMoreCard) Reset()         { *m = DynamicMoreCard{} }
func (m *DynamicMoreCard) String() string { return proto.CompactTextString(m) }
func (*DynamicMoreCard) ProtoMessage()    {}
func (*DynamicMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{31}
}
func (m *DynamicMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicMoreCard.Merge(m, src)
}
func (m *DynamicMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *DynamicMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicMoreCard proto.InternalMessageInfo

func (m *DynamicMoreCard) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DynamicMoreCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *DynamicMoreCard) GetSubpageData() *SubpageData {
	if m != nil {
		return m.SubpageData
	}
	return nil
}

type DynamicActMoreCard struct {
	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 二级列表附加数据
	SubpageData          *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynamicActMoreCard) Reset()         { *m = DynamicActMoreCard{} }
func (m *DynamicActMoreCard) String() string { return proto.CompactTextString(m) }
func (*DynamicActMoreCard) ProtoMessage()    {}
func (*DynamicActMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{32}
}
func (m *DynamicActMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicActMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicActMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicActMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicActMoreCard.Merge(m, src)
}
func (m *DynamicActMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *DynamicActMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicActMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicActMoreCard proto.InternalMessageInfo

func (m *DynamicActMoreCard) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DynamicActMoreCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *DynamicActMoreCard) GetSubpageData() *SubpageData {
	if m != nil {
		return m.SubpageData
	}
	return nil
}

type LayerDynamic struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 动态详情
	Dynamic              *v2.DynamicItem `protobuf:"bytes,2,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LayerDynamic) Reset()         { *m = LayerDynamic{} }
func (m *LayerDynamic) String() string { return proto.CompactTextString(m) }
func (*LayerDynamic) ProtoMessage()    {}
func (*LayerDynamic) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{33}
}
func (m *LayerDynamic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LayerDynamic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LayerDynamic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LayerDynamic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LayerDynamic.Merge(m, src)
}
func (m *LayerDynamic) XXX_Size() int {
	return m.Size()
}
func (m *LayerDynamic) XXX_DiscardUnknown() {
	xxx_messageInfo_LayerDynamic.DiscardUnknown(m)
}

var xxx_messageInfo_LayerDynamic proto.InternalMessageInfo

func (m *LayerDynamic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LayerDynamic) GetDynamic() *v2.DynamicItem {
	if m != nil {
		return m.Dynamic
	}
	return nil
}

type EditorReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *EditorParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditorReq) Reset()         { *m = EditorReq{} }
func (m *EditorReq) String() string { return proto.CompactTextString(m) }
func (*EditorReq) ProtoMessage()    {}
func (*EditorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{34}
}
func (m *EditorReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditorReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditorReq.Merge(m, src)
}
func (m *EditorReq) XXX_Size() int {
	return m.Size()
}
func (m *EditorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditorReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditorReq proto.InternalMessageInfo

func (m *EditorReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *EditorReq) GetParams() *EditorParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *EditorReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type EditorParams struct {
	// 偏移量
	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 组件id
	ModuleId             int64    `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditorParams) Reset()         { *m = EditorParams{} }
func (m *EditorParams) String() string { return proto.CompactTextString(m) }
func (*EditorParams) ProtoMessage()    {}
func (*EditorParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{35}
}
func (m *EditorParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditorParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditorParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditorParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditorParams.Merge(m, src)
}
func (m *EditorParams) XXX_Size() int {
	return m.Size()
}
func (m *EditorParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EditorParams.DiscardUnknown(m)
}

var xxx_messageInfo_EditorParams proto.InternalMessageInfo

func (m *EditorParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *EditorParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

type EditorResp struct {
	// 编辑推荐卡组件
	Module               *Module  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditorResp) Reset()         { *m = EditorResp{} }
func (m *EditorResp) String() string { return proto.CompactTextString(m) }
func (*EditorResp) ProtoMessage()    {}
func (*EditorResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{36}
}
func (m *EditorResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditorResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditorResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditorResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditorResp.Merge(m, src)
}
func (m *EditorResp) XXX_Size() int {
	return m.Size()
}
func (m *EditorResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditorResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditorResp proto.InternalMessageInfo

func (m *EditorResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type CarouselImgCard struct {
	// 内容样式：1 banner模式；2 横滑模式
	ContentStyle int64 `protobuf:"varint,1,opt,name=content_style,json=contentStyle,proto3" json:"content_style,omitempty"`
	// 图片列表
	Images               []*CarouselImgItem `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CarouselImgCard) Reset()         { *m = CarouselImgCard{} }
func (m *CarouselImgCard) String() string { return proto.CompactTextString(m) }
func (*CarouselImgCard) ProtoMessage()    {}
func (*CarouselImgCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{37}
}
func (m *CarouselImgCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CarouselImgCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CarouselImgCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CarouselImgCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarouselImgCard.Merge(m, src)
}
func (m *CarouselImgCard) XXX_Size() int {
	return m.Size()
}
func (m *CarouselImgCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CarouselImgCard.DiscardUnknown(m)
}

var xxx_messageInfo_CarouselImgCard proto.InternalMessageInfo

func (m *CarouselImgCard) GetContentStyle() int64 {
	if m != nil {
		return m.ContentStyle
	}
	return 0
}

func (m *CarouselImgCard) GetImages() []*CarouselImgItem {
	if m != nil {
		return m.Images
	}
	return nil
}

type CarouselImgItem struct {
	// 图片
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 图片长
	Length int64 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"` // Deprecated: Do not use.
	// 图片宽
	Width int64 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	// 顶栏配置
	TopTab *TopTab `protobuf:"bytes,5,opt,name=top_tab,json=topTab,proto3" json:"top_tab,omitempty"`
	// 图片高
	Height               int64    `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarouselImgItem) Reset()         { *m = CarouselImgItem{} }
func (m *CarouselImgItem) String() string { return proto.CompactTextString(m) }
func (*CarouselImgItem) ProtoMessage()    {}
func (*CarouselImgItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{38}
}
func (m *CarouselImgItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CarouselImgItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CarouselImgItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CarouselImgItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarouselImgItem.Merge(m, src)
}
func (m *CarouselImgItem) XXX_Size() int {
	return m.Size()
}
func (m *CarouselImgItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CarouselImgItem.DiscardUnknown(m)
}

var xxx_messageInfo_CarouselImgItem proto.InternalMessageInfo

func (m *CarouselImgItem) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CarouselImgItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// Deprecated: Do not use.
func (m *CarouselImgItem) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *CarouselImgItem) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *CarouselImgItem) GetTopTab() *TopTab {
	if m != nil {
		return m.TopTab
	}
	return nil
}

func (m *CarouselImgItem) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

// 顶栏配置
type TopTab struct {
	// 背景图1
	BgImage1 string `protobuf:"bytes,1,opt,name=bg_image1,json=bgImage1,proto3" json:"bg_image1,omitempty"`
	// 背景图2
	BgImage2 string `protobuf:"bytes,2,opt,name=bg_image2,json=bgImage2,proto3" json:"bg_image2,omitempty"`
	// 顶栏头部颜色
	TabTopColor string `protobuf:"bytes,3,opt,name=tab_top_color,json=tabTopColor,proto3" json:"tab_top_color,omitempty"`
	// 中间色值
	TabMiddleColor string `protobuf:"bytes,4,opt,name=tab_middle_color,json=tabMiddleColor,proto3" json:"tab_middle_color,omitempty"`
	// tab栏底部色值
	TabBottomColor string `protobuf:"bytes,5,opt,name=tab_bottom_color,json=tabBottomColor,proto3" json:"tab_bottom_color,omitempty"`
	// tab文本高亮色值
	FontColor string `protobuf:"bytes,6,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	// 系统状态栏色值
	BarType              int64    `protobuf:"varint,7,opt,name=bar_type,json=barType,proto3" json:"bar_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopTab) Reset()         { *m = TopTab{} }
func (m *TopTab) String() string { return proto.CompactTextString(m) }
func (*TopTab) ProtoMessage()    {}
func (*TopTab) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{39}
}
func (m *TopTab) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopTab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopTab.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopTab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopTab.Merge(m, src)
}
func (m *TopTab) XXX_Size() int {
	return m.Size()
}
func (m *TopTab) XXX_DiscardUnknown() {
	xxx_messageInfo_TopTab.DiscardUnknown(m)
}

var xxx_messageInfo_TopTab proto.InternalMessageInfo

func (m *TopTab) GetBgImage1() string {
	if m != nil {
		return m.BgImage1
	}
	return ""
}

func (m *TopTab) GetBgImage2() string {
	if m != nil {
		return m.BgImage2
	}
	return ""
}

func (m *TopTab) GetTabTopColor() string {
	if m != nil {
		return m.TabTopColor
	}
	return ""
}

func (m *TopTab) GetTabMiddleColor() string {
	if m != nil {
		return m.TabMiddleColor
	}
	return ""
}

func (m *TopTab) GetTabBottomColor() string {
	if m != nil {
		return m.TabBottomColor
	}
	return ""
}

func (m *TopTab) GetFontColor() string {
	if m != nil {
		return m.FontColor
	}
	return ""
}

func (m *TopTab) GetBarType() int64 {
	if m != nil {
		return m.BarType
	}
	return 0
}

type CarouselWordCard struct {
	// 内容样式：3 单行；4 多行
	ContentStyle int64 `protobuf:"varint,1,opt,name=content_style,json=contentStyle,proto3" json:"content_style,omitempty"`
	// 滚动方向：1 纵向；2 横向
	ScrollType int64 `protobuf:"varint,2,opt,name=scroll_type,json=scrollType,proto3" json:"scroll_type,omitempty"`
	// 文本列表
	Words                []*CarouselWordItem `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CarouselWordCard) Reset()         { *m = CarouselWordCard{} }
func (m *CarouselWordCard) String() string { return proto.CompactTextString(m) }
func (*CarouselWordCard) ProtoMessage()    {}
func (*CarouselWordCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{40}
}
func (m *CarouselWordCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CarouselWordCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CarouselWordCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CarouselWordCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarouselWordCard.Merge(m, src)
}
func (m *CarouselWordCard) XXX_Size() int {
	return m.Size()
}
func (m *CarouselWordCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CarouselWordCard.DiscardUnknown(m)
}

var xxx_messageInfo_CarouselWordCard proto.InternalMessageInfo

func (m *CarouselWordCard) GetContentStyle() int64 {
	if m != nil {
		return m.ContentStyle
	}
	return 0
}

func (m *CarouselWordCard) GetScrollType() int64 {
	if m != nil {
		return m.ScrollType
	}
	return 0
}

func (m *CarouselWordCard) GetWords() []*CarouselWordItem {
	if m != nil {
		return m.Words
	}
	return nil
}

type CarouselWordItem struct {
	// 内容
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarouselWordItem) Reset()         { *m = CarouselWordItem{} }
func (m *CarouselWordItem) String() string { return proto.CompactTextString(m) }
func (*CarouselWordItem) ProtoMessage()    {}
func (*CarouselWordItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{41}
}
func (m *CarouselWordItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CarouselWordItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CarouselWordItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CarouselWordItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarouselWordItem.Merge(m, src)
}
func (m *CarouselWordItem) XXX_Size() int {
	return m.Size()
}
func (m *CarouselWordItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CarouselWordItem.DiscardUnknown(m)
}

var xxx_messageInfo_CarouselWordItem proto.InternalMessageInfo

func (m *CarouselWordItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ResourceCard struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 封面右侧文案
	CoverRightText string `protobuf:"bytes,4,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	// 封面左1文案
	CoverLeftText1 string `protobuf:"bytes,5,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	// 封面左1 icon
	CoverLeftIcon1 int64 `protobuf:"varint,6,opt,name=cover_left_icon1,json=coverLeftIcon1,proto3" json:"cover_left_icon1,omitempty"`
	// 封面左2文案
	CoverLeftText2 string `protobuf:"bytes,7,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	// 封面左2 icon
	CoverLeftIcon2 int64 `protobuf:"varint,8,opt,name=cover_left_icon2,json=coverLeftIcon2,proto3" json:"cover_left_icon2,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,9,opt,name=badge,proto3" json:"badge,omitempty"`
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,10,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceCard) Reset()         { *m = ResourceCard{} }
func (m *ResourceCard) String() string { return proto.CompactTextString(m) }
func (*ResourceCard) ProtoMessage()    {}
func (*ResourceCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{42}
}
func (m *ResourceCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceCard.Merge(m, src)
}
func (m *ResourceCard) XXX_Size() int {
	return m.Size()
}
func (m *ResourceCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceCard.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceCard proto.InternalMessageInfo

func (m *ResourceCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResourceCard) GetCoverImageUri() string {
	if m != nil {
		return m.CoverImageUri
	}
	return ""
}

func (m *ResourceCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ResourceCard) GetCoverRightText() string {
	if m != nil {
		return m.CoverRightText
	}
	return ""
}

func (m *ResourceCard) GetCoverLeftText1() string {
	if m != nil {
		return m.CoverLeftText1
	}
	return ""
}

func (m *ResourceCard) GetCoverLeftIcon1() int64 {
	if m != nil {
		return m.CoverLeftIcon1
	}
	return 0
}

func (m *ResourceCard) GetCoverLeftText2() string {
	if m != nil {
		return m.CoverLeftText2
	}
	return ""
}

func (m *ResourceCard) GetCoverLeftIcon2() int64 {
	if m != nil {
		return m.CoverLeftIcon2
	}
	return 0
}

func (m *ResourceCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *ResourceCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *ResourceCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type ResourceMoreCard struct {
	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 二级列表附加数据
	SubpageData          *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResourceMoreCard) Reset()         { *m = ResourceMoreCard{} }
func (m *ResourceMoreCard) String() string { return proto.CompactTextString(m) }
func (*ResourceMoreCard) ProtoMessage()    {}
func (*ResourceMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{43}
}
func (m *ResourceMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceMoreCard.Merge(m, src)
}
func (m *ResourceMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *ResourceMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceMoreCard proto.InternalMessageInfo

func (m *ResourceMoreCard) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ResourceMoreCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ResourceMoreCard) GetSubpageData() *SubpageData {
	if m != nil {
		return m.SubpageData
	}
	return nil
}

type ResourceReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *ResourceParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceReq) Reset()         { *m = ResourceReq{} }
func (m *ResourceReq) String() string { return proto.CompactTextString(m) }
func (*ResourceReq) ProtoMessage()    {}
func (*ResourceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{44}
}
func (m *ResourceReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceReq.Merge(m, src)
}
func (m *ResourceReq) XXX_Size() int {
	return m.Size()
}
func (m *ResourceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceReq proto.InternalMessageInfo

func (m *ResourceReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *ResourceReq) GetParams() *ResourceParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *ResourceReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type ResourceParams struct {
	// 偏移量
	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 话题模式-偏移量
	TopicOffset string `protobuf:"bytes,2,opt,name=topic_offset,json=topicOffset,proto3" json:"topic_offset,omitempty"`
	// 组件id
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 排序类型
	SortType             int64    `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceParams) Reset()         { *m = ResourceParams{} }
func (m *ResourceParams) String() string { return proto.CompactTextString(m) }
func (*ResourceParams) ProtoMessage()    {}
func (*ResourceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{45}
}
func (m *ResourceParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceParams.Merge(m, src)
}
func (m *ResourceParams) XXX_Size() int {
	return m.Size()
}
func (m *ResourceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceParams.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceParams proto.InternalMessageInfo

func (m *ResourceParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ResourceParams) GetTopicOffset() string {
	if m != nil {
		return m.TopicOffset
	}
	return ""
}

func (m *ResourceParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *ResourceParams) GetSortType() int64 {
	if m != nil {
		return m.SortType
	}
	return 0
}

type ResourceResp struct {
	// 资源小卡组件
	Module               *Module  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceResp) Reset()         { *m = ResourceResp{} }
func (m *ResourceResp) String() string { return proto.CompactTextString(m) }
func (*ResourceResp) ProtoMessage()    {}
func (*ResourceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{46}
}
func (m *ResourceResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceResp.Merge(m, src)
}
func (m *ResourceResp) XXX_Size() int {
	return m.Size()
}
func (m *ResourceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceResp proto.InternalMessageInfo

func (m *ResourceResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type VideoCard struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	// 封面左1文案
	CoverLeftText1 string `protobuf:"bytes,3,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	// 封面左2文案
	CoverLeftText2 string `protobuf:"bytes,4,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	// 封面左3文案
	CoverLeftText3 string `protobuf:"bytes,5,opt,name=cover_left_text3,json=coverLeftText3,proto3" json:"cover_left_text3,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
	// 权益
	Rights *VideoRights `protobuf:"bytes,8,opt,name=rights,proto3" json:"rights,omitempty"`
	// 秒开使用分p的分辨率
	Dimension *PlayerDimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,10,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoCard) Reset()         { *m = VideoCard{} }
func (m *VideoCard) String() string { return proto.CompactTextString(m) }
func (*VideoCard) ProtoMessage()    {}
func (*VideoCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{47}
}
func (m *VideoCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoCard.Merge(m, src)
}
func (m *VideoCard) XXX_Size() int {
	return m.Size()
}
func (m *VideoCard) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoCard.DiscardUnknown(m)
}

var xxx_messageInfo_VideoCard proto.InternalMessageInfo

func (m *VideoCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *VideoCard) GetCoverImageUri() string {
	if m != nil {
		return m.CoverImageUri
	}
	return ""
}

func (m *VideoCard) GetCoverLeftText1() string {
	if m != nil {
		return m.CoverLeftText1
	}
	return ""
}

func (m *VideoCard) GetCoverLeftText2() string {
	if m != nil {
		return m.CoverLeftText2
	}
	return ""
}

func (m *VideoCard) GetCoverLeftText3() string {
	if m != nil {
		return m.CoverLeftText3
	}
	return ""
}

func (m *VideoCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *VideoCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *VideoCard) GetRights() *VideoRights {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *VideoCard) GetDimension() *PlayerDimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *VideoCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *VideoCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type VideoRights struct {
	// 是否UGC付费
	UgcPay bool `protobuf:"varint,1,opt,name=ugc_pay,json=ugcPay,proto3" json:"ugc_pay,omitempty"`
	// 是否联合投稿
	IsCooperation bool `protobuf:"varint,2,opt,name=is_cooperation,json=isCooperation,proto3" json:"is_cooperation,omitempty"`
	// 是否是PGC
	IsPgc                bool     `protobuf:"varint,3,opt,name=is_pgc,json=isPgc,proto3" json:"is_pgc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoRights) Reset()         { *m = VideoRights{} }
func (m *VideoRights) String() string { return proto.CompactTextString(m) }
func (*VideoRights) ProtoMessage()    {}
func (*VideoRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{48}
}
func (m *VideoRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRights.Merge(m, src)
}
func (m *VideoRights) XXX_Size() int {
	return m.Size()
}
func (m *VideoRights) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRights.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRights proto.InternalMessageInfo

func (m *VideoRights) GetUgcPay() bool {
	if m != nil {
		return m.UgcPay
	}
	return false
}

func (m *VideoRights) GetIsCooperation() bool {
	if m != nil {
		return m.IsCooperation
	}
	return false
}

func (m *VideoRights) GetIsPgc() bool {
	if m != nil {
		return m.IsPgc
	}
	return false
}

type PlayerDimension struct {
	// 宽 如 1920
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 高 如 1080
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 是否翻转
	Rotate               bool     `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDimension) Reset()         { *m = PlayerDimension{} }
func (m *PlayerDimension) String() string { return proto.CompactTextString(m) }
func (*PlayerDimension) ProtoMessage()    {}
func (*PlayerDimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{49}
}
func (m *PlayerDimension) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerDimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerDimension.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerDimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDimension.Merge(m, src)
}
func (m *PlayerDimension) XXX_Size() int {
	return m.Size()
}
func (m *PlayerDimension) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDimension.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDimension proto.InternalMessageInfo

func (m *PlayerDimension) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PlayerDimension) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PlayerDimension) GetRotate() bool {
	if m != nil {
		return m.Rotate
	}
	return false
}

type VideoMoreCard struct {
	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 二级列表附加数据
	SubpageData          *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VideoMoreCard) Reset()         { *m = VideoMoreCard{} }
func (m *VideoMoreCard) String() string { return proto.CompactTextString(m) }
func (*VideoMoreCard) ProtoMessage()    {}
func (*VideoMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{50}
}
func (m *VideoMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMoreCard.Merge(m, src)
}
func (m *VideoMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *VideoMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMoreCard proto.InternalMessageInfo

func (m *VideoMoreCard) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *VideoMoreCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *VideoMoreCard) GetSubpageData() *SubpageData {
	if m != nil {
		return m.SubpageData
	}
	return nil
}

type VideoReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *VideoParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoReq) Reset()         { *m = VideoReq{} }
func (m *VideoReq) String() string { return proto.CompactTextString(m) }
func (*VideoReq) ProtoMessage()    {}
func (*VideoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{51}
}
func (m *VideoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoReq.Merge(m, src)
}
func (m *VideoReq) XXX_Size() int {
	return m.Size()
}
func (m *VideoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoReq.DiscardUnknown(m)
}

var xxx_messageInfo_VideoReq proto.InternalMessageInfo

func (m *VideoReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *VideoReq) GetParams() *VideoParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *VideoReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type VideoParams struct {
	// 偏移量
	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 话题模式-偏移量
	TopicOffset string `protobuf:"bytes,2,opt,name=topic_offset,json=topicOffset,proto3" json:"topic_offset,omitempty"`
	// 组件id
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 排序类型
	SortType             int64    `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoParams) Reset()         { *m = VideoParams{} }
func (m *VideoParams) String() string { return proto.CompactTextString(m) }
func (*VideoParams) ProtoMessage()    {}
func (*VideoParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{52}
}
func (m *VideoParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoParams.Merge(m, src)
}
func (m *VideoParams) XXX_Size() int {
	return m.Size()
}
func (m *VideoParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoParams.DiscardUnknown(m)
}

var xxx_messageInfo_VideoParams proto.InternalMessageInfo

func (m *VideoParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *VideoParams) GetTopicOffset() string {
	if m != nil {
		return m.TopicOffset
	}
	return ""
}

func (m *VideoParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *VideoParams) GetSortType() int64 {
	if m != nil {
		return m.SortType
	}
	return 0
}

type VideoResp struct {
	// 资源小卡组件
	Module               *Module  `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoResp) Reset()         { *m = VideoResp{} }
func (m *VideoResp) String() string { return proto.CompactTextString(m) }
func (*VideoResp) ProtoMessage()    {}
func (*VideoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{53}
}
func (m *VideoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoResp.Merge(m, src)
}
func (m *VideoResp) XXX_Size() int {
	return m.Size()
}
func (m *VideoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoResp.DiscardUnknown(m)
}

var xxx_messageInfo_VideoResp proto.InternalMessageInfo

func (m *VideoResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type RcmdCard struct {
	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	// 推荐理由
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	// 是否已关注
	IsFollowed bool `protobuf:"varint,6,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	// 官方认证状态
	Official *OfficialInfo `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// Vip信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// 排行图标
	RankIcon string `protobuf:"bytes,9,opt,name=rank_icon,json=rankIcon,proto3" json:"rank_icon,omitempty"`
	// 目标链接类型
	RedirectType         RedirectType `protobuf:"varint,10,opt,name=redirect_type,json=redirectType,proto3,enum=bilibili.app.nativeact.v1.RedirectType" json:"redirect_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RcmdCard) Reset()         { *m = RcmdCard{} }
func (m *RcmdCard) String() string { return proto.CompactTextString(m) }
func (*RcmdCard) ProtoMessage()    {}
func (*RcmdCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{54}
}
func (m *RcmdCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdCard.Merge(m, src)
}
func (m *RcmdCard) XXX_Size() int {
	return m.Size()
}
func (m *RcmdCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdCard.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdCard proto.InternalMessageInfo

func (m *RcmdCard) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *RcmdCard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RcmdCard) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *RcmdCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *RcmdCard) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *RcmdCard) GetIsFollowed() bool {
	if m != nil {
		return m.IsFollowed
	}
	return false
}

func (m *RcmdCard) GetOfficial() *OfficialInfo {
	if m != nil {
		return m.Official
	}
	return nil
}

func (m *RcmdCard) GetVip() *VipInfo {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *RcmdCard) GetRankIcon() string {
	if m != nil {
		return m.RankIcon
	}
	return ""
}

func (m *RcmdCard) GetRedirectType() RedirectType {
	if m != nil {
		return m.RedirectType
	}
	return RedirectType_RtTypeDefault
}

type RcmdVerticalCard struct {
	Items                []*RcmdCard `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RcmdVerticalCard) Reset()         { *m = RcmdVerticalCard{} }
func (m *RcmdVerticalCard) String() string { return proto.CompactTextString(m) }
func (*RcmdVerticalCard) ProtoMessage()    {}
func (*RcmdVerticalCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{55}
}
func (m *RcmdVerticalCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdVerticalCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdVerticalCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdVerticalCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdVerticalCard.Merge(m, src)
}
func (m *RcmdVerticalCard) XXX_Size() int {
	return m.Size()
}
func (m *RcmdVerticalCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdVerticalCard.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdVerticalCard proto.InternalMessageInfo

func (m *RcmdVerticalCard) GetItems() []*RcmdCard {
	if m != nil {
		return m.Items
	}
	return nil
}

type RelativeactCard struct {
	// 封面图
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelativeactCard) Reset()         { *m = RelativeactCard{} }
func (m *RelativeactCard) String() string { return proto.CompactTextString(m) }
func (*RelativeactCard) ProtoMessage()    {}
func (*RelativeactCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{56}
}
func (m *RelativeactCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelativeactCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelativeactCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RelativeactCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelativeactCard.Merge(m, src)
}
func (m *RelativeactCard) XXX_Size() int {
	return m.Size()
}
func (m *RelativeactCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RelativeactCard.DiscardUnknown(m)
}

var xxx_messageInfo_RelativeactCard proto.InternalMessageInfo

func (m *RelativeactCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *RelativeactCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RelativeactCard) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *RelativeactCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type RelativeactCapsuleCard struct {
	// 文字标题
	Title string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	// 活动列表
	Items                []*RelativeactCapsuleItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RelativeactCapsuleCard) Reset()         { *m = RelativeactCapsuleCard{} }
func (m *RelativeactCapsuleCard) String() string { return proto.CompactTextString(m) }
func (*RelativeactCapsuleCard) ProtoMessage()    {}
func (*RelativeactCapsuleCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{57}
}
func (m *RelativeactCapsuleCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelativeactCapsuleCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelativeactCapsuleCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RelativeactCapsuleCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelativeactCapsuleCard.Merge(m, src)
}
func (m *RelativeactCapsuleCard) XXX_Size() int {
	return m.Size()
}
func (m *RelativeactCapsuleCard) XXX_DiscardUnknown() {
	xxx_messageInfo_RelativeactCapsuleCard.DiscardUnknown(m)
}

var xxx_messageInfo_RelativeactCapsuleCard proto.InternalMessageInfo

func (m *RelativeactCapsuleCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RelativeactCapsuleCard) GetItems() []*RelativeactCapsuleItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type RelativeactCapsuleItem struct {
	// 活动页id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelativeactCapsuleItem) Reset()         { *m = RelativeactCapsuleItem{} }
func (m *RelativeactCapsuleItem) String() string { return proto.CompactTextString(m) }
func (*RelativeactCapsuleItem) ProtoMessage()    {}
func (*RelativeactCapsuleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{58}
}
func (m *RelativeactCapsuleItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RelativeactCapsuleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RelativeactCapsuleItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RelativeactCapsuleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelativeactCapsuleItem.Merge(m, src)
}
func (m *RelativeactCapsuleItem) XXX_Size() int {
	return m.Size()
}
func (m *RelativeactCapsuleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RelativeactCapsuleItem.DiscardUnknown(m)
}

var xxx_messageInfo_RelativeactCapsuleItem proto.InternalMessageInfo

func (m *RelativeactCapsuleItem) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *RelativeactCapsuleItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RelativeactCapsuleItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type StatementCard struct {
	// 文本内容
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatementCard) Reset()         { *m = StatementCard{} }
func (m *StatementCard) String() string { return proto.CompactTextString(m) }
func (*StatementCard) ProtoMessage()    {}
func (*StatementCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{59}
}
func (m *StatementCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatementCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StatementCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StatementCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatementCard.Merge(m, src)
}
func (m *StatementCard) XXX_Size() int {
	return m.Size()
}
func (m *StatementCard) XXX_DiscardUnknown() {
	xxx_messageInfo_StatementCard.DiscardUnknown(m)
}

var xxx_messageInfo_StatementCard proto.InternalMessageInfo

func (m *StatementCard) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type IconCard struct {
	// 图标列表
	Items                []*IconItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IconCard) Reset()         { *m = IconCard{} }
func (m *IconCard) String() string { return proto.CompactTextString(m) }
func (*IconCard) ProtoMessage()    {}
func (*IconCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{60}
}
func (m *IconCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IconCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IconCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IconCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconCard.Merge(m, src)
}
func (m *IconCard) XXX_Size() int {
	return m.Size()
}
func (m *IconCard) XXX_DiscardUnknown() {
	xxx_messageInfo_IconCard.DiscardUnknown(m)
}

var xxx_messageInfo_IconCard proto.InternalMessageInfo

func (m *IconCard) GetItems() []*IconItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type IconItem struct {
	// 图标名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 图片
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IconItem) Reset()         { *m = IconItem{} }
func (m *IconItem) String() string { return proto.CompactTextString(m) }
func (*IconItem) ProtoMessage()    {}
func (*IconItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{61}
}
func (m *IconItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IconItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IconItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IconItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconItem.Merge(m, src)
}
func (m *IconItem) XXX_Size() int {
	return m.Size()
}
func (m *IconItem) XXX_DiscardUnknown() {
	xxx_messageInfo_IconItem.DiscardUnknown(m)
}

var xxx_messageInfo_IconItem proto.InternalMessageInfo

func (m *IconItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *IconItem) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *IconItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// 弹框
type MessageBox struct {
	// 提示消息
	AlertMsg string `protobuf:"bytes,1,opt,name=alert_msg,json=alertMsg,proto3" json:"alert_msg,omitempty"`
	// 确认按钮内容
	ConfirmButtonText string `protobuf:"bytes,2,opt,name=confirm_button_text,json=confirmButtonText,proto3" json:"confirm_button_text,omitempty"`
	// 取消按钮内容
	CancelButtonText string `protobuf:"bytes,3,opt,name=cancel_button_text,json=cancelButtonText,proto3" json:"cancel_button_text,omitempty"`
	// 确认消息
	ConfirmMsg string `protobuf:"bytes,4,opt,name=confirm_msg,json=confirmMsg,proto3" json:"confirm_msg,omitempty"`
	// 取消消息
	CancelMsg string `protobuf:"bytes,5,opt,name=cancel_msg,json=cancelMsg,proto3" json:"cancel_msg,omitempty"`
	// 类型
	Type                 MessageBoxType `protobuf:"varint,6,opt,name=type,proto3,enum=bilibili.app.nativeact.v1.MessageBoxType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MessageBox) Reset()         { *m = MessageBox{} }
func (m *MessageBox) String() string { return proto.CompactTextString(m) }
func (*MessageBox) ProtoMessage()    {}
func (*MessageBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{62}
}
func (m *MessageBox) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessageBox.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessageBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageBox.Merge(m, src)
}
func (m *MessageBox) XXX_Size() int {
	return m.Size()
}
func (m *MessageBox) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageBox.DiscardUnknown(m)
}

var xxx_messageInfo_MessageBox proto.InternalMessageInfo

func (m *MessageBox) GetAlertMsg() string {
	if m != nil {
		return m.AlertMsg
	}
	return ""
}

func (m *MessageBox) GetConfirmButtonText() string {
	if m != nil {
		return m.ConfirmButtonText
	}
	return ""
}

func (m *MessageBox) GetCancelButtonText() string {
	if m != nil {
		return m.CancelButtonText
	}
	return ""
}

func (m *MessageBox) GetConfirmMsg() string {
	if m != nil {
		return m.ConfirmMsg
	}
	return ""
}

func (m *MessageBox) GetCancelMsg() string {
	if m != nil {
		return m.CancelMsg
	}
	return ""
}

func (m *MessageBox) GetType() MessageBoxType {
	if m != nil {
		return m.Type
	}
	return MessageBoxType_Dialog
}

// 区域
type Area struct {
	// 区域高
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// 区域宽
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	// 区域偏移x
	X int64 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	// 区域偏移y
	Y int64 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	// 区域ukey
	Ukey                 string   `protobuf:"bytes,5,opt,name=ukey,proto3" json:"ukey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Area) Reset()         { *m = Area{} }
func (m *Area) String() string { return proto.CompactTextString(m) }
func (*Area) ProtoMessage()    {}
func (*Area) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{63}
}
func (m *Area) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Area) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Area.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Area) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Area.Merge(m, src)
}
func (m *Area) XXX_Size() int {
	return m.Size()
}
func (m *Area) XXX_DiscardUnknown() {
	xxx_messageInfo_Area.DiscardUnknown(m)
}

var xxx_messageInfo_Area proto.InternalMessageInfo

func (m *Area) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Area) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Area) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Area) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Area) GetUkey() string {
	if m != nil {
		return m.Ukey
	}
	return ""
}

type VoteCard struct {
	// 背景图
	BgImage *SizeImage `protobuf:"bytes,1,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	// 投票选项数
	OptionNum int64 `protobuf:"varint,2,opt,name=option_num,json=optionNum,proto3" json:"option_num,omitempty"`
	// 投票按钮
	Buttons []*VoteButton `protobuf:"bytes,3,rep,name=buttons,proto3" json:"buttons,omitempty"`
	// 剩余票数
	LeftNum *VoteNum `protobuf:"bytes,4,opt,name=left_num,json=leftNum,proto3" json:"left_num,omitempty"`
	// 进度条
	Progress             *VoteProgress `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VoteCard) Reset()         { *m = VoteCard{} }
func (m *VoteCard) String() string { return proto.CompactTextString(m) }
func (*VoteCard) ProtoMessage()    {}
func (*VoteCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{64}
}
func (m *VoteCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteCard.Merge(m, src)
}
func (m *VoteCard) XXX_Size() int {
	return m.Size()
}
func (m *VoteCard) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteCard.DiscardUnknown(m)
}

var xxx_messageInfo_VoteCard proto.InternalMessageInfo

func (m *VoteCard) GetBgImage() *SizeImage {
	if m != nil {
		return m.BgImage
	}
	return nil
}

func (m *VoteCard) GetOptionNum() int64 {
	if m != nil {
		return m.OptionNum
	}
	return 0
}

func (m *VoteCard) GetButtons() []*VoteButton {
	if m != nil {
		return m.Buttons
	}
	return nil
}

func (m *VoteCard) GetLeftNum() *VoteNum {
	if m != nil {
		return m.LeftNum
	}
	return nil
}

func (m *VoteCard) GetProgress() *VoteProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

type VoteButton struct {
	// 区域
	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// 完成态图片
	DoneImage string `protobuf:"bytes,2,opt,name=done_image,json=doneImage,proto3" json:"done_image,omitempty"`
	// 未完成态图片
	UndoneImage string `protobuf:"bytes,3,opt,name=undone_image,json=undoneImage,proto3" json:"undone_image,omitempty"`
	// 是否已投票
	HasVoted bool `protobuf:"varint,4,opt,name=has_voted,json=hasVoted,proto3" json:"has_voted,omitempty"`
	// 弹框
	MessageBox *MessageBox `protobuf:"bytes,5,opt,name=message_box,json=messageBox,proto3" json:"message_box,omitempty"`
	// 点击操作透传参数
	VoteParams string `protobuf:"bytes,6,opt,name=vote_params,json=voteParams,proto3" json:"vote_params,omitempty"`
	// 数据源稿件ID
	SourceItemId         int64    `protobuf:"varint,7,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteButton) Reset()         { *m = VoteButton{} }
func (m *VoteButton) String() string { return proto.CompactTextString(m) }
func (*VoteButton) ProtoMessage()    {}
func (*VoteButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{65}
}
func (m *VoteButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteButton.Merge(m, src)
}
func (m *VoteButton) XXX_Size() int {
	return m.Size()
}
func (m *VoteButton) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteButton.DiscardUnknown(m)
}

var xxx_messageInfo_VoteButton proto.InternalMessageInfo

func (m *VoteButton) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *VoteButton) GetDoneImage() string {
	if m != nil {
		return m.DoneImage
	}
	return ""
}

func (m *VoteButton) GetUndoneImage() string {
	if m != nil {
		return m.UndoneImage
	}
	return ""
}

func (m *VoteButton) GetHasVoted() bool {
	if m != nil {
		return m.HasVoted
	}
	return false
}

func (m *VoteButton) GetMessageBox() *MessageBox {
	if m != nil {
		return m.MessageBox
	}
	return nil
}

func (m *VoteButton) GetVoteParams() string {
	if m != nil {
		return m.VoteParams
	}
	return ""
}

func (m *VoteButton) GetSourceItemId() int64 {
	if m != nil {
		return m.SourceItemId
	}
	return 0
}

type VoteNum struct {
	// 区域
	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// 票数
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteNum) Reset()         { *m = VoteNum{} }
func (m *VoteNum) String() string { return proto.CompactTextString(m) }
func (*VoteNum) ProtoMessage()    {}
func (*VoteNum) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{66}
}
func (m *VoteNum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteNum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteNum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteNum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteNum.Merge(m, src)
}
func (m *VoteNum) XXX_Size() int {
	return m.Size()
}
func (m *VoteNum) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteNum.DiscardUnknown(m)
}

var xxx_messageInfo_VoteNum proto.InternalMessageInfo

func (m *VoteNum) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *VoteNum) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type VoteProgress struct {
	// 区域
	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	// 进度条样式
	Style                VoteProgressStyle                `protobuf:"varint,2,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.VoteProgressStyle" json:"style,omitempty"`
	Items                []*VoteProgress_VoteProgressItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *VoteProgress) Reset()         { *m = VoteProgress{} }
func (m *VoteProgress) String() string { return proto.CompactTextString(m) }
func (*VoteProgress) ProtoMessage()    {}
func (*VoteProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{67}
}
func (m *VoteProgress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteProgress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteProgress.Merge(m, src)
}
func (m *VoteProgress) XXX_Size() int {
	return m.Size()
}
func (m *VoteProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteProgress.DiscardUnknown(m)
}

var xxx_messageInfo_VoteProgress proto.InternalMessageInfo

func (m *VoteProgress) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *VoteProgress) GetStyle() VoteProgressStyle {
	if m != nil {
		return m.Style
	}
	return VoteProgressStyle_VPStyleDefault
}

func (m *VoteProgress) GetItems() []*VoteProgress_VoteProgressItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type VoteProgress_VoteProgressItem struct {
	// 进度条颜色
	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	// 票数
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 数据源稿件ID
	SourceItemId         int64    `protobuf:"varint,3,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteProgress_VoteProgressItem) Reset()         { *m = VoteProgress_VoteProgressItem{} }
func (m *VoteProgress_VoteProgressItem) String() string { return proto.CompactTextString(m) }
func (*VoteProgress_VoteProgressItem) ProtoMessage()    {}
func (*VoteProgress_VoteProgressItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{67, 0}
}
func (m *VoteProgress_VoteProgressItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteProgress_VoteProgressItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteProgress_VoteProgressItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteProgress_VoteProgressItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteProgress_VoteProgressItem.Merge(m, src)
}
func (m *VoteProgress_VoteProgressItem) XXX_Size() int {
	return m.Size()
}
func (m *VoteProgress_VoteProgressItem) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteProgress_VoteProgressItem.DiscardUnknown(m)
}

var xxx_messageInfo_VoteProgress_VoteProgressItem proto.InternalMessageInfo

func (m *VoteProgress_VoteProgressItem) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *VoteProgress_VoteProgressItem) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *VoteProgress_VoteProgressItem) GetSourceItemId() int64 {
	if m != nil {
		return m.SourceItemId
	}
	return 0
}

type VoteReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params               *VoteParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VoteReq) Reset()         { *m = VoteReq{} }
func (m *VoteReq) String() string { return proto.CompactTextString(m) }
func (*VoteReq) ProtoMessage()    {}
func (*VoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{68}
}
func (m *VoteReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteReq.Merge(m, src)
}
func (m *VoteReq) XXX_Size() int {
	return m.Size()
}
func (m *VoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_VoteReq proto.InternalMessageInfo

func (m *VoteReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *VoteReq) GetParams() *VoteParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type VoteResp struct {
	// 点击操作透传参数
	VoteParams string `protobuf:"bytes,1,opt,name=vote_params,json=voteParams,proto3" json:"vote_params,omitempty"`
	// 用户当前剩余总投票数
	LeftNum int64 `protobuf:"varint,2,opt,name=left_num,json=leftNum,proto3" json:"left_num,omitempty"`
	// 本用户当前对此稿件可投的票数, 为0时此稿件显示已投票
	CanVoteNum           int64    `protobuf:"varint,3,opt,name=can_vote_num,json=canVoteNum,proto3" json:"can_vote_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResp) Reset()         { *m = VoteResp{} }
func (m *VoteResp) String() string { return proto.CompactTextString(m) }
func (*VoteResp) ProtoMessage()    {}
func (*VoteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{69}
}
func (m *VoteResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResp.Merge(m, src)
}
func (m *VoteResp) XXX_Size() int {
	return m.Size()
}
func (m *VoteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResp.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResp proto.InternalMessageInfo

func (m *VoteResp) GetVoteParams() string {
	if m != nil {
		return m.VoteParams
	}
	return ""
}

func (m *VoteResp) GetLeftNum() int64 {
	if m != nil {
		return m.LeftNum
	}
	return 0
}

func (m *VoteResp) GetCanVoteNum() int64 {
	if m != nil {
		return m.CanVoteNum
	}
	return 0
}

type VoteParams struct {
	// 操作
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ActionType" json:"action,omitempty"`
	// 数据源id
	Sid int64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	// 数据组id
	Gid int64 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	// 数据源稿件ID
	SourceItemId int64 `protobuf:"varint,4,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	// 数据源类型
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteParams) Reset()         { *m = VoteParams{} }
func (m *VoteParams) String() string { return proto.CompactTextString(m) }
func (*VoteParams) ProtoMessage()    {}
func (*VoteParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{70}
}
func (m *VoteParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteParams.Merge(m, src)
}
func (m *VoteParams) XXX_Size() int {
	return m.Size()
}
func (m *VoteParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteParams.DiscardUnknown(m)
}

var xxx_messageInfo_VoteParams proto.InternalMessageInfo

func (m *VoteParams) GetAction() ActionType {
	if m != nil {
		return m.Action
	}
	return ActionType_Default
}

func (m *VoteParams) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *VoteParams) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *VoteParams) GetSourceItemId() int64 {
	if m != nil {
		return m.SourceItemId
	}
	return 0
}

func (m *VoteParams) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ReserveCard struct {
	// UP主预约id
	Sid int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 预约标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 预约内容
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	// 预约数
	Num int64 `protobuf:"varint,8,opt,name=num,proto3" json:"num,omitempty"`
	// 预约副标题
	Subtitle string `protobuf:"bytes,9,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 预约按钮数据
	Button *ReserveButton `protobuf:"bytes,10,opt,name=button,proto3" json:"button,omitempty"`
	// 是否隐藏预约数
	HideReserveNum       bool     `protobuf:"varint,11,opt,name=hide_reserve_num,json=hideReserveNum,proto3" json:"hide_reserve_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveCard) Reset()         { *m = ReserveCard{} }
func (m *ReserveCard) String() string { return proto.CompactTextString(m) }
func (*ReserveCard) ProtoMessage()    {}
func (*ReserveCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{71}
}
func (m *ReserveCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveCard.Merge(m, src)
}
func (m *ReserveCard) XXX_Size() int {
	return m.Size()
}
func (m *ReserveCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveCard.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveCard proto.InternalMessageInfo

func (m *ReserveCard) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *ReserveCard) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *ReserveCard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReserveCard) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *ReserveCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ReserveCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReserveCard) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ReserveCard) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ReserveCard) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *ReserveCard) GetButton() *ReserveButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *ReserveCard) GetHideReserveNum() bool {
	if m != nil {
		return m.HideReserveNum
	}
	return false
}

type ReserveButton struct {
	// 按钮行为
	Goto ReserveGoto `protobuf:"varint,1,opt,name=goto,proto3,enum=bilibili.app.nativeact.v1.ReserveGoto" json:"goto,omitempty"`
	// 弹框
	MessageBox *MessageBox `protobuf:"bytes,2,opt,name=message_box,json=messageBox,proto3" json:"message_box,omitempty"`
	// 预约透传参数
	ReserveParams string `protobuf:"bytes,3,opt,name=reserve_params,json=reserveParams,proto3" json:"reserve_params,omitempty"`
	// 是否完成
	HasDone bool `protobuf:"varint,4,opt,name=has_done,json=hasDone,proto3" json:"has_done,omitempty"`
	// 完成态文案
	DoneText string `protobuf:"bytes,5,opt,name=done_text,json=doneText,proto3" json:"done_text,omitempty"`
	// 未完成态文案
	UndoneText string `protobuf:"bytes,6,opt,name=undone_text,json=undoneText,proto3" json:"undone_text,omitempty"`
	// icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 直播IsHighlight
	IsHighlight bool `protobuf:"varint,8,opt,name=is_highlight,json=isHighlight,proto3" json:"is_highlight,omitempty"`
	// 跳转链接
	Url                  string   `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveButton) Reset()         { *m = ReserveButton{} }
func (m *ReserveButton) String() string { return proto.CompactTextString(m) }
func (*ReserveButton) ProtoMessage()    {}
func (*ReserveButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{72}
}
func (m *ReserveButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveButton.Merge(m, src)
}
func (m *ReserveButton) XXX_Size() int {
	return m.Size()
}
func (m *ReserveButton) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveButton.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveButton proto.InternalMessageInfo

func (m *ReserveButton) GetGoto() ReserveGoto {
	if m != nil {
		return m.Goto
	}
	return ReserveGoto_Reserve
}

func (m *ReserveButton) GetMessageBox() *MessageBox {
	if m != nil {
		return m.MessageBox
	}
	return nil
}

func (m *ReserveButton) GetReserveParams() string {
	if m != nil {
		return m.ReserveParams
	}
	return ""
}

func (m *ReserveButton) GetHasDone() bool {
	if m != nil {
		return m.HasDone
	}
	return false
}

func (m *ReserveButton) GetDoneText() string {
	if m != nil {
		return m.DoneText
	}
	return ""
}

func (m *ReserveButton) GetUndoneText() string {
	if m != nil {
		return m.UndoneText
	}
	return ""
}

func (m *ReserveButton) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ReserveButton) GetIsHighlight() bool {
	if m != nil {
		return m.IsHighlight
	}
	return false
}

func (m *ReserveButton) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ReserveReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params               *ReserveParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReserveReq) Reset()         { *m = ReserveReq{} }
func (m *ReserveReq) String() string { return proto.CompactTextString(m) }
func (*ReserveReq) ProtoMessage()    {}
func (*ReserveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{73}
}
func (m *ReserveReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveReq.Merge(m, src)
}
func (m *ReserveReq) XXX_Size() int {
	return m.Size()
}
func (m *ReserveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveReq proto.InternalMessageInfo

func (m *ReserveReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *ReserveReq) GetParams() *ReserveParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type ReserveParams struct {
	// 操作
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ActionType" json:"action,omitempty"`
	// UP主预约id
	Sid                  int64    `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveParams) Reset()         { *m = ReserveParams{} }
func (m *ReserveParams) String() string { return proto.CompactTextString(m) }
func (*ReserveParams) ProtoMessage()    {}
func (*ReserveParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{74}
}
func (m *ReserveParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveParams.Merge(m, src)
}
func (m *ReserveParams) XXX_Size() int {
	return m.Size()
}
func (m *ReserveParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveParams proto.InternalMessageInfo

func (m *ReserveParams) GetAction() ActionType {
	if m != nil {
		return m.Action
	}
	return ActionType_Default
}

func (m *ReserveParams) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

type ReserveRly struct {
	// 预约透传参数
	ReserveParams        string   `protobuf:"bytes,1,opt,name=reserve_params,json=reserveParams,proto3" json:"reserve_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveRly) Reset()         { *m = ReserveRly{} }
func (m *ReserveRly) String() string { return proto.CompactTextString(m) }
func (*ReserveRly) ProtoMessage()    {}
func (*ReserveRly) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{75}
}
func (m *ReserveRly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReserveRly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReserveRly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReserveRly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveRly.Merge(m, src)
}
func (m *ReserveRly) XXX_Size() int {
	return m.Size()
}
func (m *ReserveRly) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveRly.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveRly proto.InternalMessageInfo

func (m *ReserveRly) GetReserveParams() string {
	if m != nil {
		return m.ReserveParams
	}
	return ""
}

type TimelineHeadCard struct {
	// 阶段名
	Stage                string   `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineHeadCard) Reset()         { *m = TimelineHeadCard{} }
func (m *TimelineHeadCard) String() string { return proto.CompactTextString(m) }
func (*TimelineHeadCard) ProtoMessage()    {}
func (*TimelineHeadCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{76}
}
func (m *TimelineHeadCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineHeadCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineHeadCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineHeadCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineHeadCard.Merge(m, src)
}
func (m *TimelineHeadCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineHeadCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineHeadCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineHeadCard proto.InternalMessageInfo

func (m *TimelineHeadCard) GetStage() string {
	if m != nil {
		return m.Stage
	}
	return ""
}

type TimelineEventTextCard struct {
	// 主标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 正文
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineEventTextCard) Reset()         { *m = TimelineEventTextCard{} }
func (m *TimelineEventTextCard) String() string { return proto.CompactTextString(m) }
func (*TimelineEventTextCard) ProtoMessage()    {}
func (*TimelineEventTextCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{77}
}
func (m *TimelineEventTextCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineEventTextCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineEventTextCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineEventTextCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineEventTextCard.Merge(m, src)
}
func (m *TimelineEventTextCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineEventTextCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineEventTextCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineEventTextCard proto.InternalMessageInfo

func (m *TimelineEventTextCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineEventTextCard) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *TimelineEventTextCard) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TimelineEventTextCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type TimelineEventImageCard struct {
	// 图片
	Image *SizeImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 主标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineEventImageCard) Reset()         { *m = TimelineEventImageCard{} }
func (m *TimelineEventImageCard) String() string { return proto.CompactTextString(m) }
func (*TimelineEventImageCard) ProtoMessage()    {}
func (*TimelineEventImageCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{78}
}
func (m *TimelineEventImageCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineEventImageCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineEventImageCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineEventImageCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineEventImageCard.Merge(m, src)
}
func (m *TimelineEventImageCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineEventImageCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineEventImageCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineEventImageCard proto.InternalMessageInfo

func (m *TimelineEventImageCard) GetImage() *SizeImage {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *TimelineEventImageCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineEventImageCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type TimelineEventImagetextCard struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 正文
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// 图片
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineEventImagetextCard) Reset()         { *m = TimelineEventImagetextCard{} }
func (m *TimelineEventImagetextCard) String() string { return proto.CompactTextString(m) }
func (*TimelineEventImagetextCard) ProtoMessage()    {}
func (*TimelineEventImagetextCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{79}
}
func (m *TimelineEventImagetextCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineEventImagetextCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineEventImagetextCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineEventImagetextCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineEventImagetextCard.Merge(m, src)
}
func (m *TimelineEventImagetextCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineEventImagetextCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineEventImagetextCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineEventImagetextCard proto.InternalMessageInfo

func (m *TimelineEventImagetextCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineEventImagetextCard) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *TimelineEventImagetextCard) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TimelineEventImagetextCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *TimelineEventImagetextCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type TimelineEventResourceCard struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 属性展示：位置1
	Position1 string `protobuf:"bytes,4,opt,name=position1,proto3" json:"position1,omitempty"`
	// 属性展示：位置2
	Position2 string `protobuf:"bytes,5,opt,name=position2,proto3" json:"position2,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,7,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,8,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineEventResourceCard) Reset()         { *m = TimelineEventResourceCard{} }
func (m *TimelineEventResourceCard) String() string { return proto.CompactTextString(m) }
func (*TimelineEventResourceCard) ProtoMessage()    {}
func (*TimelineEventResourceCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{80}
}
func (m *TimelineEventResourceCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineEventResourceCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineEventResourceCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineEventResourceCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineEventResourceCard.Merge(m, src)
}
func (m *TimelineEventResourceCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineEventResourceCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineEventResourceCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineEventResourceCard proto.InternalMessageInfo

func (m *TimelineEventResourceCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TimelineEventResourceCard) GetCoverImageUri() string {
	if m != nil {
		return m.CoverImageUri
	}
	return ""
}

func (m *TimelineEventResourceCard) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *TimelineEventResourceCard) GetPosition1() string {
	if m != nil {
		return m.Position1
	}
	return ""
}

func (m *TimelineEventResourceCard) GetPosition2() string {
	if m != nil {
		return m.Position2
	}
	return ""
}

func (m *TimelineEventResourceCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *TimelineEventResourceCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *TimelineEventResourceCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type TimelineMoreCard struct {
	// 按钮文本
	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 浮层标题
	SupernatantTitle string `protobuf:"bytes,2,opt,name=supernatant_title,json=supernatantTitle,proto3" json:"supernatant_title,omitempty"`
	// 点击透传参数
	Params               string   `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineMoreCard) Reset()         { *m = TimelineMoreCard{} }
func (m *TimelineMoreCard) String() string { return proto.CompactTextString(m) }
func (*TimelineMoreCard) ProtoMessage()    {}
func (*TimelineMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{81}
}
func (m *TimelineMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineMoreCard.Merge(m, src)
}
func (m *TimelineMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineMoreCard proto.InternalMessageInfo

func (m *TimelineMoreCard) GetButtonText() string {
	if m != nil {
		return m.ButtonText
	}
	return ""
}

func (m *TimelineMoreCard) GetSupernatantTitle() string {
	if m != nil {
		return m.SupernatantTitle
	}
	return ""
}

func (m *TimelineMoreCard) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

type TimelineUnfoldCard struct {
	// 展开文案
	UnfoldText string `protobuf:"bytes,1,opt,name=unfold_text,json=unfoldText,proto3" json:"unfold_text,omitempty"`
	// 收起文案
	FoldText string `protobuf:"bytes,2,opt,name=fold_text,json=foldText,proto3" json:"fold_text,omitempty"`
	// 展开的卡片
	Cards                []*TimelineUnfoldCard_Card `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TimelineUnfoldCard) Reset()         { *m = TimelineUnfoldCard{} }
func (m *TimelineUnfoldCard) String() string { return proto.CompactTextString(m) }
func (*TimelineUnfoldCard) ProtoMessage()    {}
func (*TimelineUnfoldCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{82}
}
func (m *TimelineUnfoldCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineUnfoldCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineUnfoldCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineUnfoldCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineUnfoldCard.Merge(m, src)
}
func (m *TimelineUnfoldCard) XXX_Size() int {
	return m.Size()
}
func (m *TimelineUnfoldCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineUnfoldCard.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineUnfoldCard proto.InternalMessageInfo

func (m *TimelineUnfoldCard) GetUnfoldText() string {
	if m != nil {
		return m.UnfoldText
	}
	return ""
}

func (m *TimelineUnfoldCard) GetFoldText() string {
	if m != nil {
		return m.FoldText
	}
	return ""
}

func (m *TimelineUnfoldCard) GetCards() []*TimelineUnfoldCard_Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type TimelineUnfoldCard_Card struct {
	// Types that are valid to be assigned to CardDetail:
	//	*TimelineUnfoldCard_Card_TimelineHeadCard
	//	*TimelineUnfoldCard_Card_TimelineEventTextCard
	//	*TimelineUnfoldCard_Card_TimelineEventImageCard
	//	*TimelineUnfoldCard_Card_TimelineEventImagetextCard
	//	*TimelineUnfoldCard_Card_TimelineEventResourceCard
	CardDetail           isTimelineUnfoldCard_Card_CardDetail `protobuf_oneof:"card_detail"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *TimelineUnfoldCard_Card) Reset()         { *m = TimelineUnfoldCard_Card{} }
func (m *TimelineUnfoldCard_Card) String() string { return proto.CompactTextString(m) }
func (*TimelineUnfoldCard_Card) ProtoMessage()    {}
func (*TimelineUnfoldCard_Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{82, 0}
}
func (m *TimelineUnfoldCard_Card) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineUnfoldCard_Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineUnfoldCard_Card.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineUnfoldCard_Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineUnfoldCard_Card.Merge(m, src)
}
func (m *TimelineUnfoldCard_Card) XXX_Size() int {
	return m.Size()
}
func (m *TimelineUnfoldCard_Card) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineUnfoldCard_Card.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineUnfoldCard_Card proto.InternalMessageInfo

type isTimelineUnfoldCard_Card_CardDetail interface {
	isTimelineUnfoldCard_Card_CardDetail()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TimelineUnfoldCard_Card_TimelineHeadCard struct {
	TimelineHeadCard *TimelineHeadCard `protobuf:"bytes,1,opt,name=timeline_head_card,json=timelineHeadCard,proto3,oneof" json:"timeline_head_card,omitempty"`
}
type TimelineUnfoldCard_Card_TimelineEventTextCard struct {
	TimelineEventTextCard *TimelineEventTextCard `protobuf:"bytes,2,opt,name=timeline_event_text_card,json=timelineEventTextCard,proto3,oneof" json:"timeline_event_text_card,omitempty"`
}
type TimelineUnfoldCard_Card_TimelineEventImageCard struct {
	TimelineEventImageCard *TimelineEventImageCard `protobuf:"bytes,3,opt,name=timeline_event_image_card,json=timelineEventImageCard,proto3,oneof" json:"timeline_event_image_card,omitempty"`
}
type TimelineUnfoldCard_Card_TimelineEventImagetextCard struct {
	TimelineEventImagetextCard *TimelineEventImagetextCard `protobuf:"bytes,4,opt,name=timeline_event_imagetext_card,json=timelineEventImagetextCard,proto3,oneof" json:"timeline_event_imagetext_card,omitempty"`
}
type TimelineUnfoldCard_Card_TimelineEventResourceCard struct {
	TimelineEventResourceCard *TimelineEventResourceCard `protobuf:"bytes,5,opt,name=timeline_event_resource_card,json=timelineEventResourceCard,proto3,oneof" json:"timeline_event_resource_card,omitempty"`
}

func (*TimelineUnfoldCard_Card_TimelineHeadCard) isTimelineUnfoldCard_Card_CardDetail()           {}
func (*TimelineUnfoldCard_Card_TimelineEventTextCard) isTimelineUnfoldCard_Card_CardDetail()      {}
func (*TimelineUnfoldCard_Card_TimelineEventImageCard) isTimelineUnfoldCard_Card_CardDetail()     {}
func (*TimelineUnfoldCard_Card_TimelineEventImagetextCard) isTimelineUnfoldCard_Card_CardDetail() {}
func (*TimelineUnfoldCard_Card_TimelineEventResourceCard) isTimelineUnfoldCard_Card_CardDetail()  {}

func (m *TimelineUnfoldCard_Card) GetCardDetail() isTimelineUnfoldCard_Card_CardDetail {
	if m != nil {
		return m.CardDetail
	}
	return nil
}

func (m *TimelineUnfoldCard_Card) GetTimelineHeadCard() *TimelineHeadCard {
	if x, ok := m.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineHeadCard); ok {
		return x.TimelineHeadCard
	}
	return nil
}

func (m *TimelineUnfoldCard_Card) GetTimelineEventTextCard() *TimelineEventTextCard {
	if x, ok := m.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventTextCard); ok {
		return x.TimelineEventTextCard
	}
	return nil
}

func (m *TimelineUnfoldCard_Card) GetTimelineEventImageCard() *TimelineEventImageCard {
	if x, ok := m.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventImageCard); ok {
		return x.TimelineEventImageCard
	}
	return nil
}

func (m *TimelineUnfoldCard_Card) GetTimelineEventImagetextCard() *TimelineEventImagetextCard {
	if x, ok := m.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventImagetextCard); ok {
		return x.TimelineEventImagetextCard
	}
	return nil
}

func (m *TimelineUnfoldCard_Card) GetTimelineEventResourceCard() *TimelineEventResourceCard {
	if x, ok := m.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventResourceCard); ok {
		return x.TimelineEventResourceCard
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TimelineUnfoldCard_Card) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TimelineUnfoldCard_Card_TimelineHeadCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventTextCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventImageCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventImagetextCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventResourceCard)(nil),
	}
}

type TimelineSupernatantReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *TimelineSupernatantParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineSupernatantReq) Reset()         { *m = TimelineSupernatantReq{} }
func (m *TimelineSupernatantReq) String() string { return proto.CompactTextString(m) }
func (*TimelineSupernatantReq) ProtoMessage()    {}
func (*TimelineSupernatantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{83}
}
func (m *TimelineSupernatantReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineSupernatantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineSupernatantReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineSupernatantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineSupernatantReq.Merge(m, src)
}
func (m *TimelineSupernatantReq) XXX_Size() int {
	return m.Size()
}
func (m *TimelineSupernatantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineSupernatantReq.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineSupernatantReq proto.InternalMessageInfo

func (m *TimelineSupernatantReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *TimelineSupernatantReq) GetParams() *TimelineSupernatantParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *TimelineSupernatantReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type TimelineSupernatantParams struct {
	// 最后一个事件卡片的位置
	LastIndex int64 `protobuf:"varint,1,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	// 偏移量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 组件id
	ModuleId             int64    `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineSupernatantParams) Reset()         { *m = TimelineSupernatantParams{} }
func (m *TimelineSupernatantParams) String() string { return proto.CompactTextString(m) }
func (*TimelineSupernatantParams) ProtoMessage()    {}
func (*TimelineSupernatantParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{84}
}
func (m *TimelineSupernatantParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineSupernatantParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineSupernatantParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineSupernatantParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineSupernatantParams.Merge(m, src)
}
func (m *TimelineSupernatantParams) XXX_Size() int {
	return m.Size()
}
func (m *TimelineSupernatantParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineSupernatantParams.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineSupernatantParams proto.InternalMessageInfo

func (m *TimelineSupernatantParams) GetLastIndex() int64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

func (m *TimelineSupernatantParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TimelineSupernatantParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

type TimelineSupernatantResp struct {
	// 时间轴组件
	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// 最后一个事件卡片的位置
	LastIndex            int64    `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimelineSupernatantResp) Reset()         { *m = TimelineSupernatantResp{} }
func (m *TimelineSupernatantResp) String() string { return proto.CompactTextString(m) }
func (*TimelineSupernatantResp) ProtoMessage()    {}
func (*TimelineSupernatantResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{85}
}
func (m *TimelineSupernatantResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimelineSupernatantResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimelineSupernatantResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimelineSupernatantResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimelineSupernatantResp.Merge(m, src)
}
func (m *TimelineSupernatantResp) XXX_Size() int {
	return m.Size()
}
func (m *TimelineSupernatantResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TimelineSupernatantResp.DiscardUnknown(m)
}

var xxx_messageInfo_TimelineSupernatantResp proto.InternalMessageInfo

func (m *TimelineSupernatantResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *TimelineSupernatantResp) GetLastIndex() int64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

type OgvOneCard struct {
	// 属性位置1
	Position1 string `protobuf:"bytes,1,opt,name=position1,proto3" json:"position1,omitempty"`
	// 属性位置2
	Position2 string `protobuf:"bytes,2,opt,name=position2,proto3" json:"position2,omitempty"`
	// 属性位置3
	Position3 string `protobuf:"bytes,3,opt,name=position3,proto3" json:"position3,omitempty"`
	// 封面右1文案
	CoverRightText1 string `protobuf:"bytes,4,opt,name=cover_right_text1,json=coverRightText1,proto3" json:"cover_right_text1,omitempty"`
	// 封面右2文案
	CoverRightText2 string `protobuf:"bytes,5,opt,name=cover_right_text2,json=coverRightText2,proto3" json:"cover_right_text2,omitempty"`
	// 推荐语内容
	RcmdContent string `protobuf:"bytes,6,opt,name=rcmd_content,json=rcmdContent,proto3" json:"rcmd_content,omitempty"`
	// 推荐语icon
	RcmdIcon string `protobuf:"bytes,7,opt,name=rcmd_icon,json=rcmdIcon,proto3" json:"rcmd_icon,omitempty"`
	// 追番按钮
	FollowButton *OgvFollowButton `protobuf:"bytes,8,opt,name=follow_button,json=followButton,proto3" json:"follow_button,omitempty"`
	// 封面
	Image string `protobuf:"bytes,13,opt,name=image,proto3" json:"image,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"`
	// 标题
	Title string `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,16,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,18,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvOneCard) Reset()         { *m = OgvOneCard{} }
func (m *OgvOneCard) String() string { return proto.CompactTextString(m) }
func (*OgvOneCard) ProtoMessage()    {}
func (*OgvOneCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{86}
}
func (m *OgvOneCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvOneCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvOneCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvOneCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvOneCard.Merge(m, src)
}
func (m *OgvOneCard) XXX_Size() int {
	return m.Size()
}
func (m *OgvOneCard) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvOneCard.DiscardUnknown(m)
}

var xxx_messageInfo_OgvOneCard proto.InternalMessageInfo

func (m *OgvOneCard) GetPosition1() string {
	if m != nil {
		return m.Position1
	}
	return ""
}

func (m *OgvOneCard) GetPosition2() string {
	if m != nil {
		return m.Position2
	}
	return ""
}

func (m *OgvOneCard) GetPosition3() string {
	if m != nil {
		return m.Position3
	}
	return ""
}

func (m *OgvOneCard) GetCoverRightText1() string {
	if m != nil {
		return m.CoverRightText1
	}
	return ""
}

func (m *OgvOneCard) GetCoverRightText2() string {
	if m != nil {
		return m.CoverRightText2
	}
	return ""
}

func (m *OgvOneCard) GetRcmdContent() string {
	if m != nil {
		return m.RcmdContent
	}
	return ""
}

func (m *OgvOneCard) GetRcmdIcon() string {
	if m != nil {
		return m.RcmdIcon
	}
	return ""
}

func (m *OgvOneCard) GetFollowButton() *OgvFollowButton {
	if m != nil {
		return m.FollowButton
	}
	return nil
}

func (m *OgvOneCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *OgvOneCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *OgvOneCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OgvOneCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *OgvOneCard) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OgvOneCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type OgvThreeCard struct {
	// 封面左1文案
	CoverLeftText1 string `protobuf:"bytes,1,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	// 副标题
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 追番按钮
	FollowButton *OgvFollowButton `protobuf:"bytes,3,opt,name=follow_button,json=followButton,proto3" json:"follow_button,omitempty"`
	// 封面
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// 角标
	Badge *Badge `protobuf:"bytes,5,opt,name=badge,proto3" json:"badge,omitempty"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 上报
	ReportDic *ReportDic `protobuf:"bytes,7,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	// 资源类型
	ResourceType         string   `protobuf:"bytes,9,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvThreeCard) Reset()         { *m = OgvThreeCard{} }
func (m *OgvThreeCard) String() string { return proto.CompactTextString(m) }
func (*OgvThreeCard) ProtoMessage()    {}
func (*OgvThreeCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{87}
}
func (m *OgvThreeCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvThreeCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvThreeCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvThreeCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvThreeCard.Merge(m, src)
}
func (m *OgvThreeCard) XXX_Size() int {
	return m.Size()
}
func (m *OgvThreeCard) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvThreeCard.DiscardUnknown(m)
}

var xxx_messageInfo_OgvThreeCard proto.InternalMessageInfo

func (m *OgvThreeCard) GetCoverLeftText1() string {
	if m != nil {
		return m.CoverLeftText1
	}
	return ""
}

func (m *OgvThreeCard) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *OgvThreeCard) GetFollowButton() *OgvFollowButton {
	if m != nil {
		return m.FollowButton
	}
	return nil
}

func (m *OgvThreeCard) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *OgvThreeCard) GetBadge() *Badge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *OgvThreeCard) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OgvThreeCard) GetReportDic() *ReportDic {
	if m != nil {
		return m.ReportDic
	}
	return nil
}

func (m *OgvThreeCard) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OgvThreeCard) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type OgvFollowButton struct {
	// 是否已追番
	IsFollowed bool `protobuf:"varint,1,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	// 追番文案
	FollowText string `protobuf:"bytes,2,opt,name=follow_text,json=followText,proto3" json:"follow_text,omitempty"`
	// 追番icon
	FollowIcon string `protobuf:"bytes,3,opt,name=follow_icon,json=followIcon,proto3" json:"follow_icon,omitempty"`
	// 未追番文案
	UnfollowText string `protobuf:"bytes,4,opt,name=unfollow_text,json=unfollowText,proto3" json:"unfollow_text,omitempty"`
	// 未追番icon
	UnfollowIcon string `protobuf:"bytes,5,opt,name=unfollow_icon,json=unfollowIcon,proto3" json:"unfollow_icon,omitempty"`
	// 追番透传参数
	FollowParams         string   `protobuf:"bytes,6,opt,name=follow_params,json=followParams,proto3" json:"follow_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvFollowButton) Reset()         { *m = OgvFollowButton{} }
func (m *OgvFollowButton) String() string { return proto.CompactTextString(m) }
func (*OgvFollowButton) ProtoMessage()    {}
func (*OgvFollowButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{88}
}
func (m *OgvFollowButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvFollowButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvFollowButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvFollowButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvFollowButton.Merge(m, src)
}
func (m *OgvFollowButton) XXX_Size() int {
	return m.Size()
}
func (m *OgvFollowButton) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvFollowButton.DiscardUnknown(m)
}

var xxx_messageInfo_OgvFollowButton proto.InternalMessageInfo

func (m *OgvFollowButton) GetIsFollowed() bool {
	if m != nil {
		return m.IsFollowed
	}
	return false
}

func (m *OgvFollowButton) GetFollowText() string {
	if m != nil {
		return m.FollowText
	}
	return ""
}

func (m *OgvFollowButton) GetFollowIcon() string {
	if m != nil {
		return m.FollowIcon
	}
	return ""
}

func (m *OgvFollowButton) GetUnfollowText() string {
	if m != nil {
		return m.UnfollowText
	}
	return ""
}

func (m *OgvFollowButton) GetUnfollowIcon() string {
	if m != nil {
		return m.UnfollowIcon
	}
	return ""
}

func (m *OgvFollowButton) GetFollowParams() string {
	if m != nil {
		return m.FollowParams
	}
	return ""
}

type OgvMoreCard struct {
	// 按钮文本
	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 浮层标题
	SupernatantTitle string `protobuf:"bytes,2,opt,name=supernatant_title,json=supernatantTitle,proto3" json:"supernatant_title,omitempty"`
	// 点击透传参数
	Params               string   `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvMoreCard) Reset()         { *m = OgvMoreCard{} }
func (m *OgvMoreCard) String() string { return proto.CompactTextString(m) }
func (*OgvMoreCard) ProtoMessage()    {}
func (*OgvMoreCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{89}
}
func (m *OgvMoreCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvMoreCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvMoreCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvMoreCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvMoreCard.Merge(m, src)
}
func (m *OgvMoreCard) XXX_Size() int {
	return m.Size()
}
func (m *OgvMoreCard) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvMoreCard.DiscardUnknown(m)
}

var xxx_messageInfo_OgvMoreCard proto.InternalMessageInfo

func (m *OgvMoreCard) GetButtonText() string {
	if m != nil {
		return m.ButtonText
	}
	return ""
}

func (m *OgvMoreCard) GetSupernatantTitle() string {
	if m != nil {
		return m.SupernatantTitle
	}
	return ""
}

func (m *OgvMoreCard) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

type OgvSupernatantReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *OgvSupernatantParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 一级页page_id
	PrimaryPageId        int64    `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty" form:"primary_page_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvSupernatantReq) Reset()         { *m = OgvSupernatantReq{} }
func (m *OgvSupernatantReq) String() string { return proto.CompactTextString(m) }
func (*OgvSupernatantReq) ProtoMessage()    {}
func (*OgvSupernatantReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{90}
}
func (m *OgvSupernatantReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvSupernatantReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvSupernatantReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvSupernatantReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvSupernatantReq.Merge(m, src)
}
func (m *OgvSupernatantReq) XXX_Size() int {
	return m.Size()
}
func (m *OgvSupernatantReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvSupernatantReq.DiscardUnknown(m)
}

var xxx_messageInfo_OgvSupernatantReq proto.InternalMessageInfo

func (m *OgvSupernatantReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *OgvSupernatantReq) GetParams() *OgvSupernatantParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *OgvSupernatantReq) GetPrimaryPageId() int64 {
	if m != nil {
		return m.PrimaryPageId
	}
	return 0
}

type OgvSupernatantParams struct {
	// 最后一个事件卡片的位置
	LastIndex int64 `protobuf:"varint,1,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	// 偏移量
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 组件id
	ModuleId             int64    `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvSupernatantParams) Reset()         { *m = OgvSupernatantParams{} }
func (m *OgvSupernatantParams) String() string { return proto.CompactTextString(m) }
func (*OgvSupernatantParams) ProtoMessage()    {}
func (*OgvSupernatantParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{91}
}
func (m *OgvSupernatantParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvSupernatantParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvSupernatantParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvSupernatantParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvSupernatantParams.Merge(m, src)
}
func (m *OgvSupernatantParams) XXX_Size() int {
	return m.Size()
}
func (m *OgvSupernatantParams) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvSupernatantParams.DiscardUnknown(m)
}

var xxx_messageInfo_OgvSupernatantParams proto.InternalMessageInfo

func (m *OgvSupernatantParams) GetLastIndex() int64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

func (m *OgvSupernatantParams) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *OgvSupernatantParams) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

type OgvSupernatantResp struct {
	// OGV组件
	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// 最后一个事件卡片的位置
	LastIndex            int64    `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OgvSupernatantResp) Reset()         { *m = OgvSupernatantResp{} }
func (m *OgvSupernatantResp) String() string { return proto.CompactTextString(m) }
func (*OgvSupernatantResp) ProtoMessage()    {}
func (*OgvSupernatantResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{92}
}
func (m *OgvSupernatantResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OgvSupernatantResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OgvSupernatantResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OgvSupernatantResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OgvSupernatantResp.Merge(m, src)
}
func (m *OgvSupernatantResp) XXX_Size() int {
	return m.Size()
}
func (m *OgvSupernatantResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OgvSupernatantResp.DiscardUnknown(m)
}

var xxx_messageInfo_OgvSupernatantResp proto.InternalMessageInfo

func (m *OgvSupernatantResp) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *OgvSupernatantResp) GetLastIndex() int64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

type FollowOgvReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params               *FollowOgvParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FollowOgvReq) Reset()         { *m = FollowOgvReq{} }
func (m *FollowOgvReq) String() string { return proto.CompactTextString(m) }
func (*FollowOgvReq) ProtoMessage()    {}
func (*FollowOgvReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{93}
}
func (m *FollowOgvReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowOgvReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowOgvReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowOgvReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowOgvReq.Merge(m, src)
}
func (m *FollowOgvReq) XXX_Size() int {
	return m.Size()
}
func (m *FollowOgvReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowOgvReq.DiscardUnknown(m)
}

var xxx_messageInfo_FollowOgvReq proto.InternalMessageInfo

func (m *FollowOgvReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *FollowOgvReq) GetParams() *FollowOgvParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type FollowOgvParams struct {
	// 操作
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ActionType" json:"action,omitempty"`
	// season_id
	SeasonId             int32    `protobuf:"varint,2,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowOgvParams) Reset()         { *m = FollowOgvParams{} }
func (m *FollowOgvParams) String() string { return proto.CompactTextString(m) }
func (*FollowOgvParams) ProtoMessage()    {}
func (*FollowOgvParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{94}
}
func (m *FollowOgvParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowOgvParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowOgvParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowOgvParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowOgvParams.Merge(m, src)
}
func (m *FollowOgvParams) XXX_Size() int {
	return m.Size()
}
func (m *FollowOgvParams) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowOgvParams.DiscardUnknown(m)
}

var xxx_messageInfo_FollowOgvParams proto.InternalMessageInfo

func (m *FollowOgvParams) GetAction() ActionType {
	if m != nil {
		return m.Action
	}
	return ActionType_Default
}

func (m *FollowOgvParams) GetSeasonId() int32 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

type FollowOgvRly struct {
	// 追番透传参数
	FollowParams         string   `protobuf:"bytes,1,opt,name=follow_params,json=followParams,proto3" json:"follow_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowOgvRly) Reset()         { *m = FollowOgvRly{} }
func (m *FollowOgvRly) String() string { return proto.CompactTextString(m) }
func (*FollowOgvRly) ProtoMessage()    {}
func (*FollowOgvRly) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{95}
}
func (m *FollowOgvRly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowOgvRly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowOgvRly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowOgvRly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowOgvRly.Merge(m, src)
}
func (m *FollowOgvRly) XXX_Size() int {
	return m.Size()
}
func (m *FollowOgvRly) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowOgvRly.DiscardUnknown(m)
}

var xxx_messageInfo_FollowOgvRly proto.InternalMessageInfo

func (m *FollowOgvRly) GetFollowParams() string {
	if m != nil {
		return m.FollowParams
	}
	return ""
}

type NavigationCard struct {
	// 导航列表
	Items                []*NavigationItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NavigationCard) Reset()         { *m = NavigationCard{} }
func (m *NavigationCard) String() string { return proto.CompactTextString(m) }
func (*NavigationCard) ProtoMessage()    {}
func (*NavigationCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{96}
}
func (m *NavigationCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NavigationCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NavigationCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NavigationCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavigationCard.Merge(m, src)
}
func (m *NavigationCard) XXX_Size() int {
	return m.Size()
}
func (m *NavigationCard) XXX_DiscardUnknown() {
	xxx_messageInfo_NavigationCard.DiscardUnknown(m)
}

var xxx_messageInfo_NavigationCard proto.InternalMessageInfo

func (m *NavigationCard) GetItems() []*NavigationItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type NavigationItem struct {
	// 组件id
	ModuleId int64 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 标题
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NavigationItem) Reset()         { *m = NavigationItem{} }
func (m *NavigationItem) String() string { return proto.CompactTextString(m) }
func (*NavigationItem) ProtoMessage()    {}
func (*NavigationItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{97}
}
func (m *NavigationItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NavigationItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NavigationItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NavigationItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavigationItem.Merge(m, src)
}
func (m *NavigationItem) XXX_Size() int {
	return m.Size()
}
func (m *NavigationItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NavigationItem.DiscardUnknown(m)
}

var xxx_messageInfo_NavigationItem proto.InternalMessageInfo

func (m *NavigationItem) GetModuleId() int64 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *NavigationItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ReplyCard struct {
	// 评论id
	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	// 评论类型
	Type                 int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyCard) Reset()         { *m = ReplyCard{} }
func (m *ReplyCard) String() string { return proto.CompactTextString(m) }
func (*ReplyCard) ProtoMessage()    {}
func (*ReplyCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{98}
}
func (m *ReplyCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplyCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReplyCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReplyCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCard.Merge(m, src)
}
func (m *ReplyCard) XXX_Size() int {
	return m.Size()
}
func (m *ReplyCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCard.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCard proto.InternalMessageInfo

func (m *ReplyCard) GetReplyId() int64 {
	if m != nil {
		return m.ReplyId
	}
	return 0
}

func (m *ReplyCard) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type SelectCard struct {
	// 当前tab
	CurrentTab int64 `protobuf:"varint,1,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	// tab列表
	Items                []*SelectItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SelectCard) Reset()         { *m = SelectCard{} }
func (m *SelectCard) String() string { return proto.CompactTextString(m) }
func (*SelectCard) ProtoMessage()    {}
func (*SelectCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{99}
}
func (m *SelectCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectCard.Merge(m, src)
}
func (m *SelectCard) XXX_Size() int {
	return m.Size()
}
func (m *SelectCard) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectCard.DiscardUnknown(m)
}

var xxx_messageInfo_SelectCard proto.InternalMessageInfo

func (m *SelectCard) GetCurrentTab() int64 {
	if m != nil {
		return m.CurrentTab
	}
	return 0
}

func (m *SelectCard) GetItems() []*SelectItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type TabCard struct {
	// 当前tab
	CurrentTab int64 `protobuf:"varint,1,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	// tab样式
	Style TabStyle `protobuf:"varint,2,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.TabStyle" json:"style,omitempty"`
	// tab列表
	Items []*TabItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	// tab栏背景图
	BgImage              *SizeImage `protobuf:"bytes,4,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TabCard) Reset()         { *m = TabCard{} }
func (m *TabCard) String() string { return proto.CompactTextString(m) }
func (*TabCard) ProtoMessage()    {}
func (*TabCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{100}
}
func (m *TabCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TabCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TabCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TabCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabCard.Merge(m, src)
}
func (m *TabCard) XXX_Size() int {
	return m.Size()
}
func (m *TabCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TabCard.DiscardUnknown(m)
}

var xxx_messageInfo_TabCard proto.InternalMessageInfo

func (m *TabCard) GetCurrentTab() int64 {
	if m != nil {
		return m.CurrentTab
	}
	return 0
}

func (m *TabCard) GetStyle() TabStyle {
	if m != nil {
		return m.Style
	}
	return TabStyle_TabStyleDefault
}

func (m *TabCard) GetItems() []*TabItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TabCard) GetBgImage() *SizeImage {
	if m != nil {
		return m.BgImage
	}
	return nil
}

type SelectItem struct {
	// 子页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//分享参数
	PageShare            *PageShare `protobuf:"bytes,3,opt,name=page_share,json=pageShare,proto3" json:"page_share,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SelectItem) Reset()         { *m = SelectItem{} }
func (m *SelectItem) String() string { return proto.CompactTextString(m) }
func (*SelectItem) ProtoMessage()    {}
func (*SelectItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{101}
}
func (m *SelectItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SelectItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SelectItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SelectItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectItem.Merge(m, src)
}
func (m *SelectItem) XXX_Size() int {
	return m.Size()
}
func (m *SelectItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectItem.DiscardUnknown(m)
}

var xxx_messageInfo_SelectItem proto.InternalMessageInfo

func (m *SelectItem) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *SelectItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SelectItem) GetPageShare() *PageShare {
	if m != nil {
		return m.PageShare
	}
	return nil
}

type TabItem struct {
	// 子页面id
	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 是否不支持点击
	DisableClick bool `protobuf:"varint,3,opt,name=disable_click,json=disableClick,proto3" json:"disable_click,omitempty"`
	// 不可点击提示文案
	DisableClickToast string `protobuf:"bytes,4,opt,name=disable_click_toast,json=disableClickToast,proto3" json:"disable_click_toast,omitempty"`
	// 选中态图片
	SelectedImage *SizeImage `protobuf:"bytes,5,opt,name=selected_image,json=selectedImage,proto3" json:"selected_image,omitempty"`
	// 未选中态图片
	UnselectedImage      *SizeImage `protobuf:"bytes,6,opt,name=unselected_image,json=unselectedImage,proto3" json:"unselected_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TabItem) Reset()         { *m = TabItem{} }
func (m *TabItem) String() string { return proto.CompactTextString(m) }
func (*TabItem) ProtoMessage()    {}
func (*TabItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{102}
}
func (m *TabItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TabItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TabItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TabItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabItem.Merge(m, src)
}
func (m *TabItem) XXX_Size() int {
	return m.Size()
}
func (m *TabItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TabItem.DiscardUnknown(m)
}

var xxx_messageInfo_TabItem proto.InternalMessageInfo

func (m *TabItem) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *TabItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TabItem) GetDisableClick() bool {
	if m != nil {
		return m.DisableClick
	}
	return false
}

func (m *TabItem) GetDisableClickToast() string {
	if m != nil {
		return m.DisableClickToast
	}
	return ""
}

func (m *TabItem) GetSelectedImage() *SizeImage {
	if m != nil {
		return m.SelectedImage
	}
	return nil
}

func (m *TabItem) GetUnselectedImage() *SizeImage {
	if m != nil {
		return m.UnselectedImage
	}
	return nil
}

type SizeImage struct {
	// 图片地址
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 图片高
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 图片宽
	Width int64 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// 大小，单位kb
	Size_                int64    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SizeImage) Reset()         { *m = SizeImage{} }
func (m *SizeImage) String() string { return proto.CompactTextString(m) }
func (*SizeImage) ProtoMessage()    {}
func (*SizeImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{103}
}
func (m *SizeImage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SizeImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SizeImage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SizeImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeImage.Merge(m, src)
}
func (m *SizeImage) XXX_Size() int {
	return m.Size()
}
func (m *SizeImage) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeImage.DiscardUnknown(m)
}

var xxx_messageInfo_SizeImage proto.InternalMessageInfo

func (m *SizeImage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SizeImage) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SizeImage) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *SizeImage) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

type NewactHeader struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 活动时间
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// 活动图片
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 发起标题
	SponsorTitle string `protobuf:"bytes,4,opt,name=sponsor_title,json=sponsorTitle,proto3" json:"sponsor_title,omitempty"`
	// 发起人mid
	Mid int64 `protobuf:"varint,5,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 用户头像
	UserFace string `protobuf:"bytes,7,opt,name=user_face,json=userFace,proto3" json:"user_face,omitempty"`
	// 用户跳转地址
	UserUrl string `protobuf:"bytes,8,opt,name=user_url,json=userUrl,proto3" json:"user_url,omitempty"`
	// 特色列表
	Features             []*NewactFeature `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NewactHeader) Reset()         { *m = NewactHeader{} }
func (m *NewactHeader) String() string { return proto.CompactTextString(m) }
func (*NewactHeader) ProtoMessage()    {}
func (*NewactHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{104}
}
func (m *NewactHeader) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactHeader.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactHeader.Merge(m, src)
}
func (m *NewactHeader) XXX_Size() int {
	return m.Size()
}
func (m *NewactHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactHeader.DiscardUnknown(m)
}

var xxx_messageInfo_NewactHeader proto.InternalMessageInfo

func (m *NewactHeader) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewactHeader) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *NewactHeader) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *NewactHeader) GetSponsorTitle() string {
	if m != nil {
		return m.SponsorTitle
	}
	return ""
}

func (m *NewactHeader) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *NewactHeader) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *NewactHeader) GetUserFace() string {
	if m != nil {
		return m.UserFace
	}
	return ""
}

func (m *NewactHeader) GetUserUrl() string {
	if m != nil {
		return m.UserUrl
	}
	return ""
}

func (m *NewactHeader) GetFeatures() []*NewactFeature {
	if m != nil {
		return m.Features
	}
	return nil
}

type NewactFeature struct {
	// 名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 边框颜色
	BorderColor          string   `protobuf:"bytes,2,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewactFeature) Reset()         { *m = NewactFeature{} }
func (m *NewactFeature) String() string { return proto.CompactTextString(m) }
func (*NewactFeature) ProtoMessage()    {}
func (*NewactFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{105}
}
func (m *NewactFeature) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactFeature.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactFeature.Merge(m, src)
}
func (m *NewactFeature) XXX_Size() int {
	return m.Size()
}
func (m *NewactFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactFeature.DiscardUnknown(m)
}

var xxx_messageInfo_NewactFeature proto.InternalMessageInfo

func (m *NewactFeature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewactFeature) GetBorderColor() string {
	if m != nil {
		return m.BorderColor
	}
	return ""
}

type NewactAward struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 奖励列表
	Items                []*NewactAwardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NewactAward) Reset()         { *m = NewactAward{} }
func (m *NewactAward) String() string { return proto.CompactTextString(m) }
func (*NewactAward) ProtoMessage()    {}
func (*NewactAward) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{106}
}
func (m *NewactAward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactAward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactAward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactAward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactAward.Merge(m, src)
}
func (m *NewactAward) XXX_Size() int {
	return m.Size()
}
func (m *NewactAward) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactAward.DiscardUnknown(m)
}

var xxx_messageInfo_NewactAward proto.InternalMessageInfo

func (m *NewactAward) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewactAward) GetItems() []*NewactAwardItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type NewactAwardItem struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 内容
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewactAwardItem) Reset()         { *m = NewactAwardItem{} }
func (m *NewactAwardItem) String() string { return proto.CompactTextString(m) }
func (*NewactAwardItem) ProtoMessage()    {}
func (*NewactAwardItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{107}
}
func (m *NewactAwardItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactAwardItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactAwardItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactAwardItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactAwardItem.Merge(m, src)
}
func (m *NewactAwardItem) XXX_Size() int {
	return m.Size()
}
func (m *NewactAwardItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactAwardItem.DiscardUnknown(m)
}

var xxx_messageInfo_NewactAwardItem proto.InternalMessageInfo

func (m *NewactAwardItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewactAwardItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NewactStatement struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 文本列表
	Items                []*NewactStatementItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NewactStatement) Reset()         { *m = NewactStatement{} }
func (m *NewactStatement) String() string { return proto.CompactTextString(m) }
func (*NewactStatement) ProtoMessage()    {}
func (*NewactStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{108}
}
func (m *NewactStatement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactStatement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactStatement.Merge(m, src)
}
func (m *NewactStatement) XXX_Size() int {
	return m.Size()
}
func (m *NewactStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactStatement.DiscardUnknown(m)
}

var xxx_messageInfo_NewactStatement proto.InternalMessageInfo

func (m *NewactStatement) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewactStatement) GetItems() []*NewactStatementItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type NewactStatementItem struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 内容
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewactStatementItem) Reset()         { *m = NewactStatementItem{} }
func (m *NewactStatementItem) String() string { return proto.CompactTextString(m) }
func (*NewactStatementItem) ProtoMessage()    {}
func (*NewactStatementItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{109}
}
func (m *NewactStatementItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewactStatementItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewactStatementItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewactStatementItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewactStatementItem.Merge(m, src)
}
func (m *NewactStatementItem) XXX_Size() int {
	return m.Size()
}
func (m *NewactStatementItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NewactStatementItem.DiscardUnknown(m)
}

var xxx_messageInfo_NewactStatementItem proto.InternalMessageInfo

func (m *NewactStatementItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NewactStatementItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ProgressCard struct {
	// 进度条样式
	Style ProgressStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.ProgressStyle" json:"style,omitempty"`
	// 未完成态（进度槽）
	SlotType ProgressSlot `protobuf:"varint,2,opt,name=slot_type,json=slotType,proto3,enum=bilibili.app.nativeact.v1.ProgressSlot" json:"slot_type,omitempty"`
	// 达成态（进度条）
	BarType ProgressBar `protobuf:"varint,3,opt,name=bar_type,json=barType,proto3,enum=bilibili.app.nativeact.v1.ProgressBar" json:"bar_type,omitempty"`
	// 纹理图片
	TextureImage string `protobuf:"bytes,4,opt,name=texture_image,json=textureImage,proto3" json:"texture_image,omitempty"`
	// 进度数值
	Num int64 `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	// 进度展示数值
	DisplayNum string `protobuf:"bytes,6,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	// 节点列表
	Nodes                []*ProgressNode `protobuf:"bytes,7,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProgressCard) Reset()         { *m = ProgressCard{} }
func (m *ProgressCard) String() string { return proto.CompactTextString(m) }
func (*ProgressCard) ProtoMessage()    {}
func (*ProgressCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{110}
}
func (m *ProgressCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressCard.Merge(m, src)
}
func (m *ProgressCard) XXX_Size() int {
	return m.Size()
}
func (m *ProgressCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressCard.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressCard proto.InternalMessageInfo

func (m *ProgressCard) GetStyle() ProgressStyle {
	if m != nil {
		return m.Style
	}
	return ProgressStyle_PStyleDefault
}

func (m *ProgressCard) GetSlotType() ProgressSlot {
	if m != nil {
		return m.SlotType
	}
	return ProgressSlot_PSlotDefault
}

func (m *ProgressCard) GetBarType() ProgressBar {
	if m != nil {
		return m.BarType
	}
	return ProgressBar_PBarDefault
}

func (m *ProgressCard) GetTextureImage() string {
	if m != nil {
		return m.TextureImage
	}
	return ""
}

func (m *ProgressCard) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ProgressCard) GetDisplayNum() string {
	if m != nil {
		return m.DisplayNum
	}
	return ""
}

func (m *ProgressCard) GetNodes() []*ProgressNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type ProgressNode struct {
	// 节点名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 节点数值
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 节点展示数值
	DisplayNum           string   `protobuf:"bytes,3,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgressNode) Reset()         { *m = ProgressNode{} }
func (m *ProgressNode) String() string { return proto.CompactTextString(m) }
func (*ProgressNode) ProtoMessage()    {}
func (*ProgressNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{111}
}
func (m *ProgressNode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressNode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressNode.Merge(m, src)
}
func (m *ProgressNode) XXX_Size() int {
	return m.Size()
}
func (m *ProgressNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressNode.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressNode proto.InternalMessageInfo

func (m *ProgressNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProgressNode) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ProgressNode) GetDisplayNum() string {
	if m != nil {
		return m.DisplayNum
	}
	return ""
}

type ProgressReq struct {
	// 页面id
	PageId               int64    `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgressReq) Reset()         { *m = ProgressReq{} }
func (m *ProgressReq) String() string { return proto.CompactTextString(m) }
func (*ProgressReq) ProtoMessage()    {}
func (*ProgressReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{112}
}
func (m *ProgressReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressReq.Merge(m, src)
}
func (m *ProgressReq) XXX_Size() int {
	return m.Size()
}
func (m *ProgressReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressReq.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressReq proto.InternalMessageInfo

func (m *ProgressReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

type ProgressRly struct {
	// event
	Event                *ProgressEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ProgressRly) Reset()         { *m = ProgressRly{} }
func (m *ProgressRly) String() string { return proto.CompactTextString(m) }
func (*ProgressRly) ProtoMessage()    {}
func (*ProgressRly) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{113}
}
func (m *ProgressRly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressRly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressRly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressRly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressRly.Merge(m, src)
}
func (m *ProgressRly) XXX_Size() int {
	return m.Size()
}
func (m *ProgressRly) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressRly.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressRly proto.InternalMessageInfo

func (m *ProgressRly) GetEvent() *ProgressEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type BottomTabReq struct {
	// 底栏id
	TabId int64 `protobuf:"varint,1,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty" validate:"required"`
	// tab_module_id
	TabModuleId int64 `protobuf:"varint,2,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty" validate:"required"`
	// 页面id
	PageId               int64    `protobuf:"varint,3,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BottomTabReq) Reset()         { *m = BottomTabReq{} }
func (m *BottomTabReq) String() string { return proto.CompactTextString(m) }
func (*BottomTabReq) ProtoMessage()    {}
func (*BottomTabReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{114}
}
func (m *BottomTabReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTabReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTabReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTabReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTabReq.Merge(m, src)
}
func (m *BottomTabReq) XXX_Size() int {
	return m.Size()
}
func (m *BottomTabReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTabReq.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTabReq proto.InternalMessageInfo

func (m *BottomTabReq) GetTabId() int64 {
	if m != nil {
		return m.TabId
	}
	return 0
}

func (m *BottomTabReq) GetTabModuleId() int64 {
	if m != nil {
		return m.TabModuleId
	}
	return 0
}

func (m *BottomTabReq) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

type BottomTabRly struct {
	// 服务错误的兜底方案
	ErrLimit *BottomTabErrLimit `protobuf:"bytes,1,opt,name=err_limit,json=errLimit,proto3" json:"err_limit,omitempty"`
	// Tab
	Tab                  *BottomTab `protobuf:"bytes,2,opt,name=tab,proto3" json:"tab,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BottomTabRly) Reset()         { *m = BottomTabRly{} }
func (m *BottomTabRly) String() string { return proto.CompactTextString(m) }
func (*BottomTabRly) ProtoMessage()    {}
func (*BottomTabRly) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{115}
}
func (m *BottomTabRly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTabRly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTabRly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTabRly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTabRly.Merge(m, src)
}
func (m *BottomTabRly) XXX_Size() int {
	return m.Size()
}
func (m *BottomTabRly) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTabRly.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTabRly proto.InternalMessageInfo

func (m *BottomTabRly) GetErrLimit() *BottomTabErrLimit {
	if m != nil {
		return m.ErrLimit
	}
	return nil
}

func (m *BottomTabRly) GetTab() *BottomTab {
	if m != nil {
		return m.Tab
	}
	return nil
}

type BottomTabErrLimit struct {
	// 错误码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 错误提示
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 按钮
	Button               *BottomTabErrLimit_Button `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BottomTabErrLimit) Reset()         { *m = BottomTabErrLimit{} }
func (m *BottomTabErrLimit) String() string { return proto.CompactTextString(m) }
func (*BottomTabErrLimit) ProtoMessage()    {}
func (*BottomTabErrLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{116}
}
func (m *BottomTabErrLimit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTabErrLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTabErrLimit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTabErrLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTabErrLimit.Merge(m, src)
}
func (m *BottomTabErrLimit) XXX_Size() int {
	return m.Size()
}
func (m *BottomTabErrLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTabErrLimit.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTabErrLimit proto.InternalMessageInfo

func (m *BottomTabErrLimit) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BottomTabErrLimit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BottomTabErrLimit) GetButton() *BottomTabErrLimit_Button {
	if m != nil {
		return m.Button
	}
	return nil
}

type BottomTabErrLimit_Button struct {
	// 内容
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 跳转地址
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BottomTabErrLimit_Button) Reset()         { *m = BottomTabErrLimit_Button{} }
func (m *BottomTabErrLimit_Button) String() string { return proto.CompactTextString(m) }
func (*BottomTabErrLimit_Button) ProtoMessage()    {}
func (*BottomTabErrLimit_Button) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{116, 0}
}
func (m *BottomTabErrLimit_Button) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTabErrLimit_Button) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTabErrLimit_Button.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTabErrLimit_Button) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTabErrLimit_Button.Merge(m, src)
}
func (m *BottomTabErrLimit_Button) XXX_Size() int {
	return m.Size()
}
func (m *BottomTabErrLimit_Button) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTabErrLimit_Button.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTabErrLimit_Button proto.InternalMessageInfo

func (m *BottomTabErrLimit_Button) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *BottomTabErrLimit_Button) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type BottomTab struct {
	// 背景类型
	BgType BottomTabBgType `protobuf:"varint,1,opt,name=bg_type,json=bgType,proto3,enum=bilibili.app.nativeact.v1.BottomTabBgType" json:"bg_type,omitempty"`
	// 背景图
	BgImage string `protobuf:"bytes,2,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	// 背景色
	BgColor string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 图标样式
	IconType BottomTabIconType `protobuf:"varint,4,opt,name=icon_type,json=iconType,proto3,enum=bilibili.app.nativeact.v1.BottomTabIconType" json:"icon_type,omitempty"`
	// 选中文字色
	SelectedFontColor string `protobuf:"bytes,5,opt,name=selected_font_color,json=selectedFontColor,proto3" json:"selected_font_color,omitempty"`
	// 未选中文字色
	UnselectedFontColor string `protobuf:"bytes,6,opt,name=unselected_font_color,json=unselectedFontColor,proto3" json:"unselected_font_color,omitempty"`
	// tab项
	Items                []*BottomTabItem `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BottomTab) Reset()         { *m = BottomTab{} }
func (m *BottomTab) String() string { return proto.CompactTextString(m) }
func (*BottomTab) ProtoMessage()    {}
func (*BottomTab) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{117}
}
func (m *BottomTab) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTab.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTab.Merge(m, src)
}
func (m *BottomTab) XXX_Size() int {
	return m.Size()
}
func (m *BottomTab) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTab.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTab proto.InternalMessageInfo

func (m *BottomTab) GetBgType() BottomTabBgType {
	if m != nil {
		return m.BgType
	}
	return BottomTabBgType_BTBTUnknown
}

func (m *BottomTab) GetBgImage() string {
	if m != nil {
		return m.BgImage
	}
	return ""
}

func (m *BottomTab) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *BottomTab) GetIconType() BottomTabIconType {
	if m != nil {
		return m.IconType
	}
	return BottomTabIconType_BTITUnknown
}

func (m *BottomTab) GetSelectedFontColor() string {
	if m != nil {
		return m.SelectedFontColor
	}
	return ""
}

func (m *BottomTab) GetUnselectedFontColor() string {
	if m != nil {
		return m.UnselectedFontColor
	}
	return ""
}

func (m *BottomTab) GetItems() []*BottomTabItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type BottomTabItem struct {
	// 跳转页面
	Goto BottomTabGoto `protobuf:"varint,1,opt,name=goto,proto3,enum=bilibili.app.nativeact.v1.BottomTabGoto" json:"goto,omitempty"`
	// 所属底栏TAB id
	TabId int64 `protobuf:"varint,2,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	// 底栏TAB项 id
	TabModuleId int64 `protobuf:"varint,3,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty"`
	// tab名称
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 是否被选中
	Selected bool `protobuf:"varint,5,opt,name=selected,proto3" json:"selected,omitempty"`
	// 选中图标
	SelectedImage string `protobuf:"bytes,6,opt,name=selected_image,json=selectedImage,proto3" json:"selected_image,omitempty"`
	// 未选中图标
	UnselectedImage string `protobuf:"bytes,7,opt,name=unselected_image,json=unselectedImage,proto3" json:"unselected_image,omitempty"`
	// Redirect：跳转地址
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	// NaPage：页面id
	PageId int64 `protobuf:"varint,9,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	// NaPage：标题
	PageTitle string `protobuf:"bytes,10,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	// NaPage：话题id
	PageFid int64 `protobuf:"varint,11,opt,name=page_fid,json=pageFid,proto3" json:"page_fid,omitempty"`
	// origin
	ShareOrigin          string   `protobuf:"bytes,12,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BottomTabItem) Reset()         { *m = BottomTabItem{} }
func (m *BottomTabItem) String() string { return proto.CompactTextString(m) }
func (*BottomTabItem) ProtoMessage()    {}
func (*BottomTabItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{118}
}
func (m *BottomTabItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BottomTabItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BottomTabItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BottomTabItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BottomTabItem.Merge(m, src)
}
func (m *BottomTabItem) XXX_Size() int {
	return m.Size()
}
func (m *BottomTabItem) XXX_DiscardUnknown() {
	xxx_messageInfo_BottomTabItem.DiscardUnknown(m)
}

var xxx_messageInfo_BottomTabItem proto.InternalMessageInfo

func (m *BottomTabItem) GetGoto() BottomTabGoto {
	if m != nil {
		return m.Goto
	}
	return BottomTabGoto_BTGUnknown
}

func (m *BottomTabItem) GetTabId() int64 {
	if m != nil {
		return m.TabId
	}
	return 0
}

func (m *BottomTabItem) GetTabModuleId() int64 {
	if m != nil {
		return m.TabModuleId
	}
	return 0
}

func (m *BottomTabItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BottomTabItem) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

func (m *BottomTabItem) GetSelectedImage() string {
	if m != nil {
		return m.SelectedImage
	}
	return ""
}

func (m *BottomTabItem) GetUnselectedImage() string {
	if m != nil {
		return m.UnselectedImage
	}
	return ""
}

func (m *BottomTabItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *BottomTabItem) GetPageId() int64 {
	if m != nil {
		return m.PageId
	}
	return 0
}

func (m *BottomTabItem) GetPageTitle() string {
	if m != nil {
		return m.PageTitle
	}
	return ""
}

func (m *BottomTabItem) GetPageFid() int64 {
	if m != nil {
		return m.PageFid
	}
	return 0
}

func (m *BottomTabItem) GetShareOrigin() string {
	if m != nil {
		return m.ShareOrigin
	}
	return ""
}

type ClickCard struct {
	// 背景图
	BgImage *SizeImage `protobuf:"bytes,1,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	// 点击区域数据
	Items                []*ClickItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ClickCard) Reset()         { *m = ClickCard{} }
func (m *ClickCard) String() string { return proto.CompactTextString(m) }
func (*ClickCard) ProtoMessage()    {}
func (*ClickCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{119}
}
func (m *ClickCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickCard.Merge(m, src)
}
func (m *ClickCard) XXX_Size() int {
	return m.Size()
}
func (m *ClickCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickCard.DiscardUnknown(m)
}

var xxx_messageInfo_ClickCard proto.InternalMessageInfo

func (m *ClickCard) GetBgImage() *SizeImage {
	if m != nil {
		return m.BgImage
	}
	return nil
}

func (m *ClickCard) GetItems() []*ClickItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ClickItem struct {
	// 区域id
	AreaId int64 `protobuf:"varint,1,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	// 点击区域
	Area *Area `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	// 点击行为
	Action ClickItem_Action `protobuf:"varint,3,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ClickItem_Action" json:"action,omitempty"`
	// 行为详情
	//
	// Types that are valid to be assigned to ActionDetail:
	//	*ClickItem_RedirectAct
	//	*ClickItem_RequestAct
	//	*ClickItem_RtProgressAct
	//	*ClickItem_NrtProgressAct
	//	*ClickItem_ImageAct
	//	*ClickItem_LayerAct
	ActionDetail         isClickItem_ActionDetail `protobuf_oneof:"action_detail"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClickItem) Reset()         { *m = ClickItem{} }
func (m *ClickItem) String() string { return proto.CompactTextString(m) }
func (*ClickItem) ProtoMessage()    {}
func (*ClickItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{120}
}
func (m *ClickItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickItem.Merge(m, src)
}
func (m *ClickItem) XXX_Size() int {
	return m.Size()
}
func (m *ClickItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickItem.DiscardUnknown(m)
}

var xxx_messageInfo_ClickItem proto.InternalMessageInfo

type isClickItem_ActionDetail interface {
	isClickItem_ActionDetail()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ClickItem_RedirectAct struct {
	RedirectAct *ClickActRedirect `protobuf:"bytes,4,opt,name=redirect_act,json=redirectAct,proto3,oneof" json:"redirect_act,omitempty"`
}
type ClickItem_RequestAct struct {
	RequestAct *ClickActRequest `protobuf:"bytes,5,opt,name=request_act,json=requestAct,proto3,oneof" json:"request_act,omitempty"`
}
type ClickItem_RtProgressAct struct {
	RtProgressAct *ClickActProgress `protobuf:"bytes,6,opt,name=rt_progress_act,json=rtProgressAct,proto3,oneof" json:"rt_progress_act,omitempty"`
}
type ClickItem_NrtProgressAct struct {
	NrtProgressAct *ClickActProgress `protobuf:"bytes,7,opt,name=nrt_progress_act,json=nrtProgressAct,proto3,oneof" json:"nrt_progress_act,omitempty"`
}
type ClickItem_ImageAct struct {
	ImageAct *ClickActImage `protobuf:"bytes,8,opt,name=image_act,json=imageAct,proto3,oneof" json:"image_act,omitempty"`
}
type ClickItem_LayerAct struct {
	LayerAct *ClickActLayer `protobuf:"bytes,9,opt,name=layer_act,json=layerAct,proto3,oneof" json:"layer_act,omitempty"`
}

func (*ClickItem_RedirectAct) isClickItem_ActionDetail()    {}
func (*ClickItem_RequestAct) isClickItem_ActionDetail()     {}
func (*ClickItem_RtProgressAct) isClickItem_ActionDetail()  {}
func (*ClickItem_NrtProgressAct) isClickItem_ActionDetail() {}
func (*ClickItem_ImageAct) isClickItem_ActionDetail()       {}
func (*ClickItem_LayerAct) isClickItem_ActionDetail()       {}

func (m *ClickItem) GetActionDetail() isClickItem_ActionDetail {
	if m != nil {
		return m.ActionDetail
	}
	return nil
}

func (m *ClickItem) GetAreaId() int64 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *ClickItem) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

func (m *ClickItem) GetAction() ClickItem_Action {
	if m != nil {
		return m.Action
	}
	return ClickItem_ActUnknown
}

func (m *ClickItem) GetRedirectAct() *ClickActRedirect {
	if x, ok := m.GetActionDetail().(*ClickItem_RedirectAct); ok {
		return x.RedirectAct
	}
	return nil
}

func (m *ClickItem) GetRequestAct() *ClickActRequest {
	if x, ok := m.GetActionDetail().(*ClickItem_RequestAct); ok {
		return x.RequestAct
	}
	return nil
}

func (m *ClickItem) GetRtProgressAct() *ClickActProgress {
	if x, ok := m.GetActionDetail().(*ClickItem_RtProgressAct); ok {
		return x.RtProgressAct
	}
	return nil
}

func (m *ClickItem) GetNrtProgressAct() *ClickActProgress {
	if x, ok := m.GetActionDetail().(*ClickItem_NrtProgressAct); ok {
		return x.NrtProgressAct
	}
	return nil
}

func (m *ClickItem) GetImageAct() *ClickActImage {
	if x, ok := m.GetActionDetail().(*ClickItem_ImageAct); ok {
		return x.ImageAct
	}
	return nil
}

func (m *ClickItem) GetLayerAct() *ClickActLayer {
	if x, ok := m.GetActionDetail().(*ClickItem_LayerAct); ok {
		return x.LayerAct
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClickItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClickItem_RedirectAct)(nil),
		(*ClickItem_RequestAct)(nil),
		(*ClickItem_RtProgressAct)(nil),
		(*ClickItem_NrtProgressAct)(nil),
		(*ClickItem_ImageAct)(nil),
		(*ClickItem_LayerAct)(nil),
	}
}

type ClickActRedirect struct {
	// 链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 图片
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickActRedirect) Reset()         { *m = ClickActRedirect{} }
func (m *ClickActRedirect) String() string { return proto.CompactTextString(m) }
func (*ClickActRedirect) ProtoMessage()    {}
func (*ClickActRedirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{121}
}
func (m *ClickActRedirect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickActRedirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickActRedirect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickActRedirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickActRedirect.Merge(m, src)
}
func (m *ClickActRedirect) XXX_Size() int {
	return m.Size()
}
func (m *ClickActRedirect) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickActRedirect.DiscardUnknown(m)
}

var xxx_messageInfo_ClickActRedirect proto.InternalMessageInfo

func (m *ClickActRedirect) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ClickActRedirect) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type ClickRequestDetail struct {
	// 状态
	State ClickRequestState `protobuf:"varint,1,opt,name=state,proto3,enum=bilibili.app.nativeact.v1.ClickRequestState" json:"state,omitempty"`
	// 请求透传参数
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// 展示图片
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 弹框
	MessageBox           *MessageBox `protobuf:"bytes,4,opt,name=message_box,json=messageBox,proto3" json:"message_box,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClickRequestDetail) Reset()         { *m = ClickRequestDetail{} }
func (m *ClickRequestDetail) String() string { return proto.CompactTextString(m) }
func (*ClickRequestDetail) ProtoMessage()    {}
func (*ClickRequestDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{122}
}
func (m *ClickRequestDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickRequestDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickRequestDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickRequestDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickRequestDetail.Merge(m, src)
}
func (m *ClickRequestDetail) XXX_Size() int {
	return m.Size()
}
func (m *ClickRequestDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickRequestDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ClickRequestDetail proto.InternalMessageInfo

func (m *ClickRequestDetail) GetState() ClickRequestState {
	if m != nil {
		return m.State
	}
	return ClickRequestState_CRSUnknown
}

func (m *ClickRequestDetail) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

func (m *ClickRequestDetail) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ClickRequestDetail) GetMessageBox() *MessageBox {
	if m != nil {
		return m.MessageBox
	}
	return nil
}

type ClickActRequest struct {
	// 操作的对象id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 请求类型
	ReqType ClickRequestType `protobuf:"varint,2,opt,name=req_type,json=reqType,proto3,enum=bilibili.app.nativeact.v1.ClickRequestType" json:"req_type,omitempty"`
	// 当前状态
	State ClickRequestState `protobuf:"varint,3,opt,name=state,proto3,enum=bilibili.app.nativeact.v1.ClickRequestState" json:"state,omitempty"`
	// 请求详情
	Details []*ClickRequestDetail `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
	// 是否与自定义悬浮按钮状态互通
	SyncHoverButton      bool     `protobuf:"varint,5,opt,name=sync_hover_button,json=syncHoverButton,proto3" json:"sync_hover_button,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickActRequest) Reset()         { *m = ClickActRequest{} }
func (m *ClickActRequest) String() string { return proto.CompactTextString(m) }
func (*ClickActRequest) ProtoMessage()    {}
func (*ClickActRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{123}
}
func (m *ClickActRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickActRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickActRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickActRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickActRequest.Merge(m, src)
}
func (m *ClickActRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClickActRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickActRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClickActRequest proto.InternalMessageInfo

func (m *ClickActRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ClickActRequest) GetReqType() ClickRequestType {
	if m != nil {
		return m.ReqType
	}
	return ClickRequestType_CRTypeUnknown
}

func (m *ClickActRequest) GetState() ClickRequestState {
	if m != nil {
		return m.State
	}
	return ClickRequestState_CRSUnknown
}

func (m *ClickActRequest) GetDetails() []*ClickRequestDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ClickActRequest) GetSyncHoverButton() bool {
	if m != nil {
		return m.SyncHoverButton
	}
	return false
}

type ClickActProgress struct {
	// 颜色
	Color *Color `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	// 字体
	FontType FontType `protobuf:"varint,2,opt,name=font_type,json=fontType,proto3,enum=bilibili.app.nativeact.v1.FontType" json:"font_type,omitempty"`
	// 字号
	FontSize int64 `protobuf:"varint,3,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	// 展示数值方式
	DisplayMode ClickActProgress_DisplayMode `protobuf:"varint,4,opt,name=display_mode,json=displayMode,proto3,enum=bilibili.app.nativeact.v1.ClickActProgress_DisplayMode" json:"display_mode,omitempty"`
	// 当前数值
	CurrentNum string `protobuf:"bytes,5,opt,name=current_num,json=currentNum,proto3" json:"current_num,omitempty"`
	// 目标值
	TargetNum            string   `protobuf:"bytes,6,opt,name=target_num,json=targetNum,proto3" json:"target_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickActProgress) Reset()         { *m = ClickActProgress{} }
func (m *ClickActProgress) String() string { return proto.CompactTextString(m) }
func (*ClickActProgress) ProtoMessage()    {}
func (*ClickActProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{124}
}
func (m *ClickActProgress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickActProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickActProgress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickActProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickActProgress.Merge(m, src)
}
func (m *ClickActProgress) XXX_Size() int {
	return m.Size()
}
func (m *ClickActProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickActProgress.DiscardUnknown(m)
}

var xxx_messageInfo_ClickActProgress proto.InternalMessageInfo

func (m *ClickActProgress) GetColor() *Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *ClickActProgress) GetFontType() FontType {
	if m != nil {
		return m.FontType
	}
	return FontType_FontTypeUnknown
}

func (m *ClickActProgress) GetFontSize() int64 {
	if m != nil {
		return m.FontSize
	}
	return 0
}

func (m *ClickActProgress) GetDisplayMode() ClickActProgress_DisplayMode {
	if m != nil {
		return m.DisplayMode
	}
	return ClickActProgress_DisplayUnknown
}

func (m *ClickActProgress) GetCurrentNum() string {
	if m != nil {
		return m.CurrentNum
	}
	return ""
}

func (m *ClickActProgress) GetTargetNum() string {
	if m != nil {
		return m.TargetNum
	}
	return ""
}

type ClickActImage struct {
	// 图片
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickActImage) Reset()         { *m = ClickActImage{} }
func (m *ClickActImage) String() string { return proto.CompactTextString(m) }
func (*ClickActImage) ProtoMessage()    {}
func (*ClickActImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{125}
}
func (m *ClickActImage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickActImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickActImage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickActImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickActImage.Merge(m, src)
}
func (m *ClickActImage) XXX_Size() int {
	return m.Size()
}
func (m *ClickActImage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickActImage.DiscardUnknown(m)
}

var xxx_messageInfo_ClickActImage proto.InternalMessageInfo

func (m *ClickActImage) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type ClickActLayer struct {
	// 浮层按钮
	ButtonImage string `protobuf:"bytes,1,opt,name=button_image,json=buttonImage,proto3" json:"button_image,omitempty"`
	// 浮层模式
	Mode ClickActLayer_LayerMode `protobuf:"varint,2,opt,name=mode,proto3,enum=bilibili.app.nativeact.v1.ClickActLayer_LayerMode" json:"mode,omitempty"`
	// 展示的图片，图片模式返回
	Images []*SizeImage `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
	// 展示的页面，链接模式返回
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 浮层样式
	Style ClickActLayer_LayerStyle `protobuf:"varint,5,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.ClickActLayer_LayerStyle" json:"style,omitempty"`
	// 标题，纯色样式返回
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 颜色
	Color *Color `protobuf:"bytes,7,opt,name=color,proto3" json:"color,omitempty"`
	// 图片标题，图片样式返回
	ImageTitle string `protobuf:"bytes,8,opt,name=image_title,json=imageTitle,proto3" json:"image_title,omitempty"`
	// 分享图片，下发则开启长按保存图片
	ShareImage *SizeImage `protobuf:"bytes,9,opt,name=share_image,json=shareImage,proto3" json:"share_image,omitempty"`
	// 分享参数
	Share                *Share   `protobuf:"bytes,10,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickActLayer) Reset()         { *m = ClickActLayer{} }
func (m *ClickActLayer) String() string { return proto.CompactTextString(m) }
func (*ClickActLayer) ProtoMessage()    {}
func (*ClickActLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{126}
}
func (m *ClickActLayer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickActLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickActLayer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickActLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickActLayer.Merge(m, src)
}
func (m *ClickActLayer) XXX_Size() int {
	return m.Size()
}
func (m *ClickActLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickActLayer.DiscardUnknown(m)
}

var xxx_messageInfo_ClickActLayer proto.InternalMessageInfo

func (m *ClickActLayer) GetButtonImage() string {
	if m != nil {
		return m.ButtonImage
	}
	return ""
}

func (m *ClickActLayer) GetMode() ClickActLayer_LayerMode {
	if m != nil {
		return m.Mode
	}
	return ClickActLayer_LMUnknown
}

func (m *ClickActLayer) GetImages() []*SizeImage {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *ClickActLayer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ClickActLayer) GetStyle() ClickActLayer_LayerStyle {
	if m != nil {
		return m.Style
	}
	return ClickActLayer_LTUnknown
}

func (m *ClickActLayer) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ClickActLayer) GetColor() *Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *ClickActLayer) GetImageTitle() string {
	if m != nil {
		return m.ImageTitle
	}
	return ""
}

func (m *ClickActLayer) GetShareImage() *SizeImage {
	if m != nil {
		return m.ShareImage
	}
	return nil
}

func (m *ClickActLayer) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type ClickRequestParams struct {
	// 操作
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ActionType" json:"action,omitempty"`
	// 操作的对象id
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// 请求类型
	ReqType              ClickRequestType `protobuf:"varint,3,opt,name=req_type,json=reqType,proto3,enum=bilibili.app.nativeact.v1.ClickRequestType" json:"req_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClickRequestParams) Reset()         { *m = ClickRequestParams{} }
func (m *ClickRequestParams) String() string { return proto.CompactTextString(m) }
func (*ClickRequestParams) ProtoMessage()    {}
func (*ClickRequestParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{127}
}
func (m *ClickRequestParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClickRequestParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClickRequestParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClickRequestParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickRequestParams.Merge(m, src)
}
func (m *ClickRequestParams) XXX_Size() int {
	return m.Size()
}
func (m *ClickRequestParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickRequestParams.DiscardUnknown(m)
}

var xxx_messageInfo_ClickRequestParams proto.InternalMessageInfo

func (m *ClickRequestParams) GetAction() ActionType {
	if m != nil {
		return m.Action
	}
	return ActionType_Default
}

func (m *ClickRequestParams) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ClickRequestParams) GetReqType() ClickRequestType {
	if m != nil {
		return m.ReqType
	}
	return ClickRequestType_CRTypeUnknown
}

type HandleClickReq struct {
	// 透传参数，解析后存到params
	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" form:"raw_params" validate:"required"`
	// 透传参数结构
	Params *ClickRequestParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	// spmid
	Spmid                string   `protobuf:"bytes,3,opt,name=spmid,proto3" json:"spmid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleClickReq) Reset()         { *m = HandleClickReq{} }
func (m *HandleClickReq) String() string { return proto.CompactTextString(m) }
func (*HandleClickReq) ProtoMessage()    {}
func (*HandleClickReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{128}
}
func (m *HandleClickReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HandleClickReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HandleClickReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HandleClickReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleClickReq.Merge(m, src)
}
func (m *HandleClickReq) XXX_Size() int {
	return m.Size()
}
func (m *HandleClickReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleClickReq.DiscardUnknown(m)
}

var xxx_messageInfo_HandleClickReq proto.InternalMessageInfo

func (m *HandleClickReq) GetRawParams() string {
	if m != nil {
		return m.RawParams
	}
	return ""
}

func (m *HandleClickReq) GetParams() *ClickRequestParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *HandleClickReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

type HandleClickRly struct {
	// 处理之后的当前状态
	State                ClickRequestState `protobuf:"varint,1,opt,name=state,proto3,enum=bilibili.app.nativeact.v1.ClickRequestState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandleClickRly) Reset()         { *m = HandleClickRly{} }
func (m *HandleClickRly) String() string { return proto.CompactTextString(m) }
func (*HandleClickRly) ProtoMessage()    {}
func (*HandleClickRly) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{129}
}
func (m *HandleClickRly) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HandleClickRly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HandleClickRly.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HandleClickRly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleClickRly.Merge(m, src)
}
func (m *HandleClickRly) XXX_Size() int {
	return m.Size()
}
func (m *HandleClickRly) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleClickRly.DiscardUnknown(m)
}

var xxx_messageInfo_HandleClickRly proto.InternalMessageInfo

func (m *HandleClickRly) GetState() ClickRequestState {
	if m != nil {
		return m.State
	}
	return ClickRequestState_CRSUnknown
}

type HoverButtonCard struct {
	// 按钮数据
	Item *ClickItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// 当该组件划出屏幕后，悬浮按钮才会出现
	MutexUkeys           []string `protobuf:"bytes,2,rep,name=mutex_ukeys,json=mutexUkeys,proto3" json:"mutex_ukeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HoverButtonCard) Reset()         { *m = HoverButtonCard{} }
func (m *HoverButtonCard) String() string { return proto.CompactTextString(m) }
func (*HoverButtonCard) ProtoMessage()    {}
func (*HoverButtonCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5f7672715c3397, []int{130}
}
func (m *HoverButtonCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HoverButtonCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HoverButtonCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HoverButtonCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HoverButtonCard.Merge(m, src)
}
func (m *HoverButtonCard) XXX_Size() int {
	return m.Size()
}
func (m *HoverButtonCard) XXX_DiscardUnknown() {
	xxx_messageInfo_HoverButtonCard.DiscardUnknown(m)
}

var xxx_messageInfo_HoverButtonCard proto.InternalMessageInfo

func (m *HoverButtonCard) GetItem() *ClickItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *HoverButtonCard) GetMutexUkeys() []string {
	if m != nil {
		return m.MutexUkeys
	}
	return nil
}

func init() {
	proto.RegisterEnum("bilibili.app.nativeact.v1.SortCategory", SortCategory_name, SortCategory_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.RedirectType", RedirectType_name, RedirectType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.MessageBoxType", MessageBoxType_name, MessageBoxType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.VoteProgressStyle", VoteProgressStyle_name, VoteProgressStyle_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ActionType", ActionType_name, ActionType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ReserveGoto", ReserveGoto_name, ReserveGoto_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.TabStyle", TabStyle_name, TabStyle_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ProgressStyle", ProgressStyle_name, ProgressStyle_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ProgressSlot", ProgressSlot_name, ProgressSlot_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ProgressBar", ProgressBar_name, ProgressBar_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.BottomTabBgType", BottomTabBgType_name, BottomTabBgType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.BottomTabIconType", BottomTabIconType_name, BottomTabIconType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.BottomTabGoto", BottomTabGoto_name, BottomTabGoto_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickRequestType", ClickRequestType_name, ClickRequestType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickRequestState", ClickRequestState_name, ClickRequestState_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.FontType", FontType_name, FontType_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickItem_Action", ClickItem_Action_name, ClickItem_Action_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickActProgress_DisplayMode", ClickActProgress_DisplayMode_name, ClickActProgress_DisplayMode_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickActLayer_LayerStyle", ClickActLayer_LayerStyle_name, ClickActLayer_LayerStyle_value)
	proto.RegisterEnum("bilibili.app.nativeact.v1.ClickActLayer_LayerMode", ClickActLayer_LayerMode_name, ClickActLayer_LayerMode_value)
	proto.RegisterType((*IndexReq)(nil), "bilibili.app.nativeact.v1.IndexReq")
	proto.RegisterType((*TopicIndexReq)(nil), "bilibili.app.nativeact.v1.TopicIndexReq")
	proto.RegisterType((*InlineIndexReq)(nil), "bilibili.app.nativeact.v1.InlineIndexReq")
	proto.RegisterType((*TabIndexReq)(nil), "bilibili.app.nativeact.v1.TabIndexReq")
	proto.RegisterType((*PageResp)(nil), "bilibili.app.nativeact.v1.PageResp")
	proto.RegisterType((*TopicInfo)(nil), "bilibili.app.nativeact.v1.TopicInfo")
	proto.RegisterType((*PageShare)(nil), "bilibili.app.nativeact.v1.PageShare")
	proto.RegisterType((*Module)(nil), "bilibili.app.nativeact.v1.Module")
	proto.RegisterType((*SubpageData)(nil), "bilibili.app.nativeact.v1.SubpageData")
	proto.RegisterType((*SubpageTab)(nil), "bilibili.app.nativeact.v1.SubpageTab")
	proto.RegisterType((*Setting)(nil), "bilibili.app.nativeact.v1.Setting")
	proto.RegisterType((*ModuleItem)(nil), "bilibili.app.nativeact.v1.ModuleItem")
	proto.RegisterType((*GameCard)(nil), "bilibili.app.nativeact.v1.GameCard")
	proto.RegisterType((*LiveCard)(nil), "bilibili.app.nativeact.v1.LiveCard")
	proto.RegisterType((*LiveItem)(nil), "bilibili.app.nativeact.v1.LiveItem")
	proto.RegisterType((*LiveWatchedShow)(nil), "bilibili.app.nativeact.v1.LiveWatchedShow")
	proto.RegisterType((*Color)(nil), "bilibili.app.nativeact.v1.Color")
	proto.RegisterType((*EditorRecommendCard)(nil), "bilibili.app.nativeact.v1.EditorRecommendCard")
	proto.RegisterType((*ParticipationCard)(nil), "bilibili.app.nativeact.v1.ParticipationCard")
	proto.RegisterType((*ParticipationCardItem)(nil), "bilibili.app.nativeact.v1.ParticipationCardItem")
	proto.RegisterType((*HeaderCard)(nil), "bilibili.app.nativeact.v1.HeaderCard")
	proto.RegisterType((*Share)(nil), "bilibili.app.nativeact.v1.Share")
	proto.RegisterType((*Badge)(nil), "bilibili.app.nativeact.v1.Badge")
	proto.RegisterType((*ReportDic)(nil), "bilibili.app.nativeact.v1.ReportDic")
	proto.RegisterType((*DynamicCard)(nil), "bilibili.app.nativeact.v1.DynamicCard")
	proto.RegisterType((*DynamicReq)(nil), "bilibili.app.nativeact.v1.DynamicReq")
	proto.RegisterType((*DynamicParams)(nil), "bilibili.app.nativeact.v1.DynamicParams")
	proto.RegisterType((*DynamicResp)(nil), "bilibili.app.nativeact.v1.DynamicResp")
	proto.RegisterType((*TextCard)(nil), "bilibili.app.nativeact.v1.TextCard")
	proto.RegisterType((*TextTitleCard)(nil), "bilibili.app.nativeact.v1.TextTitleCard")
	proto.RegisterType((*ImageTitleCard)(nil), "bilibili.app.nativeact.v1.ImageTitleCard")
	proto.RegisterType((*DynamicMoreCard)(nil), "bilibili.app.nativeact.v1.DynamicMoreCard")
	proto.RegisterType((*DynamicActMoreCard)(nil), "bilibili.app.nativeact.v1.DynamicActMoreCard")
	proto.RegisterType((*LayerDynamic)(nil), "bilibili.app.nativeact.v1.LayerDynamic")
	proto.RegisterType((*EditorReq)(nil), "bilibili.app.nativeact.v1.EditorReq")
	proto.RegisterType((*EditorParams)(nil), "bilibili.app.nativeact.v1.EditorParams")
	proto.RegisterType((*EditorResp)(nil), "bilibili.app.nativeact.v1.EditorResp")
	proto.RegisterType((*CarouselImgCard)(nil), "bilibili.app.nativeact.v1.CarouselImgCard")
	proto.RegisterType((*CarouselImgItem)(nil), "bilibili.app.nativeact.v1.CarouselImgItem")
	proto.RegisterType((*TopTab)(nil), "bilibili.app.nativeact.v1.TopTab")
	proto.RegisterType((*CarouselWordCard)(nil), "bilibili.app.nativeact.v1.CarouselWordCard")
	proto.RegisterType((*CarouselWordItem)(nil), "bilibili.app.nativeact.v1.CarouselWordItem")
	proto.RegisterType((*ResourceCard)(nil), "bilibili.app.nativeact.v1.ResourceCard")
	proto.RegisterType((*ResourceMoreCard)(nil), "bilibili.app.nativeact.v1.ResourceMoreCard")
	proto.RegisterType((*ResourceReq)(nil), "bilibili.app.nativeact.v1.ResourceReq")
	proto.RegisterType((*ResourceParams)(nil), "bilibili.app.nativeact.v1.ResourceParams")
	proto.RegisterType((*ResourceResp)(nil), "bilibili.app.nativeact.v1.ResourceResp")
	proto.RegisterType((*VideoCard)(nil), "bilibili.app.nativeact.v1.VideoCard")
	proto.RegisterType((*VideoRights)(nil), "bilibili.app.nativeact.v1.VideoRights")
	proto.RegisterType((*PlayerDimension)(nil), "bilibili.app.nativeact.v1.PlayerDimension")
	proto.RegisterType((*VideoMoreCard)(nil), "bilibili.app.nativeact.v1.VideoMoreCard")
	proto.RegisterType((*VideoReq)(nil), "bilibili.app.nativeact.v1.VideoReq")
	proto.RegisterType((*VideoParams)(nil), "bilibili.app.nativeact.v1.VideoParams")
	proto.RegisterType((*VideoResp)(nil), "bilibili.app.nativeact.v1.VideoResp")
	proto.RegisterType((*RcmdCard)(nil), "bilibili.app.nativeact.v1.RcmdCard")
	proto.RegisterType((*RcmdVerticalCard)(nil), "bilibili.app.nativeact.v1.RcmdVerticalCard")
	proto.RegisterType((*RelativeactCard)(nil), "bilibili.app.nativeact.v1.RelativeactCard")
	proto.RegisterType((*RelativeactCapsuleCard)(nil), "bilibili.app.nativeact.v1.RelativeactCapsuleCard")
	proto.RegisterType((*RelativeactCapsuleItem)(nil), "bilibili.app.nativeact.v1.RelativeactCapsuleItem")
	proto.RegisterType((*StatementCard)(nil), "bilibili.app.nativeact.v1.StatementCard")
	proto.RegisterType((*IconCard)(nil), "bilibili.app.nativeact.v1.IconCard")
	proto.RegisterType((*IconItem)(nil), "bilibili.app.nativeact.v1.IconItem")
	proto.RegisterType((*MessageBox)(nil), "bilibili.app.nativeact.v1.MessageBox")
	proto.RegisterType((*Area)(nil), "bilibili.app.nativeact.v1.Area")
	proto.RegisterType((*VoteCard)(nil), "bilibili.app.nativeact.v1.VoteCard")
	proto.RegisterType((*VoteButton)(nil), "bilibili.app.nativeact.v1.VoteButton")
	proto.RegisterType((*VoteNum)(nil), "bilibili.app.nativeact.v1.VoteNum")
	proto.RegisterType((*VoteProgress)(nil), "bilibili.app.nativeact.v1.VoteProgress")
	proto.RegisterType((*VoteProgress_VoteProgressItem)(nil), "bilibili.app.nativeact.v1.VoteProgress.VoteProgressItem")
	proto.RegisterType((*VoteReq)(nil), "bilibili.app.nativeact.v1.VoteReq")
	proto.RegisterType((*VoteResp)(nil), "bilibili.app.nativeact.v1.VoteResp")
	proto.RegisterType((*VoteParams)(nil), "bilibili.app.nativeact.v1.VoteParams")
	proto.RegisterType((*ReserveCard)(nil), "bilibili.app.nativeact.v1.ReserveCard")
	proto.RegisterType((*ReserveButton)(nil), "bilibili.app.nativeact.v1.ReserveButton")
	proto.RegisterType((*ReserveReq)(nil), "bilibili.app.nativeact.v1.ReserveReq")
	proto.RegisterType((*ReserveParams)(nil), "bilibili.app.nativeact.v1.ReserveParams")
	proto.RegisterType((*ReserveRly)(nil), "bilibili.app.nativeact.v1.ReserveRly")
	proto.RegisterType((*TimelineHeadCard)(nil), "bilibili.app.nativeact.v1.TimelineHeadCard")
	proto.RegisterType((*TimelineEventTextCard)(nil), "bilibili.app.nativeact.v1.TimelineEventTextCard")
	proto.RegisterType((*TimelineEventImageCard)(nil), "bilibili.app.nativeact.v1.TimelineEventImageCard")
	proto.RegisterType((*TimelineEventImagetextCard)(nil), "bilibili.app.nativeact.v1.TimelineEventImagetextCard")
	proto.RegisterType((*TimelineEventResourceCard)(nil), "bilibili.app.nativeact.v1.TimelineEventResourceCard")
	proto.RegisterType((*TimelineMoreCard)(nil), "bilibili.app.nativeact.v1.TimelineMoreCard")
	proto.RegisterType((*TimelineUnfoldCard)(nil), "bilibili.app.nativeact.v1.TimelineUnfoldCard")
	proto.RegisterType((*TimelineUnfoldCard_Card)(nil), "bilibili.app.nativeact.v1.TimelineUnfoldCard.Card")
	proto.RegisterType((*TimelineSupernatantReq)(nil), "bilibili.app.nativeact.v1.TimelineSupernatantReq")
	proto.RegisterType((*TimelineSupernatantParams)(nil), "bilibili.app.nativeact.v1.TimelineSupernatantParams")
	proto.RegisterType((*TimelineSupernatantResp)(nil), "bilibili.app.nativeact.v1.TimelineSupernatantResp")
	proto.RegisterType((*OgvOneCard)(nil), "bilibili.app.nativeact.v1.OgvOneCard")
	proto.RegisterType((*OgvThreeCard)(nil), "bilibili.app.nativeact.v1.OgvThreeCard")
	proto.RegisterType((*OgvFollowButton)(nil), "bilibili.app.nativeact.v1.OgvFollowButton")
	proto.RegisterType((*OgvMoreCard)(nil), "bilibili.app.nativeact.v1.OgvMoreCard")
	proto.RegisterType((*OgvSupernatantReq)(nil), "bilibili.app.nativeact.v1.OgvSupernatantReq")
	proto.RegisterType((*OgvSupernatantParams)(nil), "bilibili.app.nativeact.v1.OgvSupernatantParams")
	proto.RegisterType((*OgvSupernatantResp)(nil), "bilibili.app.nativeact.v1.OgvSupernatantResp")
	proto.RegisterType((*FollowOgvReq)(nil), "bilibili.app.nativeact.v1.FollowOgvReq")
	proto.RegisterType((*FollowOgvParams)(nil), "bilibili.app.nativeact.v1.FollowOgvParams")
	proto.RegisterType((*FollowOgvRly)(nil), "bilibili.app.nativeact.v1.FollowOgvRly")
	proto.RegisterType((*NavigationCard)(nil), "bilibili.app.nativeact.v1.NavigationCard")
	proto.RegisterType((*NavigationItem)(nil), "bilibili.app.nativeact.v1.NavigationItem")
	proto.RegisterType((*ReplyCard)(nil), "bilibili.app.nativeact.v1.ReplyCard")
	proto.RegisterType((*SelectCard)(nil), "bilibili.app.nativeact.v1.SelectCard")
	proto.RegisterType((*TabCard)(nil), "bilibili.app.nativeact.v1.TabCard")
	proto.RegisterType((*SelectItem)(nil), "bilibili.app.nativeact.v1.SelectItem")
	proto.RegisterType((*TabItem)(nil), "bilibili.app.nativeact.v1.TabItem")
	proto.RegisterType((*SizeImage)(nil), "bilibili.app.nativeact.v1.SizeImage")
	proto.RegisterType((*NewactHeader)(nil), "bilibili.app.nativeact.v1.NewactHeader")
	proto.RegisterType((*NewactFeature)(nil), "bilibili.app.nativeact.v1.NewactFeature")
	proto.RegisterType((*NewactAward)(nil), "bilibili.app.nativeact.v1.NewactAward")
	proto.RegisterType((*NewactAwardItem)(nil), "bilibili.app.nativeact.v1.NewactAwardItem")
	proto.RegisterType((*NewactStatement)(nil), "bilibili.app.nativeact.v1.NewactStatement")
	proto.RegisterType((*NewactStatementItem)(nil), "bilibili.app.nativeact.v1.NewactStatementItem")
	proto.RegisterType((*ProgressCard)(nil), "bilibili.app.nativeact.v1.ProgressCard")
	proto.RegisterType((*ProgressNode)(nil), "bilibili.app.nativeact.v1.ProgressNode")
	proto.RegisterType((*ProgressReq)(nil), "bilibili.app.nativeact.v1.ProgressReq")
	proto.RegisterType((*ProgressRly)(nil), "bilibili.app.nativeact.v1.ProgressRly")
	proto.RegisterType((*BottomTabReq)(nil), "bilibili.app.nativeact.v1.BottomTabReq")
	proto.RegisterType((*BottomTabRly)(nil), "bilibili.app.nativeact.v1.BottomTabRly")
	proto.RegisterType((*BottomTabErrLimit)(nil), "bilibili.app.nativeact.v1.BottomTabErrLimit")
	proto.RegisterType((*BottomTabErrLimit_Button)(nil), "bilibili.app.nativeact.v1.BottomTabErrLimit.Button")
	proto.RegisterType((*BottomTab)(nil), "bilibili.app.nativeact.v1.BottomTab")
	proto.RegisterType((*BottomTabItem)(nil), "bilibili.app.nativeact.v1.BottomTabItem")
	proto.RegisterType((*ClickCard)(nil), "bilibili.app.nativeact.v1.ClickCard")
	proto.RegisterType((*ClickItem)(nil), "bilibili.app.nativeact.v1.ClickItem")
	proto.RegisterType((*ClickActRedirect)(nil), "bilibili.app.nativeact.v1.ClickActRedirect")
	proto.RegisterType((*ClickRequestDetail)(nil), "bilibili.app.nativeact.v1.ClickRequestDetail")
	proto.RegisterType((*ClickActRequest)(nil), "bilibili.app.nativeact.v1.ClickActRequest")
	proto.RegisterType((*ClickActProgress)(nil), "bilibili.app.nativeact.v1.ClickActProgress")
	proto.RegisterType((*ClickActImage)(nil), "bilibili.app.nativeact.v1.ClickActImage")
	proto.RegisterType((*ClickActLayer)(nil), "bilibili.app.nativeact.v1.ClickActLayer")
	proto.RegisterType((*ClickRequestParams)(nil), "bilibili.app.nativeact.v1.ClickRequestParams")
	proto.RegisterType((*HandleClickReq)(nil), "bilibili.app.nativeact.v1.HandleClickReq")
	proto.RegisterType((*HandleClickRly)(nil), "bilibili.app.nativeact.v1.HandleClickRly")
	proto.RegisterType((*HoverButtonCard)(nil), "bilibili.app.nativeact.v1.HoverButtonCard")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/native-act/interface/api/api.proto", fileDescriptor_2a5f7672715c3397)
}

var fileDescriptor_2a5f7672715c3397 = []byte{
	// 9274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x4b, 0x6c, 0x24, 0x47,
	0x96, 0x98, 0xb2, 0xfe, 0xf5, 0xea, 0xc3, 0x62, 0xf4, 0x8f, 0x4d, 0x4d, 0x8b, 0x52, 0xb6, 0xfa,
	0x23, 0x4a, 0xcd, 0x56, 0xb3, 0xf5, 0x19, 0xf5, 0xe8, 0xd7, 0x24, 0xfb, 0x43, 0x4c, 0x77, 0xb3,
	0x27, 0x49, 0x4a, 0xe3, 0xd9, 0x1d, 0xd4, 0x64, 0x65, 0x06, 0x8b, 0xb9, 0xca, 0xca, 0x2c, 0x65,
	0x66, 0x91, 0x4d, 0x61, 0x60, 0x0c, 0xd6, 0x18, 0x63, 0x8f, 0x63, 0x63, 0x0f, 0x63, 0x78, 0x0f,
	0x0b, 0xc3, 0x07, 0x1b, 0x7b, 0x58, 0x60, 0x01, 0x63, 0x61, 0xc0, 0xb0, 0x2f, 0x7b, 0x18, 0x1f,
	0x6c, 0x18, 0x06, 0x0c, 0x18, 0xb6, 0x21, 0xaf, 0x67, 0x6e, 0x3e, 0xd8, 0x80, 0xbc, 0x0b, 0xfb,
	0xe0, 0x83, 0x11, 0x2f, 0x22, 0x32, 0x23, 0xb3, 0x8a, 0x95, 0xc5, 0xfe, 0x68, 0x0c, 0xc3, 0x07,
	0x82, 0x19, 0x2f, 0x5e, 0xbc, 0xf8, 0xbf, 0xf7, 0xe2, 0xbd, 0x17, 0x51, 0xf0, 0x41, 0xdf, 0xbf,
	0xd6, 0x37, 0x23, 0x7a, 0x68, 0x1e, 0x5d, 0x37, 0x87, 0x43, 0xf6, 0x77, 0x2d, 0x3c, 0x08, 0xae,
	0x7b, 0x66, 0xe4, 0x1c, 0xd0, 0x6b, 0xa6, 0x15, 0x5d, 0x77, 0xbc, 0x88, 0x06, 0x7b, 0xa6, 0x45,
	0xaf, 0x9b, 0x43, 0x87, 0xfd, 0xad, 0x0c, 0x03, 0x3f, 0xf2, 0xc9, 0xf9, 0x9e, 0xe3, 0x3a, 0xec,
	0x6f, 0xc5, 0x1c, 0x0e, 0x57, 0x78, 0x01, 0xd3, 0x8a, 0x56, 0x0e, 0x6e, 0x2c, 0x5e, 0xeb, 0x3b,
	0xd1, 0xfe, 0xa8, 0xb7, 0x62, 0xf9, 0x83, 0xeb, 0x7d, 0xbf, 0xef, 0x5f, 0xc7, 0x12, 0xbd, 0xd1,
	0x1e, 0xa6, 0x30, 0x81, 0x5f, 0x9c, 0xd2, 0xe2, 0xcb, 0x7d, 0xdf, 0xef, 0xbb, 0x34, 0xc1, 0xa2,
	0x83, 0x61, 0x74, 0x24, 0x32, 0xcf, 0x67, 0x33, 0x4d, 0x4f, 0x66, 0xdd, 0x3a, 0xa6, 0xf1, 0x66,
	0x60, 0xed, 0x3b, 0x07, 0xf4, 0xfa, 0xc0, 0xb1, 0x6d, 0x97, 0x1e, 0x9a, 0x01, 0xbd, 0x7e, 0x70,
	0xe3, 0xfa, 0x30, 0xa0, 0xae, 0x6f, 0xda, 0xa2, 0xec, 0x47, 0xc7, 0x95, 0x1d, 0x0e, 0xaf, 0xd9,
	0x47, 0x9e, 0x39, 0x70, 0xac, 0x4c, 0xcf, 0x0f, 0x56, 0x93, 0xce, 0x1f, 0x5b, 0xfc, 0xf8, 0x71,
	0xb3, 0x2c, 0x7f, 0xe4, 0x45, 0xa2, 0xf8, 0x27, 0x27, 0x2d, 0xde, 0x0b, 0x7c, 0xd3, 0xb6, 0xcc,
	0x50, 0x10, 0xd0, 0xff, 0x55, 0x09, 0x6a, 0x9b, 0x9e, 0x4d, 0x9f, 0x18, 0xf4, 0x4b, 0xf2, 0x36,
	0x54, 0x87, 0x66, 0x9f, 0x76, 0x1d, 0x7b, 0x41, 0x7b, 0x55, 0xbb, 0x5a, 0x5c, 0x3b, 0xf7, 0xcd,
	0xd7, 0x4b, 0xa7, 0x0e, 0x4c, 0xd7, 0xb1, 0xcd, 0x88, 0xde, 0xd2, 0x03, 0xfa, 0xe5, 0xc8, 0x09,
	0xa8, 0xad, 0x1b, 0x15, 0x86, 0xb7, 0x69, 0x93, 0x8b, 0xd0, 0x32, 0xad, 0xc8, 0x39, 0x70, 0xa2,
	0xa3, 0xee, 0x5e, 0xe0, 0x0f, 0x16, 0x0a, 0xaf, 0x6a, 0x57, 0xeb, 0x46, 0x53, 0x02, 0xef, 0x06,
	0xfe, 0x80, 0x5c, 0x00, 0x10, 0x23, 0xc1, 0x28, 0x17, 0x19, 0x65, 0xa3, 0x2e, 0x20, 0x9b, 0x36,
	0x79, 0x0d, 0x9a, 0xe1, 0xbe, 0x19, 0xd0, 0xae, 0x1f, 0x38, 0x7d, 0xc7, 0x5b, 0x28, 0x21, 0x89,
	0x06, 0xc2, 0xb6, 0x10, 0x44, 0xce, 0x40, 0x25, 0x32, 0x7b, 0xac, 0x74, 0x19, 0x4b, 0x97, 0x23,
	0xb3, 0xb7, 0x69, 0x13, 0x1d, 0x5a, 0x0c, 0x3c, 0xf0, 0xed, 0x91, 0x8b, 0xad, 0xae, 0x60, 0x6e,
	0x23, 0x32, 0x7b, 0x0f, 0x11, 0xc6, 0x71, 0xf6, 0xa3, 0x68, 0x18, 0x76, 0x47, 0x81, 0xdb, 0x0d,
	0xe8, 0x97, 0x0b, 0xd5, 0x57, 0xb5, 0xab, 0x65, 0xa3, 0x81, 0xc0, 0xdd, 0xc0, 0x65, 0xfd, 0xbe,
	0x00, 0xc0, 0x1a, 0xdf, 0x0d, 0x87, 0x03, 0xc7, 0x5e, 0xa8, 0x61, 0xfd, 0x75, 0x06, 0xd9, 0x66,
	0x00, 0xf2, 0x3e, 0x34, 0xac, 0x51, 0x10, 0x50, 0x2f, 0xea, 0x46, 0x66, 0x6f, 0xa1, 0xce, 0xf2,
	0xd7, 0xce, 0x7e, 0xf3, 0xf5, 0x12, 0xd9, 0xf3, 0x83, 0xc1, 0x2d, 0x5d, 0xc9, 0xd4, 0x0d, 0x10,
	0xa9, 0x1d, 0xb3, 0x47, 0xb6, 0xa0, 0x31, 0x74, 0xcd, 0x23, 0x1a, 0x74, 0xcd, 0xa0, 0x1f, 0x2e,
	0xc0, 0xab, 0xda, 0xd5, 0xc6, 0xea, 0xca, 0x4a, 0x6a, 0xbd, 0x8b, 0x35, 0xb6, 0x92, 0xac, 0xb1,
	0x95, 0x83, 0x1b, 0x2b, 0x8f, 0xb1, 0xd8, 0xed, 0xa0, 0x1f, 0x1a, 0x30, 0x8c, 0xbf, 0x59, 0x43,
	0x5d, 0xdf, 0x32, 0xdd, 0x6e, 0xe4, 0x0c, 0xe8, 0x42, 0x03, 0x7b, 0x52, 0x47, 0xc8, 0x8e, 0x33,
	0xa0, 0xac, 0xaf, 0x4e, 0xd8, 0xb5, 0x7c, 0xd7, 0xee, 0x86, 0x91, 0x19, 0x44, 0x0b, 0xcd, 0x57,
	0xb5, 0xab, 0x35, 0xa3, 0xe1, 0x84, 0xeb, 0xbe, 0x6b, 0x6f, 0x33, 0x10, 0x59, 0x83, 0xb9, 0x61,
	0xe0, 0x0c, 0xcc, 0xe0, 0xa8, 0x2b, 0xe7, 0xba, 0x85, 0x73, 0xbd, 0xf8, 0xcd, 0xd7, 0x4b, 0x67,
	0x79, 0x87, 0x32, 0x08, 0xba, 0xd1, 0x12, 0x90, 0xc7, 0x7c, 0xd6, 0xcf, 0x43, 0x8d, 0x8d, 0x3b,
	0x4e, 0x78, 0x1b, 0x47, 0xab, 0x1a, 0x99, 0x3d, 0x36, 0xd7, 0xfa, 0x7f, 0x2c, 0x42, 0x6b, 0xc7,
	0x1f, 0x3a, 0xd6, 0xff, 0x5f, 0x54, 0xd3, 0x17, 0xd5, 0xd2, 0x84, 0x45, 0xf5, 0x7f, 0xfb, 0xe2,
	0xd1, 0xff, 0x5e, 0x01, 0xda, 0x9b, 0x9e, 0xeb, 0x78, 0xf4, 0x19, 0xa6, 0x77, 0x6c, 0xf0, 0x0a,
	0x79, 0x83, 0x57, 0xcc, 0x0e, 0x5e, 0x66, 0x6c, 0x4a, 0xcf, 0x79, 0x6c, 0xca, 0xb9, 0x63, 0x53,
	0x19, 0x1f, 0x9b, 0x7f, 0x5e, 0x80, 0xc6, 0x8e, 0xd9, 0xfb, 0x7f, 0x6c, 0x60, 0x2e, 0x8f, 0xb3,
	0x0b, 0xbe, 0x5b, 0x32, 0x2c, 0x21, 0x3d, 0x80, 0x95, 0xdc, 0x01, 0xac, 0x8e, 0x0f, 0xe0, 0x1f,
	0x57, 0xa1, 0xc6, 0xa8, 0x19, 0x34, 0x1c, 0x92, 0x97, 0xa1, 0xee, 0x84, 0x5d, 0x1f, 0xd7, 0x1a,
	0x8e, 0x5f, 0xcd, 0xa8, 0x39, 0xe1, 0x16, 0xa6, 0xc9, 0x0d, 0x38, 0xe3, 0xf4, 0x3d, 0x3f, 0xa0,
	0x5d, 0x73, 0x38, 0xec, 0xda, 0x66, 0xf0, 0x45, 0x37, 0xda, 0xa7, 0x03, 0x8a, 0x03, 0x56, 0x33,
	0x08, 0xcf, 0xbc, 0x3d, 0x1c, 0x6e, 0x98, 0xc1, 0x17, 0x3b, 0x2c, 0x87, 0x7c, 0x02, 0x80, 0xed,
	0xb7, 0x7c, 0xd7, 0x0f, 0x70, 0xdc, 0x1a, 0xab, 0xaf, 0xae, 0x1c, 0xab, 0x79, 0xac, 0xac, 0x33,
	0x3c, 0xa3, 0xce, 0xca, 0xe0, 0x27, 0x59, 0x17, 0x04, 0x90, 0x83, 0x88, 0x81, 0x7d, 0x7d, 0x0a,
	0x01, 0xd6, 0x93, 0x6d, 0x86, 0xcb, 0x89, 0xe0, 0x27, 0x59, 0x83, 0x06, 0x12, 0xd9, 0xa7, 0xa6,
	0x4d, 0x03, 0x1c, 0xc9, 0xc6, 0xea, 0x6b, 0x53, 0xa8, 0x70, 0x8e, 0x63, 0x60, 0xd5, 0xf7, 0xb1,
	0x10, 0xb9, 0x07, 0xad, 0xa1, 0x19, 0x44, 0x8e, 0xe5, 0x0c, 0xcd, 0xc8, 0xf1, 0x3d, 0x1c, 0xec,
	0x99, 0xa8, 0xa4, 0xcb, 0xb1, 0xc6, 0x08, 0x26, 0xe7, 0x3a, 0x21, 0x9b, 0x91, 0xe2, 0x8c, 0x8d,
	0xe1, 0xa5, 0x1e, 0x38, 0x61, 0x44, 0x96, 0x61, 0xce, 0x09, 0xbb, 0x92, 0x11, 0xef, 0x51, 0xca,
	0x39, 0x5d, 0x6d, 0xad, 0xb0, 0xa0, 0x19, 0x2d, 0x27, 0xdc, 0xe0, 0x39, 0x77, 0x29, 0xb5, 0xc9,
	0x03, 0x68, 0xf1, 0xa5, 0x29, 0xd0, 0x91, 0xe7, 0x35, 0x56, 0xaf, 0x4c, 0xa9, 0xf1, 0x01, 0xc3,
	0x17, 0x34, 0x8c, 0xa6, 0xab, 0xa4, 0xc8, 0x55, 0x68, 0x3b, 0x61, 0x97, 0xda, 0x4e, 0xe4, 0x07,
	0xbc, 0x62, 0x88, 0x2b, 0x6e, 0x3a, 0xe1, 0x1d, 0xcc, 0xc0, 0x7a, 0x99, 0x28, 0x18, 0xfa, 0x5e,
	0xe8, 0x07, 0xdd, 0xe8, 0x68, 0xc8, 0x39, 0x5f, 0xd1, 0x68, 0x08, 0xd8, 0xce, 0xd1, 0x90, 0x92,
	0x5b, 0x50, 0x8d, 0xfc, 0x21, 0x32, 0xe2, 0x66, 0xee, 0x68, 0xee, 0xf8, 0xc3, 0x1d, 0xb3, 0x67,
	0x54, 0x22, 0xfc, 0x4f, 0x36, 0xa0, 0xb9, 0xef, 0x1f, 0xd0, 0xa0, 0xdb, 0x1b, 0x45, 0x91, 0xef,
	0xa1, 0x34, 0x9d, 0x69, 0x1c, 0x1b, 0x58, 0x6c, 0x0d, 0x4b, 0x91, 0xbb, 0xd0, 0xea, 0xf9, 0x51,
	0xe4, 0x0f, 0x24, 0x99, 0xf6, 0xac, 0x64, 0x9a, 0xbc, 0x9c, 0xa0, 0x73, 0x2e, 0xe1, 0x3a, 0x73,
	0xd8, 0x4f, 0xc9, 0x5c, 0xd6, 0x01, 0x22, 0x26, 0x97, 0xbb, 0x8e, 0xb7, 0xe7, 0x2f, 0x74, 0x72,
	0xd7, 0xaf, 0x10, 0xe2, 0x7b, 0xbe, 0x51, 0x8f, 0xe4, 0xa7, 0xfe, 0x21, 0xd4, 0x63, 0x38, 0x6a,
	0x01, 0x9c, 0xa2, 0xe0, 0x70, 0x46, 0x95, 0x63, 0xda, 0xe4, 0x34, 0x94, 0x23, 0x27, 0x72, 0xa9,
	0x90, 0xdc, 0x3c, 0xa1, 0xff, 0xa3, 0x02, 0xd4, 0xe3, 0x6d, 0x41, 0x08, 0x94, 0x70, 0x3a, 0x78,
	0x51, 0xfc, 0x9e, 0x5c, 0x8e, 0x61, 0xda, 0x34, 0xb4, 0x04, 0xb7, 0xc3, 0x6f, 0x86, 0xe9, 0x0c,
	0xcc, 0x3e, 0x15, 0x82, 0x9d, 0x27, 0x18, 0x17, 0x72, 0xbc, 0xd0, 0xb1, 0x69, 0x77, 0x14, 0x38,
	0xb8, 0xbd, 0xea, 0x46, 0x9d, 0x43, 0x76, 0x03, 0x87, 0xc9, 0x5c, 0x7f, 0x14, 0xc5, 0xf9, 0x15,
	0x2e, 0x73, 0x05, 0x88, 0x21, 0x9c, 0x85, 0x8a, 0xd0, 0x17, 0xaa, 0x98, 0x27, 0x52, 0xa4, 0x03,
	0xc5, 0x30, 0x16, 0xe2, 0xec, 0x93, 0xbc, 0x0e, 0xed, 0x70, 0x68, 0x5a, 0x94, 0x73, 0xc5, 0x51,
	0xe0, 0x0a, 0x09, 0xde, 0x44, 0x28, 0xeb, 0xe5, 0x6e, 0xe0, 0x92, 0xf7, 0x61, 0x81, 0x63, 0xd1,
	0x27, 0x96, 0x3b, 0x0a, 0x9d, 0x03, 0x05, 0x1f, 0x10, 0xff, 0x0c, 0xe6, 0xdf, 0x91, 0xd9, 0xa2,
	0xa0, 0xfe, 0x47, 0x45, 0xa8, 0xf0, 0xf9, 0x65, 0x8d, 0x16, 0xdb, 0x34, 0x1e, 0xae, 0xba, 0xdc,
	0x83, 0xb8, 0x78, 0x5f, 0x86, 0x7a, 0xa2, 0xac, 0x14, 0x70, 0x34, 0x6b, 0x03, 0xa9, 0xa9, 0xac,
	0x43, 0x53, 0x64, 0x9e, 0x8c, 0xf3, 0x89, 0x3a, 0x39, 0xef, 0xdb, 0x84, 0xb6, 0x20, 0x12, 0xd2,
	0x28, 0x72, 0xbc, 0xbe, 0xe0, 0x7f, 0xfa, 0x14, 0x32, 0xdb, 0x1c, 0xd3, 0x68, 0xf1, 0x92, 0x22,
	0x49, 0xee, 0xc7, 0xed, 0x71, 0x22, 0x3a, 0x08, 0x17, 0xca, 0xc8, 0x75, 0x2e, 0xe5, 0x2e, 0xf3,
	0xcd, 0x88, 0x0e, 0x64, 0xa3, 0xd8, 0x77, 0x48, 0x2e, 0x41, 0x3b, 0x1c, 0xf5, 0x70, 0x38, 0x87,
	0x66, 0x60, 0x0e, 0x42, 0x31, 0x9f, 0x2d, 0x01, 0x7d, 0x8c, 0x40, 0x65, 0xf8, 0x46, 0x5f, 0xd0,
	0x23, 0x31, 0xaf, 0x62, 0xf8, 0x76, 0xbf, 0xa0, 0x47, 0x6c, 0x19, 0xef, 0x9b, 0x61, 0x77, 0xe0,
	0x07, 0x94, 0xf3, 0x2e, 0xa3, 0xba, 0x6f, 0x86, 0x0f, 0xfd, 0x80, 0xb2, 0xcd, 0xe4, 0x84, 0x9c,
	0xb9, 0xd4, 0x31, 0xa7, 0xe2, 0x84, 0x8c, 0xa5, 0xe8, 0x07, 0xd0, 0xd8, 0xe6, 0xb5, 0x6c, 0x98,
	0x91, 0x99, 0x2c, 0x5b, 0x4d, 0x5d, 0xb6, 0x67, 0xa1, 0x22, 0x1a, 0xc6, 0x57, 0xb3, 0x48, 0x91,
	0x0f, 0xa0, 0x14, 0x99, 0xbd, 0x70, 0xa1, 0x98, 0xdb, 0x75, 0x51, 0x07, 0xe3, 0x36, 0x58, 0x44,
	0x1f, 0x01, 0x24, 0x30, 0xb6, 0x2f, 0x3c, 0x73, 0x20, 0x6b, 0xc5, 0xef, 0x63, 0x2b, 0xfd, 0x1e,
	0x94, 0x42, 0x3f, 0x88, 0x70, 0xfe, 0xdb, 0x53, 0x79, 0xee, 0xb6, 0x1f, 0x44, 0xeb, 0x66, 0x44,
	0xfb, 0x7e, 0x70, 0x64, 0x60, 0x21, 0xfd, 0x7f, 0x96, 0xa0, 0x2a, 0x27, 0x70, 0x05, 0x4e, 0xd9,
	0x4e, 0xc8, 0x34, 0x04, 0x1c, 0x32, 0xc9, 0xae, 0xb8, 0x88, 0x9e, 0x17, 0x59, 0x6c, 0xf4, 0x04,
	0x43, 0xba, 0x08, 0x2d, 0x89, 0x9f, 0x6c, 0xed, 0x9a, 0xd1, 0x14, 0xc0, 0x1d, 0x1c, 0x2a, 0xa6,
	0xf1, 0x8f, 0x22, 0xbf, 0x6b, 0x99, 0x81, 0x3f, 0x0a, 0xa9, 0x8b, 0xcd, 0xac, 0x19, 0x4d, 0x06,
	0x5c, 0x17, 0x30, 0xf2, 0x26, 0x10, 0xc1, 0xa4, 0xbb, 0x7b, 0xbe, 0xeb, 0xfa, 0x87, 0x5d, 0x67,
	0xc0, 0x57, 0x62, 0xcd, 0x98, 0xe3, 0xcc, 0xf8, 0x2e, 0xc2, 0x37, 0x07, 0x7d, 0xf2, 0x06, 0xcc,
	0xc7, 0xc8, 0xa6, 0x4d, 0xbb, 0xe6, 0xa1, 0x79, 0x84, 0x0c, 0xa1, 0x66, 0xb4, 0x05, 0xae, 0x69,
	0xd3, 0xdb, 0x87, 0xe6, 0x11, 0xdb, 0x3f, 0x58, 0x39, 0x6b, 0x8e, 0x50, 0xec, 0x6a, 0x0c, 0xc0,
	0x34, 0x22, 0xb2, 0x0a, 0x67, 0x64, 0xf3, 0x47, 0xde, 0x1e, 0xd3, 0x5f, 0x44, 0x87, 0xb9, 0x02,
	0x23, 0xc7, 0x62, 0x17, 0xf3, 0x44, 0x97, 0x97, 0xa0, 0x21, 0xcb, 0x78, 0xa3, 0x81, 0x58, 0x54,
	0x20, 0x40, 0x8f, 0x46, 0x03, 0x72, 0x15, 0x3a, 0x12, 0xe1, 0xc0, 0xa1, 0x87, 0x88, 0xc5, 0x17,
	0x58, 0x5b, 0xc0, 0x3f, 0x73, 0xe8, 0x21, 0xc3, 0x54, 0xaa, 0x0f, 0x47, 0xbd, 0xd0, 0x0a, 0x9c,
	0x1e, 0xed, 0xf6, 0x22, 0x8f, 0x0b, 0xbb, 0xb8, 0xfa, 0x6d, 0x99, 0xb7, 0x16, 0xb1, 0x11, 0x6f,
	0x88, 0xa6, 0x06, 0x34, 0x8c, 0x50, 0xdc, 0x71, 0xb1, 0x08, 0x1c, 0x6c, 0xd0, 0x30, 0x22, 0x6f,
	0xc3, 0x69, 0x49, 0x78, 0x18, 0xf8, 0xfd, 0x80, 0x86, 0x21, 0x36, 0x83, 0x2b, 0xfd, 0x44, 0xe4,
	0x3d, 0x16, 0x59, 0x99, 0x46, 0x7b, 0xbe, 0x4d, 0x11, 0xbb, 0x95, 0x6a, 0xf4, 0x23, 0xdf, 0xa6,
	0x0c, 0x73, 0x19, 0xe6, 0x53, 0x98, 0xc8, 0xbc, 0xdb, 0x7c, 0x9e, 0x14, 0xd4, 0x0d, 0xc6, 0xc7,
	0x2f, 0x00, 0x0c, 0xb1, 0xf2, 0xd0, 0x3c, 0xa0, 0x28, 0xb2, 0x6a, 0x46, 0x1d, 0x21, 0xdb, 0xe6,
	0x01, 0xd5, 0xff, 0xf3, 0x12, 0x40, 0xc2, 0x00, 0xd8, 0x54, 0x59, 0x66, 0x60, 0xab, 0x9c, 0xb0,
	0xc6, 0x00, 0xc8, 0x07, 0xcf, 0x41, 0x15, 0x33, 0x05, 0x17, 0xac, 0x1b, 0x15, 0x96, 0xdc, 0xb4,
	0x89, 0x0d, 0x67, 0x84, 0x9e, 0x10, 0x50, 0xcb, 0x1f, 0x0c, 0xa8, 0x67, 0xb3, 0x95, 0x66, 0x4f,
	0x3e, 0x53, 0xa5, 0x36, 0x03, 0x57, 0x23, 0x0c, 0x59, 0x6c, 0xdd, 0x0c, 0xec, 0xfb, 0x2f, 0x19,
	0xa7, 0xe8, 0x38, 0x98, 0xfc, 0x18, 0x48, 0x4a, 0xbf, 0xe2, 0x55, 0x34, 0xb0, 0x8a, 0xb7, 0xa6,
	0x2a, 0x8a, 0x4a, 0x21, 0x51, 0xc1, 0xfc, 0x30, 0x0b, 0x24, 0xf7, 0xa1, 0xc1, 0xb5, 0x46, 0x4e,
	0x97, 0xab, 0x29, 0xd3, 0x98, 0x07, 0x57, 0x17, 0x05, 0x41, 0xd8, 0x8f, 0x53, 0xe4, 0xfb, 0xd0,
	0x94, 0x0a, 0x1b, 0x92, 0xe2, 0x0a, 0xcb, 0xe5, 0x29, 0xa4, 0x84, 0xce, 0x25, 0x68, 0x35, 0xec,
	0x24, 0x49, 0xd6, 0xa0, 0x1e, 0xd1, 0x27, 0x11, 0xa7, 0xc4, 0x75, 0x96, 0x8b, 0xd3, 0xb4, 0x0a,
	0xfa, 0x24, 0x12, 0x64, 0x6a, 0x91, 0xf8, 0x26, 0x06, 0xcc, 0x21, 0x0d, 0xe4, 0x0f, 0x9c, 0xd2,
	0x1c, 0x52, 0xba, 0x9a, 0x43, 0x09, 0x99, 0x87, 0x20, 0xd7, 0x8a, 0x54, 0x00, 0xd9, 0x85, 0x0e,
	0xaa, 0x04, 0x2a, 0x51, 0xae, 0xf4, 0xbc, 0x31, 0x85, 0xe8, 0x26, 0x2b, 0xa2, 0x52, 0x6d, 0x3b,
	0x29, 0x08, 0xf9, 0x21, 0xcc, 0xcb, 0xb1, 0x43, 0xee, 0x87, 0x74, 0xe7, 0x91, 0xee, 0x72, 0xfe,
	0x00, 0x32, 0xb6, 0x28, 0x08, 0xcf, 0xd9, 0x69, 0x10, 0xe9, 0xc1, 0x19, 0x49, 0xd9, 0xb4, 0x22,
	0x85, 0x3a, 0x41, 0xea, 0xd7, 0xf2, 0xa9, 0xdf, 0xb6, 0x22, 0xa5, 0x02, 0x62, 0x8f, 0x41, 0xd9,
	0x64, 0xb9, 0x4c, 0x07, 0x41, 0xba, 0xa7, 0x72, 0x27, 0xeb, 0x81, 0x73, 0x20, 0xa9, 0xd5, 0x5c,
	0xf1, 0xcd, 0x46, 0x40, 0x72, 0x69, 0xc6, 0x7f, 0x39, 0xad, 0xd3, 0xb9, 0x23, 0x20, 0xb9, 0xf8,
	0xe6, 0xa0, 0x2f, 0x47, 0xc0, 0x4a, 0x83, 0xc8, 0xef, 0x00, 0x89, 0x29, 0x1f, 0xfa, 0x81, 0xd8,
	0xa3, 0x67, 0x90, 0xf4, 0x9b, 0x33, 0x90, 0xfe, 0xdc, 0x0f, 0xe4, 0x06, 0xed, 0x58, 0x19, 0x18,
	0x79, 0x04, 0xad, 0x80, 0x86, 0xfe, 0x28, 0xb0, 0x44, 0xf7, 0xcf, 0xe6, 0x1e, 0x3e, 0x0c, 0x81,
	0x2f, 0x68, 0x36, 0x03, 0x25, 0xcd, 0x1a, 0x1b, 0xd3, 0x4b, 0xe6, 0xea, 0x5c, 0x6e, 0x63, 0x25,
	0x51, 0x65, 0xa6, 0x3a, 0x41, 0x06, 0xc6, 0xe6, 0xa9, 0x6f, 0x0e, 0x04, 0xcd, 0x85, 0xdc, 0x79,
	0xba, 0x67, 0x0e, 0xe2, 0x79, 0xea, 0x8b, 0x6f, 0x72, 0x07, 0xe0, 0xc0, 0xb1, 0xa9, 0xcf, 0x89,
	0x9c, 0xcf, 0xd5, 0xf7, 0x3f, 0x63, 0xc8, 0x82, 0x4a, 0xfd, 0x40, 0x26, 0xd8, 0xde, 0xe4, 0x64,
	0x92, 0x4e, 0x2e, 0xe6, 0xee, 0x4d, 0xa4, 0xa5, 0xf4, 0xb0, 0x75, 0xa0, 0x02, 0xc8, 0x03, 0x68,
	0x67, 0x18, 0xf1, 0xcb, 0xb9, 0x7d, 0x34, 0xac, 0x81, 0x9c, 0xdc, 0x56, 0x90, 0xe2, 0xbb, 0x14,
	0xce, 0x25, 0xd4, 0x0e, 0x28, 0xe3, 0x9b, 0xa6, 0xcb, 0xc9, 0x7e, 0x27, 0x7f, 0x3a, 0xac, 0x81,
	0xfd, 0x99, 0x28, 0x23, 0xc8, 0x9f, 0x89, 0xa9, 0xa9, 0x19, 0xe4, 0x73, 0xe8, 0x04, 0xd4, 0x95,
	0x65, 0x39, 0xfd, 0x0b, 0xb9, 0xcb, 0xde, 0x48, 0x8a, 0xc8, 0x65, 0x1f, 0xa4, 0x41, 0x64, 0x00,
	0x0b, 0x69, 0xc2, 0xc3, 0x70, 0x24, 0x39, 0xd6, 0x2b, 0x58, 0xc1, 0x8d, 0x59, 0x2b, 0xc0, 0x92,
	0xa2, 0x9e, 0xb3, 0xc1, 0xc4, 0x1c, 0xf2, 0x03, 0x68, 0x87, 0x91, 0x19, 0xd1, 0x01, 0xf5, 0x44,
	0x2f, 0x96, 0x72, 0xe7, 0x73, 0x5b, 0x16, 0x90, 0x33, 0x10, 0xaa, 0x00, 0xb6, 0x5c, 0x1d, 0x4b,
	0x0a, 0xbc, 0x57, 0x73, 0xa7, 0x72, 0xd3, 0x8a, 0xe5, 0x5c, 0xcd, 0x11, 0xdf, 0x8c, 0xc6, 0x81,
	0x1f, 0x89, 0x6e, 0xbf, 0x96, 0x4b, 0xe3, 0x33, 0x3f, 0x8a, 0x97, 0xfc, 0x81, 0xf8, 0x66, 0x82,
	0x2d, 0xa0, 0x21, 0x0d, 0x24, 0x87, 0xd3, 0x73, 0x05, 0x9b, 0xc1, 0xd1, 0xa5, 0x60, 0x0b, 0x92,
	0x24, 0xdb, 0xe0, 0x91, 0x33, 0xa0, 0xae, 0xe3, 0x71, 0x73, 0x0d, 0x27, 0x79, 0x31, 0x77, 0x45,
	0xed, 0x88, 0x42, 0x4c, 0xfc, 0xca, 0x0d, 0x1e, 0x65, 0x60, 0xe4, 0x0b, 0x58, 0x88, 0x89, 0xd3,
	0x03, 0xb4, 0x01, 0xc7, 0x42, 0xf4, 0x75, 0xac, 0xe2, 0xed, 0x19, 0xaa, 0xb8, 0xc3, 0x4a, 0x2a,
	0x12, 0xf5, 0x4c, 0x34, 0x29, 0x83, 0x78, 0x70, 0x3e, 0x53, 0x19, 0x97, 0x8c, 0x58, 0xdb, 0xa5,
	0xdc, 0x15, 0x96, 0xaa, 0x0d, 0x05, 0xa4, 0x5c, 0x61, 0xd1, 0xc4, 0x1c, 0xf2, 0x15, 0x5c, 0x98,
	0x54, 0x5f, 0xd2, 0xc3, 0xcb, 0x58, 0xe7, 0xbb, 0x27, 0xaa, 0x33, 0x4a, 0xba, 0xb9, 0x18, 0x1d,
	0x9b, 0x4b, 0x0e, 0xe1, 0x3b, 0x99, 0xba, 0xd3, 0x5c, 0xff, 0x0a, 0x56, 0xfd, 0xce, 0xac, 0x55,
	0x67, 0x44, 0xc0, 0xf9, 0xe8, 0xb8, 0xcc, 0xd4, 0x72, 0x49, 0x58, 0xe5, 0xd5, 0x99, 0x97, 0x8b,
	0x2a, 0x0f, 0xa2, 0x0c, 0x8c, 0x98, 0x70, 0x3a, 0x26, 0x2e, 0x54, 0x7b, 0x24, 0xff, 0x46, 0xae,
	0x6a, 0x20, 0xc9, 0xf3, 0xf3, 0x89, 0x54, 0x0d, 0xa2, 0x31, 0x28, 0xd9, 0x84, 0xa6, 0xdf, 0x3f,
	0xe8, 0xfa, 0x9e, 0x68, 0xf9, 0x72, 0xae, 0x7e, 0xb9, 0xd5, 0x3f, 0xd8, 0xf2, 0x64, 0x9b, 0xc1,
	0x8f, 0x53, 0x64, 0x0b, 0xda, 0x8c, 0x54, 0xb4, 0x1f, 0x50, 0x41, 0xec, 0xcd, 0x5c, 0x59, 0xbb,
	0xd5, 0x3f, 0xd8, 0x61, 0xf8, 0x52, 0xd6, 0xfa, 0x4a, 0x9a, 0x3c, 0x80, 0x16, 0x23, 0x98, 0x0c,
	0xeb, 0x5b, 0xb9, 0x1b, 0x7b, 0xab, 0x7f, 0xa0, 0x8c, 0x68, 0xc3, 0x4f, 0x92, 0x64, 0x07, 0xe6,
	0x3c, 0xf3, 0xc0, 0xe9, 0x2b, 0x4a, 0xfa, 0xb5, 0x5c, 0xc5, 0xf0, 0x51, 0x5c, 0x42, 0x2a, 0x86,
	0x5e, 0x0a, 0xc2, 0xc4, 0x6d, 0x40, 0x87, 0xee, 0x11, 0x27, 0xb8, 0x92, 0x2b, 0x6e, 0x0d, 0x86,
	0x2c, 0xc5, 0x6d, 0x20, 0x13, 0xe4, 0x13, 0xee, 0x59, 0x43, 0x22, 0xd7, 0x73, 0x6d, 0x2c, 0x3b,
	0x66, 0x4f, 0x90, 0xa8, 0x46, 0xfc, 0x93, 0x7c, 0x0e, 0xc4, 0xa3, 0x87, 0x4c, 0x90, 0xa8, 0xa7,
	0x85, 0xb7, 0x73, 0x27, 0xe0, 0x11, 0x16, 0xe2, 0x67, 0x06, 0xb6, 0x06, 0x3d, 0x25, 0x2d, 0x86,
	0x6d, 0x5e, 0x10, 0x36, 0x0f, 0x4d, 0xa9, 0x9c, 0xdd, 0xc8, 0x9d, 0x08, 0x4e, 0xf7, 0xf6, 0xa1,
	0x10, 0x7e, 0x5e, 0x92, 0x44, 0xaa, 0x3f, 0x81, 0x33, 0x82, 0x6a, 0x46, 0x28, 0xad, 0xe6, 0x8a,
	0x56, 0x4e, 0x39, 0x16, 0x4d, 0xec, 0x58, 0xe6, 0xa5, 0x41, 0x52, 0xf1, 0x8b, 0x0f, 0xb8, 0x48,
	0xf9, 0x66, 0xee, 0x58, 0xc8, 0x53, 0xaf, 0x5c, 0x8c, 0x43, 0x25, 0xcd, 0xce, 0x61, 0x21, 0x75,
	0xa9, 0x54, 0x01, 0xde, 0xc9, 0xdd, 0x27, 0xdb, 0x88, 0x2d, 0xf7, 0x49, 0x18, 0xa7, 0xd8, 0x92,
	0xb1, 0x5c, 0xc7, 0xfa, 0x82, 0x13, 0x7a, 0x37, 0x77, 0xc9, 0xac, 0x33, 0x64, 0xb9, 0x64, 0x2c,
	0x99, 0x60, 0x0a, 0xb9, 0x6a, 0x7f, 0xe6, 0xd4, 0xde, 0xcb, 0x1d, 0xbe, 0xfb, 0x89, 0xf1, 0x59,
	0x6a, 0x26, 0xfb, 0x69, 0x10, 0xd9, 0x01, 0x92, 0xb2, 0x49, 0x73, 0xd2, 0xef, 0x9f, 0xa8, 0xa1,
	0x1d, 0xd5, 0x3a, 0xcd, 0x60, 0x6b, 0x2d, 0x68, 0xe0, 0x31, 0xdd, 0xa6, 0x91, 0xe9, 0xb8, 0xfa,
	0xdf, 0x84, 0x9a, 0xd4, 0x5f, 0x13, 0xa3, 0xae, 0xa6, 0x1a, 0x75, 0x27, 0x1b, 0x85, 0x3b, 0x50,
	0x1c, 0x05, 0x8e, 0xb0, 0x09, 0xb3, 0x4f, 0xb2, 0x08, 0xb5, 0x70, 0xd4, 0xe3, 0xa8, 0xdc, 0x2a,
	0x1c, 0xa7, 0xc9, 0x02, 0x54, 0x2d, 0xdf, 0x8b, 0xa8, 0x17, 0x09, 0xab, 0xb0, 0x4c, 0xea, 0x36,
	0xd4, 0xe4, 0x39, 0x47, 0x9a, 0x02, 0xd9, 0x59, 0x07, 0x9b, 0x50, 0x46, 0x53, 0x20, 0xcb, 0x26,
	0x1f, 0x25, 0x04, 0x0a, 0x33, 0x1d, 0x9c, 0xd0, 0x60, 0x19, 0xd7, 0xf2, 0x0f, 0x4b, 0xbc, 0x1a,
	0xb4, 0x62, 0x9c, 0x83, 0x6a, 0xe0, 0xfb, 0x83, 0xc4, 0x6e, 0x5e, 0x61, 0xc9, 0x4d, 0x1b, 0xfb,
	0x14, 0xdb, 0x70, 0xd9, 0x27, 0x59, 0x82, 0x06, 0x9e, 0xd8, 0xd8, 0xee, 0x18, 0x85, 0xc2, 0xcd,
	0x0d, 0x0c, 0xb4, 0x8d, 0x10, 0xf2, 0x32, 0xd4, 0x91, 0x16, 0x5a, 0x44, 0x4a, 0xdc, 0xf8, 0xcb,
	0x00, 0xd2, 0x32, 0xcc, 0x0d, 0x6f, 0x2c, 0x93, 0xbb, 0xed, 0x6a, 0x68, 0x74, 0x4b, 0xd9, 0xda,
	0x2b, 0xea, 0xb0, 0x9e, 0x86, 0xb2, 0xc5, 0x96, 0x81, 0x30, 0x94, 0xf2, 0x04, 0xda, 0xc5, 0xb9,
	0x2b, 0xae, 0xc6, 0x1b, 0xcc, 0x53, 0xac, 0x27, 0x66, 0x40, 0x4d, 0xd6, 0x93, 0x3a, 0xcf, 0x60,
	0xc9, 0x4d, 0x1b, 0x6d, 0x6a, 0x2c, 0x03, 0xed, 0x93, 0xdc, 0xd2, 0x5d, 0x63, 0x80, 0x47, 0xe6,
	0x80, 0x92, 0xd7, 0xa1, 0x3d, 0x34, 0xd1, 0xf3, 0x2d, 0x0b, 0x73, 0x97, 0x4c, 0x93, 0x43, 0x6f,
	0x73, 0x12, 0x57, 0xa1, 0xa3, 0x62, 0x21, 0xa5, 0x26, 0x52, 0x6a, 0x27, 0x78, 0x48, 0xef, 0x2a,
	0x74, 0xf8, 0x20, 0x59, 0x01, 0xa5, 0x1e, 0xef, 0x2d, 0xc6, 0x34, 0x18, 0x6d, 0x1c, 0x29, 0x04,
	0x63, 0x9f, 0x75, 0x68, 0xb9, 0x66, 0x18, 0x75, 0xd9, 0x51, 0x01, 0x1d, 0x95, 0x6d, 0xee, 0x0b,
	0x62, 0xc0, 0x3b, 0x9e, 0x8d, 0xae, 0x4a, 0x02, 0x25, 0xd7, 0xf1, 0xbe, 0x40, 0x13, 0x44, 0xdd,
	0xc0, 0x6f, 0xd6, 0x4f, 0xac, 0xc1, 0xe1, 0x46, 0x84, 0x92, 0x51, 0x61, 0xc9, 0x4d, 0x9b, 0x3c,
	0x84, 0xe6, 0xa1, 0x19, 0x59, 0xfb, 0xd4, 0xee, 0x86, 0xfb, 0xfe, 0xe1, 0x0c, 0xa6, 0x00, 0xb6,
	0x0a, 0x3e, 0xe7, 0x45, 0xb6, 0xf7, 0xfd, 0x43, 0xa3, 0x71, 0x98, 0x24, 0xf4, 0x3f, 0xd3, 0x60,
	0x2e, 0x83, 0xc0, 0xc6, 0x3e, 0x3c, 0x74, 0x22, 0x6b, 0x5f, 0xd8, 0x58, 0x45, 0x8a, 0x2d, 0x16,
	0x6f, 0x34, 0x90, 0x8b, 0xc5, 0x1b, 0x61, 0x48, 0x04, 0x2a, 0x59, 0xe1, 0xc0, 0x74, 0x5d, 0xe9,
	0x1b, 0x66, 0x90, 0x6d, 0x06, 0x88, 0xb3, 0x5d, 0x33, 0x88, 0xfd, 0x26, 0x98, 0xfd, 0x80, 0x01,
	0x58, 0xbf, 0x99, 0x36, 0x2e, 0xf6, 0x07, 0x7e, 0x93, 0x8b, 0xd0, 0x42, 0xcd, 0xde, 0xf5, 0xad,
	0xc4, 0xd7, 0x58, 0x37, 0x9a, 0x0c, 0xf8, 0x40, 0xc0, 0xf4, 0xff, 0x5d, 0x87, 0x32, 0xf7, 0x13,
	0x9c, 0x87, 0x5a, 0xaf, 0x2f, 0x1c, 0x0d, 0x7c, 0x0b, 0x57, 0x7b, 0x7d, 0x9e, 0xb5, 0x04, 0x0d,
	0x61, 0x89, 0xc1, 0x5c, 0xbe, 0x95, 0x01, 0x41, 0x1c, 0xe1, 0x75, 0x68, 0x47, 0xfe, 0xb0, 0xbb,
	0xe7, 0x33, 0x09, 0x10, 0xbb, 0x2a, 0xea, 0x46, 0x33, 0xf2, 0x87, 0x77, 0x7d, 0x2f, 0xe2, 0x58,
	0xcb, 0x30, 0x2f, 0x58, 0x92, 0x82, 0xc8, 0xbb, 0x32, 0xc7, 0x33, 0x12, 0xdc, 0x0b, 0x00, 0x0a,
	0x92, 0x70, 0x06, 0xed, 0xc5, 0xd9, 0x37, 0xe0, 0x8c, 0x62, 0x75, 0x52, 0x30, 0x79, 0x1f, 0x49,
	0x6c, 0x4f, 0x4a, 0x28, 0x5e, 0x81, 0x39, 0xc7, 0xb3, 0x1d, 0xcb, 0x8c, 0xfc, 0x40, 0x20, 0xf3,
	0x6d, 0xd2, 0x8e, 0xc1, 0x1c, 0x51, 0x87, 0x16, 0xf2, 0xb8, 0x78, 0x34, 0xb8, 0xe7, 0x08, 0x19,
	0xdf, 0x5a, 0x3f, 0xae, 0x9f, 0xdb, 0x32, 0xb3, 0xf5, 0x73, 0x47, 0x12, 0x41, 0xbb, 0x66, 0xba,
	0xfe, 0x6b, 0x70, 0x4a, 0x29, 0x12, 0x13, 0xe7, 0xfb, 0xab, 0x13, 0x17, 0x90, 0x35, 0x5c, 0x87,
	0xd3, 0x68, 0x5e, 0x46, 0xc5, 0x49, 0xa9, 0xa0, 0x81, 0xf8, 0xf3, 0x2c, 0x8f, 0x69, 0x45, 0x09,
	0xfd, 0x37, 0x81, 0x24, 0x05, 0x62, 0xf2, 0x7c, 0xd3, 0xcd, 0x49, 0x74, 0x49, 0xfd, 0x12, 0xb4,
	0x63, 0xa5, 0x94, 0x23, 0xb6, 0xb8, 0xff, 0x45, 0x42, 0x39, 0xda, 0x65, 0x98, 0x0b, 0xac, 0x81,
	0xad, 0xd6, 0xcf, 0x43, 0x86, 0x5a, 0x0c, 0x9c, 0xd4, 0xbd, 0x02, 0xa7, 0x24, 0xb7, 0x56, 0x71,
	0xf9, 0x2e, 0x9c, 0x97, 0x59, 0x69, 0x7c, 0x94, 0xa5, 0x34, 0x45, 0xbb, 0x23, 0xf0, 0x45, 0x56,
	0x6a, 0xe5, 0xc4, 0xf8, 0x71, 0xd7, 0xe6, 0x79, 0xd7, 0x64, 0x86, 0xec, 0xda, 0x2a, 0x9c, 0x19,
	0x79, 0x93, 0xa8, 0x13, 0xc4, 0x3f, 0x95, 0x64, 0xa6, 0xda, 0xa3, 0x94, 0x89, 0x6b, 0x38, 0xc5,
	0xdb, 0x93, 0x64, 0xc9, 0x3a, 0x6e, 0xc2, 0x59, 0x2f, 0xea, 0x4e, 0xaa, 0xe4, 0x34, 0xaf, 0xc4,
	0x8b, 0xb6, 0xc7, 0x2a, 0xb9, 0x0e, 0xa7, 0xd5, 0x42, 0x71, 0x2d, 0x67, 0x78, 0x2d, 0x49, 0x11,
	0x59, 0xcb, 0xfb, 0xb0, 0xe0, 0x45, 0xdd, 0xc9, 0x9d, 0x39, 0xcb, 0x1d, 0x90, 0x5e, 0xb4, 0x3b,
	0xa1, 0x3b, 0xbc, 0x79, 0x93, 0x7a, 0x74, 0x4e, 0x36, 0x6f, 0x77, 0xac, 0x4f, 0x6f, 0x01, 0x89,
	0x75, 0xad, 0x9e, 0x29, 0xb7, 0xc8, 0x02, 0x5f, 0x9e, 0x32, 0x67, 0xcd, 0x0c, 0xe2, 0x1d, 0x3f,
	0x34, 0x3d, 0xea, 0x26, 0xa4, 0xcf, 0xf3, 0x1d, 0x8f, 0x50, 0x95, 0x26, 0x62, 0x49, 0xad, 0x0b,
	0x31, 0x17, 0x05, 0x4d, 0x96, 0x23, 0x14, 0x2c, 0xc4, 0x7e, 0x17, 0xce, 0xa5, 0xb0, 0x95, 0xee,
	0xbe, 0x8c, 0x45, 0x4e, 0x2b, 0x45, 0x92, 0xde, 0xde, 0x82, 0x45, 0x5e, 0x2c, 0x1e, 0x5d, 0xb5,
	0xe4, 0x77, 0xb0, 0xe4, 0x59, 0xc4, 0x78, 0x14, 0x65, 0xca, 0xea, 0xff, 0xac, 0x0c, 0xa7, 0x26,
	0xb8, 0x09, 0x84, 0x7b, 0xbc, 0x8b, 0x3c, 0x55, 0x30, 0xc3, 0xc8, 0x1f, 0x6e, 0x5a, 0xdc, 0x41,
	0xc4, 0xb2, 0x54, 0x85, 0x82, 0x31, 0x43, 0x7f, 0xb8, 0xce, 0x21, 0x0c, 0x41, 0xb0, 0x39, 0x2c,
	0xce, 0x39, 0x21, 0x70, 0x10, 0x52, 0xb8, 0x04, 0x6d, 0x81, 0x20, 0x89, 0x70, 0x26, 0x28, 0x82,
	0x08, 0x24, 0x9d, 0xcb, 0x30, 0x87, 0x02, 0x5c, 0x9c, 0xf8, 0x13, 0xa7, 0x78, 0x0b, 0xc1, 0x78,
	0x76, 0xde, 0x0d, 0x9c, 0x63, 0x74, 0x01, 0xa1, 0x62, 0x55, 0x13, 0x15, 0xeb, 0x3b, 0x50, 0x1f,
	0xfa, 0xa1, 0xc3, 0xd8, 0xfe, 0x0d, 0x19, 0xd2, 0x16, 0x03, 0xd4, 0xdc, 0x55, 0xc1, 0xc5, 0x12,
	0x80, 0x9a, 0x7b, 0x53, 0xb0, 0xac, 0x04, 0xa0, 0xe6, 0xbe, 0x23, 0x18, 0x54, 0x02, 0x50, 0x73,
	0xdf, 0x15, 0xfc, 0x28, 0x01, 0x90, 0xf7, 0xa0, 0xcc, 0xa3, 0x72, 0x5a, 0xb9, 0xce, 0x6d, 0x1e,
	0x91, 0xc3, 0xd1, 0xc9, 0x2d, 0x28, 0xf7, 0x4c, 0xbb, 0x4f, 0x85, 0xdf, 0x62, 0x5a, 0xb9, 0x35,
	0x86, 0x87, 0x4e, 0x34, 0x5e, 0x84, 0xac, 0xe3, 0x79, 0xcf, 0x0f, 0xa2, 0xae, 0xed, 0x58, 0xc2,
	0x5d, 0x91, 0x73, 0xde, 0xf3, 0x83, 0x68, 0xc3, 0xb1, 0xf0, 0xb4, 0xc7, 0x3f, 0xc9, 0x87, 0x50,
	0x95, 0x0e, 0xf5, 0xce, 0xcc, 0x0e, 0x75, 0x59, 0x04, 0x3d, 0xdb, 0x18, 0xc2, 0xc5, 0x17, 0xc9,
	0xbc, 0xf0, 0x6c, 0x23, 0x68, 0x53, 0x48, 0xef, 0xd8, 0xfa, 0x81, 0x4a, 0x11, 0x67, 0x5f, 0xb1,
	0x21, 0x9b, 0xa9, 0x44, 0xfa, 0x2f, 0x35, 0x98, 0x1f, 0x73, 0x41, 0x1d, 0xa3, 0x89, 0x5f, 0x82,
	0x76, 0xcc, 0x0f, 0x78, 0x76, 0x41, 0xb8, 0xdc, 0x05, 0x14, 0x17, 0x14, 0xb9, 0x0b, 0x65, 0xee,
	0xdc, 0xe7, 0x1e, 0xee, 0xb7, 0x4f, 0xe2, 0xfc, 0x42, 0xb5, 0x99, 0x17, 0xd7, 0x1d, 0x38, 0x33,
	0x31, 0xff, 0x98, 0xd6, 0x89, 0xe5, 0x5a, 0x48, 0x96, 0x6b, 0xbc, 0xac, 0x8b, 0x99, 0x70, 0x92,
	0x58, 0x5b, 0xae, 0xf3, 0xc0, 0x13, 0xfd, 0x57, 0x05, 0x00, 0xe5, 0xb0, 0x7b, 0x01, 0x60, 0x14,
	0xca, 0x6d, 0x23, 0x6a, 0xa9, 0x33, 0x08, 0xef, 0xe0, 0xcb, 0x80, 0x09, 0xae, 0x93, 0xf2, 0xfa,
	0x6a, 0x0c, 0x80, 0xda, 0xe8, 0x15, 0x98, 0x93, 0xe1, 0x46, 0x72, 0x6f, 0xf2, 0xea, 0xdb, 0x02,
	0x2c, 0x37, 0xe7, 0x55, 0xe8, 0xec, 0x3b, 0xfd, 0xfd, 0xae, 0xeb, 0xf4, 0xf7, 0x85, 0x8d, 0x4c,
	0xb4, 0xa9, 0xcd, 0xe0, 0x0f, 0x18, 0x98, 0xd7, 0x77, 0x19, 0xe6, 0x5c, 0xff, 0x30, 0x85, 0x28,
	0xb6, 0xb1, 0xeb, 0x1f, 0x2a, 0x78, 0x62, 0x04, 0x2a, 0xc9, 0x08, 0x9c, 0x87, 0x5a, 0xec, 0x61,
	0xe6, 0xfb, 0xb8, 0x7a, 0x20, 0x5c, 0xcb, 0xdc, 0x4b, 0x6d, 0x8d, 0x84, 0xe3, 0x97, 0xef, 0x66,
	0x10, 0x20, 0x86, 0x70, 0x11, 0x63, 0xf6, 0x62, 0xb7, 0xb3, 0x8c, 0x81, 0x68, 0x3a, 0x61, 0xec,
	0x6e, 0xc6, 0x23, 0xcb, 0xc0, 0xe1, 0x9e, 0xd4, 0xa2, 0xc1, 0x3e, 0xf5, 0x9f, 0x69, 0x50, 0xe6,
	0x11, 0x3e, 0x8a, 0xeb, 0xdf, 0x35, 0x23, 0x1a, 0x08, 0x05, 0x56, 0xba, 0xfe, 0x1f, 0x30, 0x18,
	0x23, 0xe0, 0x27, 0x67, 0x1e, 0xdf, 0x19, 0x0f, 0xdd, 0x2d, 0x8e, 0x87, 0xee, 0x5e, 0x00, 0xe0,
	0x28, 0xca, 0xb1, 0xa7, 0x8e, 0x10, 0x5c, 0xd3, 0xbf, 0x0b, 0x65, 0xdc, 0xb0, 0x38, 0xd5, 0xf4,
	0x49, 0x24, 0x23, 0x24, 0xd8, 0x77, 0x4a, 0x49, 0x2d, 0xa4, 0x95, 0xd4, 0xd7, 0xa1, 0x2d, 0xb3,
	0xba, 0x1e, 0x1b, 0x56, 0xa9, 0x83, 0x0a, 0x84, 0x47, 0x0c, 0xa6, 0xff, 0x2f, 0x0d, 0xea, 0xf1,
	0x76, 0x46, 0x72, 0xce, 0x57, 0xaa, 0x47, 0xba, 0xda, 0x73, 0xbe, 0xc2, 0xd3, 0xc6, 0x12, 0x34,
	0x42, 0x6a, 0x86, 0xbe, 0x38, 0x92, 0x08, 0x36, 0xcf, 0x41, 0x88, 0xd0, 0x81, 0xa2, 0x19, 0x07,
	0x2f, 0xb3, 0x4f, 0x06, 0xb1, 0x1c, 0x5b, 0xf4, 0x88, 0x7d, 0x32, 0xfa, 0xe1, 0xa8, 0x97, 0x1c,
	0xe1, 0xca, 0x46, 0x35, 0x1c, 0xf5, 0xb0, 0xf8, 0x29, 0x28, 0xd3, 0x61, 0x12, 0xa1, 0x5c, 0xa2,
	0x43, 0x1e, 0x88, 0xe9, 0x84, 0xdd, 0x61, 0x40, 0xd9, 0x3c, 0x8b, 0xb8, 0xe4, 0xba, 0x13, 0x3e,
	0xe6, 0x00, 0xb6, 0x74, 0x45, 0x9b, 0x44, 0x3c, 0x53, 0xd1, 0xa8, 0x71, 0xc0, 0x26, 0x9e, 0x36,
	0xcd, 0x51, 0xb4, 0xef, 0x8b, 0x95, 0x2d, 0x62, 0x92, 0x39, 0x88, 0xad, 0x6d, 0xfd, 0x21, 0x34,
	0x14, 0x5f, 0x30, 0xf9, 0x18, 0xaa, 0x32, 0x96, 0x4f, 0x9b, 0xc4, 0x01, 0x45, 0xe6, 0xca, 0xc1,
	0xaa, 0xf4, 0x51, 0xf2, 0x53, 0xb1, 0x80, 0xeb, 0xff, 0xbd, 0x08, 0x20, 0xa3, 0xfb, 0xe8, 0x97,
	0xe4, 0x3e, 0x40, 0x60, 0x1e, 0xca, 0x68, 0x1e, 0x1c, 0xcc, 0xb5, 0x37, 0xbe, 0xf9, 0x7a, 0xe9,
	0x12, 0x8f, 0x4a, 0x4f, 0xf2, 0xf4, 0x57, 0x27, 0x85, 0xd1, 0xd6, 0x03, 0xf3, 0x50, 0x04, 0xfd,
	0x7c, 0x9a, 0x8a, 0x82, 0x99, 0xee, 0xdc, 0x10, 0x0d, 0xe0, 0x25, 0xe3, 0x78, 0x99, 0x77, 0xc6,
	0xe3, 0x6c, 0xd7, 0xce, 0x7c, 0xf3, 0xf5, 0xd2, 0x3c, 0x6f, 0x4b, 0x92, 0xa7, 0xab, 0xe1, 0xb7,
	0xfd, 0xe7, 0x10, 0x7e, 0xab, 0xde, 0x2c, 0x50, 0x88, 0xe9, 0xa9, 0xb0, 0xdc, 0x77, 0xc6, 0xe3,
	0x95, 0xd5, 0xe6, 0x25, 0x79, 0xba, 0x1a, 0x85, 0xfb, 0xe1, 0xc4, 0x30, 0xe6, 0xb5, 0x85, 0x6f,
	0xbe, 0x5e, 0x3a, 0xcd, 0x0b, 0xa6, 0xb2, 0xf5, 0xdc, 0x9b, 0x03, 0xd5, 0x13, 0xde, 0x1c, 0xd0,
	0xff, 0x5c, 0x83, 0x56, 0x6a, 0xc0, 0xc9, 0xbb, 0xd0, 0xd8, 0xa3, 0xd4, 0xee, 0xfa, 0x7b, 0x7b,
	0x21, 0x8d, 0xc4, 0x3a, 0x3a, 0xbd, 0xc2, 0x2f, 0xeb, 0xac, 0xc8, 0xcb, 0x3a, 0x2b, 0xb7, 0xbd,
	0x23, 0x03, 0x18, 0xe2, 0x16, 0xe2, 0xa1, 0x45, 0x82, 0x97, 0x28, 0x08, 0x8b, 0x04, 0x87, 0x5f,
	0x00, 0xc0, 0x13, 0x7e, 0x3f, 0xf0, 0x47, 0x43, 0x79, 0x2d, 0x80, 0x41, 0xee, 0x31, 0x40, 0x3a,
	0x56, 0xae, 0x94, 0x89, 0x95, 0x63, 0x7b, 0x83, 0x49, 0x74, 0xd5, 0x5c, 0xc2, 0x00, 0xc8, 0x53,
	0xee, 0xc7, 0x4b, 0x1f, 0xe3, 0x93, 0x3f, 0x80, 0x0a, 0x2f, 0x27, 0x5a, 0x3c, 0x43, 0xa0, 0xa6,
	0x28, 0xa0, 0xbf, 0x02, 0xb5, 0xd8, 0x37, 0x33, 0x81, 0x41, 0xe9, 0x97, 0xa0, 0x95, 0x0a, 0x6e,
	0x98, 0x1c, 0x5e, 0xa6, 0x5f, 0x86, 0x76, 0x3a, 0x5c, 0x61, 0xb2, 0x58, 0xd4, 0x7f, 0x5f, 0x83,
	0xb9, 0x4c, 0xfc, 0xc1, 0x44, 0xbe, 0x38, 0x2e, 0x3e, 0x37, 0xa1, 0x29, 0x23, 0xec, 0x6c, 0x33,
	0x32, 0x45, 0xec, 0xe0, 0xe5, 0xfc, 0x80, 0xb5, 0x0d, 0x33, 0x32, 0x8d, 0x46, 0x98, 0x24, 0xf4,
	0x9f, 0x6b, 0x40, 0xc6, 0xc3, 0x14, 0xbe, 0xfd, 0x76, 0xd8, 0xd0, 0x54, 0x63, 0x8a, 0x8f, 0x89,
	0xdc, 0x53, 0xf8, 0x5a, 0xe1, 0x69, 0xf8, 0xda, 0x7f, 0xd0, 0xa0, 0x2e, 0x8f, 0x04, 0xcf, 0x93,
	0xad, 0x7d, 0x92, 0x61, 0x6b, 0x57, 0x72, 0x23, 0x97, 0x32, 0x5c, 0x6d, 0xc2, 0x16, 0x2e, 0x9e,
	0x74, 0x0b, 0xaf, 0x43, 0x53, 0xa5, 0xad, 0xec, 0x44, 0x2d, 0xb5, 0x13, 0xa7, 0x85, 0xa5, 0xea,
	0xf7, 0x00, 0xe4, 0x00, 0x3d, 0xdb, 0x66, 0xfa, 0x0a, 0xe6, 0x32, 0xa1, 0x25, 0x4c, 0xed, 0x10,
	0x8a, 0x57, 0x37, 0x8c, 0x8e, 0x5c, 0x19, 0x61, 0xdc, 0x14, 0xc0, 0x6d, 0x06, 0x23, 0x6b, 0x50,
	0xc1, 0xed, 0xc1, 0x86, 0xb2, 0x38, 0x7b, 0xec, 0x0a, 0xce, 0xb3, 0x28, 0xa9, 0xff, 0x0b, 0x2d,
	0x55, 0xf9, 0x89, 0x54, 0xd3, 0x45, 0xa8, 0xb8, 0xd4, 0xeb, 0x47, 0xfb, 0x62, 0x02, 0xd8, 0xd1,
	0x42, 0x40, 0x18, 0x8d, 0x43, 0xc7, 0x8e, 0xf6, 0x05, 0x83, 0xe2, 0x09, 0x35, 0x46, 0xbd, 0x7c,
	0xd2, 0x18, 0xf5, 0xb3, 0x50, 0xd9, 0xa7, 0xa8, 0xd0, 0x70, 0x55, 0x41, 0xa4, 0xf4, 0xbf, 0xd2,
	0xa0, 0xc2, 0x51, 0xd9, 0x74, 0xf5, 0xfa, 0x5c, 0xb9, 0xbc, 0x21, 0x43, 0xeb, 0x7a, 0x7d, 0xe4,
	0x30, 0x37, 0xd4, 0xcc, 0x55, 0xa9, 0xf0, 0x8a, 0xcc, 0x55, 0x79, 0x61, 0x8a, 0x9f, 0x68, 0x13,
	0xc3, 0x5d, 0x23, 0x32, 0x7b, 0x3b, 0xec, 0x48, 0xcb, 0x34, 0xab, 0xab, 0xd0, 0xc1, 0x4b, 0x55,
	0xfc, 0xbc, 0xa2, 0x9a, 0xed, 0xda, 0x91, 0xd9, 0x7b, 0x88, 0xe0, 0x14, 0x66, 0x7c, 0xba, 0x4d,
	0x6c, 0x77, 0x0c, 0x73, 0x4d, 0x1c, 0x6f, 0xc7, 0xed, 0x7b, 0x95, 0xac, 0x7d, 0x8f, 0x29, 0x66,
	0xa6, 0x08, 0xf9, 0xaf, 0xf2, 0xf0, 0xf4, 0x9e, 0x89, 0xe1, 0xfe, 0xfa, 0xdf, 0xd7, 0xa0, 0x93,
	0x8d, 0x1a, 0x9a, 0x6d, 0xd9, 0x30, 0x95, 0xce, 0x0a, 0x7c, 0xd7, 0x4d, 0x54, 0xba, 0xa2, 0x01,
	0x1c, 0x84, 0x3a, 0xd9, 0x6d, 0x28, 0x1f, 0xfa, 0x81, 0x2d, 0xcf, 0x3e, 0xb3, 0xc6, 0x2d, 0xf1,
	0x63, 0x0f, 0x96, 0xd4, 0xdf, 0x4a, 0x37, 0x0e, 0x97, 0x95, 0xe2, 0xbf, 0xd0, 0xd2, 0xfe, 0x8b,
	0x7f, 0x5b, 0x84, 0x66, 0xca, 0x13, 0x3d, 0x99, 0xa5, 0x4d, 0xb0, 0x04, 0x14, 0x26, 0x59, 0x02,
	0xc6, 0xdd, 0x2a, 0x57, 0xa1, 0xc3, 0x4b, 0x06, 0x78, 0xfc, 0x40, 0x7e, 0x2d, 0xa6, 0x0e, 0xe1,
	0x06, 0x03, 0x33, 0x81, 0x95, 0x60, 0xba, 0x74, 0x8f, 0x23, 0xde, 0x90, 0x53, 0x87, 0xf0, 0x07,
	0x74, 0x0f, 0x11, 0x6f, 0x64, 0x30, 0xd9, 0xf1, 0xf5, 0x86, 0x58, 0x99, 0x09, 0x26, 0x3b, 0xc2,
	0xde, 0x98, 0x40, 0x73, 0x55, 0xda, 0x5c, 0x53, 0x34, 0x57, 0x27, 0xd0, 0x5c, 0x15, 0x0a, 0x6e,
	0x9a, 0xe6, 0x2a, 0x79, 0x4f, 0x9e, 0xfb, 0xeb, 0xb3, 0x9d, 0xfb, 0x27, 0x9f, 0xf9, 0xe1, 0xe9,
	0xce, 0xfc, 0x63, 0x87, 0xf2, 0xc6, 0x84, 0x43, 0xf9, 0xdf, 0xd2, 0xa0, 0x93, 0x8d, 0x14, 0xfb,
	0xf6, 0x85, 0xe5, 0xd7, 0x1a, 0x34, 0x64, 0x2b, 0x9e, 0xaf, 0x20, 0xbb, 0x9d, 0x11, 0x64, 0x6f,
	0xcc, 0x10, 0x31, 0xf7, 0x02, 0x44, 0xd9, 0xcf, 0x35, 0x68, 0xa7, 0xc9, 0x1f, 0x2b, 0xcd, 0x5e,
	0x83, 0x26, 0xbf, 0xec, 0xa2, 0x68, 0x9d, 0x8c, 0xc7, 0x31, 0xd8, 0xd6, 0x04, 0x81, 0x57, 0x9c,
	0xa6, 0x5b, 0x96, 0x32, 0xba, 0xe5, 0x66, 0xb2, 0x85, 0x9f, 0x55, 0x1e, 0xfe, 0xbc, 0x04, 0xf5,
	0x38, 0x94, 0xef, 0x19, 0x79, 0xc1, 0xa4, 0xfd, 0x5c, 0x9c, 0x61, 0x3f, 0xf3, 0x5d, 0x5a, 0x9a,
	0x61, 0x97, 0x32, 0xcc, 0x9b, 0x13, 0x79, 0xc4, 0xcd, 0x09, 0xc6, 0x8c, 0x78, 0xdf, 0x56, 0x4f,
	0xb6, 0x6f, 0x3f, 0x86, 0x0a, 0xf2, 0xae, 0x10, 0xf9, 0xc1, 0xf4, 0xcd, 0x80, 0x63, 0x87, 0x2c,
	0x2d, 0x34, 0x44, 0x29, 0x72, 0x1f, 0xea, 0xb6, 0x33, 0xa0, 0x5e, 0xe8, 0xf8, 0x9e, 0xe0, 0x19,
	0xd3, 0xd4, 0x05, 0x7e, 0x94, 0xdb, 0x90, 0x25, 0x8c, 0xa4, 0xf0, 0xb7, 0xc8, 0x41, 0x6c, 0x68,
	0x28, 0x5d, 0x21, 0xe7, 0xa0, 0x3a, 0xea, 0x5b, 0xdd, 0xa1, 0x79, 0x24, 0xbd, 0x88, 0xa3, 0xbe,
	0xf5, 0xd8, 0x3c, 0x22, 0x97, 0xf0, 0x1a, 0x9d, 0xe5, 0xfb, 0x43, 0x1a, 0x70, 0x17, 0x1f, 0xbf,
	0x9f, 0xd1, 0x62, 0x27, 0xbf, 0x18, 0x48, 0xce, 0x40, 0xc5, 0x09, 0xbb, 0xc3, 0xbe, 0x25, 0x6e,
	0x66, 0x94, 0x9d, 0xf0, 0x71, 0xdf, 0xd2, 0x3f, 0x87, 0xb9, 0x4c, 0x6f, 0x13, 0xe5, 0x45, 0x53,
	0x95, 0x97, 0x44, 0x01, 0x29, 0xa8, 0x0a, 0x08, 0x83, 0x07, 0x7e, 0x64, 0x46, 0x54, 0xd0, 0x15,
	0x29, 0xfd, 0x67, 0x1a, 0xb4, 0x52, 0x51, 0xa4, 0xdf, 0x3e, 0xf7, 0xfb, 0xf7, 0x1a, 0xd4, 0xf8,
	0x10, 0x3e, 0x57, 0xd6, 0xf7, 0x71, 0x86, 0xf5, 0xe5, 0x2e, 0xc6, 0x17, 0xc0, 0xf7, 0x7e, 0x5f,
	0x13, 0xab, 0xe3, 0xb7, 0xc9, 0xf4, 0xee, 0x0a, 0x46, 0xf5, 0xac, 0x1c, 0xef, 0xaf, 0x0b, 0x50,
	0x93, 0xd1, 0xc1, 0xd2, 0x1c, 0xa9, 0xc5, 0xe6, 0xc8, 0xf8, 0x92, 0x54, 0x41, 0xb9, 0x24, 0x45,
	0xa0, 0xb4, 0x67, 0x5a, 0xd2, 0x2c, 0x8c, 0xdf, 0x72, 0x2d, 0x95, 0x92, 0xb5, 0xc4, 0xd6, 0x26,
	0x5a, 0xc6, 0x04, 0x83, 0x12, 0x29, 0xa6, 0x03, 0x3a, 0xa1, 0xb8, 0x82, 0x44, 0x6d, 0x71, 0x63,
	0x08, 0x9c, 0xf0, 0xae, 0x80, 0x90, 0x75, 0xa8, 0xf9, 0x7b, 0x7b, 0x8e, 0xe5, 0x98, 0xae, 0x60,
	0x55, 0x53, 0x43, 0xdf, 0x04, 0x2a, 0xde, 0xb5, 0x8c, 0x0b, 0x92, 0x77, 0xa0, 0x78, 0xe0, 0x0c,
	0x05, 0xc7, 0xd2, 0xa7, 0x2e, 0x92, 0x21, 0x16, 0x65, 0xe8, 0x18, 0x0e, 0x62, 0x7a, 0x5f, 0x70,
	0x8f, 0x00, 0xb7, 0xdf, 0xd5, 0x18, 0x00, 0xfd, 0x01, 0x0f, 0x18, 0xe3, 0xb0, 0x9d, 0x80, 0x5a,
	0x62, 0x4a, 0x20, 0xf7, 0x32, 0x98, 0x21, 0xf0, 0xd9, 0x8c, 0x31, 0x0e, 0x93, 0xa4, 0xf4, 0x87,
	0xd0, 0xc9, 0x46, 0x4f, 0x93, 0x0f, 0xa4, 0xe5, 0x5f, 0x43, 0xed, 0x77, 0x96, 0x80, 0x6e, 0x69,
	0xec, 0xb7, 0x60, 0x2e, 0x13, 0x2c, 0x7d, 0xa2, 0x70, 0xa0, 0x49, 0x77, 0x44, 0xc7, 0xa6, 0x54,
	0x3f, 0x84, 0xb3, 0x93, 0x03, 0xa6, 0x19, 0xd5, 0x1d, 0x55, 0x52, 0xf2, 0x7b, 0x69, 0xf7, 0x64,
	0x7f, 0xf8, 0x21, 0xf1, 0x64, 0x81, 0xd8, 0xaa, 0x2b, 0xe3, 0x6f, 0x4c, 0xaa, 0x58, 0x06, 0x03,
	0xa5, 0x9e, 0x09, 0x88, 0x2f, 0xec, 0xce, 0x18, 0xf6, 0xa4, 0xbf, 0x01, 0xad, 0x74, 0xc4, 0xdb,
	0xf1, 0x67, 0x85, 0x3b, 0x50, 0x93, 0xc1, 0xd7, 0x27, 0x99, 0x2a, 0x56, 0x46, 0xed, 0xcc, 0x7d,
	0x4e, 0x46, 0x9e, 0x77, 0x27, 0x68, 0x18, 0xf1, 0xcc, 0x15, 0x26, 0x9c, 0x82, 0x95, 0xb6, 0xff,
	0xed, 0x02, 0xc0, 0x43, 0x1a, 0x86, 0x66, 0x9f, 0xae, 0xf9, 0x4f, 0x30, 0x6a, 0xc8, 0xa5, 0x41,
	0xd4, 0x1d, 0x84, 0x7d, 0x79, 0x06, 0x45, 0xc0, 0xc3, 0x10, 0x2f, 0x1e, 0x5a, 0xbe, 0xb7, 0xe7,
	0x04, 0x71, 0x38, 0x1a, 0xca, 0x03, 0x5e, 0xc3, 0xbc, 0xc8, 0xe2, 0x71, 0x66, 0x78, 0x1a, 0x79,
	0x0b, 0x88, 0x65, 0x7a, 0x16, 0x75, 0x53, 0xe8, 0x45, 0x19, 0x2b, 0xc1, 0x72, 0x14, 0xec, 0x25,
	0x68, 0x48, 0xea, 0xac, 0xf2, 0x92, 0x78, 0x8e, 0x83, 0x83, 0x58, 0xf5, 0x17, 0x00, 0x04, 0x39,
	0x96, 0x2f, 0xa2, 0x49, 0x38, 0x84, 0x65, 0x7f, 0x24, 0x9c, 0x4a, 0x15, 0xdc, 0x52, 0xd3, 0xf4,
	0xd9, 0xa4, 0xbf, 0xb8, 0xa9, 0xb8, 0xff, 0xc9, 0x86, 0xd2, 0xed, 0x80, 0x9a, 0x8a, 0x9c, 0xd4,
	0x52, 0x72, 0x32, 0x96, 0xaa, 0x05, 0x55, 0xaa, 0x36, 0x41, 0x7b, 0x22, 0x98, 0xae, 0xf6, 0x84,
	0xa5, 0x8e, 0x04, 0x97, 0xd5, 0x8e, 0xd8, 0x86, 0xc0, 0x0b, 0xaf, 0x22, 0x9c, 0x87, 0x7d, 0xeb,
	0x7f, 0x5a, 0x80, 0x9a, 0x8c, 0x9c, 0x27, 0x9f, 0xa0, 0x1f, 0x24, 0xd9, 0x60, 0xd3, 0x35, 0x91,
	0x6d, 0xe7, 0x2b, 0x8a, 0x8a, 0xa1, 0x51, 0x15, 0x07, 0x7f, 0x36, 0x22, 0xfe, 0x10, 0x83, 0x68,
	0x93, 0x38, 0xa4, 0x3a, 0x87, 0x3c, 0x1a, 0x0d, 0xc8, 0x27, 0x50, 0xe5, 0x03, 0x3f, 0xcb, 0x4d,
	0x57, 0xd6, 0x2a, 0x3e, 0x1b, 0x86, 0x2c, 0x45, 0x3e, 0x82, 0x1a, 0x2a, 0x89, 0x8c, 0x7a, 0xfe,
	0x7d, 0x63, 0x46, 0xe1, 0xd1, 0x68, 0x60, 0x54, 0x59, 0x19, 0x56, 0xff, 0x3a, 0xd4, 0x64, 0xc8,
	0x81, 0x30, 0x98, 0x5c, 0xc9, 0x29, 0x2e, 0xe3, 0x3e, 0x8d, 0xb8, 0x20, 0x1b, 0x31, 0x48, 0xda,
	0x46, 0x6e, 0x42, 0xc9, 0x0c, 0xa8, 0x29, 0xc6, 0x6b, 0x69, 0x0a, 0x3d, 0x36, 0x9b, 0x06, 0x22,
	0xe3, 0x4b, 0x35, 0xbe, 0x47, 0x53, 0x1e, 0xd3, 0x3a, 0x83, 0xf0, 0x61, 0x7c, 0x0d, 0x9a, 0x23,
	0x4f, 0x41, 0x10, 0xd6, 0x13, 0x0e, 0x8b, 0xfd, 0x8d, 0xfb, 0x66, 0xd8, 0x3d, 0xf0, 0x23, 0x6a,
	0x8b, 0x0b, 0xaf, 0xb5, 0x7d, 0x33, 0x64, 0x0d, 0xb3, 0xc9, 0x5d, 0x68, 0x0c, 0xf8, 0x92, 0xea,
	0xf6, 0xfc, 0x27, 0xa2, 0xab, 0x97, 0x66, 0x5a, 0x80, 0x06, 0x0c, 0x92, 0xcd, 0xb7, 0x04, 0x0d,
	0xbc, 0x81, 0x91, 0xba, 0x4c, 0x0d, 0x0c, 0x24, 0xb4, 0x84, 0xd7, 0xa1, 0x2d, 0xb4, 0x4e, 0xc6,
	0x06, 0x62, 0xf3, 0xbf, 0xd1, 0xe4, 0x50, 0xc6, 0x0e, 0x36, 0x6d, 0xfd, 0x31, 0x54, 0xc5, 0x54,
	0x3c, 0xdd, 0x68, 0x8d, 0x85, 0xb5, 0xe9, 0xff, 0xb4, 0x00, 0x4d, 0x75, 0x7a, 0x9e, 0x8e, 0xee,
	0x1a, 0x94, 0xb9, 0x59, 0xa7, 0x80, 0x3b, 0xf4, 0xad, 0x19, 0xd7, 0x02, 0x9a, 0x7d, 0x0c, 0x5e,
	0x94, 0x3c, 0x4a, 0x3b, 0xb6, 0xbf, 0x3b, 0x23, 0x8d, 0x54, 0x42, 0x61, 0xa4, 0x8b, 0x3f, 0x81,
	0x4e, 0x36, 0x8b, 0x07, 0x60, 0x26, 0x01, 0x74, 0x3c, 0x31, 0x21, 0xd8, 0x6f, 0x7c, 0x36, 0x8a,
	0x13, 0x66, 0xe3, 0xef, 0x6a, 0x7c, 0x3a, 0x9e, 0xaf, 0x0e, 0xfb, 0x51, 0x46, 0x87, 0xcd, 0xdb,
	0xd9, 0x69, 0x15, 0x56, 0xdf, 0xe7, 0x5c, 0x08, 0x15, 0xbf, 0xcc, 0xaa, 0xd3, 0xc6, 0x56, 0xdd,
	0x79, 0x85, 0x0b, 0xf0, 0xee, 0xc7, 0x3b, 0xfc, 0x55, 0x68, 0x5a, 0xa6, 0x87, 0xdb, 0x02, 0xb3,
	0x45, 0x74, 0xac, 0x65, 0x7a, 0x62, 0x05, 0xea, 0xff, 0x58, 0xe3, 0xdb, 0x37, 0x69, 0xb7, 0x69,
	0xe1, 0x21, 0x47, 0xc3, 0x45, 0x30, 0xad, 0xdd, 0xb7, 0x11, 0x11, 0x59, 0xb4, 0x28, 0x24, 0x5f,
	0x81, 0x10, 0x93, 0x10, 0x72, 0x77, 0x6d, 0x3f, 0x71, 0xe0, 0xf6, 0xc5, 0xbb, 0x10, 0xe9, 0x69,
	0x29, 0x8d, 0x4f, 0x4b, 0x1c, 0x82, 0x50, 0x56, 0x42, 0x10, 0xfe, 0x49, 0x01, 0xad, 0x2d, 0xf1,
	0x05, 0x24, 0x51, 0x9b, 0x96, 0xaa, 0x6d, 0x90, 0xd4, 0xaf, 0x2a, 0xb7, 0xc5, 0x09, 0xca, 0x6d,
	0x69, 0x5c, 0xb9, 0x2d, 0x4f, 0x08, 0x8d, 0x48, 0x45, 0xfc, 0x28, 0xaa, 0x43, 0x35, 0xa5, 0x3a,
	0xc8, 0x05, 0x58, 0x4b, 0x16, 0xa0, 0x1a, 0x6e, 0x5d, 0xcf, 0x84, 0x5b, 0x7f, 0x0a, 0x15, 0x71,
	0x4d, 0x1e, 0x72, 0xfd, 0xaf, 0xa2, 0xcf, 0x82, 0xfb, 0x8b, 0x72, 0x3c, 0x38, 0xc2, 0xa6, 0x5d,
	0x79, 0xa1, 0x8b, 0x55, 0xde, 0xe0, 0xb7, 0xcd, 0x19, 0x5c, 0x14, 0x62, 0x73, 0xfc, 0x9f, 0x0a,
	0xd0, 0x4a, 0xd1, 0x20, 0xb7, 0xa0, 0xd4, 0xf7, 0x23, 0x5f, 0x4c, 0xf2, 0x0c, 0xf7, 0xbf, 0xee,
	0xf9, 0x91, 0x6f, 0x60, 0x99, 0x2c, 0x37, 0x2d, 0x3c, 0x2d, 0x37, 0xbd, 0x04, 0x6d, 0xd9, 0x74,
	0xb1, 0xb4, 0x8b, 0x22, 0xea, 0x91, 0x43, 0x93, 0xd5, 0xcd, 0x38, 0x3b, 0x63, 0xf5, 0x82, 0xb1,
	0x57, 0xf7, 0xcd, 0x70, 0xc3, 0xf7, 0x90, 0xe9, 0xa3, 0x54, 0x40, 0xb5, 0x85, 0xcf, 0x5c, 0x8d,
	0x01, 0xa4, 0xba, 0x22, 0x84, 0x06, 0x66, 0x0b, 0x66, 0xcd, 0x41, 0x88, 0x20, 0xa3, 0x79, 0xab,
	0x4a, 0x34, 0xef, 0x6b, 0xd0, 0x74, 0xc2, 0xee, 0xbe, 0xd3, 0xdf, 0xc7, 0x48, 0x12, 0xf1, 0x30,
	0x41, 0xc3, 0x09, 0xef, 0x4b, 0x10, 0x5f, 0x28, 0xf2, 0x2d, 0x13, 0xf6, 0xa9, 0xff, 0x52, 0x03,
	0x10, 0xc3, 0xf4, 0xdb, 0xf3, 0xd1, 0x1b, 0xea, 0xa0, 0xc5, 0x7c, 0xe4, 0x27, 0xf1, 0xc4, 0xbf,
	0xa0, 0xfd, 0xad, 0xdf, 0x4c, 0xfa, 0xee, 0x1e, 0x4d, 0x98, 0x53, 0x6d, 0xc2, 0x9c, 0xea, 0x57,
	0xa1, 0x93, 0xbd, 0x04, 0xc8, 0xb6, 0x5b, 0x18, 0x29, 0x47, 0x19, 0x4c, 0xe8, 0x23, 0x38, 0x33,
	0xf1, 0x2e, 0xdf, 0x31, 0x5a, 0xb5, 0xba, 0xe3, 0x0a, 0xc7, 0x5f, 0x70, 0x28, 0x8e, 0xed, 0xdc,
	0xcc, 0x29, 0xe8, 0xa7, 0x70, 0x76, 0xf2, 0xa5, 0x3e, 0x72, 0x4b, 0x3d, 0x71, 0xcd, 0xaa, 0x10,
	0x9e, 0xec, 0x9a, 0x86, 0xfe, 0x0b, 0x0d, 0x16, 0x8f, 0xbf, 0xdf, 0xf7, 0x5c, 0xbb, 0x3e, 0xf9,
	0x91, 0xa0, 0x31, 0x66, 0xa8, 0xff, 0xcb, 0x02, 0x9c, 0x3f, 0xf6, 0xde, 0xdf, 0x73, 0x77, 0xa8,
	0xa4, 0x82, 0x28, 0x4b, 0x53, 0x83, 0x28, 0xcb, 0xd9, 0x20, 0xca, 0xd8, 0x04, 0x5a, 0x79, 0x16,
	0xd7, 0x45, 0xf5, 0x39, 0x19, 0x1e, 0x6b, 0x13, 0x0c, 0x8f, 0x4f, 0x92, 0xd5, 0x1f, 0xdb, 0xee,
	0x96, 0xa0, 0xa1, 0x9e, 0xc1, 0x84, 0x90, 0xef, 0x25, 0xa7, 0xaf, 0x37, 0x61, 0x3e, 0x1c, 0x0d,
	0x69, 0xe0, 0x99, 0x91, 0xe9, 0x45, 0x5d, 0x75, 0x9e, 0x3b, 0x4a, 0xc6, 0x4e, 0xe6, 0x5d, 0x9d,
	0xa2, 0xfa, 0xc4, 0x8d, 0xfe, 0x9b, 0x32, 0x90, 0xf1, 0xfb, 0x8e, 0x9c, 0x55, 0xe2, 0x9d, 0x49,
	0xb5, 0x72, 0x0e, 0xc2, 0xca, 0x5f, 0x86, 0x7a, 0x92, 0x2d, 0x16, 0x57, 0x9c, 0x79, 0x1f, 0xca,
	0x96, 0x99, 0xf8, 0xf3, 0x56, 0x4f, 0x74, 0xd7, 0x72, 0x85, 0x1b, 0x38, 0x90, 0xc0, 0xe2, 0x5f,
	0x94, 0xa0, 0x34, 0xe5, 0x66, 0xb1, 0xf6, 0xe2, 0x6f, 0x16, 0x17, 0xbe, 0xd5, 0x9b, 0xc5, 0xc5,
	0xdf, 0xc2, 0xcd, 0xe2, 0xd2, 0x6f, 0xef, 0x66, 0x71, 0xf9, 0x05, 0xdd, 0x2c, 0xce, 0xde, 0x97,
	0xfb, 0x2b, 0x2d, 0xe1, 0xde, 0xdb, 0xc9, 0xd6, 0x78, 0xbe, 0xb2, 0xf9, 0x41, 0x46, 0x36, 0xcf,
	0xd2, 0x2d, 0xa5, 0x31, 0x2f, 0xc0, 0x64, 0xed, 0x27, 0x1c, 0x7a, 0xac, 0xa2, 0x38, 0xe8, 0xcb,
	0xf1, 0x6c, 0xfa, 0x44, 0x68, 0xcc, 0x18, 0xf4, 0x85, 0x8f, 0x71, 0x1e, 0x1b, 0x2b, 0x36, 0xcd,
	0x76, 0xad, 0x87, 0x70, 0x6e, 0xe2, 0x30, 0x3f, 0x93, 0xb1, 0x3a, 0xd3, 0xd2, 0x42, 0xa6, 0xa5,
	0xfa, 0x9f, 0x96, 0x00, 0x92, 0x7b, 0xd5, 0x69, 0x49, 0xa1, 0x4d, 0x95, 0x14, 0x85, 0xa9, 0xe1,
	0xf6, 0xc5, 0x6c, 0xb8, 0xfd, 0x32, 0xcc, 0x67, 0x9d, 0xfa, 0x52, 0x16, 0xcd, 0xa5, 0xbd, 0xfa,
	0x37, 0x26, 0xe1, 0x4a, 0xc9, 0x94, 0xc1, 0x5d, 0x65, 0x2a, 0x26, 0xde, 0xf6, 0x91, 0x02, 0x99,
	0x2b, 0xa6, 0x0d, 0x06, 0x93, 0x61, 0xcf, 0x2f, 0x43, 0x1d, 0x51, 0x14, 0xf5, 0xb4, 0xc6, 0x00,
	0x68, 0xa2, 0xde, 0x82, 0x96, 0x78, 0xdb, 0x4b, 0x9c, 0x1f, 0x6a, 0xb9, 0xee, 0xb6, 0xad, 0xfe,
	0x01, 0xb7, 0xbc, 0x8b, 0x13, 0x44, 0x73, 0x4f, 0x49, 0x25, 0x2a, 0x40, 0x4b, 0x55, 0x01, 0xde,
	0x3b, 0x61, 0xe4, 0xbf, 0x14, 0xa3, 0xb1, 0x2a, 0x30, 0xa7, 0xaa, 0x02, 0x69, 0xe1, 0xda, 0x79,
	0x3a, 0xe1, 0x2a, 0x34, 0xef, 0xf9, 0x58, 0xf3, 0x9e, 0x2d, 0x7c, 0xff, 0xe7, 0x45, 0x68, 0xaa,
	0x97, 0xe7, 0x27, 0x3a, 0x6d, 0xb5, 0x89, 0x4e, 0xdb, 0x69, 0x3a, 0xd5, 0xd8, 0x3c, 0x14, 0x9f,
	0xd7, 0x3c, 0x94, 0x26, 0xce, 0x43, 0xf9, 0x29, 0xe7, 0xa1, 0x72, 0xfc, 0x3c, 0x54, 0x9f, 0x69,
	0x1e, 0x6a, 0x53, 0xe6, 0xa1, 0x3e, 0x61, 0x1e, 0x7e, 0xa3, 0xc1, 0x5c, 0x66, 0x04, 0xb2, 0x8e,
	0x22, 0x6d, 0xcc, 0x51, 0xb4, 0x04, 0x0d, 0x31, 0xca, 0x8a, 0xee, 0x01, 0x1c, 0x24, 0x8f, 0x79,
	0xf2, 0xa9, 0x3b, 0xe5, 0x1e, 0x10, 0x07, 0xc9, 0x2b, 0x1e, 0xa8, 0xc9, 0xc4, 0x34, 0xf8, 0xf0,
	0x36, 0x25, 0x10, 0xa9, 0xa8, 0x48, 0xca, 0x15, 0xcf, 0x18, 0x49, 0x52, 0x12, 0x28, 0x29, 0x03,
	0xa0, 0x98, 0x45, 0x71, 0xb4, 0x09, 0xa1, 0xa1, 0xbc, 0xac, 0xf0, 0x2d, 0xe9, 0x75, 0xff, 0x55,
	0x83, 0xf9, 0xad, 0xfe, 0xc1, 0x0b, 0x13, 0x76, 0xf7, 0x32, 0xc2, 0xee, 0xfa, 0xf4, 0x45, 0xfe,
	0x62, 0xe5, 0xdc, 0xef, 0xc1, 0xe9, 0x49, 0x75, 0xbc, 0x10, 0x11, 0xe7, 0x01, 0xc9, 0x8e, 0xeb,
	0x0b, 0x95, 0x6e, 0x7f, 0xa4, 0x41, 0x93, 0xaf, 0xfd, 0xad, 0xfe, 0xc1, 0xf3, 0x9d, 0xc3, 0xb5,
	0xcc, 0x1c, 0x4e, 0x63, 0x54, 0x71, 0x13, 0x32, 0xe6, 0x84, 0x01, 0xcc, 0x65, 0xb2, 0x9e, 0xd5,
	0xa0, 0x90, 0xba, 0x6c, 0xc1, 0x1f, 0xf3, 0x8e, 0x2f, 0x5b, 0xe8, 0x37, 0xd5, 0xc1, 0x70, 0x8f,
	0xc6, 0x37, 0xa0, 0x36, 0x61, 0x03, 0xfe, 0x00, 0xda, 0xe9, 0xa7, 0x48, 0xc8, 0x27, 0x69, 0x3f,
	0xde, 0x6c, 0x8f, 0x98, 0xa8, 0xde, 0xbc, 0x75, 0x95, 0xa4, 0x7c, 0x65, 0x31, 0x59, 0x34, 0x5a,
	0xc6, 0xa7, 0x3f, 0xf9, 0x69, 0xdf, 0x5b, 0x78, 0x25, 0x46, 0x3c, 0x62, 0x72, 0x1e, 0x6a, 0xfc,
	0x2d, 0x94, 0xe4, 0x61, 0x60, 0x4c, 0x2b, 0x86, 0xcf, 0x42, 0xf2, 0xe8, 0xaf, 0xfe, 0x7b, 0x00,
	0xc9, 0x1b, 0x19, 0xd9, 0x77, 0xf1, 0x35, 0x61, 0xd3, 0x4d, 0xde, 0xc5, 0xff, 0x5e, 0xda, 0x27,
	0x9b, 0xff, 0xf4, 0x86, 0xda, 0xd9, 0xbf, 0xd4, 0xa0, 0x2a, 0x5e, 0x4d, 0xc9, 0xaf, 0xe9, 0x83,
	0xb4, 0xcb, 0xe0, 0xe2, 0xf4, 0x97, 0x58, 0x52, 0x9e, 0x82, 0xef, 0xa6, 0x3d, 0x05, 0x39, 0x8f,
	0xb8, 0x28, 0x2d, 0x4c, 0xb9, 0xe5, 0x4a, 0x4f, 0xe1, 0x96, 0xd3, 0x7f, 0xa6, 0xc9, 0xf1, 0x7c,
	0x1a, 0xff, 0x72, 0xfa, 0x99, 0xf3, 0xe2, 0x53, 0x3d, 0x73, 0xae, 0xff, 0x49, 0x01, 0x47, 0xf9,
	0x69, 0xea, 0xe7, 0x77, 0xc6, 0xcc, 0x9e, 0x4b, 0xbb, 0xf8, 0xc4, 0x89, 0x7c, 0x09, 0x56, 0x00,
	0xf1, 0x69, 0x11, 0xf1, 0x06, 0x6d, 0x82, 0xd4, 0x8d, 0x7c, 0x33, 0x94, 0xb2, 0x6f, 0x5e, 0x45,
	0xdd, 0x61, 0x19, 0xe4, 0xfb, 0x63, 0xf7, 0x16, 0xcb, 0x27, 0x18, 0xd9, 0xcc, 0xed, 0xc6, 0x2d,
	0xe8, 0x28, 0xd7, 0xa2, 0x39, 0xb9, 0xca, 0x09, 0xc8, 0xcd, 0x25, 0xa5, 0xf9, 0x84, 0x59, 0x50,
	0x8f, 0x73, 0x8f, 0x89, 0x79, 0x38, 0x2e, 0x7c, 0x2a, 0x76, 0x0b, 0x17, 0x55, 0xb7, 0x30, 0x81,
	0x52, 0xe8, 0x7c, 0x25, 0x23, 0x6e, 0xf0, 0x5b, 0xff, 0xe3, 0x02, 0x34, 0xd5, 0x37, 0x7e, 0x8e,
	0xb1, 0x6a, 0xb1, 0xfd, 0xe9, 0x24, 0xd1, 0x32, 0xec, 0x3b, 0x69, 0x52, 0x51, 0x6d, 0xd2, 0x45,
	0x68, 0xc5, 0xaf, 0xaa, 0x2b, 0x4f, 0xae, 0xc8, 0xa7, 0xd6, 0x77, 0xa4, 0xf5, 0x6f, 0x10, 0xff,
	0x62, 0x00, 0x7a, 0x2c, 0x52, 0x57, 0x27, 0x2b, 0x99, 0xab, 0x93, 0x32, 0x13, 0xfd, 0x17, 0xd5,
	0x24, 0xf3, 0xae, 0x69, 0x51, 0xc6, 0x55, 0x30, 0x33, 0xd1, 0xce, 0xaa, 0x2c, 0xbd, 0x1b, 0xb8,
	0x64, 0x03, 0x6a, 0x7b, 0xd4, 0x8c, 0x46, 0x01, 0x0d, 0x17, 0xea, 0xb8, 0xe1, 0xae, 0xe6, 0x3e,
	0x1c, 0x74, 0x97, 0x17, 0x30, 0xe2, 0x92, 0xfa, 0x5d, 0x68, 0xa5, 0xb2, 0x26, 0xbe, 0xaf, 0xfc,
	0x1a, 0x34, 0x7b, 0x7e, 0x80, 0x0f, 0x2b, 0x29, 0x37, 0x08, 0x1b, 0x1c, 0xc6, 0x2f, 0x84, 0x53,
	0x68, 0x28, 0xaf, 0x1e, 0x1d, 0x33, 0xd0, 0x9f, 0xa6, 0xb9, 0xd8, 0xf2, 0x6c, 0x4f, 0x28, 0xa9,
	0xac, 0xec, 0x36, 0xcc, 0x65, 0x72, 0x8e, 0xa9, 0x6a, 0x21, 0xfd, 0x74, 0x8d, 0x12, 0x0f, 0x32,
	0x90, 0x24, 0xe2, 0x00, 0x92, 0x63, 0x48, 0x6c, 0xa4, 0x5b, 0xbb, 0x32, 0xfb, 0xb3, 0x4c, 0x6a,
	0x8b, 0xef, 0xc0, 0xa9, 0x09, 0xb9, 0x27, 0x6e, 0xf5, 0x7f, 0x2b, 0x40, 0x53, 0x7d, 0xa2, 0x89,
	0x7c, 0x2c, 0xf9, 0x34, 0x17, 0xd2, 0x57, 0x67, 0x78, 0xda, 0x29, 0xc5, 0xac, 0x37, 0xa0, 0x1e,
	0xba, 0x7e, 0x94, 0x84, 0xf4, 0xb7, 0x67, 0x7a, 0x1e, 0x6a, 0xdb, 0xf5, 0x23, 0xa3, 0xc6, 0x4a,
	0x8a, 0xc8, 0xff, 0xe4, 0xbe, 0x41, 0x31, 0xd7, 0xf3, 0xf4, 0x38, 0x79, 0x0d, 0x21, 0xbe, 0x97,
	0xc0, 0xf6, 0x14, 0x53, 0xa4, 0x47, 0x01, 0x4d, 0x5d, 0x07, 0x6e, 0x0a, 0x60, 0x7c, 0xc9, 0xd7,
	0x1b, 0x0d, 0xe4, 0x9e, 0xf2, 0xe2, 0x9b, 0xbc, 0xf1, 0x7b, 0xd3, 0x95, 0xf8, 0x26, 0xaf, 0x7c,
	0x6f, 0xfa, 0x23, 0x28, 0x7b, 0xbe, 0x4d, 0x43, 0xf1, 0x1b, 0x0f, 0xb3, 0x74, 0xee, 0x91, 0x6f,
	0x53, 0x83, 0x97, 0xd2, 0x77, 0x93, 0xf1, 0x66, 0xe0, 0x89, 0xfb, 0x62, 0xdc, 0x41, 0x9d, 0x69,
	0x55, 0x31, 0xdb, 0x2a, 0xfd, 0x13, 0x68, 0xc4, 0x11, 0x17, 0x4f, 0xf3, 0x7b, 0x29, 0xfa, 0x43,
	0x85, 0x80, 0x7b, 0xc4, 0x96, 0x01, 0x1a, 0xe6, 0x84, 0xde, 0x3a, 0xcb, 0x32, 0xe0, 0xd6, 0x36,
	0x5e, 0x4c, 0xff, 0x43, 0x0d, 0x9a, 0xfc, 0x7e, 0xc9, 0x8e, 0xd9, 0x63, 0x2d, 0x5a, 0x89, 0x7f,
	0x20, 0x28, 0xa7, 0x41, 0xe2, 0x97, 0x83, 0xbe, 0x97, 0xfd, 0xe5, 0xa0, 0xc2, 0xf4, 0x62, 0xa9,
	0x9f, 0x14, 0x52, 0xe4, 0x64, 0x51, 0x95, 0x93, 0xfa, 0xdf, 0x49, 0x35, 0xcb, 0x3d, 0x22, 0x9b,
	0x50, 0xa7, 0x41, 0xd0, 0x75, 0x9d, 0x81, 0x23, 0xfb, 0x3a, 0x2d, 0x9a, 0x21, 0x2e, 0x7b, 0x27,
	0x08, 0x1e, 0xb0, 0x32, 0x46, 0x8d, 0x8a, 0x2f, 0xf2, 0x1e, 0x14, 0x99, 0xea, 0x53, 0xc8, 0x15,
	0x5f, 0x49, 0x03, 0x58, 0x01, 0xfd, 0x2f, 0x34, 0x98, 0x1f, 0xa3, 0xcb, 0xd6, 0x85, 0xe5, 0xdb,
	0xf1, 0x2f, 0x3a, 0xb0, 0x6f, 0xb6, 0x8d, 0x85, 0x57, 0x54, 0x6e, 0x63, 0x91, 0x24, 0xdf, 0x8f,
	0x7d, 0xc4, 0x5c, 0xcb, 0xb8, 0x79, 0x92, 0x3e, 0xac, 0xa4, 0xdd, 0xc5, 0x8b, 0xef, 0x40, 0x45,
	0x1c, 0xba, 0x8f, 0x8d, 0x7e, 0x93, 0x27, 0xfb, 0x42, 0xe2, 0xdb, 0xfc, 0xeb, 0x02, 0xd4, 0x63,
	0xd2, 0x64, 0x1d, 0xaa, 0xbd, 0x7e, 0x72, 0x91, 0xbb, 0x3d, 0x95, 0x29, 0xc7, 0xc5, 0xd6, 0xfa,
	0x5c, 0xe5, 0xef, 0xe1, 0x7f, 0x71, 0xbb, 0x5c, 0x0d, 0xf5, 0x89, 0xe3, 0xa5, 0xd4, 0x8b, 0xe7,
	0xc5, 0xf4, 0xc5, 0xf3, 0x4d, 0xf1, 0x82, 0x6a, 0x1c, 0x28, 0xdb, 0x9e, 0x6d, 0x4a, 0xd9, 0xc9,
	0x1d, 0xab, 0xc7, 0x87, 0x54, 0xb1, 0x01, 0xc7, 0xbc, 0x8b, 0x53, 0x3e, 0xee, 0x5d, 0x9c, 0x63,
	0xdf, 0xba, 0xa9, 0x1c, 0xff, 0xd6, 0xcd, 0xc7, 0x52, 0x1c, 0x54, 0x73, 0x85, 0x6d, 0xd2, 0x54,
	0x45, 0x10, 0xfc, 0x61, 0x11, 0x5a, 0xa9, 0x0c, 0xf2, 0x61, 0xca, 0x65, 0x3f, 0x13, 0x41, 0xc5,
	0x69, 0x9f, 0xfc, 0x92, 0x57, 0x61, 0xea, 0x2f, 0x79, 0x15, 0xc7, 0x7f, 0xc9, 0x2b, 0x16, 0x3e,
	0xa5, 0xac, 0xbb, 0x51, 0xf4, 0x5a, 0xfc, 0x68, 0x40, 0x9c, 0x9e, 0xf0, 0x08, 0x46, 0x65, 0xd2,
	0x23, 0x18, 0x6f, 0x4c, 0x50, 0x13, 0xb9, 0x4a, 0x93, 0x55, 0x00, 0x27, 0x98, 0x9c, 0x14, 0x66,
	0x50, 0x4f, 0x29, 0xcd, 0x17, 0x84, 0x7a, 0xce, 0xdb, 0x2c, 0x5f, 0x51, 0x91, 0xb7, 0x80, 0xd9,
	0x12, 0xc3, 0xec, 0xbd, 0xf8, 0x4d, 0x35, 0xa4, 0x73, 0x77, 0xc2, 0xab, 0x0a, 0xcd, 0xb1, 0x57,
	0x15, 0xf4, 0x3f, 0xd0, 0xa0, 0x1e, 0xbf, 0xdd, 0xf7, 0xec, 0xf1, 0x81, 0xb7, 0xd2, 0x4a, 0x43,
	0xee, 0x8b, 0x81, 0xea, 0x0a, 0xf9, 0x45, 0x45, 0x34, 0x45, 0x9e, 0x21, 0xe4, 0x4b, 0x71, 0x5a,
	0xea, 0x99, 0x39, 0x19, 0x09, 0x56, 0x38, 0x49, 0x24, 0xd8, 0x7a, 0x7c, 0xa8, 0xe7, 0x62, 0xfa,
	0xcd, 0x59, 0x1a, 0x26, 0x8e, 0xf7, 0xf1, 0xd1, 0xfe, 0x31, 0xc4, 0xd1, 0xd0, 0x5d, 0xd3, 0x8a,
	0xc4, 0x51, 0x2d, 0x97, 0xd4, 0x6d, 0x2b, 0x92, 0x21, 0xd5, 0xfc, 0xc1, 0x61, 0xfe, 0x7d, 0xdb,
	0x8a, 0xc8, 0x43, 0x68, 0x30, 0xd1, 0x40, 0x43, 0x4e, 0xb0, 0x9c, 0xff, 0xa4, 0x7a, 0x4c, 0x10,
	0x4b, 0xdd, 0x7f, 0xc9, 0x00, 0x41, 0x80, 0x91, 0xdb, 0x85, 0xb9, 0x20, 0x4a, 0x7e, 0xdb, 0x81,
	0x91, 0xac, 0xcc, 0xdc, 0x46, 0x29, 0x1f, 0xf1, 0xb5, 0xed, 0x38, 0xc5, 0xc8, 0x7e, 0x0e, 0x1d,
	0x2f, 0x4b, 0xb7, 0xfa, 0x34, 0x74, 0xdb, 0x5e, 0x9a, 0xf0, 0x3d, 0xa8, 0x73, 0xe7, 0x21, 0xa3,
	0x58, 0xcb, 0x95, 0xe0, 0x92, 0x22, 0x2e, 0x35, 0x7c, 0x49, 0x9a, 0x7d, 0x08, 0x42, 0xe2, 0xd5,
	0x04, 0x2b, 0x12, 0xb7, 0x75, 0x66, 0x21, 0x84, 0xd7, 0xc2, 0xf1, 0xa5, 0x7b, 0x7c, 0x64, 0xc1,
	0x8a, 0xf4, 0x9f, 0x42, 0x85, 0x4f, 0x3a, 0x69, 0x03, 0xdc, 0xb6, 0xa2, 0x5d, 0xef, 0x0b, 0xcf,
	0x3f, 0xf4, 0x3a, 0x2f, 0x91, 0x39, 0x68, 0x28, 0x13, 0xd9, 0xd1, 0x04, 0x82, 0x98, 0x88, 0x4e,
	0x81, 0xcc, 0x43, 0x8b, 0xa5, 0x77, 0x64, 0x07, 0x3b, 0x45, 0x42, 0xa0, 0x7d, 0xdb, 0x8a, 0x1e,
	0x29, 0xb0, 0x12, 0x69, 0x42, 0x4d, 0x76, 0xa1, 0x53, 0x16, 0x29, 0x6c, 0x47, 0xa7, 0xb2, 0x36,
	0xc7, 0x7f, 0x04, 0xd1, 0xf7, 0xa4, 0xe3, 0xef, 0x16, 0x74, 0xb2, 0x4b, 0x48, 0x72, 0x0e, 0x2d,
	0xe1, 0x1c, 0x13, 0x23, 0xaf, 0xf5, 0x7f, 0xad, 0x01, 0xc1, 0xc2, 0xa2, 0x89, 0x1b, 0x48, 0x92,
	0xc7, 0x44, 0x9a, 0x91, 0x94, 0x77, 0x6f, 0xe5, 0x0d, 0x93, 0x28, 0x8d, 0xea, 0xbb, 0xc1, 0x8b,
	0x1e, 0xfb, 0x83, 0x33, 0x93, 0x4f, 0x8d, 0x99, 0xf0, 0xaa, 0xd2, 0x53, 0x86, 0x57, 0xe9, 0xff,
	0xa0, 0x00, 0x73, 0x99, 0xf5, 0x4f, 0xda, 0x50, 0x88, 0x19, 0x44, 0xc1, 0xb1, 0xc9, 0x5d, 0xa8,
	0x05, 0xf4, 0x4b, 0x55, 0xab, 0x7f, 0x73, 0xc6, 0x0e, 0xa2, 0x48, 0xad, 0x06, 0xf4, 0x4b, 0x94,
	0xa8, 0xf1, 0x28, 0x15, 0x9f, 0x7e, 0x94, 0xee, 0x41, 0x95, 0x4f, 0x63, 0xb8, 0x50, 0x42, 0x6e,
	0x78, 0x6d, 0x46, 0x2a, 0x7c, 0xa6, 0x0c, 0x59, 0x1a, 0x9f, 0xb1, 0x3b, 0xf2, 0xac, 0x6e, 0xea,
	0x27, 0xc7, 0xb8, 0x88, 0x9a, 0x63, 0x19, 0xca, 0xb3, 0xae, 0xfa, 0x2f, 0x8a, 0xc9, 0x92, 0x89,
	0x83, 0x67, 0xdf, 0x53, 0xe3, 0x4b, 0x67, 0xf9, 0x25, 0x28, 0x11, 0x81, 0xfa, 0x29, 0xe0, 0xdd,
	0x6a, 0x75, 0x38, 0x2f, 0x4e, 0x35, 0xb2, 0x7a, 0x7c, 0x18, 0x6b, 0x7b, 0xe2, 0x8b, 0xc7, 0x59,
	0x78, 0x51, 0x17, 0x6d, 0x13, 0xc2, 0x16, 0xcd, 0x00, 0x4c, 0x74, 0x90, 0x1f, 0x41, 0x33, 0xf9,
	0x59, 0x21, 0x5b, 0x2a, 0x41, 0xef, 0x9f, 0x80, 0xa7, 0xac, 0x6c, 0xc8, 0xdf, 0x1e, 0xb2, 0xa9,
	0xd1, 0xb0, 0x93, 0x84, 0x6a, 0xe8, 0x93, 0x27, 0xa7, 0xe4, 0xa7, 0x36, 0x1f, 0x89, 0x87, 0x33,
	0xcd, 0xa0, 0x4f, 0x23, 0xe5, 0xfc, 0x54, 0xe7, 0x10, 0x76, 0x50, 0xd9, 0x84, 0x86, 0x42, 0x9b,
	0xed, 0xe4, 0x0d, 0xf9, 0xab, 0x3f, 0x0a, 0x47, 0x10, 0xb0, 0xf5, 0x51, 0x10, 0x74, 0x34, 0x72,
	0x06, 0xe6, 0x15, 0xc0, 0x0e, 0xd2, 0xea, 0x14, 0xf4, 0x4b, 0xd0, 0x4a, 0x71, 0xae, 0x63, 0xde,
	0xec, 0xf8, 0x1f, 0xa5, 0x04, 0x0f, 0x19, 0x02, 0xda, 0x1d, 0xb8, 0xab, 0x45, 0x45, 0x17, 0xee,
	0x17, 0xf9, 0xec, 0x56, 0x09, 0x87, 0x8e, 0x4f, 0xce, 0xea, 0xac, 0x3c, 0x8f, 0xff, 0xc8, 0x1e,
	0x8e, 0x1a, 0x96, 0x27, 0x1f, 0xc6, 0x4f, 0x23, 0x14, 0x73, 0x05, 0x77, 0x22, 0xf6, 0x45, 0x19,
	0xc9, 0x92, 0x4a, 0x09, 0x4b, 0xda, 0x94, 0xc7, 0xf3, 0x32, 0x36, 0xec, 0xe6, 0xc9, 0x1a, 0x96,
	0x3a, 0xa9, 0x4f, 0xf6, 0xfb, 0xc5, 0x4b, 0xba, 0x7a, 0xb2, 0x25, 0xbd, 0x04, 0x0d, 0xe5, 0x37,
	0x62, 0xe4, 0x0b, 0x58, 0xc9, 0x2f, 0xbe, 0x90, 0x3b, 0xc0, 0xf5, 0x23, 0x31, 0xe6, 0xf5, 0x13,
	0x68, 0x41, 0xfc, 0x7d, 0xaa, 0x4d, 0xe9, 0xe5, 0xe4, 0xe6, 0x54, 0x38, 0xd1, 0xfb, 0x74, 0xfa,
	0xbb, 0x00, 0xc9, 0x10, 0x90, 0x16, 0xd4, 0x1f, 0xec, 0x24, 0x2b, 0xae, 0x01, 0xd5, 0x07, 0x3b,
	0xd8, 0x9d, 0x8e, 0xc6, 0x13, 0x5c, 0x8e, 0x14, 0xf4, 0xf7, 0xa1, 0x1e, 0x4f, 0x29, 0x96, 0x7a,
	0x98, 0x2e, 0xf5, 0x90, 0x23, 0xa2, 0xd4, 0x7a, 0xf0, 0x30, 0x96, 0x62, 0x05, 0xfd, 0x4f, 0x32,
	0x52, 0xe2, 0xf9, 0x38, 0x41, 0x38, 0x5b, 0x2e, 0x4c, 0x64, 0xcb, 0xc5, 0xa7, 0x67, 0xcb, 0xfa,
	0x9f, 0x6b, 0xd0, 0xbe, 0x6f, 0x7a, 0xb6, 0xb0, 0xf4, 0x3e, 0x5f, 0x7f, 0xd2, 0x9d, 0x8c, 0x3f,
	0x69, 0x56, 0x76, 0x9d, 0xf1, 0x08, 0x9e, 0x86, 0xb2, 0xfa, 0x43, 0xad, 0x3c, 0xa1, 0xef, 0xa4,
	0x1b, 0xee, 0x1e, 0x3d, 0x0f, 0x41, 0xac, 0xbb, 0x30, 0x97, 0x79, 0xd3, 0x9b, 0x7c, 0x17, 0x4a,
	0x4c, 0x9d, 0x9e, 0x41, 0x7d, 0x4f, 0x14, 0x70, 0x2c, 0x81, 0x6f, 0x0b, 0x8e, 0x22, 0xfa, 0x04,
	0x7f, 0x34, 0x8f, 0x6b, 0xf0, 0x75, 0x03, 0x10, 0xb4, 0xcb, 0x20, 0xcb, 0xd7, 0xa1, 0xa9, 0xfe,
	0x50, 0x1c, 0xd3, 0x78, 0xb6, 0x71, 0x82, 0x36, 0xe8, 0x9e, 0x39, 0x72, 0xa3, 0xce, 0x4b, 0x4c,
	0x9f, 0xd9, 0x8e, 0x0c, 0xd3, 0xb3, 0xfd, 0x41, 0xa7, 0xb8, 0x7c, 0x1b, 0x9a, 0xea, 0x65, 0x42,
	0x56, 0xc0, 0xc8, 0x14, 0x98, 0x83, 0x06, 0x07, 0x6d, 0x0f, 0x4d, 0x8b, 0x2d, 0xd0, 0x16, 0xd4,
	0x39, 0x60, 0x37, 0x70, 0x3a, 0x85, 0xe5, 0x2b, 0xd0, 0x4e, 0x5f, 0x9e, 0x22, 0x00, 0x95, 0x0d,
	0xc7, 0x74, 0xfd, 0x7e, 0xe7, 0x25, 0x52, 0x87, 0x32, 0x5a, 0xfb, 0x3b, 0xda, 0xf2, 0x43, 0x98,
	0x1f, 0xbb, 0xc3, 0xc1, 0xd8, 0xf6, 0x67, 0x8f, 0xf1, 0x33, 0xa9, 0x71, 0x1e, 0x5a, 0x02, 0xb6,
	0xee, 0x04, 0x96, 0xcb, 0xea, 0x4c, 0x40, 0xdb, 0x5f, 0x8e, 0xcc, 0x80, 0x76, 0x0a, 0xcb, 0x6f,
	0xa2, 0x76, 0x27, 0xd6, 0x35, 0xdb, 0x42, 0x09, 0x81, 0x0a, 0x14, 0x36, 0xfc, 0x8e, 0x46, 0x6a,
	0x50, 0xda, 0xf5, 0x6c, 0xbf, 0x53, 0x58, 0x7e, 0x27, 0x8e, 0xe2, 0x67, 0x07, 0x54, 0x86, 0x2d,
	0x92, 0x7c, 0x44, 0x14, 0xa5, 0x11, 0xa0, 0xb2, 0xeb, 0x99, 0x3d, 0x97, 0x55, 0x71, 0x07, 0x6a,
	0xd2, 0x85, 0x44, 0x4e, 0xc1, 0x9c, 0xfc, 0x4e, 0xb5, 0x54, 0x02, 0xe5, 0xa6, 0x57, 0x40, 0x62,
	0xeb, 0x2f, 0xff, 0x10, 0x5a, 0xe9, 0x4e, 0xcf, 0x43, 0x2b, 0xdb, 0xe7, 0x39, 0x68, 0x70, 0x90,
	0xe1, 0x8f, 0x3c, 0xbb, 0xa3, 0xb1, 0xfa, 0x04, 0x80, 0x5a, 0x91, 0xe9, 0xf5, 0x59, 0x83, 0x18,
	0x6f, 0xe0, 0xc0, 0x47, 0xbe, 0x4d, 0xf9, 0xf4, 0xa9, 0x76, 0x4f, 0xd2, 0x81, 0xe6, 0x63, 0xf6,
	0x91, 0xd0, 0x95, 0x90, 0xad, 0x51, 0xe4, 0x3a, 0x9e, 0x98, 0x3e, 0x84, 0xdc, 0x75, 0x5c, 0xb7,
	0x53, 0x58, 0xfe, 0x38, 0x31, 0xd7, 0xad, 0x99, 0x01, 0xb6, 0x63, 0xcd, 0x0c, 0x12, 0x02, 0x0c,
	0x5d, 0x3e, 0x0e, 0xdb, 0xd1, 0x64, 0xfe, 0x0e, 0xb7, 0x7d, 0x76, 0x0a, 0xcb, 0x9f, 0xc2, 0x5c,
	0xc6, 0xea, 0xc2, 0x70, 0xd6, 0x76, 0xd6, 0x14, 0xae, 0xd8, 0x82, 0x3a, 0x03, 0x48, 0x0e, 0x27,
	0x92, 0x9c, 0x64, 0x61, 0x79, 0x43, 0xb1, 0x5a, 0x49, 0xd3, 0x09, 0xa7, 0xb1, 0xa9, 0xd0, 0xe8,
	0x40, 0x93, 0x01, 0x10, 0x81, 0x3e, 0x61, 0x33, 0xd5, 0x84, 0x1a, 0x83, 0x60, 0xaa, 0xb0, 0xfc,
	0x89, 0x62, 0xbc, 0xc0, 0x39, 0x6e, 0x03, 0xac, 0xed, 0xdc, 0xcb, 0x34, 0xe2, 0xde, 0x23, 0xf3,
	0x31, 0x6f, 0x04, 0x56, 0x70, 0x2f, 0xe1, 0xb3, 0xcb, 0xff, 0x4e, 0x13, 0x7a, 0x99, 0xc2, 0xd7,
	0xd8, 0x4c, 0xad, 0x1b, 0xb8, 0xd6, 0x63, 0x3a, 0xa7, 0xa1, 0xc3, 0x41, 0xdc, 0x4f, 0xbc, 0x1b,
	0x52, 0x36, 0x2e, 0xe7, 0xe0, 0x94, 0x0a, 0xbd, 0x33, 0x74, 0x42, 0x36, 0x45, 0x05, 0xa6, 0x72,
	0xa8, 0x19, 0xeb, 0xfe, 0xc0, 0xb1, 0x3a, 0xc5, 0x84, 0xb0, 0x5c, 0x87, 0x25, 0x72, 0x16, 0x88,
	0x04, 0x59, 0xd4, 0x39, 0xa0, 0xe8, 0x41, 0xe8, 0x94, 0x93, 0x0a, 0x1f, 0x9a, 0xae, 0xfb, 0xb9,
	0xe9, 0x45, 0xf7, 0xfc, 0x4e, 0x85, 0x6d, 0x1c, 0x0e, 0xbd, 0x2d, 0x7e, 0x7f, 0xbd, 0x53, 0x65,
	0x6b, 0x46, 0xb4, 0x76, 0x28, 0xc9, 0xd6, 0x96, 0xb7, 0x60, 0x7e, 0x8c, 0x3b, 0xb1, 0xc1, 0x59,
	0x37, 0xb6, 0x53, 0x12, 0x68, 0xdd, 0xd8, 0xde, 0xf0, 0xe5, 0x0a, 0xc1, 0x4c, 0x9b, 0x25, 0x0b,
	0x02, 0x77, 0x83, 0xfb, 0xef, 0x3a, 0x45, 0xb6, 0x2b, 0xa4, 0x1e, 0xc9, 0x6a, 0x94, 0xdf, 0x09,
	0x31, 0x02, 0x6d, 0x09, 0x7c, 0xe4, 0x07, 0x03, 0xd3, 0xed, 0x68, 0x6c, 0xfa, 0x24, 0x6c, 0xcd,
	0x77, 0xed, 0x4e, 0x61, 0xf5, 0xcf, 0x9a, 0x50, 0x7f, 0x84, 0xdc, 0x8e, 0x9d, 0x0f, 0xdf, 0x83,
	0xd2, 0x63, 0xc7, 0xeb, 0x93, 0xb3, 0x63, 0x6f, 0xcc, 0xdd, 0x19, 0x0c, 0xa3, 0xa3, 0xc5, 0x63,
	0xe0, 0xe4, 0x07, 0x50, 0xe6, 0xb1, 0x16, 0x53, 0xaf, 0xca, 0x8a, 0x5f, 0xff, 0x5e, 0xbc, 0x98,
	0xe3, 0x33, 0xc5, 0x50, 0x8b, 0x9f, 0x00, 0x24, 0xbf, 0x95, 0x4f, 0xae, 0xe6, 0xff, 0x1a, 0xef,
	0x09, 0x88, 0xeb, 0xc5, 0x3f, 0x28, 0x68, 0xa4, 0x07, 0x0d, 0xe5, 0xf7, 0xda, 0xc9, 0xd4, 0xdf,
	0xbe, 0x4b, 0xfd, 0xae, 0xfb, 0x09, 0xea, 0xf8, 0x5d, 0xe4, 0x5d, 0xbc, 0x82, 0xcb, 0x39, 0x8e,
	0xee, 0x93, 0x53, 0xff, 0x21, 0x54, 0xe5, 0x63, 0x6d, 0x97, 0xf2, 0x5f, 0x71, 0x64, 0xb4, 0x2f,
	0xcf, 0x82, 0x16, 0x0e, 0xc9, 0x2e, 0x54, 0xf8, 0x1b, 0x64, 0xe4, 0xf5, 0x19, 0x7e, 0x01, 0xf2,
	0xcb, 0xc5, 0x4b, 0x33, 0x60, 0x85, 0x43, 0xf2, 0x3b, 0x8c, 0xc9, 0xf3, 0xc8, 0x30, 0x72, 0x79,
	0x86, 0x77, 0x6d, 0x18, 0xe9, 0x2b, 0x33, 0xe1, 0x85, 0x43, 0x62, 0x40, 0x19, 0x1f, 0x4d, 0x98,
	0xba, 0x08, 0xe5, 0xab, 0x15, 0x8b, 0xaf, 0xe7, 0x23, 0x85, 0x43, 0xb2, 0x05, 0x25, 0x26, 0x2d,
	0x49, 0xde, 0xed, 0xda, 0xbc, 0x79, 0x8b, 0xef, 0xf4, 0x7d, 0x1e, 0xcb, 0xbc, 0xa9, 0x53, 0x96,
	0xdc, 0x2a, 0x5a, 0x9c, 0x05, 0xcd, 0x3d, 0x22, 0x3f, 0x85, 0x53, 0x13, 0x62, 0x72, 0xc9, 0x8d,
	0x93, 0x45, 0x27, 0xb3, 0x0a, 0x57, 0x4f, 0x5a, 0x24, 0x1c, 0x92, 0x01, 0xb4, 0xd3, 0xe1, 0x52,
	0xe4, 0xad, 0x99, 0x23, 0xc5, 0x58, 0x9d, 0xd7, 0x4e, 0x80, 0x1d, 0x0e, 0xc9, 0x8f, 0xa1, 0x1e,
	0xc7, 0x07, 0x91, 0x2b, 0xb3, 0xc4, 0x33, 0xe5, 0xad, 0xa4, 0x54, 0xb8, 0xd1, 0x8f, 0xa0, 0x16,
	0xdb, 0x04, 0x66, 0x71, 0x54, 0xe6, 0xed, 0x2c, 0xd5, 0x13, 0xf7, 0x63, 0xd5, 0xad, 0x72, 0x65,
	0x26, 0xb7, 0x52, 0x4e, 0xd3, 0x53, 0x0e, 0x30, 0x0b, 0x1a, 0x8a, 0xfe, 0x3c, 0x95, 0xa9, 0xa5,
	0x0f, 0x08, 0x8b, 0xb3, 0xa2, 0xba, 0x47, 0x6b, 0xe7, 0x7f, 0xf5, 0x5f, 0x5e, 0xd1, 0x7e, 0xf5,
	0xeb, 0x57, 0xb4, 0x7f, 0xf3, 0xeb, 0x57, 0xb4, 0xbf, 0xfc, 0xf5, 0x2b, 0xda, 0x2f, 0x7f, 0xf3,
	0xca, 0x4b, 0x3f, 0x2a, 0x9a, 0x43, 0xa7, 0x57, 0x41, 0xc9, 0x70, 0xf3, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xf3, 0x77, 0x1a, 0x86, 0xf4, 0x88, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NativeActClient is the client API for NativeAct service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NativeActClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// NA详情
	Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (*PageResp, error)
	// 话题页
	TopicIndex(ctx context.Context, in *TopicIndexReq, opts ...grpc.CallOption) (*PageResp, error)
	// 内嵌页
	InlineIndex(ctx context.Context, in *InlineIndexReq, opts ...grpc.CallOption) (*PageResp, error)
	// Tab页
	TabIndex(ctx context.Context, in *TabIndexReq, opts ...grpc.CallOption) (*PageResp, error)
	// 动态列表
	Dynamic(ctx context.Context, in *DynamicReq, opts ...grpc.CallOption) (*DynamicResp, error)
	// 编辑推荐卡-二级列表
	Editor(ctx context.Context, in *EditorReq, opts ...grpc.CallOption) (*EditorResp, error)
	// 资源小卡-二级列表
	Resource(ctx context.Context, in *ResourceReq, opts ...grpc.CallOption) (*ResourceResp, error)
	// 视频大卡-二级列表
	Video(ctx context.Context, in *VideoReq, opts ...grpc.CallOption) (*VideoResp, error)
	// 投票组件-投票
	Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteResp, error)
	// UP主预约-预约
	Reserve(ctx context.Context, in *ReserveReq, opts ...grpc.CallOption) (*ReserveRly, error)
	// 时间轴-浮层
	TimelineSupernatant(ctx context.Context, in *TimelineSupernatantReq, opts ...grpc.CallOption) (*TimelineSupernatantResp, error)
	// OGV剧集卡-浮层
	OgvSupernatant(ctx context.Context, in *OgvSupernatantReq, opts ...grpc.CallOption) (*OgvSupernatantResp, error)
	// OGV-追剧
	FollowOgv(ctx context.Context, in *FollowOgvReq, opts ...grpc.CallOption) (*FollowOgvRly, error)
	// 进度条进度
	Progress(ctx context.Context, in *ProgressReq, opts ...grpc.CallOption) (*ProgressRly, error)
	// 底栏
	BottomTab(ctx context.Context, in *BottomTabReq, opts ...grpc.CallOption) (*BottomTabRly, error)
	// 自定义点击-处理action=request
	HandleClick(ctx context.Context, in *HandleClickReq, opts ...grpc.CallOption) (*HandleClickRly, error)
}

type nativeActClient struct {
	cc *grpc.ClientConn
}

func NewNativeActClient(cc *grpc.ClientConn) NativeActClient {
	return &nativeActClient{cc}
}

func (c *nativeActClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (*PageResp, error) {
	out := new(PageResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Index", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *nativeActClient) TopicIndex(ctx context.Context, in *TopicIndexReq, opts ...grpc.CallOption) (*PageResp, error) {
	out := new(PageResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/TopicIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *nativeActClient) InlineIndex(ctx context.Context, in *InlineIndexReq, opts ...grpc.CallOption) (*PageResp, error) {
	out := new(PageResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/InlineIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *nativeActClient) TabIndex(ctx context.Context, in *TabIndexReq, opts ...grpc.CallOption) (*PageResp, error) {
	out := new(PageResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/TabIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Dynamic(ctx context.Context, in *DynamicReq, opts ...grpc.CallOption) (*DynamicResp, error) {
	out := new(DynamicResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Dynamic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Editor(ctx context.Context, in *EditorReq, opts ...grpc.CallOption) (*EditorResp, error) {
	out := new(EditorResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Editor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Resource(ctx context.Context, in *ResourceReq, opts ...grpc.CallOption) (*ResourceResp, error) {
	out := new(ResourceResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Resource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Video(ctx context.Context, in *VideoReq, opts ...grpc.CallOption) (*VideoResp, error) {
	out := new(VideoResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Video", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Vote(ctx context.Context, in *VoteReq, opts ...grpc.CallOption) (*VoteResp, error) {
	out := new(VoteResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Reserve(ctx context.Context, in *ReserveReq, opts ...grpc.CallOption) (*ReserveRly, error) {
	out := new(ReserveRly)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Reserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) TimelineSupernatant(ctx context.Context, in *TimelineSupernatantReq, opts ...grpc.CallOption) (*TimelineSupernatantResp, error) {
	out := new(TimelineSupernatantResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/TimelineSupernatant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) OgvSupernatant(ctx context.Context, in *OgvSupernatantReq, opts ...grpc.CallOption) (*OgvSupernatantResp, error) {
	out := new(OgvSupernatantResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/OgvSupernatant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) FollowOgv(ctx context.Context, in *FollowOgvReq, opts ...grpc.CallOption) (*FollowOgvRly, error) {
	out := new(FollowOgvRly)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/FollowOgv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) Progress(ctx context.Context, in *ProgressReq, opts ...grpc.CallOption) (*ProgressRly, error) {
	out := new(ProgressRly)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/Progress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) BottomTab(ctx context.Context, in *BottomTabReq, opts ...grpc.CallOption) (*BottomTabRly, error) {
	out := new(BottomTabRly)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/BottomTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nativeActClient) HandleClick(ctx context.Context, in *HandleClickReq, opts ...grpc.CallOption) (*HandleClickRly, error) {
	out := new(HandleClickRly)
	err := c.cc.Invoke(ctx, "/bilibili.app.nativeact.v1.NativeAct/HandleClick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NativeActServer is the server API for NativeAct service.
type NativeActServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
	// NA详情
	Index(context.Context, *IndexReq) (*PageResp, error)
	// 话题页
	TopicIndex(context.Context, *TopicIndexReq) (*PageResp, error)
	// 内嵌页
	InlineIndex(context.Context, *InlineIndexReq) (*PageResp, error)
	// Tab页
	TabIndex(context.Context, *TabIndexReq) (*PageResp, error)
	// 动态列表
	Dynamic(context.Context, *DynamicReq) (*DynamicResp, error)
	// 编辑推荐卡-二级列表
	Editor(context.Context, *EditorReq) (*EditorResp, error)
	// 资源小卡-二级列表
	Resource(context.Context, *ResourceReq) (*ResourceResp, error)
	// 视频大卡-二级列表
	Video(context.Context, *VideoReq) (*VideoResp, error)
	// 投票组件-投票
	Vote(context.Context, *VoteReq) (*VoteResp, error)
	// UP主预约-预约
	Reserve(context.Context, *ReserveReq) (*ReserveRly, error)
	// 时间轴-浮层
	TimelineSupernatant(context.Context, *TimelineSupernatantReq) (*TimelineSupernatantResp, error)
	// OGV剧集卡-浮层
	OgvSupernatant(context.Context, *OgvSupernatantReq) (*OgvSupernatantResp, error)
	// OGV-追剧
	FollowOgv(context.Context, *FollowOgvReq) (*FollowOgvRly, error)
	// 进度条进度
	Progress(context.Context, *ProgressReq) (*ProgressRly, error)
	// 底栏
	BottomTab(context.Context, *BottomTabReq) (*BottomTabRly, error)
	// 自定义点击-处理action=request
	HandleClick(context.Context, *HandleClickReq) (*HandleClickRly, error)
}

// UnimplementedNativeActServer can be embedded to have forward compatible implementations.
type UnimplementedNativeActServer struct {
}

func (*UnimplementedNativeActServer) Ping(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedNativeActServer) Index(ctx context.Context, req *IndexReq) (*PageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Index not implemented")
}
func (*UnimplementedNativeActServer) TopicIndex(ctx context.Context, req *TopicIndexReq) (*PageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopicIndex not implemented")
}
func (*UnimplementedNativeActServer) InlineIndex(ctx context.Context, req *InlineIndexReq) (*PageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InlineIndex not implemented")
}
func (*UnimplementedNativeActServer) TabIndex(ctx context.Context, req *TabIndexReq) (*PageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TabIndex not implemented")
}
func (*UnimplementedNativeActServer) Dynamic(ctx context.Context, req *DynamicReq) (*DynamicResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dynamic not implemented")
}
func (*UnimplementedNativeActServer) Editor(ctx context.Context, req *EditorReq) (*EditorResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Editor not implemented")
}
func (*UnimplementedNativeActServer) Resource(ctx context.Context, req *ResourceReq) (*ResourceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resource not implemented")
}
func (*UnimplementedNativeActServer) Video(ctx context.Context, req *VideoReq) (*VideoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Video not implemented")
}
func (*UnimplementedNativeActServer) Vote(ctx context.Context, req *VoteReq) (*VoteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Vote not implemented")
}
func (*UnimplementedNativeActServer) Reserve(ctx context.Context, req *ReserveReq) (*ReserveRly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reserve not implemented")
}
func (*UnimplementedNativeActServer) TimelineSupernatant(ctx context.Context, req *TimelineSupernatantReq) (*TimelineSupernatantResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimelineSupernatant not implemented")
}
func (*UnimplementedNativeActServer) OgvSupernatant(ctx context.Context, req *OgvSupernatantReq) (*OgvSupernatantResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OgvSupernatant not implemented")
}
func (*UnimplementedNativeActServer) FollowOgv(ctx context.Context, req *FollowOgvReq) (*FollowOgvRly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FollowOgv not implemented")
}
func (*UnimplementedNativeActServer) Progress(ctx context.Context, req *ProgressReq) (*ProgressRly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Progress not implemented")
}
func (*UnimplementedNativeActServer) BottomTab(ctx context.Context, req *BottomTabReq) (*BottomTabRly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BottomTab not implemented")
}
func (*UnimplementedNativeActServer) HandleClick(ctx context.Context, req *HandleClickReq) (*HandleClickRly, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleClick not implemented")
}

func RegisterNativeActServer(s *grpc.Server, srv NativeActServer) {
	s.RegisterService(&_NativeAct_serviceDesc, srv)
}

func _NativeAct_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Index(ctx, req.(*IndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_TopicIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).TopicIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/TopicIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).TopicIndex(ctx, req.(*TopicIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_InlineIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InlineIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).InlineIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/InlineIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).InlineIndex(ctx, req.(*InlineIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_TabIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TabIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).TabIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/TabIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).TabIndex(ctx, req.(*TabIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Dynamic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynamicReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Dynamic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Dynamic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Dynamic(ctx, req.(*DynamicReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Editor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Editor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Editor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Editor(ctx, req.(*EditorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Resource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Resource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Resource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Resource(ctx, req.(*ResourceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Video_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Video(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Video",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Video(ctx, req.(*VideoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Vote(ctx, req.(*VoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Reserve(ctx, req.(*ReserveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_TimelineSupernatant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimelineSupernatantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).TimelineSupernatant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/TimelineSupernatant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).TimelineSupernatant(ctx, req.(*TimelineSupernatantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_OgvSupernatant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OgvSupernatantReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).OgvSupernatant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/OgvSupernatant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).OgvSupernatant(ctx, req.(*OgvSupernatantReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_FollowOgv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowOgvReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).FollowOgv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/FollowOgv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).FollowOgv(ctx, req.(*FollowOgvReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_Progress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProgressReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).Progress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/Progress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).Progress(ctx, req.(*ProgressReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_BottomTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BottomTabReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).BottomTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/BottomTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).BottomTab(ctx, req.(*BottomTabReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NativeAct_HandleClick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleClickReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NativeActServer).HandleClick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.nativeact.v1.NativeAct/HandleClick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NativeActServer).HandleClick(ctx, req.(*HandleClickReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NativeAct_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.app.nativeact.v1.NativeAct",
	HandlerType: (*NativeActServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _NativeAct_Ping_Handler,
		},
		{
			MethodName: "Index",
			Handler:    _NativeAct_Index_Handler,
		},
		{
			MethodName: "TopicIndex",
			Handler:    _NativeAct_TopicIndex_Handler,
		},
		{
			MethodName: "InlineIndex",
			Handler:    _NativeAct_InlineIndex_Handler,
		},
		{
			MethodName: "TabIndex",
			Handler:    _NativeAct_TabIndex_Handler,
		},
		{
			MethodName: "Dynamic",
			Handler:    _NativeAct_Dynamic_Handler,
		},
		{
			MethodName: "Editor",
			Handler:    _NativeAct_Editor_Handler,
		},
		{
			MethodName: "Resource",
			Handler:    _NativeAct_Resource_Handler,
		},
		{
			MethodName: "Video",
			Handler:    _NativeAct_Video_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _NativeAct_Vote_Handler,
		},
		{
			MethodName: "Reserve",
			Handler:    _NativeAct_Reserve_Handler,
		},
		{
			MethodName: "TimelineSupernatant",
			Handler:    _NativeAct_TimelineSupernatant_Handler,
		},
		{
			MethodName: "OgvSupernatant",
			Handler:    _NativeAct_OgvSupernatant_Handler,
		},
		{
			MethodName: "FollowOgv",
			Handler:    _NativeAct_FollowOgv_Handler,
		},
		{
			MethodName: "Progress",
			Handler:    _NativeAct_Progress_Handler,
		},
		{
			MethodName: "BottomTab",
			Handler:    _NativeAct_BottomTab_Handler,
		},
		{
			MethodName: "HandleClick",
			Handler:    _NativeAct_HandleClick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/app-svr/native-act/interface/api/api.proto",
}

func (m *IndexReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IndexReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IndexReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TabFrom) > 0 {
		i -= len(m.TabFrom)
		copy(dAtA[i:], m.TabFrom)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabFrom)))
		i--
		dAtA[i] = 0x72
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x68
	}
	if m.IsColdStart {
		i--
		if m.IsColdStart {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.LocalTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x58
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.CurrentTab) > 0 {
		i -= len(m.CurrentTab)
		copy(dAtA[i:], m.CurrentTab)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CurrentTab)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.FromSpmid) > 0 {
		i -= len(m.FromSpmid)
		copy(dAtA[i:], m.FromSpmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FromSpmid)))
		i--
		dAtA[i] = 0x42
	}
	if m.HttpsUrlReq != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.HttpsUrlReq))
		i--
		dAtA[i] = 0x38
	}
	if m.TabModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabModuleId))
		i--
		dAtA[i] = 0x30
	}
	if m.TabId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.ShareOrigin) > 0 {
		i -= len(m.ShareOrigin)
		copy(dAtA[i:], m.ShareOrigin)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ShareOrigin)))
		i--
		dAtA[i] = 0x22
	}
	if m.DynamicId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DynamicId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ActivityFrom) > 0 {
		i -= len(m.ActivityFrom)
		copy(dAtA[i:], m.ActivityFrom)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ActivityFrom)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicIndexReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicIndexReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicIndexReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsColdStart {
		i--
		if m.IsColdStart {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.LocalTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x58
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.CurrentTab) > 0 {
		i -= len(m.CurrentTab)
		copy(dAtA[i:], m.CurrentTab)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CurrentTab)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.FromSpmid) > 0 {
		i -= len(m.FromSpmid)
		copy(dAtA[i:], m.FromSpmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FromSpmid)))
		i--
		dAtA[i] = 0x42
	}
	if m.HttpsUrlReq != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.HttpsUrlReq))
		i--
		dAtA[i] = 0x38
	}
	if m.TabModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabModuleId))
		i--
		dAtA[i] = 0x30
	}
	if m.TabId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.ShareOrigin) > 0 {
		i -= len(m.ShareOrigin)
		copy(dAtA[i:], m.ShareOrigin)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ShareOrigin)))
		i--
		dAtA[i] = 0x22
	}
	if m.DynamicId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DynamicId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ActivityFrom) > 0 {
		i -= len(m.ActivityFrom)
		copy(dAtA[i:], m.ActivityFrom)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ActivityFrom)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InlineIndexReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InlineIndexReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InlineIndexReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsColdStart {
		i--
		if m.IsColdStart {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.LocalTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x28
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.FromSpmid) > 0 {
		i -= len(m.FromSpmid)
		copy(dAtA[i:], m.FromSpmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FromSpmid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HttpsUrlReq != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.HttpsUrlReq))
		i--
		dAtA[i] = 0x10
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TabIndexReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TabIndexReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TabIndexReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsColdStart {
		i--
		if m.IsColdStart {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.LocalTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x30
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x28
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.FromSpmid) > 0 {
		i -= len(m.FromSpmid)
		copy(dAtA[i:], m.FromSpmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FromSpmid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HttpsUrlReq != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.HttpsUrlReq))
		i--
		dAtA[i] = 0x10
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PageResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PageResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PageResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TopicInfo != nil {
		{
			size, err := m.TopicInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x78
	}
	if m.BottomButton != nil {
		{
			size, err := m.BottomButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.HoverButton != nil {
		{
			size, err := m.HoverButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.TopTab != nil {
		{
			size, err := m.TopTab.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.SponsorType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SponsorType))
		i--
		dAtA[i] = 0x58
	}
	if m.IsEditorFeed {
		i--
		if m.IsEditorFeed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.LayerDynamic != nil {
		{
			size, err := m.LayerDynamic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.IsDynamicFeed {
		i--
		if m.IsDynamicFeed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.ModuleList) > 0 {
		for iNdEx := len(m.ModuleList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ModuleList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Participation != nil {
		{
			size, err := m.Participation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.PageHeader != nil {
		{
			size, err := m.PageHeader.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.PageShare != nil {
		{
			size, err := m.PageShare.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.PageColor != nil {
		{
			size, err := m.PageColor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.IgnoreAppDarkTheme {
		i--
		if m.IgnoreAppDarkTheme {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.IsOnline {
		i--
		if m.IsOnline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.TopicId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PageShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PageShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PageShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SpaceExclusivePageUrl) > 0 {
		i -= len(m.SpaceExclusivePageUrl)
		copy(dAtA[i:], m.SpaceExclusivePageUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SpaceExclusivePageUrl)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.SpacePageUrl) > 0 {
		i -= len(m.SpacePageUrl)
		copy(dAtA[i:], m.SpacePageUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SpacePageUrl)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Sid) > 0 {
		i -= len(m.Sid)
		copy(dAtA[i:], m.Sid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Sid)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Origin) > 0 {
		i -= len(m.Origin)
		copy(dAtA[i:], m.Origin)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Origin)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.OutsideUri) > 0 {
		i -= len(m.OutsideUri)
		copy(dAtA[i:], m.OutsideUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.OutsideUri)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.InsideUri) > 0 {
		i -= len(m.InsideUri)
		copy(dAtA[i:], m.InsideUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.InsideUri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Module) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Module) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsFeed {
		i--
		if m.IsFeed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.ModuleUkey) > 0 {
		i -= len(m.ModuleUkey)
		copy(dAtA[i:], m.ModuleUkey)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ModuleUkey)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SubpageParams) > 0 {
		i -= len(m.SubpageParams)
		copy(dAtA[i:], m.SubpageParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SubpageParams)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ModuleItems) > 0 {
		for iNdEx := len(m.ModuleItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ModuleItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.ModuleSetting != nil {
		{
			size, err := m.ModuleSetting.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ModuleColor != nil {
		{
			size, err := m.ModuleColor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ModuleType) > 0 {
		i -= len(m.ModuleType)
		copy(dAtA[i:], m.ModuleType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ModuleType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SubpageData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubpageData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubpageData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tabs) > 0 {
		for iNdEx := len(m.Tabs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tabs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SubpageTab) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubpageTab) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubpageTab) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sort != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Sort))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Setting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Setting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Setting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PressSave {
		i--
		if m.PressSave {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x78
	}
	if m.DisplayNodeDesc {
		i--
		if m.DisplayNodeDesc {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if m.DisplayNodeNum {
		i--
		if m.DisplayNodeNum {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.DisplayProgressNum {
		i--
		if m.DisplayProgressNum {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.UnfoldRest {
		i--
		if m.UnfoldRest {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.DisplaySubscribeBtn {
		i--
		if m.DisplaySubscribeBtn {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.DisplayViewNum {
		i--
		if m.DisplayViewNum {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.DisplayNum {
		i--
		if m.DisplayNum {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.DisplayUnfoldButton {
		i--
		if m.DisplayUnfoldButton {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.AutoPlay {
		i--
		if m.AutoPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.TopTabFadeAway {
		i--
		if m.TopTabFadeAway {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.TopTabFollowImg {
		i--
		if m.TopTabFollowImg {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.AutoCarousel {
		i--
		if m.AutoCarousel {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.DisplayTitle {
		i--
		if m.DisplayTitle {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.DisplayMoreButton {
		i--
		if m.DisplayMoreButton {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CardDetail != nil {
		{
			size := m.CardDetail.Size()
			i -= size
			if _, err := m.CardDetail.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.CardId) > 0 {
		i -= len(m.CardId)
		copy(dAtA[i:], m.CardId)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CardId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleItem_EditorRecommendCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_EditorRecommendCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.EditorRecommendCard != nil {
		{
			size, err := m.EditorRecommendCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ParticipationCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ParticipationCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ParticipationCard != nil {
		{
			size, err := m.ParticipationCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_HeaderCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_HeaderCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.HeaderCard != nil {
		{
			size, err := m.HeaderCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_DynamicCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_DynamicCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynamicCard != nil {
		{
			size, err := m.DynamicCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TextCard != nil {
		{
			size, err := m.TextCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TextTitleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TextTitleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TextTitleCard != nil {
		{
			size, err := m.TextTitleCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ImageTitleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ImageTitleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ImageTitleCard != nil {
		{
			size, err := m.ImageTitleCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_DynamicMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_DynamicMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynamicMoreCard != nil {
		{
			size, err := m.DynamicMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_DynamicActMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_DynamicActMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynamicActMoreCard != nil {
		{
			size, err := m.DynamicActMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_LiveCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_LiveCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LiveCard != nil {
		{
			size, err := m.LiveCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_CarouselImgCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_CarouselImgCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CarouselImgCard != nil {
		{
			size, err := m.CarouselImgCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_CarouselWordCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_CarouselWordCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CarouselWordCard != nil {
		{
			size, err := m.CarouselWordCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ResourceCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ResourceCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ResourceCard != nil {
		{
			size, err := m.ResourceCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ResourceMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ResourceMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ResourceMoreCard != nil {
		{
			size, err := m.ResourceMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_GameCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_GameCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.GameCard != nil {
		{
			size, err := m.GameCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_VideoCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_VideoCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VideoCard != nil {
		{
			size, err := m.VideoCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_VideoMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_VideoMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VideoMoreCard != nil {
		{
			size, err := m.VideoMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_RecommendCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_RecommendCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RecommendCard != nil {
		{
			size, err := m.RecommendCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_RecommendVerticalCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_RecommendVerticalCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RecommendVerticalCard != nil {
		{
			size, err := m.RecommendVerticalCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_RelativeactCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_RelativeactCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RelativeactCard != nil {
		{
			size, err := m.RelativeactCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_RelativeactCapsuleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_RelativeactCapsuleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RelativeactCapsuleCard != nil {
		{
			size, err := m.RelativeactCapsuleCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_StatementCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_StatementCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StatementCard != nil {
		{
			size, err := m.StatementCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_IconCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_IconCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.IconCard != nil {
		{
			size, err := m.IconCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_VoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_VoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VoteCard != nil {
		{
			size, err := m.VoteCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ReserveCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ReserveCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ReserveCard != nil {
		{
			size, err := m.ReserveCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineHeadCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineHeadCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineHeadCard != nil {
		{
			size, err := m.TimelineHeadCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineEventTextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineEventTextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventTextCard != nil {
		{
			size, err := m.TimelineEventTextCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineEventImageCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineEventImageCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventImageCard != nil {
		{
			size, err := m.TimelineEventImageCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineEventImagetextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineEventImagetextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventImagetextCard != nil {
		{
			size, err := m.TimelineEventImagetextCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineEventResourceCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineEventResourceCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventResourceCard != nil {
		{
			size, err := m.TimelineEventResourceCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineMoreCard != nil {
		{
			size, err := m.TimelineMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TimelineUnfoldCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TimelineUnfoldCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineUnfoldCard != nil {
		{
			size, err := m.TimelineUnfoldCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_OgvOneCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_OgvOneCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OgvOneCard != nil {
		{
			size, err := m.OgvOneCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_OgvThreeCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_OgvThreeCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OgvThreeCard != nil {
		{
			size, err := m.OgvThreeCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_OgvMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_OgvMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.OgvMoreCard != nil {
		{
			size, err := m.OgvMoreCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xe2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_NavigationCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_NavigationCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NavigationCard != nil {
		{
			size, err := m.NavigationCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ReplyCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ReplyCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ReplyCard != nil {
		{
			size, err := m.ReplyCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_TabCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_TabCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TabCard != nil {
		{
			size, err := m.TabCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xfa
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_NewactHeaderCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_NewactHeaderCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NewactHeaderCard != nil {
		{
			size, err := m.NewactHeaderCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_NewactAwardCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_NewactAwardCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NewactAwardCard != nil {
		{
			size, err := m.NewactAwardCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_NewactStatementCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_NewactStatementCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NewactStatementCard != nil {
		{
			size, err := m.NewactStatementCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ProgressCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ProgressCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ProgressCard != nil {
		{
			size, err := m.ProgressCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_SelectCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_SelectCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.SelectCard != nil {
		{
			size, err := m.SelectCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_ClickCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_ClickCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ClickCard != nil {
		{
			size, err := m.ClickCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_HoverButtonCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_HoverButtonCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.HoverButtonCard != nil {
		{
			size, err := m.HoverButtonCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *ModuleItem_BottomButtonCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItem_BottomButtonCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BottomButtonCard != nil {
		{
			size, err := m.BottomButtonCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *GameCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GameCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GameCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Subtitle) > 0 {
		i -= len(m.Subtitle)
		copy(dAtA[i:], m.Subtitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Subtitle)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LiveCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.HasLive != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.HasLive))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LiveItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WatchedShow != nil {
		{
			size, err := m.WatchedShow.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.LiveId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LiveId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x7a
	}
	if m.LastEndTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastEndTime))
		i--
		dAtA[i] = 0x70
	}
	if m.LiveScreenType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LiveScreenType))
		i--
		dAtA[i] = 0x68
	}
	if len(m.ParentAreaName) > 0 {
		i -= len(m.ParentAreaName)
		copy(dAtA[i:], m.ParentAreaName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ParentAreaName)))
		i--
		dAtA[i] = 0x62
	}
	if m.ParentAreaId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ParentAreaId))
		i--
		dAtA[i] = 0x58
	}
	if len(m.AreaName) > 0 {
		i -= len(m.AreaName)
		copy(dAtA[i:], m.AreaName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.AreaName)))
		i--
		dAtA[i] = 0x52
	}
	if m.AreaId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.AreaId))
		i--
		dAtA[i] = 0x48
	}
	if m.Online != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Online))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.PlayType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PlayType))
		i--
		dAtA[i] = 0x28
	}
	if m.RoomType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RoomType))
		i--
		dAtA[i] = 0x20
	}
	if m.LiveStatus != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LiveStatus))
		i--
		dAtA[i] = 0x18
	}
	if m.Uid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x10
	}
	if m.RoomId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RoomId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LiveWatchedShow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveWatchedShow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveWatchedShow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IconLocation) > 0 {
		i -= len(m.IconLocation)
		copy(dAtA[i:], m.IconLocation)
		i = encodeVarintApi(dAtA, i, uint64(len(m.IconLocation)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TextLarge) > 0 {
		i -= len(m.TextLarge)
		copy(dAtA[i:], m.TextLarge)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TextLarge)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TextSmall) > 0 {
		i -= len(m.TextSmall)
		copy(dAtA[i:], m.TextSmall)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TextSmall)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x10
	}
	if m.Switch {
		i--
		if m.Switch {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Color) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Color) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Color) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PanelNtSelectFontColor) > 0 {
		i -= len(m.PanelNtSelectFontColor)
		copy(dAtA[i:], m.PanelNtSelectFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PanelNtSelectFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if len(m.PanelSelectFontColor) > 0 {
		i -= len(m.PanelSelectFontColor)
		copy(dAtA[i:], m.PanelSelectFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PanelSelectFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	if len(m.PanelSelectColor) > 0 {
		i -= len(m.PanelSelectColor)
		copy(dAtA[i:], m.PanelSelectColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PanelSelectColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.PanelBgColor) > 0 {
		i -= len(m.PanelBgColor)
		copy(dAtA[i:], m.PanelBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PanelBgColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.ProgressBarColor) > 0 {
		i -= len(m.ProgressBarColor)
		copy(dAtA[i:], m.ProgressBarColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ProgressBarColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.NtUnselectedBgColor) > 0 {
		i -= len(m.NtUnselectedBgColor)
		copy(dAtA[i:], m.NtUnselectedBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NtUnselectedBgColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if len(m.NtUnselectedFontColor) > 0 {
		i -= len(m.NtUnselectedFontColor)
		copy(dAtA[i:], m.NtUnselectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NtUnselectedFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if len(m.NtSelectedBgColor) > 0 {
		i -= len(m.NtSelectedBgColor)
		copy(dAtA[i:], m.NtSelectedBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NtSelectedBgColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.NtSelectedFontColor) > 0 {
		i -= len(m.NtSelectedFontColor)
		copy(dAtA[i:], m.NtSelectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NtSelectedFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.UnselectedBgColor) > 0 {
		i -= len(m.UnselectedBgColor)
		copy(dAtA[i:], m.UnselectedBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnselectedBgColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.UnselectedFontColor) > 0 {
		i -= len(m.UnselectedFontColor)
		copy(dAtA[i:], m.UnselectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnselectedFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.SelectedBgColor) > 0 {
		i -= len(m.SelectedBgColor)
		copy(dAtA[i:], m.SelectedBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SelectedBgColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.SelectedFontColor) > 0 {
		i -= len(m.SelectedFontColor)
		copy(dAtA[i:], m.SelectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SelectedFontColor)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.SubtitleFontColor) > 0 {
		i -= len(m.SubtitleFontColor)
		copy(dAtA[i:], m.SubtitleFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SubtitleFontColor)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.RcmdFontColor) > 0 {
		i -= len(m.RcmdFontColor)
		copy(dAtA[i:], m.RcmdFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RcmdFontColor)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.TimelineColor) > 0 {
		i -= len(m.TimelineColor)
		copy(dAtA[i:], m.TimelineColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TimelineColor)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.ViewMoreBgColor) > 0 {
		i -= len(m.ViewMoreBgColor)
		copy(dAtA[i:], m.ViewMoreBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ViewMoreBgColor)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ViewMoreFontColor) > 0 {
		i -= len(m.ViewMoreFontColor)
		copy(dAtA[i:], m.ViewMoreFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ViewMoreFontColor)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CardTitleBgColor) > 0 {
		i -= len(m.CardTitleBgColor)
		copy(dAtA[i:], m.CardTitleBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CardTitleBgColor)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.CardTitleFontColor) > 0 {
		i -= len(m.CardTitleFontColor)
		copy(dAtA[i:], m.CardTitleFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CardTitleFontColor)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.CardBgColor) > 0 {
		i -= len(m.CardBgColor)
		copy(dAtA[i:], m.CardBgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CardBgColor)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.IndicatorColor) > 0 {
		i -= len(m.IndicatorColor)
		copy(dAtA[i:], m.IndicatorColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.IndicatorColor)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.TextTitleFontColor) > 0 {
		i -= len(m.TextTitleFontColor)
		copy(dAtA[i:], m.TextTitleFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TextTitleFontColor)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FontColor) > 0 {
		i -= len(m.FontColor)
		copy(dAtA[i:], m.FontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FontColor)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BottomFontColor) > 0 {
		i -= len(m.BottomFontColor)
		copy(dAtA[i:], m.BottomFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BottomFontColor)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TopFontColor) > 0 {
		i -= len(m.TopFontColor)
		copy(dAtA[i:], m.TopFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TopFontColor)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TitleColor) > 0 {
		i -= len(m.TitleColor)
		copy(dAtA[i:], m.TitleColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TitleColor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BgColor) > 0 {
		i -= len(m.BgColor)
		copy(dAtA[i:], m.BgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgColor)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EditorRecommendCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditorRecommendCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditorRecommendCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.MiddleIcon) > 0 {
		i -= len(m.MiddleIcon)
		copy(dAtA[i:], m.MiddleIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.MiddleIcon)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.Setting != nil {
		{
			size, err := m.Setting.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.Share != nil {
		{
			size, err := m.Share.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Position5) > 0 {
		i -= len(m.Position5)
		copy(dAtA[i:], m.Position5)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position5)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Position4) > 0 {
		i -= len(m.Position4)
		copy(dAtA[i:], m.Position4)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position4)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Position3) > 0 {
		i -= len(m.Position3)
		copy(dAtA[i:], m.Position3)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position3)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Position2) > 0 {
		i -= len(m.Position2)
		copy(dAtA[i:], m.Position2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position2)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Position1) > 0 {
		i -= len(m.Position1)
		copy(dAtA[i:], m.Position1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position1)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverImageUri) > 0 {
		i -= len(m.CoverImageUri)
		copy(dAtA[i:], m.CoverImageUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverImageUri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BottomContent) > 0 {
		i -= len(m.BottomContent)
		copy(dAtA[i:], m.BottomContent)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BottomContent)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BottomIcon) > 0 {
		i -= len(m.BottomIcon)
		copy(dAtA[i:], m.BottomIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BottomIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopContent) > 0 {
		i -= len(m.TopContent)
		copy(dAtA[i:], m.TopContent)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TopContent)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TopIcon) > 0 {
		i -= len(m.TopIcon)
		copy(dAtA[i:], m.TopIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TopIcon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ParticipationCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ParticipationCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ParticipationCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.SelectedImage) > 0 {
		i -= len(m.SelectedImage)
		copy(dAtA[i:], m.SelectedImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SelectedImage)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ParticipationCardItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ParticipationCardItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ParticipationCardItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HeaderCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeaderCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HeaderCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x50
	}
	if m.IsSubscribed {
		i--
		if m.IsSubscribed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.DiscussNum) > 0 {
		i -= len(m.DiscussNum)
		copy(dAtA[i:], m.DiscussNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DiscussNum)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ViewNum) > 0 {
		i -= len(m.ViewNum)
		copy(dAtA[i:], m.ViewNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ViewNum)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.LowLightImage) > 0 {
		i -= len(m.LowLightImage)
		copy(dAtA[i:], m.LowLightImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.LowLightImage)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.HighLightImage) > 0 {
		i -= len(m.HighLightImage)
		copy(dAtA[i:], m.HighLightImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.HighLightImage)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SponsorContent) > 0 {
		i -= len(m.SponsorContent)
		copy(dAtA[i:], m.SponsorContent)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SponsorContent)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserImage) > 0 {
		i -= len(m.UserImage)
		copy(dAtA[i:], m.UserImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UserImage)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Share) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Share) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Share) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShareType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ShareType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ShareOrigin) > 0 {
		i -= len(m.ShareOrigin)
		copy(dAtA[i:], m.ShareOrigin)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ShareOrigin)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Oid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Oid))
		i--
		dAtA[i] = 0x10
	}
	if m.DisplayLater {
		i--
		if m.DisplayLater {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Badge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Badge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Badge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BgColorNight) > 0 {
		i -= len(m.BgColorNight)
		copy(dAtA[i:], m.BgColorNight)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgColorNight)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BgColor) > 0 {
		i -= len(m.BgColor)
		copy(dAtA[i:], m.BgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgColor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReportDic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportDic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportDic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AuthorName) > 0 {
		i -= len(m.AuthorName)
		copy(dAtA[i:], m.AuthorName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.AuthorName)))
		i--
		dAtA[i] = 0x4a
	}
	if m.SeasonId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x40
	}
	if m.IsPreview != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.IsPreview))
		i--
		dAtA[i] = 0x38
	}
	if m.EpId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.EpId))
		i--
		dAtA[i] = 0x30
	}
	if m.SubType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SubType))
		i--
		dAtA[i] = 0x28
	}
	if m.Cid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x20
	}
	if m.Aid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SeasonType) > 0 {
		i -= len(m.SeasonType)
		copy(dAtA[i:], m.SeasonType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SeasonType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BizType) > 0 {
		i -= len(m.BizType)
		copy(dAtA[i:], m.BizType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BizType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dynamic != nil {
		{
			size, err := m.Dynamic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x38
	}
	if m.IsColdStart {
		i--
		if m.IsColdStart {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.LocalTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x28
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.FromSpmid) > 0 {
		i -= len(m.FromSpmid)
		copy(dAtA[i:], m.FromSpmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FromSpmid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SortType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SortType))
		i--
		dAtA[i] = 0x28
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x20
	}
	if m.LastGroup != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastGroup))
		i--
		dAtA[i] = 0x18
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x10
	}
	if m.FeedOffset != nil {
		{
			size, err := m.FeedOffset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TextCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TextTitleCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TextTitleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TextTitleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ImageTitleCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ImageTitleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ImageTitleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubpageData != nil {
		{
			size, err := m.SubpageData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicActMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicActMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicActMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubpageData != nil {
		{
			size, err := m.SubpageData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LayerDynamic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LayerDynamic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LayerDynamic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dynamic != nil {
		{
			size, err := m.Dynamic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EditorReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditorReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditorReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EditorParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditorParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditorParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x10
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EditorResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditorResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditorResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CarouselImgCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CarouselImgCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CarouselImgCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Images) > 0 {
		for iNdEx := len(m.Images) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Images[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.ContentStyle != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ContentStyle))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CarouselImgItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CarouselImgItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CarouselImgItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Height != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x30
	}
	if m.TopTab != nil {
		{
			size, err := m.TopTab.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Width != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x20
	}
	if m.Length != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Length))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopTab) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopTab) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopTab) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BarType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BarType))
		i--
		dAtA[i] = 0x38
	}
	if len(m.FontColor) > 0 {
		i -= len(m.FontColor)
		copy(dAtA[i:], m.FontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FontColor)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.TabBottomColor) > 0 {
		i -= len(m.TabBottomColor)
		copy(dAtA[i:], m.TabBottomColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabBottomColor)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TabMiddleColor) > 0 {
		i -= len(m.TabMiddleColor)
		copy(dAtA[i:], m.TabMiddleColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabMiddleColor)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TabTopColor) > 0 {
		i -= len(m.TabTopColor)
		copy(dAtA[i:], m.TabTopColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabTopColor)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BgImage2) > 0 {
		i -= len(m.BgImage2)
		copy(dAtA[i:], m.BgImage2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgImage2)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BgImage1) > 0 {
		i -= len(m.BgImage1)
		copy(dAtA[i:], m.BgImage1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgImage1)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CarouselWordCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CarouselWordCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CarouselWordCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Words) > 0 {
		for iNdEx := len(m.Words) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Words[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ScrollType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ScrollType))
		i--
		dAtA[i] = 0x10
	}
	if m.ContentStyle != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ContentStyle))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CarouselWordItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CarouselWordItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CarouselWordItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x5a
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.CoverLeftIcon2 != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CoverLeftIcon2))
		i--
		dAtA[i] = 0x40
	}
	if len(m.CoverLeftText2) > 0 {
		i -= len(m.CoverLeftText2)
		copy(dAtA[i:], m.CoverLeftText2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText2)))
		i--
		dAtA[i] = 0x3a
	}
	if m.CoverLeftIcon1 != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CoverLeftIcon1))
		i--
		dAtA[i] = 0x30
	}
	if len(m.CoverLeftText1) > 0 {
		i -= len(m.CoverLeftText1)
		copy(dAtA[i:], m.CoverLeftText1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText1)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverRightText) > 0 {
		i -= len(m.CoverRightText)
		copy(dAtA[i:], m.CoverRightText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverRightText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CoverImageUri) > 0 {
		i -= len(m.CoverImageUri)
		copy(dAtA[i:], m.CoverImageUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverImageUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubpageData != nil {
		{
			size, err := m.SubpageData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SortType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SortType))
		i--
		dAtA[i] = 0x20
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TopicOffset) > 0 {
		i -= len(m.TopicOffset)
		copy(dAtA[i:], m.TopicOffset)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TopicOffset)))
		i--
		dAtA[i] = 0x12
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ResourceResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x5a
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.Dimension != nil {
		{
			size, err := m.Dimension.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Rights != nil {
		{
			size, err := m.Rights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLeftText3) > 0 {
		i -= len(m.CoverLeftText3)
		copy(dAtA[i:], m.CoverLeftText3)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText3)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText2) > 0 {
		i -= len(m.CoverLeftText2)
		copy(dAtA[i:], m.CoverLeftText2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText2)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CoverLeftText1) > 0 {
		i -= len(m.CoverLeftText1)
		copy(dAtA[i:], m.CoverLeftText1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText1)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CoverImageUri) > 0 {
		i -= len(m.CoverImageUri)
		copy(dAtA[i:], m.CoverImageUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverImageUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoRights) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoRights) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsPgc {
		i--
		if m.IsPgc {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.IsCooperation {
		i--
		if m.IsCooperation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.UgcPay {
		i--
		if m.UgcPay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PlayerDimension) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerDimension) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerDimension) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rotate {
		i--
		if m.Rotate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Height != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if m.Width != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VideoMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubpageData != nil {
		{
			size, err := m.SubpageData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SortType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SortType))
		i--
		dAtA[i] = 0x20
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TopicOffset) > 0 {
		i -= len(m.TopicOffset)
		copy(dAtA[i:], m.TopicOffset)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TopicOffset)))
		i--
		dAtA[i] = 0x12
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VideoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RedirectType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RedirectType))
		i--
		dAtA[i] = 0x50
	}
	if len(m.RankIcon) > 0 {
		i -= len(m.RankIcon)
		copy(dAtA[i:], m.RankIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RankIcon)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Vip != nil {
		{
			size, err := m.Vip.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Official != nil {
		{
			size, err := m.Official.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.IsFollowed {
		i--
		if m.IsFollowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RcmdVerticalCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdVerticalCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdVerticalCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RelativeactCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelativeactCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RelativeactCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RelativeactCapsuleCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelativeactCapsuleCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RelativeactCapsuleCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RelativeactCapsuleItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RelativeactCapsuleItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RelativeactCapsuleItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatementCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatementCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatementCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IconCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IconCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IconCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *IconItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IconItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IconItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MessageBox) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageBox) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MessageBox) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x30
	}
	if len(m.CancelMsg) > 0 {
		i -= len(m.CancelMsg)
		copy(dAtA[i:], m.CancelMsg)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CancelMsg)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ConfirmMsg) > 0 {
		i -= len(m.ConfirmMsg)
		copy(dAtA[i:], m.ConfirmMsg)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ConfirmMsg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CancelButtonText) > 0 {
		i -= len(m.CancelButtonText)
		copy(dAtA[i:], m.CancelButtonText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CancelButtonText)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ConfirmButtonText) > 0 {
		i -= len(m.ConfirmButtonText)
		copy(dAtA[i:], m.ConfirmButtonText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ConfirmButtonText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AlertMsg) > 0 {
		i -= len(m.AlertMsg)
		copy(dAtA[i:], m.AlertMsg)
		i = encodeVarintApi(dAtA, i, uint64(len(m.AlertMsg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Area) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Area) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Area) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ukey) > 0 {
		i -= len(m.Ukey)
		copy(dAtA[i:], m.Ukey)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Ukey)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Y != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Y))
		i--
		dAtA[i] = 0x20
	}
	if m.X != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.X))
		i--
		dAtA[i] = 0x18
	}
	if m.Width != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x10
	}
	if m.Height != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VoteCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Progress != nil {
		{
			size, err := m.Progress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.LeftNum != nil {
		{
			size, err := m.LeftNum.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Buttons) > 0 {
		for iNdEx := len(m.Buttons) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Buttons[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.OptionNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OptionNum))
		i--
		dAtA[i] = 0x10
	}
	if m.BgImage != nil {
		{
			size, err := m.BgImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SourceItemId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SourceItemId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.VoteParams) > 0 {
		i -= len(m.VoteParams)
		copy(dAtA[i:], m.VoteParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.VoteParams)))
		i--
		dAtA[i] = 0x32
	}
	if m.MessageBox != nil {
		{
			size, err := m.MessageBox.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.HasVoted {
		i--
		if m.HasVoted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.UndoneImage) > 0 {
		i -= len(m.UndoneImage)
		copy(dAtA[i:], m.UndoneImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UndoneImage)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DoneImage) > 0 {
		i -= len(m.DoneImage)
		copy(dAtA[i:], m.DoneImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DoneImage)))
		i--
		dAtA[i] = 0x12
	}
	if m.Area != nil {
		{
			size, err := m.Area.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteNum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteNum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteNum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x10
	}
	if m.Area != nil {
		{
			size, err := m.Area.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteProgress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteProgress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteProgress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Style != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x10
	}
	if m.Area != nil {
		{
			size, err := m.Area.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteProgress_VoteProgressItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteProgress_VoteProgressItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteProgress_VoteProgressItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SourceItemId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SourceItemId))
		i--
		dAtA[i] = 0x18
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CanVoteNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CanVoteNum))
		i--
		dAtA[i] = 0x18
	}
	if m.LeftNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LeftNum))
		i--
		dAtA[i] = 0x10
	}
	if len(m.VoteParams) > 0 {
		i -= len(m.VoteParams)
		copy(dAtA[i:], m.VoteParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.VoteParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SourceItemId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SourceItemId))
		i--
		dAtA[i] = 0x20
	}
	if m.Gid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Gid))
		i--
		dAtA[i] = 0x18
	}
	if m.Sid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Sid))
		i--
		dAtA[i] = 0x10
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReserveCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HideReserveNum {
		i--
		if m.HideReserveNum {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.Subtitle) > 0 {
		i -= len(m.Subtitle)
		copy(dAtA[i:], m.Subtitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Subtitle)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if m.Sid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Sid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReserveButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x4a
	}
	if m.IsHighlight {
		i--
		if m.IsHighlight {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.UndoneText) > 0 {
		i -= len(m.UndoneText)
		copy(dAtA[i:], m.UndoneText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UndoneText)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DoneText) > 0 {
		i -= len(m.DoneText)
		copy(dAtA[i:], m.DoneText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DoneText)))
		i--
		dAtA[i] = 0x2a
	}
	if m.HasDone {
		i--
		if m.HasDone {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.ReserveParams) > 0 {
		i -= len(m.ReserveParams)
		copy(dAtA[i:], m.ReserveParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ReserveParams)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MessageBox != nil {
		{
			size, err := m.MessageBox.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Goto != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Goto))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReserveReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReserveParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Sid))
		i--
		dAtA[i] = 0x10
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReserveRly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReserveRly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReserveRly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ReserveParams) > 0 {
		i -= len(m.ReserveParams)
		copy(dAtA[i:], m.ReserveParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ReserveParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineHeadCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineHeadCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineHeadCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Stage) > 0 {
		i -= len(m.Stage)
		copy(dAtA[i:], m.Stage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Stage)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineEventTextCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineEventTextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineEventTextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Subtitle) > 0 {
		i -= len(m.Subtitle)
		copy(dAtA[i:], m.Subtitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Subtitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineEventImageCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineEventImageCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineEventImageCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Image != nil {
		{
			size, err := m.Image.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineEventImagetextCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineEventImagetextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineEventImagetextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Subtitle) > 0 {
		i -= len(m.Subtitle)
		copy(dAtA[i:], m.Subtitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Subtitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineEventResourceCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineEventResourceCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineEventResourceCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x42
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Position2) > 0 {
		i -= len(m.Position2)
		copy(dAtA[i:], m.Position2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Position1) > 0 {
		i -= len(m.Position1)
		copy(dAtA[i:], m.Position1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CoverImageUri) > 0 {
		i -= len(m.CoverImageUri)
		copy(dAtA[i:], m.CoverImageUri)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverImageUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SupernatantTitle) > 0 {
		i -= len(m.SupernatantTitle)
		copy(dAtA[i:], m.SupernatantTitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SupernatantTitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ButtonText) > 0 {
		i -= len(m.ButtonText)
		copy(dAtA[i:], m.ButtonText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ButtonText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineUnfoldCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineUnfoldCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Cards) > 0 {
		for iNdEx := len(m.Cards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Cards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.FoldText) > 0 {
		i -= len(m.FoldText)
		copy(dAtA[i:], m.FoldText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FoldText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UnfoldText) > 0 {
		i -= len(m.UnfoldText)
		copy(dAtA[i:], m.UnfoldText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnfoldText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineUnfoldCard_Card) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineUnfoldCard_Card) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CardDetail != nil {
		{
			size := m.CardDetail.Size()
			i -= size
			if _, err := m.CardDetail.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *TimelineUnfoldCard_Card_TimelineHeadCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card_TimelineHeadCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineHeadCard != nil {
		{
			size, err := m.TimelineHeadCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *TimelineUnfoldCard_Card_TimelineEventTextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card_TimelineEventTextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventTextCard != nil {
		{
			size, err := m.TimelineEventTextCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *TimelineUnfoldCard_Card_TimelineEventImageCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card_TimelineEventImageCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventImageCard != nil {
		{
			size, err := m.TimelineEventImageCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *TimelineUnfoldCard_Card_TimelineEventImagetextCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card_TimelineEventImagetextCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventImagetextCard != nil {
		{
			size, err := m.TimelineEventImagetextCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *TimelineUnfoldCard_Card_TimelineEventResourceCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineUnfoldCard_Card_TimelineEventResourceCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TimelineEventResourceCard != nil {
		{
			size, err := m.TimelineEventResourceCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *TimelineSupernatantReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineSupernatantReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineSupernatantReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TimelineSupernatantParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineSupernatantParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineSupernatantParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x10
	}
	if m.LastIndex != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastIndex))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TimelineSupernatantResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimelineSupernatantResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimelineSupernatantResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastIndex != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastIndex))
		i--
		dAtA[i] = 0x10
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OgvOneCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvOneCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvOneCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x6a
	}
	if m.FollowButton != nil {
		{
			size, err := m.FollowButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.RcmdIcon) > 0 {
		i -= len(m.RcmdIcon)
		copy(dAtA[i:], m.RcmdIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RcmdIcon)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RcmdContent) > 0 {
		i -= len(m.RcmdContent)
		copy(dAtA[i:], m.RcmdContent)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RcmdContent)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverRightText2) > 0 {
		i -= len(m.CoverRightText2)
		copy(dAtA[i:], m.CoverRightText2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverRightText2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverRightText1) > 0 {
		i -= len(m.CoverRightText1)
		copy(dAtA[i:], m.CoverRightText1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverRightText1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Position3) > 0 {
		i -= len(m.Position3)
		copy(dAtA[i:], m.Position3)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position3)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Position2) > 0 {
		i -= len(m.Position2)
		copy(dAtA[i:], m.Position2)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position2)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Position1) > 0 {
		i -= len(m.Position1)
		copy(dAtA[i:], m.Position1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Position1)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OgvThreeCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvThreeCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvThreeCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ResourceType) > 0 {
		i -= len(m.ResourceType)
		copy(dAtA[i:], m.ResourceType)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ResourceType)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x42
	}
	if m.ReportDic != nil {
		{
			size, err := m.ReportDic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x22
	}
	if m.FollowButton != nil {
		{
			size, err := m.FollowButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Subtitle) > 0 {
		i -= len(m.Subtitle)
		copy(dAtA[i:], m.Subtitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Subtitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CoverLeftText1) > 0 {
		i -= len(m.CoverLeftText1)
		copy(dAtA[i:], m.CoverLeftText1)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CoverLeftText1)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OgvFollowButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvFollowButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvFollowButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FollowParams) > 0 {
		i -= len(m.FollowParams)
		copy(dAtA[i:], m.FollowParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FollowParams)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.UnfollowIcon) > 0 {
		i -= len(m.UnfollowIcon)
		copy(dAtA[i:], m.UnfollowIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnfollowIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.UnfollowText) > 0 {
		i -= len(m.UnfollowText)
		copy(dAtA[i:], m.UnfollowText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnfollowText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FollowIcon) > 0 {
		i -= len(m.FollowIcon)
		copy(dAtA[i:], m.FollowIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FollowIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FollowText) > 0 {
		i -= len(m.FollowText)
		copy(dAtA[i:], m.FollowText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FollowText)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsFollowed {
		i--
		if m.IsFollowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OgvMoreCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvMoreCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvMoreCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SupernatantTitle) > 0 {
		i -= len(m.SupernatantTitle)
		copy(dAtA[i:], m.SupernatantTitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SupernatantTitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ButtonText) > 0 {
		i -= len(m.ButtonText)
		copy(dAtA[i:], m.ButtonText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ButtonText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OgvSupernatantReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvSupernatantReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvSupernatantReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrimaryPageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PrimaryPageId))
		i--
		dAtA[i] = 0x18
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OgvSupernatantParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvSupernatantParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvSupernatantParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x18
	}
	if m.Offset != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x10
	}
	if m.LastIndex != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastIndex))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OgvSupernatantResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OgvSupernatantResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OgvSupernatantResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastIndex != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LastIndex))
		i--
		dAtA[i] = 0x10
	}
	if m.Module != nil {
		{
			size, err := m.Module.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FollowOgvReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowOgvReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowOgvReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FollowOgvParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowOgvParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowOgvParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeasonId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x10
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FollowOgvRly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowOgvRly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowOgvRly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FollowParams) > 0 {
		i -= len(m.FollowParams)
		copy(dAtA[i:], m.FollowParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.FollowParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NavigationCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NavigationCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NavigationCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *NavigationItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NavigationItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NavigationItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.ModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ModuleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReplyCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplyCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplyCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if m.ReplyId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ReplyId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SelectCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.CurrentTab != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CurrentTab))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TabCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TabCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TabCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BgImage != nil {
		{
			size, err := m.BgImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Style != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x10
	}
	if m.CurrentTab != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CurrentTab))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SelectItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SelectItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SelectItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageShare != nil {
		{
			size, err := m.PageShare.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TabItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TabItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TabItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UnselectedImage != nil {
		{
			size, err := m.UnselectedImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.SelectedImage != nil {
		{
			size, err := m.SelectedImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DisableClickToast) > 0 {
		i -= len(m.DisableClickToast)
		copy(dAtA[i:], m.DisableClickToast)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DisableClickToast)))
		i--
		dAtA[i] = 0x22
	}
	if m.DisableClick {
		i--
		if m.DisableClick {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SizeImage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SizeImage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SizeImage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Size_ != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x20
	}
	if m.Width != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x18
	}
	if m.Height != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactHeader) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactHeader) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactHeader) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Features) > 0 {
		for iNdEx := len(m.Features) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Features[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.UserUrl) > 0 {
		i -= len(m.UserUrl)
		copy(dAtA[i:], m.UserUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UserUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.UserFace) > 0 {
		i -= len(m.UserFace)
		copy(dAtA[i:], m.UserFace)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UserFace)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x32
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SponsorTitle) > 0 {
		i -= len(m.SponsorTitle)
		copy(dAtA[i:], m.SponsorTitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SponsorTitle)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Time) > 0 {
		i -= len(m.Time)
		copy(dAtA[i:], m.Time)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Time)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactFeature) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactFeature) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactFeature) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BorderColor) > 0 {
		i -= len(m.BorderColor)
		copy(dAtA[i:], m.BorderColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BorderColor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactAward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactAward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactAward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactAwardItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactAwardItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactAwardItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactStatement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactStatement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactStatement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NewactStatementItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewactStatementItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewactStatementItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProgressCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Nodes) > 0 {
		for iNdEx := len(m.Nodes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Nodes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.DisplayNum) > 0 {
		i -= len(m.DisplayNum)
		copy(dAtA[i:], m.DisplayNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DisplayNum)))
		i--
		dAtA[i] = 0x32
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x28
	}
	if len(m.TextureImage) > 0 {
		i -= len(m.TextureImage)
		copy(dAtA[i:], m.TextureImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TextureImage)))
		i--
		dAtA[i] = 0x22
	}
	if m.BarType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BarType))
		i--
		dAtA[i] = 0x18
	}
	if m.SlotType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SlotType))
		i--
		dAtA[i] = 0x10
	}
	if m.Style != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProgressNode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressNode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressNode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DisplayNum) > 0 {
		i -= len(m.DisplayNum)
		copy(dAtA[i:], m.DisplayNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DisplayNum)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Num != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProgressReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProgressRly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressRly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressRly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Event != nil {
		{
			size, err := m.Event.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BottomTabReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTabReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTabReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x18
	}
	if m.TabModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabModuleId))
		i--
		dAtA[i] = 0x10
	}
	if m.TabId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BottomTabRly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTabRly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTabRly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Tab != nil {
		{
			size, err := m.Tab.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ErrLimit != nil {
		{
			size, err := m.ErrLimit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BottomTabErrLimit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTabErrLimit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTabErrLimit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BottomTabErrLimit_Button) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTabErrLimit_Button) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTabErrLimit_Button) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BottomTab) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTab) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTab) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.UnselectedFontColor) > 0 {
		i -= len(m.UnselectedFontColor)
		copy(dAtA[i:], m.UnselectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnselectedFontColor)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SelectedFontColor) > 0 {
		i -= len(m.SelectedFontColor)
		copy(dAtA[i:], m.SelectedFontColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SelectedFontColor)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IconType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.IconType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.BgColor) > 0 {
		i -= len(m.BgColor)
		copy(dAtA[i:], m.BgColor)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgColor)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BgImage) > 0 {
		i -= len(m.BgImage)
		copy(dAtA[i:], m.BgImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.BgImage)))
		i--
		dAtA[i] = 0x12
	}
	if m.BgType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BgType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BottomTabItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BottomTabItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BottomTabItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ShareOrigin) > 0 {
		i -= len(m.ShareOrigin)
		copy(dAtA[i:], m.ShareOrigin)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ShareOrigin)))
		i--
		dAtA[i] = 0x62
	}
	if m.PageFid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageFid))
		i--
		dAtA[i] = 0x58
	}
	if len(m.PageTitle) > 0 {
		i -= len(m.PageTitle)
		copy(dAtA[i:], m.PageTitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PageTitle)))
		i--
		dAtA[i] = 0x52
	}
	if m.PageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageId))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.UnselectedImage) > 0 {
		i -= len(m.UnselectedImage)
		copy(dAtA[i:], m.UnselectedImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.UnselectedImage)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SelectedImage) > 0 {
		i -= len(m.SelectedImage)
		copy(dAtA[i:], m.SelectedImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SelectedImage)))
		i--
		dAtA[i] = 0x32
	}
	if m.Selected {
		i--
		if m.Selected {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.TabModuleId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabModuleId))
		i--
		dAtA[i] = 0x18
	}
	if m.TabId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabId))
		i--
		dAtA[i] = 0x10
	}
	if m.Goto != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Goto))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ClickCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.BgImage != nil {
		{
			size, err := m.BgImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClickItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ActionDetail != nil {
		{
			size := m.ActionDetail.Size()
			i -= size
			if _, err := m.ActionDetail.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x18
	}
	if m.Area != nil {
		{
			size, err := m.Area.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.AreaId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.AreaId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ClickItem_RedirectAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_RedirectAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RedirectAct != nil {
		{
			size, err := m.RedirectAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ClickItem_RequestAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_RequestAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RequestAct != nil {
		{
			size, err := m.RequestAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ClickItem_RtProgressAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_RtProgressAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RtProgressAct != nil {
		{
			size, err := m.RtProgressAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ClickItem_NrtProgressAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_NrtProgressAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NrtProgressAct != nil {
		{
			size, err := m.NrtProgressAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *ClickItem_ImageAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_ImageAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ImageAct != nil {
		{
			size, err := m.ImageAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *ClickItem_LayerAct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickItem_LayerAct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LayerAct != nil {
		{
			size, err := m.LayerAct.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *ClickActRedirect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickActRedirect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickActRedirect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClickRequestDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickRequestDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickRequestDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MessageBox != nil {
		{
			size, err := m.MessageBox.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x12
	}
	if m.State != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ClickActRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickActRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickActRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SyncHoverButton {
		i--
		if m.SyncHoverButton {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Details) > 0 {
		for iNdEx := len(m.Details) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Details[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.State != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x18
	}
	if m.ReqType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ReqType))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ClickActProgress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickActProgress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickActProgress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TargetNum) > 0 {
		i -= len(m.TargetNum)
		copy(dAtA[i:], m.TargetNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TargetNum)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CurrentNum) > 0 {
		i -= len(m.CurrentNum)
		copy(dAtA[i:], m.CurrentNum)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CurrentNum)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DisplayMode != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DisplayMode))
		i--
		dAtA[i] = 0x20
	}
	if m.FontSize != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.FontSize))
		i--
		dAtA[i] = 0x18
	}
	if m.FontType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.FontType))
		i--
		dAtA[i] = 0x10
	}
	if m.Color != nil {
		{
			size, err := m.Color.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClickActImage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickActImage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickActImage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClickActLayer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickActLayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickActLayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Share != nil {
		{
			size, err := m.Share.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.ShareImage != nil {
		{
			size, err := m.ShareImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ImageTitle) > 0 {
		i -= len(m.ImageTitle)
		copy(dAtA[i:], m.ImageTitle)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ImageTitle)))
		i--
		dAtA[i] = 0x42
	}
	if m.Color != nil {
		{
			size, err := m.Color.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.Style != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Images) > 0 {
		for iNdEx := len(m.Images) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Images[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Mode != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mode))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ButtonImage) > 0 {
		i -= len(m.ButtonImage)
		copy(dAtA[i:], m.ButtonImage)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ButtonImage)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClickRequestParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClickRequestParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClickRequestParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReqType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ReqType))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HandleClickReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HandleClickReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HandleClickReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Spmid) > 0 {
		i -= len(m.Spmid)
		copy(dAtA[i:], m.Spmid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Spmid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.RawParams) > 0 {
		i -= len(m.RawParams)
		copy(dAtA[i:], m.RawParams)
		i = encodeVarintApi(dAtA, i, uint64(len(m.RawParams)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HandleClickRly) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HandleClickRly) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HandleClickRly) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HoverButtonCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HoverButtonCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HoverButtonCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MutexUkeys) > 0 {
		for iNdEx := len(m.MutexUkeys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MutexUkeys[iNdEx])
			copy(dAtA[i:], m.MutexUkeys[iNdEx])
			i = encodeVarintApi(dAtA, i, uint64(len(m.MutexUkeys[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *IndexReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.ActivityFrom)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.DynamicId != 0 {
		n += 1 + sovApi(uint64(m.DynamicId))
	}
	l = len(m.ShareOrigin)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TabId != 0 {
		n += 1 + sovApi(uint64(m.TabId))
	}
	if m.TabModuleId != 0 {
		n += 1 + sovApi(uint64(m.TabModuleId))
	}
	if m.HttpsUrlReq != 0 {
		n += 1 + sovApi(uint64(m.HttpsUrlReq))
	}
	l = len(m.FromSpmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CurrentTab)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovApi(uint64(m.LocalTime))
	}
	if m.IsColdStart {
		n += 2
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	l = len(m.TabFrom)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicIndexReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.ActivityFrom)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.DynamicId != 0 {
		n += 1 + sovApi(uint64(m.DynamicId))
	}
	l = len(m.ShareOrigin)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TabId != 0 {
		n += 1 + sovApi(uint64(m.TabId))
	}
	if m.TabModuleId != 0 {
		n += 1 + sovApi(uint64(m.TabModuleId))
	}
	if m.HttpsUrlReq != 0 {
		n += 1 + sovApi(uint64(m.HttpsUrlReq))
	}
	l = len(m.FromSpmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CurrentTab)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovApi(uint64(m.LocalTime))
	}
	if m.IsColdStart {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InlineIndexReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	if m.HttpsUrlReq != 0 {
		n += 1 + sovApi(uint64(m.HttpsUrlReq))
	}
	l = len(m.FromSpmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovApi(uint64(m.LocalTime))
	}
	if m.IsColdStart {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TabIndexReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	if m.HttpsUrlReq != 0 {
		n += 1 + sovApi(uint64(m.HttpsUrlReq))
	}
	l = len(m.FromSpmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.LocalTime != 0 {
		n += 1 + sovApi(uint64(m.LocalTime))
	}
	if m.IsColdStart {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PageResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsOnline {
		n += 2
	}
	if m.IgnoreAppDarkTheme {
		n += 2
	}
	if m.PageColor != nil {
		l = m.PageColor.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageShare != nil {
		l = m.PageShare.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageHeader != nil {
		l = m.PageHeader.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Participation != nil {
		l = m.Participation.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.ModuleList) > 0 {
		for _, e := range m.ModuleList {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.IsDynamicFeed {
		n += 2
	}
	if m.LayerDynamic != nil {
		l = m.LayerDynamic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IsEditorFeed {
		n += 2
	}
	if m.SponsorType != 0 {
		n += 1 + sovApi(uint64(m.SponsorType))
	}
	if m.TopTab != nil {
		l = m.TopTab.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.HoverButton != nil {
		l = m.HoverButton.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.BottomButton != nil {
		l = m.BottomButton.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	if m.TopicInfo != nil {
		l = m.TopicInfo.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicId != 0 {
		n += 1 + sovApi(uint64(m.TopicId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PageShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovApi(uint64(m.Type))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.InsideUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.OutsideUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Origin)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Sid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SpacePageUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SpaceExclusivePageUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Module) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ModuleType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.ModuleColor != nil {
		l = m.ModuleColor.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ModuleSetting != nil {
		l = m.ModuleSetting.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.ModuleItems) > 0 {
		for _, e := range m.ModuleItems {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	l = len(m.SubpageParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ModuleUkey)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.IsFeed {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SubpageData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Tabs) > 0 {
		for _, e := range m.Tabs {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SubpageTab) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Sort != 0 {
		n += 1 + sovApi(uint64(m.Sort))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Setting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayMoreButton {
		n += 2
	}
	if m.DisplayTitle {
		n += 2
	}
	if m.AutoCarousel {
		n += 2
	}
	if m.TopTabFollowImg {
		n += 2
	}
	if m.TopTabFadeAway {
		n += 2
	}
	if m.AutoPlay {
		n += 2
	}
	if m.DisplayUnfoldButton {
		n += 2
	}
	if m.DisplayNum {
		n += 2
	}
	if m.DisplayViewNum {
		n += 2
	}
	if m.DisplaySubscribeBtn {
		n += 2
	}
	if m.UnfoldRest {
		n += 2
	}
	if m.DisplayProgressNum {
		n += 2
	}
	if m.DisplayNodeNum {
		n += 2
	}
	if m.DisplayNodeDesc {
		n += 2
	}
	if m.PressSave {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CardId)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.CardDetail != nil {
		n += m.CardDetail.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleItem_EditorRecommendCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EditorRecommendCard != nil {
		l = m.EditorRecommendCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ParticipationCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ParticipationCard != nil {
		l = m.ParticipationCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_HeaderCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeaderCard != nil {
		l = m.HeaderCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_DynamicCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicCard != nil {
		l = m.DynamicCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TextCard != nil {
		l = m.TextCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TextTitleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TextTitleCard != nil {
		l = m.TextTitleCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ImageTitleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ImageTitleCard != nil {
		l = m.ImageTitleCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_DynamicMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicMoreCard != nil {
		l = m.DynamicMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_DynamicActMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicActMoreCard != nil {
		l = m.DynamicActMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_LiveCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LiveCard != nil {
		l = m.LiveCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_CarouselImgCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CarouselImgCard != nil {
		l = m.CarouselImgCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_CarouselWordCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CarouselWordCard != nil {
		l = m.CarouselWordCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ResourceCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceCard != nil {
		l = m.ResourceCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ResourceMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceMoreCard != nil {
		l = m.ResourceMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_GameCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GameCard != nil {
		l = m.GameCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_VideoCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VideoCard != nil {
		l = m.VideoCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_VideoMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VideoMoreCard != nil {
		l = m.VideoMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_RecommendCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RecommendCard != nil {
		l = m.RecommendCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_RecommendVerticalCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RecommendVerticalCard != nil {
		l = m.RecommendVerticalCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_RelativeactCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RelativeactCard != nil {
		l = m.RelativeactCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_RelativeactCapsuleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RelativeactCapsuleCard != nil {
		l = m.RelativeactCapsuleCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_StatementCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StatementCard != nil {
		l = m.StatementCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_IconCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IconCard != nil {
		l = m.IconCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_VoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VoteCard != nil {
		l = m.VoteCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ReserveCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReserveCard != nil {
		l = m.ReserveCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineHeadCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineHeadCard != nil {
		l = m.TimelineHeadCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineEventTextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventTextCard != nil {
		l = m.TimelineEventTextCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineEventImageCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventImageCard != nil {
		l = m.TimelineEventImageCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineEventImagetextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventImagetextCard != nil {
		l = m.TimelineEventImagetextCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineEventResourceCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventResourceCard != nil {
		l = m.TimelineEventResourceCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineMoreCard != nil {
		l = m.TimelineMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TimelineUnfoldCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineUnfoldCard != nil {
		l = m.TimelineUnfoldCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_OgvOneCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OgvOneCard != nil {
		l = m.OgvOneCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_OgvThreeCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OgvThreeCard != nil {
		l = m.OgvThreeCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_OgvMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OgvMoreCard != nil {
		l = m.OgvMoreCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_NavigationCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NavigationCard != nil {
		l = m.NavigationCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ReplyCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReplyCard != nil {
		l = m.ReplyCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_TabCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TabCard != nil {
		l = m.TabCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_NewactHeaderCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NewactHeaderCard != nil {
		l = m.NewactHeaderCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_NewactAwardCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NewactAwardCard != nil {
		l = m.NewactAwardCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_NewactStatementCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NewactStatementCard != nil {
		l = m.NewactStatementCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ProgressCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProgressCard != nil {
		l = m.ProgressCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_SelectCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SelectCard != nil {
		l = m.SelectCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_ClickCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClickCard != nil {
		l = m.ClickCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_HoverButtonCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HoverButtonCard != nil {
		l = m.HoverButtonCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ModuleItem_BottomButtonCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BottomButtonCard != nil {
		l = m.BottomButtonCard.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	return n
}
func (m *GameCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Subtitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LiveCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasLive != 0 {
		n += 1 + sovApi(uint64(m.HasLive))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LiveItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoomId != 0 {
		n += 1 + sovApi(uint64(m.RoomId))
	}
	if m.Uid != 0 {
		n += 1 + sovApi(uint64(m.Uid))
	}
	if m.LiveStatus != 0 {
		n += 1 + sovApi(uint64(m.LiveStatus))
	}
	if m.RoomType != 0 {
		n += 1 + sovApi(uint64(m.RoomType))
	}
	if m.PlayType != 0 {
		n += 1 + sovApi(uint64(m.PlayType))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Online != 0 {
		n += 1 + sovApi(uint64(m.Online))
	}
	if m.AreaId != 0 {
		n += 1 + sovApi(uint64(m.AreaId))
	}
	l = len(m.AreaName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ParentAreaId != 0 {
		n += 1 + sovApi(uint64(m.ParentAreaId))
	}
	l = len(m.ParentAreaName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LiveScreenType != 0 {
		n += 1 + sovApi(uint64(m.LiveScreenType))
	}
	if m.LastEndTime != 0 {
		n += 1 + sovApi(uint64(m.LastEndTime))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LiveId != 0 {
		n += 2 + sovApi(uint64(m.LiveId))
	}
	if m.WatchedShow != nil {
		l = m.WatchedShow.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LiveWatchedShow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Switch {
		n += 2
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	l = len(m.TextSmall)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TextLarge)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.IconLocation)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Color) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TitleColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TopFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BottomFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TextTitleFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.IndicatorColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CardBgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CardTitleFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CardTitleBgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ViewMoreFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ViewMoreBgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TimelineColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.RcmdFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SubtitleFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SelectedFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.SelectedBgColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.UnselectedFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.UnselectedBgColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.NtSelectedFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.NtSelectedBgColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.NtUnselectedFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.NtUnselectedBgColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.ProgressBarColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.PanelBgColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.PanelSelectColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.PanelSelectFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.PanelNtSelectFontColor)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditorRecommendCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TopIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TopContent)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BottomIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BottomContent)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverImageUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position3)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position4)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position5)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Share != nil {
		l = m.Share.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Setting != nil {
		l = m.Setting.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.MiddleIcon)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ParticipationCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SelectedImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ParticipationCardItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HeaderCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SponsorContent)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.HighLightImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.LowLightImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ViewNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.DiscussNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IsSubscribed {
		n += 2
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Share) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayLater {
		n += 2
	}
	if m.Oid != 0 {
		n += 1 + sovApi(uint64(m.Oid))
	}
	l = len(m.ShareOrigin)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ShareType != 0 {
		n += 1 + sovApi(uint64(m.ShareType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Badge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BgColorNight)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportDic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BizType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SeasonType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Aid != 0 {
		n += 1 + sovApi(uint64(m.Aid))
	}
	if m.Cid != 0 {
		n += 1 + sovApi(uint64(m.Cid))
	}
	if m.SubType != 0 {
		n += 1 + sovApi(uint64(m.SubType))
	}
	if m.EpId != 0 {
		n += 1 + sovApi(uint64(m.EpId))
	}
	if m.IsPreview != 0 {
		n += 1 + sovApi(uint64(m.IsPreview))
	}
	if m.SeasonId != 0 {
		n += 1 + sovApi(uint64(m.SeasonId))
	}
	l = len(m.AuthorName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dynamic != nil {
		l = m.Dynamic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FromSpmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovApi(uint64(m.LocalTime))
	}
	if m.IsColdStart {
		n += 2
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FeedOffset != nil {
		l = m.FeedOffset.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	if m.LastGroup != 0 {
		n += 1 + sovApi(uint64(m.LastGroup))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.SortType != 0 {
		n += 1 + sovApi(uint64(m.SortType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TextTitleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ImageTitleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SubpageData != nil {
		l = m.SubpageData.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicActMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SubpageData != nil {
		l = m.SubpageData.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LayerDynamic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Dynamic != nil {
		l = m.Dynamic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditorReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditorParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditorResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CarouselImgCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ContentStyle != 0 {
		n += 1 + sovApi(uint64(m.ContentStyle))
	}
	if len(m.Images) > 0 {
		for _, e := range m.Images {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CarouselImgItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Length != 0 {
		n += 1 + sovApi(uint64(m.Length))
	}
	if m.Width != 0 {
		n += 1 + sovApi(uint64(m.Width))
	}
	if m.TopTab != nil {
		l = m.TopTab.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovApi(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopTab) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BgImage1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BgImage2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TabTopColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TabMiddleColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TabBottomColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.BarType != 0 {
		n += 1 + sovApi(uint64(m.BarType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CarouselWordCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ContentStyle != 0 {
		n += 1 + sovApi(uint64(m.ContentStyle))
	}
	if m.ScrollType != 0 {
		n += 1 + sovApi(uint64(m.ScrollType))
	}
	if len(m.Words) > 0 {
		for _, e := range m.Words {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CarouselWordItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverImageUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverRightText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverLeftText1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.CoverLeftIcon1 != 0 {
		n += 1 + sovApi(uint64(m.CoverLeftIcon1))
	}
	l = len(m.CoverLeftText2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.CoverLeftIcon2 != 0 {
		n += 1 + sovApi(uint64(m.CoverLeftIcon2))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SubpageData != nil {
		l = m.SubpageData.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	l = len(m.TopicOffset)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.SortType != 0 {
		n += 1 + sovApi(uint64(m.SortType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ResourceResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverImageUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverLeftText1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverLeftText2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverLeftText3)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Rights != nil {
		l = m.Rights.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Dimension != nil {
		l = m.Dimension.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UgcPay {
		n += 2
	}
	if m.IsCooperation {
		n += 2
	}
	if m.IsPgc {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PlayerDimension) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Width != 0 {
		n += 1 + sovApi(uint64(m.Width))
	}
	if m.Height != 0 {
		n += 1 + sovApi(uint64(m.Height))
	}
	if m.Rotate {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SubpageData != nil {
		l = m.SubpageData.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	l = len(m.TopicOffset)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.SortType != 0 {
		n += 1 + sovApi(uint64(m.SortType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IsFollowed {
		n += 2
	}
	if m.Official != nil {
		l = m.Official.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Vip != nil {
		l = m.Vip.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.RankIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.RedirectType != 0 {
		n += 1 + sovApi(uint64(m.RedirectType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdVerticalCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RelativeactCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RelativeactCapsuleCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RelativeactCapsuleItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatementCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IconCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IconItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessageBox) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AlertMsg)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ConfirmButtonText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CancelButtonText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ConfirmMsg)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CancelMsg)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovApi(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Area) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovApi(uint64(m.Height))
	}
	if m.Width != 0 {
		n += 1 + sovApi(uint64(m.Width))
	}
	if m.X != 0 {
		n += 1 + sovApi(uint64(m.X))
	}
	if m.Y != 0 {
		n += 1 + sovApi(uint64(m.Y))
	}
	l = len(m.Ukey)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BgImage != nil {
		l = m.BgImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.OptionNum != 0 {
		n += 1 + sovApi(uint64(m.OptionNum))
	}
	if len(m.Buttons) > 0 {
		for _, e := range m.Buttons {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.LeftNum != nil {
		l = m.LeftNum.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Progress != nil {
		l = m.Progress.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Area != nil {
		l = m.Area.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.DoneImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UndoneImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.HasVoted {
		n += 2
	}
	if m.MessageBox != nil {
		l = m.MessageBox.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.VoteParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SourceItemId != 0 {
		n += 1 + sovApi(uint64(m.SourceItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteNum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Area != nil {
		l = m.Area.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteProgress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Area != nil {
		l = m.Area.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Style != 0 {
		n += 1 + sovApi(uint64(m.Style))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteProgress_VoteProgressItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	if m.SourceItemId != 0 {
		n += 1 + sovApi(uint64(m.SourceItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.VoteParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LeftNum != 0 {
		n += 1 + sovApi(uint64(m.LeftNum))
	}
	if m.CanVoteNum != 0 {
		n += 1 + sovApi(uint64(m.CanVoteNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	if m.Sid != 0 {
		n += 1 + sovApi(uint64(m.Sid))
	}
	if m.Gid != 0 {
		n += 1 + sovApi(uint64(m.Gid))
	}
	if m.SourceItemId != 0 {
		n += 1 + sovApi(uint64(m.SourceItemId))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReserveCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sid != 0 {
		n += 1 + sovApi(uint64(m.Sid))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	l = len(m.Subtitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.HideReserveNum {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReserveButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Goto != 0 {
		n += 1 + sovApi(uint64(m.Goto))
	}
	if m.MessageBox != nil {
		l = m.MessageBox.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ReserveParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.HasDone {
		n += 2
	}
	l = len(m.DoneText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UndoneText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IsHighlight {
		n += 2
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReserveReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReserveParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	if m.Sid != 0 {
		n += 1 + sovApi(uint64(m.Sid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReserveRly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ReserveParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineHeadCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Stage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineEventTextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Subtitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineEventImageCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Image != nil {
		l = m.Image.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineEventImagetextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Subtitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineEventResourceCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverImageUri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ButtonText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SupernatantTitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineUnfoldCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UnfoldText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FoldText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Cards) > 0 {
		for _, e := range m.Cards {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineUnfoldCard_Card) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardDetail != nil {
		n += m.CardDetail.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineUnfoldCard_Card_TimelineHeadCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineHeadCard != nil {
		l = m.TimelineHeadCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *TimelineUnfoldCard_Card_TimelineEventTextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventTextCard != nil {
		l = m.TimelineEventTextCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *TimelineUnfoldCard_Card_TimelineEventImageCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventImageCard != nil {
		l = m.TimelineEventImageCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *TimelineUnfoldCard_Card_TimelineEventImagetextCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventImagetextCard != nil {
		l = m.TimelineEventImagetextCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *TimelineUnfoldCard_Card_TimelineEventResourceCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimelineEventResourceCard != nil {
		l = m.TimelineEventResourceCard.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *TimelineSupernatantReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineSupernatantParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastIndex != 0 {
		n += 1 + sovApi(uint64(m.LastIndex))
	}
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimelineSupernatantResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LastIndex != 0 {
		n += 1 + sovApi(uint64(m.LastIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvOneCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Position1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Position3)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverRightText1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.CoverRightText2)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.RcmdContent)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.RcmdIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.FollowButton != nil {
		l = m.FollowButton.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 2 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvThreeCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CoverLeftText1)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Subtitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.FollowButton != nil {
		l = m.FollowButton.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ReportDic != nil {
		l = m.ReportDic.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ResourceType)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvFollowButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsFollowed {
		n += 2
	}
	l = len(m.FollowText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FollowIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UnfollowText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UnfollowIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.FollowParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvMoreCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ButtonText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SupernatantTitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvSupernatantReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PrimaryPageId != 0 {
		n += 1 + sovApi(uint64(m.PrimaryPageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvSupernatantParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastIndex != 0 {
		n += 1 + sovApi(uint64(m.LastIndex))
	}
	if m.Offset != 0 {
		n += 1 + sovApi(uint64(m.Offset))
	}
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OgvSupernatantResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Module != nil {
		l = m.Module.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LastIndex != 0 {
		n += 1 + sovApi(uint64(m.LastIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FollowOgvReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FollowOgvParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	if m.SeasonId != 0 {
		n += 1 + sovApi(uint64(m.SeasonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FollowOgvRly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FollowParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NavigationCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NavigationItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleId != 0 {
		n += 1 + sovApi(uint64(m.ModuleId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReplyCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReplyId != 0 {
		n += 1 + sovApi(uint64(m.ReplyId))
	}
	if m.Type != 0 {
		n += 1 + sovApi(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrentTab != 0 {
		n += 1 + sovApi(uint64(m.CurrentTab))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TabCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrentTab != 0 {
		n += 1 + sovApi(uint64(m.CurrentTab))
	}
	if m.Style != 0 {
		n += 1 + sovApi(uint64(m.Style))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.BgImage != nil {
		l = m.BgImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SelectItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageShare != nil {
		l = m.PageShare.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TabItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.DisableClick {
		n += 2
	}
	l = len(m.DisableClickToast)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SelectedImage != nil {
		l = m.SelectedImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.UnselectedImage != nil {
		l = m.UnselectedImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SizeImage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovApi(uint64(m.Height))
	}
	if m.Width != 0 {
		n += 1 + sovApi(uint64(m.Width))
	}
	if m.Size_ != 0 {
		n += 1 + sovApi(uint64(m.Size_))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactHeader) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Time)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.SponsorTitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UserFace)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UserUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Features) > 0 {
		for _, e := range m.Features {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactFeature) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BorderColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactAward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactAwardItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactStatement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewactStatementItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProgressCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Style != 0 {
		n += 1 + sovApi(uint64(m.Style))
	}
	if m.SlotType != 0 {
		n += 1 + sovApi(uint64(m.SlotType))
	}
	if m.BarType != 0 {
		n += 1 + sovApi(uint64(m.BarType))
	}
	l = len(m.TextureImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	l = len(m.DisplayNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Nodes) > 0 {
		for _, e := range m.Nodes {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProgressNode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovApi(uint64(m.Num))
	}
	l = len(m.DisplayNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProgressReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProgressRly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Event != nil {
		l = m.Event.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTabReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TabId != 0 {
		n += 1 + sovApi(uint64(m.TabId))
	}
	if m.TabModuleId != 0 {
		n += 1 + sovApi(uint64(m.TabModuleId))
	}
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTabRly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ErrLimit != nil {
		l = m.ErrLimit.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Tab != nil {
		l = m.Tab.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTabErrLimit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTabErrLimit_Button) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTab) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BgType != 0 {
		n += 1 + sovApi(uint64(m.BgType))
	}
	l = len(m.BgImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.BgColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IconType != 0 {
		n += 1 + sovApi(uint64(m.IconType))
	}
	l = len(m.SelectedFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UnselectedFontColor)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BottomTabItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Goto != 0 {
		n += 1 + sovApi(uint64(m.Goto))
	}
	if m.TabId != 0 {
		n += 1 + sovApi(uint64(m.TabId))
	}
	if m.TabModuleId != 0 {
		n += 1 + sovApi(uint64(m.TabModuleId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Selected {
		n += 2
	}
	l = len(m.SelectedImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.UnselectedImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageId != 0 {
		n += 1 + sovApi(uint64(m.PageId))
	}
	l = len(m.PageTitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PageFid != 0 {
		n += 1 + sovApi(uint64(m.PageFid))
	}
	l = len(m.ShareOrigin)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BgImage != nil {
		l = m.BgImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AreaId != 0 {
		n += 1 + sovApi(uint64(m.AreaId))
	}
	if m.Area != nil {
		l = m.Area.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	if m.ActionDetail != nil {
		n += m.ActionDetail.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickItem_RedirectAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RedirectAct != nil {
		l = m.RedirectAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickItem_RequestAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestAct != nil {
		l = m.RequestAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickItem_RtProgressAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RtProgressAct != nil {
		l = m.RtProgressAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickItem_NrtProgressAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NrtProgressAct != nil {
		l = m.NrtProgressAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickItem_ImageAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ImageAct != nil {
		l = m.ImageAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickItem_LayerAct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LayerAct != nil {
		l = m.LayerAct.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}
func (m *ClickActRedirect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickRequestDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovApi(uint64(m.State))
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.MessageBox != nil {
		l = m.MessageBox.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickActRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.ReqType != 0 {
		n += 1 + sovApi(uint64(m.ReqType))
	}
	if m.State != 0 {
		n += 1 + sovApi(uint64(m.State))
	}
	if len(m.Details) > 0 {
		for _, e := range m.Details {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.SyncHoverButton {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickActProgress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Color != nil {
		l = m.Color.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.FontType != 0 {
		n += 1 + sovApi(uint64(m.FontType))
	}
	if m.FontSize != 0 {
		n += 1 + sovApi(uint64(m.FontSize))
	}
	if m.DisplayMode != 0 {
		n += 1 + sovApi(uint64(m.DisplayMode))
	}
	l = len(m.CurrentNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.TargetNum)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickActImage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickActLayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ButtonImage)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Mode != 0 {
		n += 1 + sovApi(uint64(m.Mode))
	}
	if len(m.Images) > 0 {
		for _, e := range m.Images {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Style != 0 {
		n += 1 + sovApi(uint64(m.Style))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Color != nil {
		l = m.Color.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.ImageTitle)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ShareImage != nil {
		l = m.ShareImage.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Share != nil {
		l = m.Share.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClickRequestParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.ReqType != 0 {
		n += 1 + sovApi(uint64(m.ReqType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HandleClickReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RawParams)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Spmid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HandleClickRly) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != 0 {
		n += 1 + sovApi(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HoverButtonCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.MutexUkeys) > 0 {
		for _, s := range m.MutexUkeys {
			l = len(s)
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *IndexReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IndexReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IndexReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActivityFrom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			m.DynamicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynamicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabId", wireType)
			}
			m.TabId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabModuleId", wireType)
			}
			m.TabModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsUrlReq", wireType)
			}
			m.HttpsUrlReq = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HttpsUrlReq |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTab", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentTab = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsColdStart", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsColdStart = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabFrom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicIndexReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicIndexReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicIndexReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActivityFrom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			m.DynamicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynamicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabId", wireType)
			}
			m.TabId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabModuleId", wireType)
			}
			m.TabModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsUrlReq", wireType)
			}
			m.HttpsUrlReq = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HttpsUrlReq |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTab", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentTab = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsColdStart", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsColdStart = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InlineIndexReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InlineIndexReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InlineIndexReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsUrlReq", wireType)
			}
			m.HttpsUrlReq = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HttpsUrlReq |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsColdStart", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsColdStart = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TabIndexReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TabIndexReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TabIndexReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HttpsUrlReq", wireType)
			}
			m.HttpsUrlReq = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HttpsUrlReq |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsColdStart", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsColdStart = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PageResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PageResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PageResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOnline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsOnline = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IgnoreAppDarkTheme", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IgnoreAppDarkTheme = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageColor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PageColor == nil {
				m.PageColor = &Color{}
			}
			if err := m.PageColor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageShare", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PageShare == nil {
				m.PageShare = &PageShare{}
			}
			if err := m.PageShare.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageHeader", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PageHeader == nil {
				m.PageHeader = &Module{}
			}
			if err := m.PageHeader.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Participation == nil {
				m.Participation = &Module{}
			}
			if err := m.Participation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleList = append(m.ModuleList, &Module{})
			if err := m.ModuleList[len(m.ModuleList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDynamicFeed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDynamicFeed = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LayerDynamic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LayerDynamic == nil {
				m.LayerDynamic = &LayerDynamic{}
			}
			if err := m.LayerDynamic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsEditorFeed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsEditorFeed = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SponsorType", wireType)
			}
			m.SponsorType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SponsorType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopTab", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopTab == nil {
				m.TopTab = &TopTab{}
			}
			if err := m.TopTab.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoverButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HoverButton == nil {
				m.HoverButton = &Module{}
			}
			if err := m.HoverButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BottomButton == nil {
				m.BottomButton = &Module{}
			}
			if err := m.BottomButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopicInfo == nil {
				m.TopicInfo = &TopicInfo{}
			}
			if err := m.TopicInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PageShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PageShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PageShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsideUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsideUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutsideUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutsideUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Origin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpacePageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpacePageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpaceExclusivePageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SpaceExclusivePageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Module) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Module: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Module: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleColor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ModuleColor == nil {
				m.ModuleColor = &Color{}
			}
			if err := m.ModuleColor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleSetting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ModuleSetting == nil {
				m.ModuleSetting = &Setting{}
			}
			if err := m.ModuleSetting.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleItems = append(m.ModuleItems, &ModuleItem{})
			if err := m.ModuleItems[len(m.ModuleItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubpageParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubpageParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleUkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleUkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFeed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFeed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubpageData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubpageData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubpageData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tabs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tabs = append(m.Tabs, &SubpageTab{})
			if err := m.Tabs[len(m.Tabs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubpageTab) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubpageTab: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubpageTab: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			m.Sort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sort |= SortCategory(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Setting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Setting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Setting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayMoreButton", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayMoreButton = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayTitle", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayTitle = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoCarousel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoCarousel = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopTabFollowImg", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TopTabFollowImg = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopTabFadeAway", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TopTabFadeAway = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoPlay = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayUnfoldButton", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayUnfoldButton = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayNum = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayViewNum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayViewNum = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplaySubscribeBtn", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplaySubscribeBtn = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnfoldRest", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnfoldRest = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayProgressNum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayProgressNum = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNodeNum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayNodeNum = bool(v != 0)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNodeDesc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayNodeDesc = bool(v != 0)
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PressSave", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PressSave = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditorRecommendCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EditorRecommendCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_EditorRecommendCard{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParticipationCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ParticipationCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ParticipationCard{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeaderCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HeaderCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_HeaderCard{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DynamicCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_DynamicCard{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TextCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TextCard{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextTitleCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TextTitleCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TextTitleCard{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageTitleCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ImageTitleCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ImageTitleCard{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DynamicMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_DynamicMoreCard{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicActMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DynamicActMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_DynamicActMoreCard{v}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LiveCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_LiveCard{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarouselImgCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CarouselImgCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_CarouselImgCard{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarouselWordCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CarouselWordCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_CarouselWordCard{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ResourceCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ResourceCard{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ResourceMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ResourceMoreCard{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_GameCard{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VideoCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_VideoCard{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VideoMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_VideoMoreCard{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RcmdCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_RecommendCard{v}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecommendVerticalCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RcmdVerticalCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_RecommendVerticalCard{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelativeactCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RelativeactCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_RelativeactCard{v}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelativeactCapsuleCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RelativeactCapsuleCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_RelativeactCapsuleCard{v}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatementCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &StatementCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_StatementCard{v}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &IconCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_IconCard{v}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VoteCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_VoteCard{v}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ReserveCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ReserveCard{v}
			iNdEx = postIndex
		case 35:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineHeadCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineHeadCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineHeadCard{v}
			iNdEx = postIndex
		case 36:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventTextCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventTextCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineEventTextCard{v}
			iNdEx = postIndex
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventImageCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventImageCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineEventImageCard{v}
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventImagetextCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventImagetextCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineEventImagetextCard{v}
			iNdEx = postIndex
		case 39:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventResourceCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventResourceCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineEventResourceCard{v}
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineMoreCard{v}
			iNdEx = postIndex
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineUnfoldCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineUnfoldCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TimelineUnfoldCard{v}
			iNdEx = postIndex
		case 42:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OgvOneCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OgvOneCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_OgvOneCard{v}
			iNdEx = postIndex
		case 43:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OgvThreeCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OgvThreeCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_OgvThreeCard{v}
			iNdEx = postIndex
		case 44:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OgvMoreCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OgvMoreCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_OgvMoreCard{v}
			iNdEx = postIndex
		case 45:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NavigationCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NavigationCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_NavigationCard{v}
			iNdEx = postIndex
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ReplyCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ReplyCard{v}
			iNdEx = postIndex
		case 47:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TabCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_TabCard{v}
			iNdEx = postIndex
		case 48:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewactHeaderCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NewactHeader{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_NewactHeaderCard{v}
			iNdEx = postIndex
		case 49:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewactAwardCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NewactAward{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_NewactAwardCard{v}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewactStatementCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NewactStatement{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_NewactStatementCard{v}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgressCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProgressCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ProgressCard{v}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SelectCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_SelectCard{v}
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_ClickCard{v}
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoverButtonCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HoverButtonCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_HoverButtonCard{v}
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomButtonCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &ModuleItem_BottomButtonCard{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GameCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GameCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GameCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasLive", wireType)
			}
			m.HasLive = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasLive |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &LiveItem{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			m.RoomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveStatus", wireType)
			}
			m.LiveStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveStatus |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomType", wireType)
			}
			m.RoomType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayType", wireType)
			}
			m.PlayType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Online", wireType)
			}
			m.Online = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Online |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaId", wireType)
			}
			m.AreaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AreaId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AreaName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentAreaId", wireType)
			}
			m.ParentAreaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentAreaId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentAreaName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentAreaName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveScreenType", wireType)
			}
			m.LiveScreenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveScreenType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastEndTime", wireType)
			}
			m.LastEndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastEndTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveId", wireType)
			}
			m.LiveId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WatchedShow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WatchedShow == nil {
				m.WatchedShow = &LiveWatchedShow{}
			}
			if err := m.WatchedShow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveWatchedShow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveWatchedShow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveWatchedShow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Switch", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Switch = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextSmall", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextSmall = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextLarge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextLarge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Color) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Color: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Color: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TitleColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TitleColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextTitleFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextTitleFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IndicatorColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IndicatorColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardTitleFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardTitleFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardTitleBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardTitleBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewMoreFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewMoreFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewMoreBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewMoreBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TimelineColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubtitleFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubtitleFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectedBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnselectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnselectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnselectedBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnselectedBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NtSelectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NtSelectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NtSelectedBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NtSelectedBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NtUnselectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NtUnselectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NtUnselectedBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NtUnselectedBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgressBarColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProgressBarColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PanelBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PanelBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PanelSelectColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PanelSelectColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PanelSelectFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PanelSelectFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PanelNtSelectFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PanelNtSelectFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditorRecommendCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditorRecommendCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditorRecommendCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImageUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImageUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position4", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position4 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position5 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Share == nil {
				m.Share = &Share{}
			}
			if err := m.Share.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Setting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Setting == nil {
				m.Setting = &Setting{}
			}
			if err := m.Setting.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MiddleIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MiddleIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ParticipationCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ParticipationCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ParticipationCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectedImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ParticipationCardItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ParticipationCardItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ParticipationCardItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ParticipationCardItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeaderCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeaderCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeaderCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SponsorContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SponsorContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HighLightImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HighLightImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LowLightImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LowLightImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscussNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiscussNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSubscribed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSubscribed = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Share) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Share: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Share: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayLater", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisplayLater = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oid", wireType)
			}
			m.Oid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Oid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareType", wireType)
			}
			m.ShareType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShareType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Badge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Badge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Badge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColorNight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColorNight = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportDic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportDic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportDic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SeasonType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubType", wireType)
			}
			m.SubType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EpId", wireType)
			}
			m.EpId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EpId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			m.IsPreview = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsPreview |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dynamic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dynamic == nil {
				m.Dynamic = &v2.DynamicItem{}
			}
			if err := m.Dynamic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DynamicParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromSpmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromSpmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsColdStart", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsColdStart = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedOffset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeedOffset == nil {
				m.FeedOffset = &types.Any{}
			}
			if err := m.FeedOffset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastGroup", wireType)
			}
			m.LastGroup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastGroup |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			m.SortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TextCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TextCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TextCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TextTitleCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TextTitleCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TextTitleCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageTitleCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageTitleCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageTitleCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubpageData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubpageData == nil {
				m.SubpageData = &SubpageData{}
			}
			if err := m.SubpageData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicActMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicActMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicActMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubpageData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubpageData == nil {
				m.SubpageData = &SubpageData{}
			}
			if err := m.SubpageData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LayerDynamic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LayerDynamic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LayerDynamic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dynamic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dynamic == nil {
				m.Dynamic = &v2.DynamicItem{}
			}
			if err := m.Dynamic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditorReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditorReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditorReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &EditorParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditorParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditorParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditorParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditorResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditorResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditorResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CarouselImgCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CarouselImgCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CarouselImgCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentStyle", wireType)
			}
			m.ContentStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContentStyle |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = append(m.Images, &CarouselImgItem{})
			if err := m.Images[len(m.Images)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CarouselImgItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CarouselImgItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CarouselImgItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			m.Length = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Length |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopTab", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopTab == nil {
				m.TopTab = &TopTab{}
			}
			if err := m.TopTab.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopTab) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopTab: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopTab: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgImage1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgImage2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabTopColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabTopColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabMiddleColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabMiddleColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabBottomColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabBottomColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BarType", wireType)
			}
			m.BarType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BarType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CarouselWordCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CarouselWordCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CarouselWordCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentStyle", wireType)
			}
			m.ContentStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ContentStyle |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScrollType", wireType)
			}
			m.ScrollType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScrollType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Words", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Words = append(m.Words, &CarouselWordItem{})
			if err := m.Words[len(m.Words)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CarouselWordItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CarouselWordItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CarouselWordItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImageUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImageUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverRightText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverRightText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftIcon1", wireType)
			}
			m.CoverLeftIcon1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverLeftIcon1 |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftIcon2", wireType)
			}
			m.CoverLeftIcon2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverLeftIcon2 |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubpageData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubpageData == nil {
				m.SubpageData = &SubpageData{}
			}
			if err := m.SubpageData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &ResourceParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			m.SortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImageUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImageUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rights == nil {
				m.Rights = &VideoRights{}
			}
			if err := m.Rights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dimension == nil {
				m.Dimension = &PlayerDimension{}
			}
			if err := m.Dimension.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UgcPay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UgcPay = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsCooperation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsCooperation = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPgc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPgc = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerDimension) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerDimension: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerDimension: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rotate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Rotate = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubpageData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubpageData == nil {
				m.SubpageData = &SubpageData{}
			}
			if err := m.SubpageData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &VideoParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			m.SortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFollowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFollowed = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Official", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Official == nil {
				m.Official = &OfficialInfo{}
			}
			if err := m.Official.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vip", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vip == nil {
				m.Vip = &VipInfo{}
			}
			if err := m.Vip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RankIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RankIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectType", wireType)
			}
			m.RedirectType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedirectType |= RedirectType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdVerticalCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdVerticalCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdVerticalCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RcmdCard{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RelativeactCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelativeactCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelativeactCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RelativeactCapsuleCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelativeactCapsuleCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelativeactCapsuleCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RelativeactCapsuleItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RelativeactCapsuleItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RelativeactCapsuleItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RelativeactCapsuleItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatementCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatementCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatementCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IconCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IconCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IconCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &IconItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IconItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IconItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IconItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageBox) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessageBox: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessageBox: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlertMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlertMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfirmButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfirmMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= MessageBoxType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Area) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Area: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Area: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			m.X = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.X |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Y", wireType)
			}
			m.Y = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Y |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ukey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ukey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BgImage == nil {
				m.BgImage = &SizeImage{}
			}
			if err := m.BgImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptionNum", wireType)
			}
			m.OptionNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OptionNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buttons", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buttons = append(m.Buttons, &VoteButton{})
			if err := m.Buttons[len(m.Buttons)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftNum", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LeftNum == nil {
				m.LeftNum = &VoteNum{}
			}
			if err := m.LeftNum.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Progress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Progress == nil {
				m.Progress = &VoteProgress{}
			}
			if err := m.Progress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Area == nil {
				m.Area = &Area{}
			}
			if err := m.Area.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoneImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DoneImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndoneImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndoneImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasVoted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasVoted = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageBox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageBox == nil {
				m.MessageBox = &MessageBox{}
			}
			if err := m.MessageBox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoteParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceItemId", wireType)
			}
			m.SourceItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteNum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteNum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteNum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Area == nil {
				m.Area = &Area{}
			}
			if err := m.Area.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteProgress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteProgress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteProgress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Area == nil {
				m.Area = &Area{}
			}
			if err := m.Area.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= VoteProgressStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &VoteProgress_VoteProgressItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteProgress_VoteProgressItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteProgressItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteProgressItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceItemId", wireType)
			}
			m.SourceItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &VoteParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoteParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeftNum", wireType)
			}
			m.LeftNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeftNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanVoteNum", wireType)
			}
			m.CanVoteNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CanVoteNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ActionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			m.Sid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gid", wireType)
			}
			m.Gid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceItemId", wireType)
			}
			m.SourceItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReserveCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			m.Sid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &ReserveButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideReserveNum", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideReserveNum = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReserveButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goto", wireType)
			}
			m.Goto = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Goto |= ReserveGoto(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageBox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageBox == nil {
				m.MessageBox = &MessageBox{}
			}
			if err := m.MessageBox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReserveParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasDone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasDone = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoneText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DoneText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndoneText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndoneText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsHighlight", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsHighlight = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReserveReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &ReserveParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReserveParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ActionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			m.Sid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReserveRly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReserveRly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReserveRly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReserveParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineHeadCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineHeadCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineHeadCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineEventTextCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineEventTextCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineEventTextCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineEventImageCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineEventImageCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineEventImageCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Image == nil {
				m.Image = &SizeImage{}
			}
			if err := m.Image.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineEventImagetextCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineEventImagetextCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineEventImagetextCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineEventResourceCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineEventResourceCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineEventResourceCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImageUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImageUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupernatantTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupernatantTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineUnfoldCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineUnfoldCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineUnfoldCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnfoldText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnfoldText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FoldText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FoldText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cards = append(m.Cards, &TimelineUnfoldCard_Card{})
			if err := m.Cards[len(m.Cards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineUnfoldCard_Card) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Card: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Card: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineHeadCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineHeadCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &TimelineUnfoldCard_Card_TimelineHeadCard{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventTextCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventTextCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &TimelineUnfoldCard_Card_TimelineEventTextCard{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventImageCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventImageCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &TimelineUnfoldCard_Card_TimelineEventImageCard{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventImagetextCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventImagetextCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &TimelineUnfoldCard_Card_TimelineEventImagetextCard{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimelineEventResourceCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TimelineEventResourceCard{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.CardDetail = &TimelineUnfoldCard_Card_TimelineEventResourceCard{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineSupernatantReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineSupernatantReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineSupernatantReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &TimelineSupernatantParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineSupernatantParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineSupernatantParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineSupernatantParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastIndex", wireType)
			}
			m.LastIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimelineSupernatantResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimelineSupernatantResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimelineSupernatantResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastIndex", wireType)
			}
			m.LastIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvOneCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvOneCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvOneCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverRightText1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverRightText1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverRightText2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverRightText2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FollowButton == nil {
				m.FollowButton = &OgvFollowButton{}
			}
			if err := m.FollowButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvThreeCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvThreeCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvThreeCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FollowButton == nil {
				m.FollowButton = &OgvFollowButton{}
			}
			if err := m.FollowButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &Badge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportDic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReportDic == nil {
				m.ReportDic = &ReportDic{}
			}
			if err := m.ReportDic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvFollowButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvFollowButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvFollowButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFollowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFollowed = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FollowText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FollowIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnfollowText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnfollowText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnfollowIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnfollowIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FollowParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvMoreCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvMoreCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvMoreCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupernatantTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupernatantTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvSupernatantReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvSupernatantReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvSupernatantReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &OgvSupernatantParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrimaryPageId", wireType)
			}
			m.PrimaryPageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrimaryPageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvSupernatantParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvSupernatantParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvSupernatantParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastIndex", wireType)
			}
			m.LastIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OgvSupernatantResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OgvSupernatantResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OgvSupernatantResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Module", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Module == nil {
				m.Module = &Module{}
			}
			if err := m.Module.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastIndex", wireType)
			}
			m.LastIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastIndex |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowOgvReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowOgvReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowOgvReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &FollowOgvParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowOgvParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowOgvParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowOgvParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ActionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowOgvRly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowOgvRly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowOgvRly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FollowParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NavigationCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NavigationCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NavigationCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &NavigationItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NavigationItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NavigationItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NavigationItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			m.ModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplyCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplyCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplyCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyId", wireType)
			}
			m.ReplyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTab", wireType)
			}
			m.CurrentTab = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentTab |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &SelectItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TabCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TabCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TabCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentTab", wireType)
			}
			m.CurrentTab = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentTab |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= TabStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &TabItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BgImage == nil {
				m.BgImage = &SizeImage{}
			}
			if err := m.BgImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SelectItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SelectItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SelectItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageShare", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PageShare == nil {
				m.PageShare = &PageShare{}
			}
			if err := m.PageShare.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TabItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TabItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TabItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableClick", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DisableClick = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableClickToast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisableClickToast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SelectedImage == nil {
				m.SelectedImage = &SizeImage{}
			}
			if err := m.SelectedImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnselectedImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UnselectedImage == nil {
				m.UnselectedImage = &SizeImage{}
			}
			if err := m.UnselectedImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SizeImage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SizeImage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SizeImage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactHeader) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactHeader: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactHeader: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Time = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SponsorTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SponsorTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserFace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserFace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Features", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Features = append(m.Features, &NewactFeature{})
			if err := m.Features[len(m.Features)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactFeature) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactFeature: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactFeature: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BorderColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BorderColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactAward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactAward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactAward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &NewactAwardItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactAwardItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactAwardItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactAwardItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactStatement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactStatement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactStatement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &NewactStatementItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewactStatementItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewactStatementItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewactStatementItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgressCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= ProgressStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotType", wireType)
			}
			m.SlotType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SlotType |= ProgressSlot(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BarType", wireType)
			}
			m.BarType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BarType |= ProgressBar(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextureImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextureImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nodes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nodes = append(m.Nodes, &ProgressNode{})
			if err := m.Nodes[len(m.Nodes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgressNode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressNode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressNode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgressReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgressRly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressRly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressRly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Event == nil {
				m.Event = &ProgressEvent{}
			}
			if err := m.Event.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTabReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BottomTabReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BottomTabReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabId", wireType)
			}
			m.TabId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabModuleId", wireType)
			}
			m.TabModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTabRly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BottomTabRly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BottomTabRly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrLimit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ErrLimit == nil {
				m.ErrLimit = &BottomTabErrLimit{}
			}
			if err := m.ErrLimit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tab", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tab == nil {
				m.Tab = &BottomTab{}
			}
			if err := m.Tab.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTabErrLimit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BottomTabErrLimit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BottomTabErrLimit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &BottomTabErrLimit_Button{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTabErrLimit_Button) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Button: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Button: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTab) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BottomTab: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BottomTab: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgType", wireType)
			}
			m.BgType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BgType |= BottomTabBgType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconType", wireType)
			}
			m.IconType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IconType |= BottomTabIconType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnselectedFontColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnselectedFontColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &BottomTabItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BottomTabItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BottomTabItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BottomTabItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goto", wireType)
			}
			m.Goto = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Goto |= BottomTabGoto(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabId", wireType)
			}
			m.TabId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabModuleId", wireType)
			}
			m.TabModuleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabModuleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Selected", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Selected = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelectedImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnselectedImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnselectedImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageId", wireType)
			}
			m.PageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PageTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageFid", wireType)
			}
			m.PageFid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageFid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BgImage == nil {
				m.BgImage = &SizeImage{}
			}
			if err := m.BgImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ClickItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaId", wireType)
			}
			m.AreaId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AreaId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Area == nil {
				m.Area = &Area{}
			}
			if err := m.Area.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ClickItem_Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActRedirect{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_RedirectAct{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_RequestAct{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RtProgressAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActProgress{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_RtProgressAct{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NrtProgressAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActProgress{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_NrtProgressAct{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActImage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_ImageAct{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LayerAct", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ClickActLayer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ActionDetail = &ClickItem_LayerAct{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickActRedirect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickActRedirect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickActRedirect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickRequestDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickRequestDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickRequestDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= ClickRequestState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageBox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageBox == nil {
				m.MessageBox = &MessageBox{}
			}
			if err := m.MessageBox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickActRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickActRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickActRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqType", wireType)
			}
			m.ReqType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqType |= ClickRequestType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= ClickRequestState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = append(m.Details, &ClickRequestDetail{})
			if err := m.Details[len(m.Details)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncHoverButton", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncHoverButton = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickActProgress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickActProgress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickActProgress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Color == nil {
				m.Color = &Color{}
			}
			if err := m.Color.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FontType", wireType)
			}
			m.FontType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FontType |= FontType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FontSize", wireType)
			}
			m.FontSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FontSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayMode", wireType)
			}
			m.DisplayMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisplayMode |= ClickActProgress_DisplayMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickActImage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickActImage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickActImage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickActLayer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickActLayer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickActLayer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mode", wireType)
			}
			m.Mode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mode |= ClickActLayer_LayerMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Images = append(m.Images, &SizeImage{})
			if err := m.Images[len(m.Images)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= ClickActLayer_LayerStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Color == nil {
				m.Color = &Color{}
			}
			if err := m.Color.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ShareImage == nil {
				m.ShareImage = &SizeImage{}
			}
			if err := m.ShareImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Share == nil {
				m.Share = &Share{}
			}
			if err := m.Share.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClickRequestParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClickRequestParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClickRequestParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ActionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqType", wireType)
			}
			m.ReqType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqType |= ClickRequestType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HandleClickReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HandleClickReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HandleClickReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RawParams", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RawParams = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &ClickRequestParams{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Spmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HandleClickRly) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HandleClickRly: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HandleClickRly: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= ClickRequestState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HoverButtonCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HoverButtonCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HoverButtonCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &ClickItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutexUkeys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MutexUkeys = append(m.MutexUkeys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
