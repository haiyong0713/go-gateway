// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/fawkes/service/api/app/auth/auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddAuthItemGroupReq struct {
	//组名
	GroupName            string   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name" form:"group_name" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAuthItemGroupReq) Reset()         { *m = AddAuthItemGroupReq{} }
func (m *AddAuthItemGroupReq) String() string { return proto.CompactTextString(m) }
func (*AddAuthItemGroupReq) ProtoMessage()    {}
func (*AddAuthItemGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{0}
}
func (m *AddAuthItemGroupReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddAuthItemGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddAuthItemGroupReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddAuthItemGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAuthItemGroupReq.Merge(m, src)
}
func (m *AddAuthItemGroupReq) XXX_Size() int {
	return m.Size()
}
func (m *AddAuthItemGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAuthItemGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddAuthItemGroupReq proto.InternalMessageInfo

type UpdateAuthItemGroupReq struct {
	//组id
	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id" form:"group_id" validate:"required"`
	//组名
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name" form:"group_name" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAuthItemGroupReq) Reset()         { *m = UpdateAuthItemGroupReq{} }
func (m *UpdateAuthItemGroupReq) String() string { return proto.CompactTextString(m) }
func (*UpdateAuthItemGroupReq) ProtoMessage()    {}
func (*UpdateAuthItemGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{1}
}
func (m *UpdateAuthItemGroupReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateAuthItemGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateAuthItemGroupReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateAuthItemGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAuthItemGroupReq.Merge(m, src)
}
func (m *UpdateAuthItemGroupReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateAuthItemGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAuthItemGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAuthItemGroupReq proto.InternalMessageInfo

type AddAuthItemReq struct {
	//组id
	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id" form:"group_id" validate:"required"`
	//权限项名字
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name" form:"item_name" validate:"required"`
	//前端key
	FeKey string `protobuf:"bytes,3,opt,name=fe_key,json=feKey,proto3" json:"fe_key" form:"fe_key"`
	//后端url
	BeUrl string `protobuf:"bytes,4,opt,name=be_url,json=beUrl,proto3" json:"be_url" form:"be_url"`
	//后端url参数 key1=value1&k2=v2
	UrlParam             string   `protobuf:"bytes,5,opt,name=url_param,json=urlParam,proto3" json:"url_param" form:"url_param"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAuthItemReq) Reset()         { *m = AddAuthItemReq{} }
func (m *AddAuthItemReq) String() string { return proto.CompactTextString(m) }
func (*AddAuthItemReq) ProtoMessage()    {}
func (*AddAuthItemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{2}
}
func (m *AddAuthItemReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddAuthItemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddAuthItemReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddAuthItemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAuthItemReq.Merge(m, src)
}
func (m *AddAuthItemReq) XXX_Size() int {
	return m.Size()
}
func (m *AddAuthItemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAuthItemReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddAuthItemReq proto.InternalMessageInfo

type UpdateAuthItemReq struct {
	ItemId   int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name" form:"item_name"`
	FeKey    string `protobuf:"bytes,3,opt,name=fe_key,json=feKey,proto3" json:"fe_key" form:"fe_key"`
	BeUrl    string `protobuf:"bytes,4,opt,name=be_url,json=beUrl,proto3" json:"be_url" form:"be_url"`
	//后端url参数 key1=value1&k2=v2
	UrlParam             string   `protobuf:"bytes,5,opt,name=url_param,json=urlParam,proto3" json:"url_param" form:"url_param"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAuthItemReq) Reset()         { *m = UpdateAuthItemReq{} }
func (m *UpdateAuthItemReq) String() string { return proto.CompactTextString(m) }
func (*UpdateAuthItemReq) ProtoMessage()    {}
func (*UpdateAuthItemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{3}
}
func (m *UpdateAuthItemReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateAuthItemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateAuthItemReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateAuthItemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAuthItemReq.Merge(m, src)
}
func (m *UpdateAuthItemReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateAuthItemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAuthItemReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAuthItemReq proto.InternalMessageInfo

type ActiveAuthItemReq struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	IsActive             bool     `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active" form:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActiveAuthItemReq) Reset()         { *m = ActiveAuthItemReq{} }
func (m *ActiveAuthItemReq) String() string { return proto.CompactTextString(m) }
func (*ActiveAuthItemReq) ProtoMessage()    {}
func (*ActiveAuthItemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{4}
}
func (m *ActiveAuthItemReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActiveAuthItemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActiveAuthItemReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActiveAuthItemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveAuthItemReq.Merge(m, src)
}
func (m *ActiveAuthItemReq) XXX_Size() int {
	return m.Size()
}
func (m *ActiveAuthItemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveAuthItemReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveAuthItemReq proto.InternalMessageInfo

type DeleteAuthItemReq struct {
	//权限项id
	ItemId               int64    `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAuthItemReq) Reset()         { *m = DeleteAuthItemReq{} }
func (m *DeleteAuthItemReq) String() string { return proto.CompactTextString(m) }
func (*DeleteAuthItemReq) ProtoMessage()    {}
func (*DeleteAuthItemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{5}
}
func (m *DeleteAuthItemReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteAuthItemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteAuthItemReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteAuthItemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAuthItemReq.Merge(m, src)
}
func (m *DeleteAuthItemReq) XXX_Size() int {
	return m.Size()
}
func (m *DeleteAuthItemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAuthItemReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAuthItemReq proto.InternalMessageInfo

type GrantRoleReq struct {
	Item                 []*Grant `protobuf:"bytes,1,rep,name=item,proto3" json:"item" form:"item" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrantRoleReq) Reset()         { *m = GrantRoleReq{} }
func (m *GrantRoleReq) String() string { return proto.CompactTextString(m) }
func (*GrantRoleReq) ProtoMessage()    {}
func (*GrantRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{6}
}
func (m *GrantRoleReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrantRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrantRoleReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrantRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantRoleReq.Merge(m, src)
}
func (m *GrantRoleReq) XXX_Size() int {
	return m.Size()
}
func (m *GrantRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_GrantRoleReq proto.InternalMessageInfo

// 授权信息
type Grant struct {
	//权限项id
	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	//角色
	RoleValue int64 `protobuf:"varint,2,opt,name=role_value,json=roleValue,proto3" json:"role_value" form:"role_value" validate:"required"`
	//是否授权
	IsGranted            bool     `protobuf:"varint,3,opt,name=is_granted,json=isGranted,proto3" json:"is_granted" form:"is_granted" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grant) Reset()         { *m = Grant{} }
func (m *Grant) String() string { return proto.CompactTextString(m) }
func (*Grant) ProtoMessage()    {}
func (*Grant) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{7}
}
func (m *Grant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Grant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Grant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Grant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grant.Merge(m, src)
}
func (m *Grant) XXX_Size() int {
	return m.Size()
}
func (m *Grant) XXX_DiscardUnknown() {
	xxx_messageInfo_Grant.DiscardUnknown(m)
}

var xxx_messageInfo_Grant proto.InternalMessageInfo

type ListAuthReq struct {
	RoleValue            int64    `protobuf:"varint,1,opt,name=role_value,json=roleValue,proto3" json:"role_value" form:"role_value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuthReq) Reset()         { *m = ListAuthReq{} }
func (m *ListAuthReq) String() string { return proto.CompactTextString(m) }
func (*ListAuthReq) ProtoMessage()    {}
func (*ListAuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{8}
}
func (m *ListAuthReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListAuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListAuthReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListAuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthReq.Merge(m, src)
}
func (m *ListAuthReq) XXX_Size() int {
	return m.Size()
}
func (m *ListAuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthReq proto.InternalMessageInfo

type ListAuthResp struct {
	Group                []*Group `protobuf:"bytes,1,rep,name=group,proto3" json:"item" form:"item"`
	Role                 []*Role  `protobuf:"bytes,2,rep,name=role,proto3" json:"role" form:"role"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuthResp) Reset()         { *m = ListAuthResp{} }
func (m *ListAuthResp) String() string { return proto.CompactTextString(m) }
func (*ListAuthResp) ProtoMessage()    {}
func (*ListAuthResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{9}
}
func (m *ListAuthResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListAuthResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListAuthResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListAuthResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuthResp.Merge(m, src)
}
func (m *ListAuthResp) XXX_Size() int {
	return m.Size()
}
func (m *ListAuthResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuthResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuthResp proto.InternalMessageInfo

type Group struct {
	//权限组id
	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id" form:"group_id"`
	//权限组名字
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name" form:"group_name"`
	//操作人
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator" form:"operator"`
	//权限项
	Item                 []*Item  `protobuf:"bytes,4,rep,name=item,proto3" json:"item" form:"item"`
	Ctime                int64    `protobuf:"varint,5,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	Mtime                int64    `protobuf:"varint,6,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{10}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Group.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return m.Size()
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

type Role struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id" form:"id"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name"`
	EName                string   `protobuf:"bytes,3,opt,name=eName,proto3" json:"ename" form:"ename"`
	Value                int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value" form:"value"`
	State                int64    `protobuf:"varint,5,opt,name=state,proto3" json:"state" form:"state"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{11}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Role.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return m.Size()
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

type Item struct {
	ItemId   int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id"`
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name" form:"item_name"`
	FeKey    string `protobuf:"bytes,3,opt,name=fe_key,json=feKey,proto3" json:"fe_key" form:"fe_key"`
	BeUrl    string `protobuf:"bytes,4,opt,name=be_url,json=beUrl,proto3" json:"be_url" form:"be_url"`
	//后端url参数 key1=value1&k2=v2
	UrlParam             string   `protobuf:"bytes,5,opt,name=url_param,json=urlParam,proto3" json:"url_param" form:"url_param"`
	Operator             string   `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator" form:"operator"`
	RoleAccess           []int64  `protobuf:"varint,7,rep,packed,name=role_access,json=roleAccess,proto3" json:"role_access" form:"role_access"`
	Ctime                int64    `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime" form:"ctime"`
	Mtime                int64    `protobuf:"varint,9,opt,name=mtime,proto3" json:"mtime" form:"mtime"`
	GroupId              int64    `protobuf:"varint,10,opt,name=group_id,json=groupId,proto3" json:"group_id" form:"group_id"`
	IsActive             bool     `protobuf:"varint,11,opt,name=is_active,json=isActive,proto3" json:"is_active" form:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{12}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Item.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return m.Size()
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

type PermissionValidaReq struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	RoleValue            int64    `protobuf:"varint,2,opt,name=role_value,json=roleValue,proto3" json:"role_value" form:"role_value" validate:"required"`
	IsGranted            int64    `protobuf:"varint,3,opt,name=is_granted,json=isGranted,proto3" json:"is_granted" form:"is_granted" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionValidaReq) Reset()         { *m = PermissionValidaReq{} }
func (m *PermissionValidaReq) String() string { return proto.CompactTextString(m) }
func (*PermissionValidaReq) ProtoMessage()    {}
func (*PermissionValidaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{13}
}
func (m *PermissionValidaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PermissionValidaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PermissionValidaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PermissionValidaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionValidaReq.Merge(m, src)
}
func (m *PermissionValidaReq) XXX_Size() int {
	return m.Size()
}
func (m *PermissionValidaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionValidaReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionValidaReq proto.InternalMessageInfo

type PermissionValidaResp struct {
	ItemId               int64    `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id" form:"item_id" validate:"required"`
	RoleValue            int64    `protobuf:"varint,2,opt,name=role_value,json=roleValue,proto3" json:"role_value" form:"role_value" validate:"required"`
	IsGranted            int64    `protobuf:"varint,3,opt,name=is_granted,json=isGranted,proto3" json:"is_granted" form:"is_granted" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionValidaResp) Reset()         { *m = PermissionValidaResp{} }
func (m *PermissionValidaResp) String() string { return proto.CompactTextString(m) }
func (*PermissionValidaResp) ProtoMessage()    {}
func (*PermissionValidaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fb76d68c5e86dec, []int{14}
}
func (m *PermissionValidaResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PermissionValidaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PermissionValidaResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PermissionValidaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionValidaResp.Merge(m, src)
}
func (m *PermissionValidaResp) XXX_Size() int {
	return m.Size()
}
func (m *PermissionValidaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionValidaResp.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionValidaResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddAuthItemGroupReq)(nil), "app.auth.v1.AddAuthItemGroupReq")
	proto.RegisterType((*UpdateAuthItemGroupReq)(nil), "app.auth.v1.UpdateAuthItemGroupReq")
	proto.RegisterType((*AddAuthItemReq)(nil), "app.auth.v1.AddAuthItemReq")
	proto.RegisterType((*UpdateAuthItemReq)(nil), "app.auth.v1.UpdateAuthItemReq")
	proto.RegisterType((*ActiveAuthItemReq)(nil), "app.auth.v1.ActiveAuthItemReq")
	proto.RegisterType((*DeleteAuthItemReq)(nil), "app.auth.v1.DeleteAuthItemReq")
	proto.RegisterType((*GrantRoleReq)(nil), "app.auth.v1.GrantRoleReq")
	proto.RegisterType((*Grant)(nil), "app.auth.v1.Grant")
	proto.RegisterType((*ListAuthReq)(nil), "app.auth.v1.ListAuthReq")
	proto.RegisterType((*ListAuthResp)(nil), "app.auth.v1.ListAuthResp")
	proto.RegisterType((*Group)(nil), "app.auth.v1.Group")
	proto.RegisterType((*Role)(nil), "app.auth.v1.Role")
	proto.RegisterType((*Item)(nil), "app.auth.v1.Item")
	proto.RegisterType((*PermissionValidaReq)(nil), "app.auth.v1.PermissionValidaReq")
	proto.RegisterType((*PermissionValidaResp)(nil), "app.auth.v1.PermissionValidaResp")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/fawkes/service/api/app/auth/auth.proto", fileDescriptor_3fb76d68c5e86dec)
}

var fileDescriptor_3fb76d68c5e86dec = []byte{
	// 1263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x57, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xae, 0xd7, 0x76, 0x62, 0x8f, 0x4b, 0xa8, 0x27, 0xa8, 0x38, 0x4e, 0xeb, 0x75, 0xc6, 0x04,
	0x05, 0x55, 0xb1, 0xd5, 0x54, 0x80, 0x14, 0x44, 0xa5, 0x58, 0x40, 0x14, 0x40, 0x55, 0x59, 0xd4,
	0x1c, 0xb8, 0x58, 0x6b, 0xef, 0xc4, 0x19, 0x75, 0xd7, 0xbb, 0xdd, 0x9d, 0x75, 0xc8, 0x81, 0x0b,
	0x9c, 0xe0, 0x56, 0xb8, 0x70, 0xe3, 0xaf, 0x70, 0xa3, 0x47, 0x24, 0xae, 0x68, 0x05, 0x01, 0x71,
	0x30, 0x37, 0xff, 0x02, 0x34, 0x6f, 0xd6, 0xde, 0x5d, 0xdb, 0x1b, 0x11, 0x35, 0x41, 0x42, 0x3d,
	0xb4, 0xf1, 0x7c, 0xf3, 0xde, 0xfb, 0xde, 0x7c, 0xf3, 0xfc, 0xc6, 0x0f, 0xbd, 0xdb, 0xb7, 0xb7,
	0xfb, 0x3a, 0xa7, 0x27, 0xfa, 0x69, 0x4b, 0x77, 0x1c, 0xf1, 0x6f, 0xdb, 0x1b, 0xba, 0xad, 0x23,
	0xfd, 0xe4, 0x31, 0xf5, 0x5a, 0x1e, 0x75, 0x87, 0xac, 0x47, 0x5b, 0xba, 0xc3, 0xe4, 0xb6, 0xcf,
	0x8f, 0xe1, 0xbf, 0xa6, 0xe3, 0xda, 0xdc, 0xc6, 0x25, 0xdd, 0x71, 0x9a, 0xb0, 0x1e, 0xde, 0xad,
	0x6e, 0xf7, 0x19, 0x3f, 0xf6, 0xbb, 0xcd, 0x9e, 0x6d, 0xb5, 0xfa, 0x76, 0xdf, 0x6e, 0x81, 0x4d,
	0xd7, 0x3f, 0x82, 0x15, 0x2c, 0xe0, 0x93, 0xf4, 0xad, 0xde, 0xea, 0xdb, 0x76, 0xdf, 0x0c, 0x63,
	0x0f, 0x06, 0x36, 0xd7, 0x39, 0xb3, 0x07, 0x5e, 0xb8, 0xbb, 0x1e, 0xee, 0x4e, 0x63, 0x50, 0xcb,
	0xe1, 0xa7, 0x72, 0x93, 0x58, 0x68, 0x75, 0xcf, 0x30, 0xf6, 0x7c, 0x7e, 0x7c, 0xc0, 0xa9, 0xb5,
	0xef, 0xda, 0xbe, 0xa3, 0xd1, 0x27, 0xf8, 0x10, 0xa1, 0xbe, 0xf8, 0xdc, 0x19, 0xe8, 0x16, 0xad,
	0x64, 0xea, 0x99, 0xad, 0x62, 0xfb, 0xed, 0x51, 0xa0, 0xc6, 0xd0, 0x71, 0xa0, 0x6e, 0x1e, 0xd9,
	0xae, 0xb5, 0x4b, 0x22, 0x8c, 0xd4, 0x87, 0xba, 0xc9, 0x0c, 0x9d, 0xd3, 0x5d, 0xe2, 0xd2, 0x27,
	0x3e, 0x73, 0xa9, 0x41, 0xb4, 0x22, 0x18, 0x3c, 0x10, 0xfb, 0x3f, 0x66, 0xd0, 0xcd, 0x47, 0x8e,
	0x30, 0x98, 0xa3, 0x7c, 0x80, 0x0a, 0x32, 0x10, 0x33, 0x80, 0x30, 0xdb, 0xbe, 0x37, 0x0a, 0xd4,
	0x29, 0x36, 0x0e, 0xd4, 0x46, 0x9c, 0x8e, 0x19, 0x8b, 0xc9, 0x96, 0x61, 0xfb, 0xc0, 0x98, 0x39,
	0x82, 0x72, 0x69, 0x47, 0xf8, 0x55, 0x41, 0x2b, 0x31, 0xc9, 0xae, 0x22, 0x75, 0x0d, 0x15, 0x19,
	0xa7, 0x56, 0x3c, 0xf3, 0x37, 0x47, 0x81, 0x1a, 0x81, 0xe3, 0x40, 0x7d, 0x4d, 0x46, 0x9c, 0x42,
	0x8b, 0x43, 0x16, 0xc4, 0xbe, 0x48, 0x1b, 0xef, 0xa0, 0xa5, 0x23, 0xda, 0x79, 0x4c, 0x4f, 0x2b,
	0x59, 0x08, 0xb8, 0x3e, 0x0a, 0xd4, 0x10, 0x19, 0x07, 0xea, 0x4b, 0x32, 0x9a, 0x5c, 0x13, 0x2d,
	0x7f, 0x44, 0x3f, 0xa2, 0xa7, 0xc2, 0xa7, 0x4b, 0x3b, 0xbe, 0x6b, 0x56, 0x72, 0x91, 0x8f, 0x44,
	0x22, 0x1f, 0xb9, 0x26, 0x5a, 0xbe, 0x4b, 0x1f, 0xb9, 0x26, 0xbe, 0x8f, 0x8a, 0xbe, 0x6b, 0x76,
	0x1c, 0xdd, 0xd5, 0xad, 0x4a, 0x1e, 0xdc, 0x36, 0x44, 0xee, 0x53, 0x70, 0x1c, 0xa8, 0x37, 0xa4,
	0xe7, 0x14, 0x22, 0x5a, 0xc1, 0x77, 0xcd, 0x87, 0xf0, 0xf1, 0x27, 0x05, 0x95, 0x93, 0x15, 0x22,
	0x14, 0xfe, 0x10, 0x2d, 0xc3, 0x49, 0xa7, 0x02, 0xdf, 0x1d, 0x05, 0xea, 0x04, 0x1a, 0x07, 0x2a,
	0x89, 0xa9, 0x91, 0x26, 0xef, 0x92, 0xd8, 0x3d, 0x30, 0x44, 0x86, 0xb3, 0xea, 0x6e, 0xcc, 0xaa,
	0x7b, 0x63, 0x56, 0xdd, 0xff, 0xa1, 0x92, 0x3f, 0x64, 0x50, 0x79, 0xaf, 0xc7, 0xd9, 0xf0, 0x4a,
	0x95, 0xf4, 0x3a, 0x3a, 0x70, 0x80, 0x92, 0x85, 0x50, 0xc9, 0x09, 0x18, 0x53, 0x72, 0x02, 0x09,
	0x25, 0x3d, 0x99, 0x16, 0xe9, 0xa0, 0xf2, 0x7b, 0xd4, 0xa4, 0x57, 0x76, 0xd5, 0xa4, 0x87, 0xae,
	0xef, 0xbb, 0xfa, 0x80, 0x6b, 0xb6, 0x49, 0x45, 0xec, 0x4f, 0x51, 0x4e, 0xec, 0x54, 0x32, 0xf5,
	0xec, 0x56, 0x69, 0x07, 0x37, 0x63, 0x3d, 0xb7, 0x09, 0x86, 0xed, 0x3b, 0xa3, 0x40, 0x05, 0x9b,
	0x71, 0xa0, 0xaa, 0x11, 0xd3, 0x62, 0x1a, 0x30, 0x24, 0x5f, 0x29, 0x28, 0x0f, 0xce, 0x97, 0xaa,
	0xed, 0x21, 0x42, 0xae, 0x6d, 0xd2, 0xce, 0x50, 0x37, 0x7d, 0x29, 0x6e, 0x56, 0xb6, 0xaf, 0x08,
	0x8d, 0xda, 0x57, 0x84, 0xa5, 0xb4, 0x2f, 0x61, 0x70, 0x28, 0xf6, 0x45, 0x5c, 0xe6, 0x75, 0xfa,
	0x22, 0x5f, 0x6a, 0x40, 0x05, 0x17, 0x64, 0xdc, 0x08, 0x8d, 0xe2, 0x46, 0x58, 0x4a, 0x5c, 0xe6,
	0xed, 0x87, 0xfb, 0x9f, 0xa0, 0xd2, 0xc7, 0xcc, 0xe3, 0xe2, 0x26, 0x85, 0xd2, 0xed, 0x44, 0xfa,
	0x52, 0x8d, 0xc6, 0x5c, 0xfa, 0xe5, 0xb9, 0xf4, 0x63, 0xa9, 0x92, 0xa7, 0x19, 0x74, 0x3d, 0x8a,
	0xe9, 0x39, 0x78, 0x0f, 0xe5, 0xa1, 0x45, 0xa6, 0xdc, 0x9f, 0xed, 0x3b, 0xed, 0x57, 0x63, 0xf7,
	0x57, 0x8a, 0xdd, 0x9f, 0x26, 0x3d, 0xf1, 0x7d, 0x94, 0x13, 0x04, 0x15, 0x05, 0x22, 0x94, 0x13,
	0x11, 0x44, 0x95, 0xc8, 0x00, 0xc2, 0x24, 0x0a, 0x20, 0x56, 0x44, 0x03, 0x90, 0xfc, 0x05, 0x97,
	0x2d, 0x22, 0xed, 0xce, 0x35, 0x7d, 0x75, 0xa6, 0xe9, 0xbf, 0x3c, 0xd3, 0xf4, 0xa3, 0x06, 0xdf,
	0x5e, 0xf0, 0x36, 0x35, 0xe6, 0xde, 0xa6, 0xf2, 0xdc, 0xdb, 0x14, 0x7b, 0x87, 0xf0, 0x3b, 0xa8,
	0x60, 0x3b, 0xd4, 0xd5, 0xb9, 0xed, 0x86, 0x8d, 0x08, 0xf8, 0x27, 0x58, 0xc4, 0x3f, 0x41, 0x88,
	0x36, 0xdd, 0x14, 0x32, 0xc0, 0x17, 0x21, 0xb7, 0x40, 0x06, 0xf1, 0x45, 0x4c, 0xd7, 0x11, 0x40,
	0xdc, 0x42, 0xf9, 0x1e, 0x67, 0x16, 0x85, 0xbe, 0x94, 0x6d, 0xaf, 0x8d, 0x02, 0x55, 0x02, 0xe3,
	0x40, 0xbd, 0x2e, 0xcd, 0x61, 0x49, 0x34, 0x09, 0x0b, 0x07, 0x0b, 0x1c, 0x96, 0x22, 0x07, 0x2b,
	0xe9, 0x60, 0x85, 0x0e, 0xf2, 0xef, 0xdf, 0x19, 0x94, 0x13, 0x17, 0x82, 0x1b, 0x48, 0x99, 0x2a,
	0xbc, 0x3a, 0x0a, 0x54, 0x05, 0xb4, 0x2d, 0x86, 0x39, 0x19, 0x44, 0x53, 0x98, 0x81, 0xef, 0xa0,
	0x5c, 0x4c, 0x4a, 0x48, 0x3e, 0x14, 0x31, 0x4c, 0x5e, 0xca, 0x07, 0xa0, 0xc8, 0x85, 0x0a, 0x09,
	0x43, 0xd9, 0x20, 0x17, 0x1a, 0x9a, 0x87, 0xb9, 0x50, 0x69, 0x2f, 0xed, 0x84, 0x83, 0xac, 0xe3,
	0x5c, 0x94, 0xfc, 0xa4, 0x84, 0x43, 0x87, 0xb0, 0x7a, 0x25, 0x2c, 0x1c, 0x3c, 0xae, 0xf3, 0x84,
	0x3c, 0x00, 0x44, 0x0e, 0xb0, 0x24, 0x9a, 0x84, 0xc9, 0xd7, 0x79, 0x94, 0x13, 0xba, 0xe3, 0xb7,
	0x66, 0x5b, 0xc8, 0xed, 0x64, 0x0b, 0x59, 0x49, 0xb6, 0x90, 0x17, 0xed, 0x51, 0x4b, 0x54, 0xfd,
	0xd2, 0x45, 0xab, 0xfe, 0x03, 0x54, 0x82, 0x56, 0xa3, 0xf7, 0x7a, 0xd4, 0xf3, 0x2a, 0xcb, 0xf5,
	0xec, 0x56, 0xb6, 0xbd, 0x39, 0x0a, 0xd4, 0x38, 0x3c, 0x0e, 0x54, 0x1c, 0x6b, 0x4b, 0x12, 0x24,
	0x1a, 0x34, 0xae, 0x3d, 0x58, 0x44, 0xd5, 0x5f, 0xb8, 0x68, 0xf5, 0x17, 0xff, 0x5d, 0xf5, 0x27,
	0x9a, 0x0b, 0xba, 0x60, 0x73, 0x49, 0xbc, 0xca, 0xa5, 0x8b, 0xbf, 0xca, 0x4f, 0x15, 0xb4, 0xfa,
	0x90, 0xba, 0x16, 0xf3, 0x3c, 0x66, 0x0f, 0x0e, 0xa1, 0xed, 0x5f, 0xf6, 0x2f, 0x87, 0xff, 0xee,
	0x75, 0xcb, 0x5e, 0xca, 0xeb, 0xf6, 0xad, 0x82, 0x5e, 0x99, 0xd7, 0xc4, 0x73, 0x5e, 0x64, 0x51,
	0x76, 0xbe, 0x59, 0x46, 0x39, 0xf1, 0x36, 0x63, 0x8e, 0x6e, 0xcc, 0x0e, 0x91, 0xb8, 0x9e, 0x78,
	0x53, 0x16, 0xcc, 0x98, 0xd5, 0x9b, 0x4d, 0x39, 0x98, 0x36, 0x27, 0x83, 0x69, 0xf3, 0x7d, 0x31,
	0x98, 0x92, 0xd7, 0xbf, 0xfc, 0xe5, 0xcf, 0xef, 0x94, 0x3a, 0xa9, 0xb5, 0x3e, 0x6f, 0xe9, 0x86,
	0xc5, 0x06, 0x93, 0x11, 0x1a, 0x46, 0x66, 0xa8, 0xf2, 0x96, 0x6e, 0x18, 0xf8, 0x0b, 0xb4, 0xba,
	0x60, 0x94, 0xc4, 0x8d, 0x04, 0xf1, 0xe2, 0x61, 0x33, 0x95, 0xfb, 0x0d, 0xe0, 0x6e, 0x90, 0x8d,
	0x73, 0xb8, 0x7d, 0x08, 0x89, 0x19, 0x2a, 0xc5, 0x4e, 0x85, 0xd7, 0xd3, 0xce, 0x7b, 0x1e, 0xdd,
	0x26, 0xd0, 0xa9, 0xe4, 0xf6, 0x42, 0x3a, 0x51, 0x16, 0x70, 0x52, 0x17, 0xad, 0x24, 0xcf, 0x81,
	0x6b, 0xe7, 0x1c, 0xf2, 0x3c, 0xc2, 0x2d, 0x20, 0x24, 0xa4, 0x9e, 0x4e, 0x18, 0x1e, 0xcf, 0x45,
	0x2b, 0xc9, 0xe1, 0x61, 0x86, 0x73, 0x6e, 0xb2, 0x78, 0x1e, 0x4e, 0xef, 0x84, 0xf1, 0xde, 0xb1,
	0xe0, 0x4c, 0xce, 0x03, 0x33, 0x9c, 0x73, 0xc3, 0xc2, 0xf3, 0x70, 0x1a, 0x10, 0x0c, 0x77, 0x51,
	0x71, 0x3a, 0x22, 0xe0, 0xb5, 0xf9, 0x89, 0x20, 0x1c, 0x1d, 0x52, 0x99, 0x08, 0x30, 0xdd, 0x22,
	0xd5, 0x94, 0x8a, 0x11, 0x73, 0x41, 0x17, 0x15, 0x26, 0xbf, 0x63, 0x71, 0x25, 0x41, 0x11, 0xfb,
	0xc9, 0x5c, 0x5d, 0x4b, 0xd9, 0xf1, 0x1c, 0xb2, 0x01, 0x24, 0xeb, 0x78, 0x6d, 0x21, 0x89, 0xc9,
	0x3c, 0xde, 0xae, 0x3e, 0xfb, 0xbd, 0x76, 0xed, 0xd9, 0x59, 0x2d, 0xf3, 0xf3, 0x59, 0x2d, 0xf3,
	0xdb, 0x59, 0x2d, 0xf3, 0xfd, 0x1f, 0xb5, 0x6b, 0x9f, 0xe5, 0x84, 0x41, 0x77, 0x09, 0x72, 0xbe,
	0xf7, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0xc5, 0x98, 0x14, 0xa3, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// 新增权限组
	AddAuthItemGroup(ctx context.Context, in *AddAuthItemGroupReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 更新权限组
	UpdateAuthItemGroup(ctx context.Context, in *UpdateAuthItemGroupReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 新增权限点
	AddAuthItem(ctx context.Context, in *AddAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 更新权限点
	UpdateAuthItem(ctx context.Context, in *UpdateAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 启用权限点
	ActiveAuthItem(ctx context.Context, in *ActiveAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 删除权限点
	DeleteAuthItem(ctx context.Context, in *DeleteAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 给角色授权
	GrantRole(ctx context.Context, in *GrantRoleReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 拉取所有权限点
	ListAuth(ctx context.Context, in *ListAuthReq, opts ...grpc.CallOption) (*ListAuthResp, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) AddAuthItemGroup(ctx context.Context, in *AddAuthItemGroupReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/AddAuthItemGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) UpdateAuthItemGroup(ctx context.Context, in *UpdateAuthItemGroupReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/UpdateAuthItemGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) AddAuthItem(ctx context.Context, in *AddAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/AddAuthItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) UpdateAuthItem(ctx context.Context, in *UpdateAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/UpdateAuthItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ActiveAuthItem(ctx context.Context, in *ActiveAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/ActiveAuthItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) DeleteAuthItem(ctx context.Context, in *DeleteAuthItemReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/DeleteAuthItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GrantRole(ctx context.Context, in *GrantRoleReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/GrantRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ListAuth(ctx context.Context, in *ListAuthReq, opts ...grpc.CallOption) (*ListAuthResp, error) {
	out := new(ListAuthResp)
	err := c.cc.Invoke(ctx, "/app.auth.v1.Auth/ListAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	// 新增权限组
	AddAuthItemGroup(context.Context, *AddAuthItemGroupReq) (*empty.Empty, error)
	// 更新权限组
	UpdateAuthItemGroup(context.Context, *UpdateAuthItemGroupReq) (*empty.Empty, error)
	// 新增权限点
	AddAuthItem(context.Context, *AddAuthItemReq) (*empty.Empty, error)
	// 更新权限点
	UpdateAuthItem(context.Context, *UpdateAuthItemReq) (*empty.Empty, error)
	// 启用权限点
	ActiveAuthItem(context.Context, *ActiveAuthItemReq) (*empty.Empty, error)
	// 删除权限点
	DeleteAuthItem(context.Context, *DeleteAuthItemReq) (*empty.Empty, error)
	// 给角色授权
	GrantRole(context.Context, *GrantRoleReq) (*empty.Empty, error)
	// 拉取所有权限点
	ListAuth(context.Context, *ListAuthReq) (*ListAuthResp, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) AddAuthItemGroup(ctx context.Context, req *AddAuthItemGroupReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAuthItemGroup not implemented")
}
func (*UnimplementedAuthServer) UpdateAuthItemGroup(ctx context.Context, req *UpdateAuthItemGroupReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthItemGroup not implemented")
}
func (*UnimplementedAuthServer) AddAuthItem(ctx context.Context, req *AddAuthItemReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAuthItem not implemented")
}
func (*UnimplementedAuthServer) UpdateAuthItem(ctx context.Context, req *UpdateAuthItemReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthItem not implemented")
}
func (*UnimplementedAuthServer) ActiveAuthItem(ctx context.Context, req *ActiveAuthItemReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveAuthItem not implemented")
}
func (*UnimplementedAuthServer) DeleteAuthItem(ctx context.Context, req *DeleteAuthItemReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthItem not implemented")
}
func (*UnimplementedAuthServer) GrantRole(ctx context.Context, req *GrantRoleReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantRole not implemented")
}
func (*UnimplementedAuthServer) ListAuth(ctx context.Context, req *ListAuthReq) (*ListAuthResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuth not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_AddAuthItemGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAuthItemGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).AddAuthItemGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/AddAuthItemGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).AddAuthItemGroup(ctx, req.(*AddAuthItemGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_UpdateAuthItemGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthItemGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).UpdateAuthItemGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/UpdateAuthItemGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).UpdateAuthItemGroup(ctx, req.(*UpdateAuthItemGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_AddAuthItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAuthItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).AddAuthItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/AddAuthItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).AddAuthItem(ctx, req.(*AddAuthItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_UpdateAuthItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).UpdateAuthItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/UpdateAuthItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).UpdateAuthItem(ctx, req.(*UpdateAuthItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ActiveAuthItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActiveAuthItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ActiveAuthItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/ActiveAuthItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ActiveAuthItem(ctx, req.(*ActiveAuthItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_DeleteAuthItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthItemReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteAuthItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/DeleteAuthItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteAuthItem(ctx, req.(*DeleteAuthItemReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GrantRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GrantRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/GrantRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GrantRole(ctx, req.(*GrantRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ListAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ListAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.auth.v1.Auth/ListAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ListAuth(ctx, req.(*ListAuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.auth.v1.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAuthItemGroup",
			Handler:    _Auth_AddAuthItemGroup_Handler,
		},
		{
			MethodName: "UpdateAuthItemGroup",
			Handler:    _Auth_UpdateAuthItemGroup_Handler,
		},
		{
			MethodName: "AddAuthItem",
			Handler:    _Auth_AddAuthItem_Handler,
		},
		{
			MethodName: "UpdateAuthItem",
			Handler:    _Auth_UpdateAuthItem_Handler,
		},
		{
			MethodName: "ActiveAuthItem",
			Handler:    _Auth_ActiveAuthItem_Handler,
		},
		{
			MethodName: "DeleteAuthItem",
			Handler:    _Auth_DeleteAuthItem_Handler,
		},
		{
			MethodName: "GrantRole",
			Handler:    _Auth_GrantRole_Handler,
		},
		{
			MethodName: "ListAuth",
			Handler:    _Auth_ListAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/app-svr/fawkes/service/api/app/auth/auth.proto",
}

func (m *AddAuthItemGroupReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddAuthItemGroupReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddAuthItemGroupReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GroupName) > 0 {
		i -= len(m.GroupName)
		copy(dAtA[i:], m.GroupName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.GroupName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateAuthItemGroupReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateAuthItemGroupReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateAuthItemGroupReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GroupName) > 0 {
		i -= len(m.GroupName)
		copy(dAtA[i:], m.GroupName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.GroupName)))
		i--
		dAtA[i] = 0x12
	}
	if m.GroupId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.GroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AddAuthItemReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddAuthItemReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddAuthItemReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UrlParam) > 0 {
		i -= len(m.UrlParam)
		copy(dAtA[i:], m.UrlParam)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.UrlParam)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BeUrl) > 0 {
		i -= len(m.BeUrl)
		copy(dAtA[i:], m.BeUrl)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.BeUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FeKey) > 0 {
		i -= len(m.FeKey)
		copy(dAtA[i:], m.FeKey)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.FeKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ItemName) > 0 {
		i -= len(m.ItemName)
		copy(dAtA[i:], m.ItemName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.ItemName)))
		i--
		dAtA[i] = 0x12
	}
	if m.GroupId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.GroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpdateAuthItemReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateAuthItemReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateAuthItemReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UrlParam) > 0 {
		i -= len(m.UrlParam)
		copy(dAtA[i:], m.UrlParam)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.UrlParam)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BeUrl) > 0 {
		i -= len(m.BeUrl)
		copy(dAtA[i:], m.BeUrl)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.BeUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FeKey) > 0 {
		i -= len(m.FeKey)
		copy(dAtA[i:], m.FeKey)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.FeKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ItemName) > 0 {
		i -= len(m.ItemName)
		copy(dAtA[i:], m.ItemName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.ItemName)))
		i--
		dAtA[i] = 0x12
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActiveAuthItemReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActiveAuthItemReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActiveAuthItemReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsActive {
		i--
		if m.IsActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeleteAuthItemReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteAuthItemReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteAuthItemReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrantRoleReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrantRoleReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrantRoleReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Item) > 0 {
		for iNdEx := len(m.Item) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Item[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuth(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Grant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Grant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Grant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsGranted {
		i--
		if m.IsGranted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.RoleValue != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.RoleValue))
		i--
		dAtA[i] = 0x10
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListAuthReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListAuthReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListAuthReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoleValue != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.RoleValue))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListAuthResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListAuthResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListAuthResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Role) > 0 {
		for iNdEx := len(m.Role) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Role[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuth(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Group) > 0 {
		for iNdEx := len(m.Group) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Group[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuth(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Group) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Group) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Group) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mtime != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Mtime))
		i--
		dAtA[i] = 0x30
	}
	if m.Ctime != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Ctime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Item) > 0 {
		for iNdEx := len(m.Item) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Item[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuth(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Operator) > 0 {
		i -= len(m.Operator)
		copy(dAtA[i:], m.Operator)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Operator)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GroupName) > 0 {
		i -= len(m.GroupName)
		copy(dAtA[i:], m.GroupName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.GroupName)))
		i--
		dAtA[i] = 0x12
	}
	if m.GroupId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.GroupId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Role) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Role) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Role) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x28
	}
	if m.Value != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Value))
		i--
		dAtA[i] = 0x20
	}
	if len(m.EName) > 0 {
		i -= len(m.EName)
		copy(dAtA[i:], m.EName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.EName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Item) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Item) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Item) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsActive {
		i--
		if m.IsActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.GroupId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.GroupId))
		i--
		dAtA[i] = 0x50
	}
	if m.Mtime != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Mtime))
		i--
		dAtA[i] = 0x48
	}
	if m.Ctime != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Ctime))
		i--
		dAtA[i] = 0x40
	}
	if len(m.RoleAccess) > 0 {
		dAtA2 := make([]byte, len(m.RoleAccess)*10)
		var j1 int
		for _, num1 := range m.RoleAccess {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintAuth(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Operator) > 0 {
		i -= len(m.Operator)
		copy(dAtA[i:], m.Operator)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Operator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.UrlParam) > 0 {
		i -= len(m.UrlParam)
		copy(dAtA[i:], m.UrlParam)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.UrlParam)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BeUrl) > 0 {
		i -= len(m.BeUrl)
		copy(dAtA[i:], m.BeUrl)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.BeUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FeKey) > 0 {
		i -= len(m.FeKey)
		copy(dAtA[i:], m.FeKey)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.FeKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ItemName) > 0 {
		i -= len(m.ItemName)
		copy(dAtA[i:], m.ItemName)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.ItemName)))
		i--
		dAtA[i] = 0x12
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PermissionValidaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PermissionValidaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PermissionValidaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsGranted != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.IsGranted))
		i--
		dAtA[i] = 0x18
	}
	if m.RoleValue != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.RoleValue))
		i--
		dAtA[i] = 0x10
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PermissionValidaResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PermissionValidaResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PermissionValidaResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsGranted != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.IsGranted))
		i--
		dAtA[i] = 0x18
	}
	if m.RoleValue != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.RoleValue))
		i--
		dAtA[i] = 0x10
	}
	if m.ItemId != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintAuth(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuth(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AddAuthItemGroupReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GroupName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateAuthItemGroupReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GroupId != 0 {
		n += 1 + sovAuth(uint64(m.GroupId))
	}
	l = len(m.GroupName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddAuthItemReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GroupId != 0 {
		n += 1 + sovAuth(uint64(m.GroupId))
	}
	l = len(m.ItemName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.FeKey)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.BeUrl)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.UrlParam)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateAuthItemReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	l = len(m.ItemName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.FeKey)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.BeUrl)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.UrlParam)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ActiveAuthItemReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	if m.IsActive {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteAuthItemReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrantRoleReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Item) > 0 {
		for _, e := range m.Item {
			l = e.Size()
			n += 1 + l + sovAuth(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Grant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	if m.RoleValue != 0 {
		n += 1 + sovAuth(uint64(m.RoleValue))
	}
	if m.IsGranted {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAuthReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RoleValue != 0 {
		n += 1 + sovAuth(uint64(m.RoleValue))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAuthResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Group) > 0 {
		for _, e := range m.Group {
			l = e.Size()
			n += 1 + l + sovAuth(uint64(l))
		}
	}
	if len(m.Role) > 0 {
		for _, e := range m.Role {
			l = e.Size()
			n += 1 + l + sovAuth(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Group) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GroupId != 0 {
		n += 1 + sovAuth(uint64(m.GroupId))
	}
	l = len(m.GroupName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Operator)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if len(m.Item) > 0 {
		for _, e := range m.Item {
			l = e.Size()
			n += 1 + l + sovAuth(uint64(l))
		}
	}
	if m.Ctime != 0 {
		n += 1 + sovAuth(uint64(m.Ctime))
	}
	if m.Mtime != 0 {
		n += 1 + sovAuth(uint64(m.Mtime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Role) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovAuth(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.EName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovAuth(uint64(m.Value))
	}
	if m.State != 0 {
		n += 1 + sovAuth(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Item) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	l = len(m.ItemName)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.FeKey)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.BeUrl)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.UrlParam)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Operator)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if len(m.RoleAccess) > 0 {
		l = 0
		for _, e := range m.RoleAccess {
			l += sovAuth(uint64(e))
		}
		n += 1 + sovAuth(uint64(l)) + l
	}
	if m.Ctime != 0 {
		n += 1 + sovAuth(uint64(m.Ctime))
	}
	if m.Mtime != 0 {
		n += 1 + sovAuth(uint64(m.Mtime))
	}
	if m.GroupId != 0 {
		n += 1 + sovAuth(uint64(m.GroupId))
	}
	if m.IsActive {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PermissionValidaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	if m.RoleValue != 0 {
		n += 1 + sovAuth(uint64(m.RoleValue))
	}
	if m.IsGranted != 0 {
		n += 1 + sovAuth(uint64(m.IsGranted))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PermissionValidaResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemId != 0 {
		n += 1 + sovAuth(uint64(m.ItemId))
	}
	if m.RoleValue != 0 {
		n += 1 + sovAuth(uint64(m.RoleValue))
	}
	if m.IsGranted != 0 {
		n += 1 + sovAuth(uint64(m.IsGranted))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAuth(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuth(x uint64) (n int) {
	return sovAuth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AddAuthItemGroupReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddAuthItemGroupReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddAuthItemGroupReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateAuthItemGroupReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAuthItemGroupReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAuthItemGroupReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddAuthItemReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddAuthItemReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddAuthItemReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateAuthItemReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateAuthItemReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateAuthItemReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActiveAuthItemReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActiveAuthItemReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActiveAuthItemReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsActive = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteAuthItemReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteAuthItemReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteAuthItemReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrantRoleReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrantRoleReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrantRoleReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Item = append(m.Item, &Grant{})
			if err := m.Item[len(m.Item)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Grant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Grant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Grant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleValue", wireType)
			}
			m.RoleValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsGranted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsGranted = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListAuthReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListAuthReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListAuthReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleValue", wireType)
			}
			m.RoleValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListAuthResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListAuthResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListAuthResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Group = append(m.Group, &Group{})
			if err := m.Group[len(m.Group)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = append(m.Role, &Role{})
			if err := m.Role[len(m.Role)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Group) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Group: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Group: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Item = append(m.Item, &Item{})
			if err := m.Item[len(m.Item)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			m.Ctime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ctime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			m.Mtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mtime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Role) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Role: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Role: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			m.Value = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Value |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Item) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Item: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Item: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RoleAccess = append(m.RoleAccess, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowAuth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthAuth
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthAuth
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RoleAccess) == 0 {
					m.RoleAccess = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowAuth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RoleAccess = append(m.RoleAccess, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleAccess", wireType)
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			m.Ctime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ctime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			m.Mtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mtime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsActive = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PermissionValidaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PermissionValidaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PermissionValidaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleValue", wireType)
			}
			m.RoleValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsGranted", wireType)
			}
			m.IsGranted = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsGranted |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PermissionValidaResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PermissionValidaResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PermissionValidaResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleValue", wireType)
			}
			m.RoleValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoleValue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsGranted", wireType)
			}
			m.IsGranted = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsGranted |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuth
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuth
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuth
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuth        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuth          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuth = fmt.Errorf("proto: unexpected end of group")
)
