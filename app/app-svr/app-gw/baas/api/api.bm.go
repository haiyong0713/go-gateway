// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:

	api.proto
*/
package api

import (
	"context"

	bm "go-common/library/net/http/blademaster"
	"go-common/library/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathBaasModelList = "/app.gw.gateway.baas.v1.Baas/ModelList"
var PathBaasModelItemList = "/app.gw.gateway.baas.v1.Baas/ModelItemList"
var PathBaasModelFieldList = "/app.gw.gateway.baas.v1.Baas/ModelFieldList"
var PathBaasModelDetail = "/app.gw.gateway.baas.v1.Baas/ModelDetail"
var PathBaasAddModel = "/app.gw.gateway.baas.v1.Baas/AddModel"
var PathBaasAddModelField = "/app.gw.gateway.baas.v1.Baas/AddModelField"
var PathBaasUpdateModelField = "/app.gw.gateway.baas.v1.Baas/UpdateModelField"
var PathBaasDeleteModelField = "/app.gw.gateway.baas.v1.Baas/DeleteModelField"
var PathBaasExportList = "/app.gw.gateway.baas.v1.Baas/ExportList"
var PathBaasAddExport = "/app.gw.gateway.baas.v1.Baas/AddExport"
var PathBaasUpdateExport = "/app.gw.gateway.baas.v1.Baas/UpdateExport"
var PathBaasAddImport = "/app.gw.gateway.baas.v1.Baas/AddImport"
var PathBaasUpdateImport = "/app.gw.gateway.baas.v1.Baas/UpdateImport"
var PathBaasAddModelFieldRule = "/app.gw.gateway.baas.v1.Baas/AddModelFieldRule"
var PathBaasUpdateModelFieldRule = "/app.gw.gateway.baas.v1.Baas/UpdateModelFieldRule"
var PathBaasAuthZ = "/app.gw.gateway.baas.v1.Baas/AuthZ"

// BaasBMServer is the server API for Baas service.
type BaasBMServer interface {
	ModelList(ctx context.Context, req *ModelListRequest) (resp *ModelListReply, err error)

	ModelItemList(ctx context.Context, req *ModelItemListRequest) (resp *ModelItemListReply, err error)

	ModelFieldList(ctx context.Context, req *ModelDetailRequest) (resp *ModelFieldReply, err error)

	ModelDetail(ctx context.Context, req *ModelDetailRequest) (resp *ModelDetailReply, err error)

	AddModel(ctx context.Context, req *AddModelRequest) (resp *google_protobuf1.Empty, err error)

	AddModelField(ctx context.Context, req *AddModelFieldRequest) (resp *google_protobuf1.Empty, err error)

	UpdateModelField(ctx context.Context, req *UpdateModelFieldRequest) (resp *google_protobuf1.Empty, err error)

	DeleteModelField(ctx context.Context, req *DeleteModelFieldRequest) (resp *google_protobuf1.Empty, err error)

	ExportList(ctx context.Context, req *ExportListRequest) (resp *ExportListReply, err error)

	AddExport(ctx context.Context, req *AddExportRequest) (resp *google_protobuf1.Empty, err error)

	UpdateExport(ctx context.Context, req *UpdateExportRequest) (resp *google_protobuf1.Empty, err error)

	AddImport(ctx context.Context, req *AddImportRequest) (resp *google_protobuf1.Empty, err error)

	UpdateImport(ctx context.Context, req *UpdateImportRequest) (resp *google_protobuf1.Empty, err error)

	AddModelFieldRule(ctx context.Context, req *AddModelFieldRuleRequest) (resp *google_protobuf1.Empty, err error)

	UpdateModelFieldRule(ctx context.Context, req *UpdateModelFieldRuleRequest) (resp *google_protobuf1.Empty, err error)

	AuthZ(ctx context.Context, req *AuthZReq) (resp *AuthZReply, err error)
}

var BaasSvc BaasBMServer

func baasModelList(c *bm.Context) {
	p := new(ModelListRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.ModelList(c, p)
	c.JSON(resp, err)
}

func baasModelItemList(c *bm.Context) {
	p := new(ModelItemListRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.ModelItemList(c, p)
	c.JSON(resp, err)
}

func baasModelFieldList(c *bm.Context) {
	p := new(ModelDetailRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.ModelFieldList(c, p)
	c.JSON(resp, err)
}

func baasModelDetail(c *bm.Context) {
	p := new(ModelDetailRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.ModelDetail(c, p)
	c.JSON(resp, err)
}

func baasAddModel(c *bm.Context) {
	p := new(AddModelRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AddModel(c, p)
	c.JSON(resp, err)
}

func baasAddModelField(c *bm.Context) {
	p := new(AddModelFieldRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AddModelField(c, p)
	c.JSON(resp, err)
}

func baasUpdateModelField(c *bm.Context) {
	p := new(UpdateModelFieldRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.UpdateModelField(c, p)
	c.JSON(resp, err)
}

func baasDeleteModelField(c *bm.Context) {
	p := new(DeleteModelFieldRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.DeleteModelField(c, p)
	c.JSON(resp, err)
}

func baasExportList(c *bm.Context) {
	p := new(ExportListRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.ExportList(c, p)
	c.JSON(resp, err)
}

func baasAddExport(c *bm.Context) {
	p := new(AddExportRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AddExport(c, p)
	c.JSON(resp, err)
}

func baasUpdateExport(c *bm.Context) {
	p := new(UpdateExportRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.UpdateExport(c, p)
	c.JSON(resp, err)
}

func baasAddImport(c *bm.Context) {
	p := new(AddImportRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AddImport(c, p)
	c.JSON(resp, err)
}

func baasUpdateImport(c *bm.Context) {
	p := new(UpdateImportRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.UpdateImport(c, p)
	c.JSON(resp, err)
}

func baasAddModelFieldRule(c *bm.Context) {
	p := new(AddModelFieldRuleRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AddModelFieldRule(c, p)
	c.JSON(resp, err)
}

func baasUpdateModelFieldRule(c *bm.Context) {
	p := new(UpdateModelFieldRuleRequest)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.UpdateModelFieldRule(c, p)
	c.JSON(resp, err)
}

func baasAuthZ(c *bm.Context) {
	p := new(AuthZReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := BaasSvc.AuthZ(c, p)
	c.JSON(resp, err)
}

// RegisterBaasBMServer Register the blademaster route
func RegisterBaasBMServer(e *bm.Engine, server BaasBMServer) {
	BaasSvc = server
	e.GET("/app.gw.gateway.baas.v1.Baas/ModelList", baasModelList)
	e.GET("/app.gw.gateway.baas.v1.Baas/ModelItemList", baasModelItemList)
	e.GET("/app.gw.gateway.baas.v1.Baas/ModelFieldList", baasModelFieldList)
	e.GET("/app.gw.gateway.baas.v1.Baas/ModelDetail", baasModelDetail)
	e.GET("/app.gw.gateway.baas.v1.Baas/AddModel", baasAddModel)
	e.GET("/app.gw.gateway.baas.v1.Baas/AddModelField", baasAddModelField)
	e.GET("/app.gw.gateway.baas.v1.Baas/UpdateModelField", baasUpdateModelField)
	e.GET("/app.gw.gateway.baas.v1.Baas/DeleteModelField", baasDeleteModelField)
	e.GET("/app.gw.gateway.baas.v1.Baas/ExportList", baasExportList)
	e.GET("/app.gw.gateway.baas.v1.Baas/AddExport", baasAddExport)
	e.GET("/app.gw.gateway.baas.v1.Baas/UpdateExport", baasUpdateExport)
	e.GET("/app.gw.gateway.baas.v1.Baas/AddImport", baasAddImport)
	e.GET("/app.gw.gateway.baas.v1.Baas/UpdateImport", baasUpdateImport)
	e.GET("/app.gw.gateway.baas.v1.Baas/AddModelFieldRule", baasAddModelFieldRule)
	e.GET("/app.gw.gateway.baas.v1.Baas/UpdateModelFieldRule", baasUpdateModelFieldRule)
	e.GET("/app.gw.gateway.baas.v1.Baas/AuthZ", baasAuthZ)
}
