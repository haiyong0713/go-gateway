// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: popular.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	proto1 "go-gateway/app/app-svr/app-card/interface/model/card/proto"
	v1 "go-gateway/app/app-svr/archive/middleware/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PopularResultReq struct {
	Idx        int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	LoginEvent int32 `protobuf:"varint,2,opt,name=login_event,json=loginEvent,proto3" json:"login_event,omitempty"`
	//（新版本废弃，统一使用player_args）
	Qn int32 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	//（新版本废弃，统一使用player_args）
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	//（新版本废弃，统一使用player_args）
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	//（新版本废弃，统一使用player_args）
	ForceHost int32 `protobuf:"varint,6,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	//（新版本废弃，统一使用player_args）
	Fourk       int32  `protobuf:"varint,7,opt,name=fourk,proto3" json:"fourk,omitempty"`
	Spmid       string `protobuf:"bytes,8,opt,name=spmid,proto3" json:"spmid,omitempty"`
	LastParam   string `protobuf:"bytes,9,opt,name=last_param,json=lastParam,proto3" json:"last_param,omitempty"`
	Ver         string `protobuf:"bytes,10,opt,name=ver,proto3" json:"ver,omitempty"`
	EntranceId  int64  `protobuf:"varint,11,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
	LocationIds string `protobuf:"bytes,12,opt,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
	SourceId    int32  `protobuf:"varint,13,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Flush       int32  `protobuf:"varint,14,opt,name=flush,proto3" json:"flush,omitempty"`
	// 秒开用参数-高版本
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,15,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	PopularAd            *PopularAd     `protobuf:"bytes,16,opt,name=popular_ad,json=popularAd,proto3" json:"popular_ad,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PopularResultReq) Reset()         { *m = PopularResultReq{} }
func (m *PopularResultReq) String() string { return proto.CompactTextString(m) }
func (*PopularResultReq) ProtoMessage()    {}
func (*PopularResultReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{0}
}
func (m *PopularResultReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PopularResultReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PopularResultReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PopularResultReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopularResultReq.Merge(m, src)
}
func (m *PopularResultReq) XXX_Size() int {
	return m.Size()
}
func (m *PopularResultReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PopularResultReq.DiscardUnknown(m)
}

var xxx_messageInfo_PopularResultReq proto.InternalMessageInfo

func (m *PopularResultReq) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *PopularResultReq) GetLoginEvent() int32 {
	if m != nil {
		return m.LoginEvent
	}
	return 0
}

func (m *PopularResultReq) GetQn() int32 {
	if m != nil {
		return m.Qn
	}
	return 0
}

func (m *PopularResultReq) GetFnver() int32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *PopularResultReq) GetFnval() int32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *PopularResultReq) GetForceHost() int32 {
	if m != nil {
		return m.ForceHost
	}
	return 0
}

func (m *PopularResultReq) GetFourk() int32 {
	if m != nil {
		return m.Fourk
	}
	return 0
}

func (m *PopularResultReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *PopularResultReq) GetLastParam() string {
	if m != nil {
		return m.LastParam
	}
	return ""
}

func (m *PopularResultReq) GetVer() string {
	if m != nil {
		return m.Ver
	}
	return ""
}

func (m *PopularResultReq) GetEntranceId() int64 {
	if m != nil {
		return m.EntranceId
	}
	return 0
}

func (m *PopularResultReq) GetLocationIds() string {
	if m != nil {
		return m.LocationIds
	}
	return ""
}

func (m *PopularResultReq) GetSourceId() int32 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *PopularResultReq) GetFlush() int32 {
	if m != nil {
		return m.Flush
	}
	return 0
}

func (m *PopularResultReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *PopularResultReq) GetPopularAd() *PopularAd {
	if m != nil {
		return m.PopularAd
	}
	return nil
}

type PopularAd struct {
	AdExtra              string   `protobuf:"bytes,1,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PopularAd) Reset()         { *m = PopularAd{} }
func (m *PopularAd) String() string { return proto.CompactTextString(m) }
func (*PopularAd) ProtoMessage()    {}
func (*PopularAd) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{1}
}
func (m *PopularAd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PopularAd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PopularAd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PopularAd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopularAd.Merge(m, src)
}
func (m *PopularAd) XXX_Size() int {
	return m.Size()
}
func (m *PopularAd) XXX_DiscardUnknown() {
	xxx_messageInfo_PopularAd.DiscardUnknown(m)
}

var xxx_messageInfo_PopularAd proto.InternalMessageInfo

func (m *PopularAd) GetAdExtra() string {
	if m != nil {
		return m.AdExtra
	}
	return ""
}

type PopularReply struct {
	Items                []*proto1.Card `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Config               *Config        `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Ver                  string         `protobuf:"bytes,3,opt,name=ver,proto3" json:"ver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PopularReply) Reset()         { *m = PopularReply{} }
func (m *PopularReply) String() string { return proto.CompactTextString(m) }
func (*PopularReply) ProtoMessage()    {}
func (*PopularReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{2}
}
func (m *PopularReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PopularReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PopularReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PopularReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopularReply.Merge(m, src)
}
func (m *PopularReply) XXX_Size() int {
	return m.Size()
}
func (m *PopularReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PopularReply.DiscardUnknown(m)
}

var xxx_messageInfo_PopularReply proto.InternalMessageInfo

func (m *PopularReply) GetItems() []*proto1.Card {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PopularReply) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *PopularReply) GetVer() string {
	if m != nil {
		return m.Ver
	}
	return ""
}

type Config struct {
	ItemTitle            string          `protobuf:"bytes,1,opt,name=item_title,json=itemTitle,proto3" json:"item_title,omitempty"`
	BottomText           string          `protobuf:"bytes,2,opt,name=bottom_text,json=bottomText,proto3" json:"bottom_text,omitempty"`
	BottomTextCover      string          `protobuf:"bytes,3,opt,name=bottom_text_cover,json=bottomTextCover,proto3" json:"bottom_text_cover,omitempty"`
	BottomTextUrl        string          `protobuf:"bytes,4,opt,name=bottom_text_url,json=bottomTextUrl,proto3" json:"bottom_text_url,omitempty"`
	TopItems             []*EntranceShow `protobuf:"bytes,5,rep,name=top_items,json=topItems,proto3" json:"top_items,omitempty"`
	HeadImage            string          `protobuf:"bytes,6,opt,name=head_image,json=headImage,proto3" json:"head_image,omitempty"`
	PageItems            []*EntranceShow `protobuf:"bytes,7,rep,name=page_items,json=pageItems,proto3" json:"page_items,omitempty"`
	Hit                  int64           `protobuf:"varint,8,opt,name=hit,proto3" json:"hit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{3}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return m.Size()
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetItemTitle() string {
	if m != nil {
		return m.ItemTitle
	}
	return ""
}

func (m *Config) GetBottomText() string {
	if m != nil {
		return m.BottomText
	}
	return ""
}

func (m *Config) GetBottomTextCover() string {
	if m != nil {
		return m.BottomTextCover
	}
	return ""
}

func (m *Config) GetBottomTextUrl() string {
	if m != nil {
		return m.BottomTextUrl
	}
	return ""
}

func (m *Config) GetTopItems() []*EntranceShow {
	if m != nil {
		return m.TopItems
	}
	return nil
}

func (m *Config) GetHeadImage() string {
	if m != nil {
		return m.HeadImage
	}
	return ""
}

func (m *Config) GetPageItems() []*EntranceShow {
	if m != nil {
		return m.PageItems
	}
	return nil
}

func (m *Config) GetHit() int64 {
	if m != nil {
		return m.Hit
	}
	return 0
}

type EntranceShow struct {
	Icon                 string   `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ModuleId             string   `protobuf:"bytes,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	Uri                  string   `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	Bubble               *Bubble  `protobuf:"bytes,5,opt,name=bubble,proto3" json:"bubble,omitempty"`
	EntranceId           int64    `protobuf:"varint,6,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
	TopPhoto             string   `protobuf:"bytes,7,opt,name=top_photo,json=topPhoto,proto3" json:"top_photo,omitempty"`
	EntranceType         int32    `protobuf:"varint,8,opt,name=entrance_type,json=entranceType,proto3" json:"entrance_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntranceShow) Reset()         { *m = EntranceShow{} }
func (m *EntranceShow) String() string { return proto.CompactTextString(m) }
func (*EntranceShow) ProtoMessage()    {}
func (*EntranceShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{4}
}
func (m *EntranceShow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EntranceShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EntranceShow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EntranceShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntranceShow.Merge(m, src)
}
func (m *EntranceShow) XXX_Size() int {
	return m.Size()
}
func (m *EntranceShow) XXX_DiscardUnknown() {
	xxx_messageInfo_EntranceShow.DiscardUnknown(m)
}

var xxx_messageInfo_EntranceShow proto.InternalMessageInfo

func (m *EntranceShow) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *EntranceShow) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EntranceShow) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *EntranceShow) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *EntranceShow) GetBubble() *Bubble {
	if m != nil {
		return m.Bubble
	}
	return nil
}

func (m *EntranceShow) GetEntranceId() int64 {
	if m != nil {
		return m.EntranceId
	}
	return 0
}

func (m *EntranceShow) GetTopPhoto() string {
	if m != nil {
		return m.TopPhoto
	}
	return ""
}

func (m *EntranceShow) GetEntranceType() int32 {
	if m != nil {
		return m.EntranceType
	}
	return 0
}

type Bubble struct {
	BubbleContent        string   `protobuf:"bytes,1,opt,name=bubble_content,json=bubbleContent,proto3" json:"bubble_content,omitempty"`
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Stime                int64    `protobuf:"varint,3,opt,name=stime,proto3" json:"stime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bubble) Reset()         { *m = Bubble{} }
func (m *Bubble) String() string { return proto.CompactTextString(m) }
func (*Bubble) ProtoMessage()    {}
func (*Bubble) Descriptor() ([]byte, []int) {
	return fileDescriptor_08c242c6b26d859c, []int{5}
}
func (m *Bubble) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Bubble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Bubble.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Bubble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bubble.Merge(m, src)
}
func (m *Bubble) XXX_Size() int {
	return m.Size()
}
func (m *Bubble) XXX_DiscardUnknown() {
	xxx_messageInfo_Bubble.DiscardUnknown(m)
}

var xxx_messageInfo_Bubble proto.InternalMessageInfo

func (m *Bubble) GetBubbleContent() string {
	if m != nil {
		return m.BubbleContent
	}
	return ""
}

func (m *Bubble) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Bubble) GetStime() int64 {
	if m != nil {
		return m.Stime
	}
	return 0
}

func init() {
	proto.RegisterType((*PopularResultReq)(nil), "bilibili.app.show.v1.PopularResultReq")
	proto.RegisterType((*PopularAd)(nil), "bilibili.app.show.v1.PopularAd")
	proto.RegisterType((*PopularReply)(nil), "bilibili.app.show.v1.PopularReply")
	proto.RegisterType((*Config)(nil), "bilibili.app.show.v1.Config")
	proto.RegisterType((*EntranceShow)(nil), "bilibili.app.show.v1.EntranceShow")
	proto.RegisterType((*Bubble)(nil), "bilibili.app.show.v1.Bubble")
}

func init() { proto.RegisterFile("popular.proto", fileDescriptor_08c242c6b26d859c) }

var fileDescriptor_08c242c6b26d859c = []byte{
	// 922 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x66, 0xec, 0xb5, 0x93, 0x29, 0xe7, 0x6f, 0x5b, 0x7b, 0x18, 0xb2, 0x6c, 0x36, 0x18, 0x11,
	0x45, 0x48, 0x19, 0xe3, 0xc0, 0x89, 0x03, 0x28, 0x89, 0x22, 0xe1, 0x13, 0xd6, 0x24, 0x70, 0xe0,
	0xc0, 0xa8, 0x3d, 0xdd, 0x19, 0xb7, 0xe8, 0x99, 0xee, 0xf4, 0xf4, 0x4c, 0xec, 0x1b, 0x17, 0x24,
	0x1e, 0x81, 0x33, 0x4f, 0xc3, 0x11, 0xde, 0x00, 0x85, 0x17, 0x41, 0x5d, 0x3d, 0x76, 0xb2, 0x90,
	0x05, 0x0e, 0x96, 0xab, 0x3e, 0x7f, 0x55, 0xd5, 0x5d, 0xf5, 0x55, 0x1b, 0xb6, 0xb5, 0xd2, 0xb5,
	0xa4, 0x26, 0xd6, 0x46, 0x59, 0x45, 0x5e, 0xcc, 0x84, 0x14, 0xee, 0x13, 0x53, 0xad, 0xe3, 0x6a,
	0xae, 0xee, 0xe2, 0x66, 0xbc, 0x7f, 0x99, 0xab, 0x93, 0x9c, 0x5a, 0x7e, 0x47, 0x97, 0x23, 0xaa,
	0xb5, 0xfb, 0x9c, 0x54, 0x8d, 0xc1, 0xef, 0x8c, 0x1a, 0x36, 0x12, 0xa5, 0xe5, 0xe6, 0x86, 0x66,
	0x7c, 0x54, 0x28, 0xc6, 0xe5, 0x08, 0x41, 0xcc, 0x88, 0xa6, 0x4f, 0xbe, 0x7f, 0x92, 0x0b, 0x3b,
	0xaf, 0x67, 0x71, 0xa6, 0x8a, 0x51, 0xae, 0x72, 0xe5, 0x19, 0xb3, 0xfa, 0x06, 0x3d, 0x4f, 0x77,
	0x56, 0x4b, 0xff, 0xec, 0x6d, 0x55, 0x4d, 0x36, 0x17, 0x0d, 0x1f, 0x15, 0x82, 0x31, 0xc9, 0xef,
	0xa8, 0xe1, 0xa3, 0x66, 0x3c, 0xd2, 0x86, 0x4b, 0x45, 0xdb, 0x52, 0xc3, 0x1f, 0x9f, 0xc1, 0xde,
	0xd4, 0xdf, 0x2c, 0xe1, 0x55, 0x2d, 0x6d, 0xc2, 0x6f, 0xc9, 0x1e, 0x74, 0x05, 0x5b, 0x44, 0xc1,
	0x61, 0x70, 0xdc, 0x4d, 0x9c, 0x49, 0x5e, 0xc3, 0x40, 0xaa, 0x5c, 0x94, 0x29, 0x6f, 0x78, 0x69,
	0xa3, 0xce, 0x61, 0x70, 0xdc, 0x4b, 0x00, 0xa1, 0x4b, 0x87, 0x90, 0x1d, 0xe8, 0xdc, 0x96, 0x51,
	0x17, 0xf1, 0xce, 0x6d, 0x49, 0x5e, 0x40, 0xef, 0xa6, 0x6c, 0xb8, 0x89, 0x9e, 0x21, 0xe4, 0x9d,
	0x16, 0xa5, 0x32, 0xea, 0xad, 0x51, 0x2a, 0xc9, 0x2b, 0x80, 0x1b, 0x65, 0x32, 0x9e, 0xce, 0x55,
	0x65, 0xa3, 0x3e, 0xfe, 0x14, 0x22, 0xf2, 0xa5, 0xaa, 0x2c, 0x06, 0xa9, 0xda, 0x7c, 0x1f, 0x6d,
	0xb4, 0x41, 0xce, 0x71, 0x68, 0xa5, 0x0b, 0xc1, 0xa2, 0xcd, 0xc3, 0xe0, 0x38, 0x4c, 0xbc, 0xe3,
	0x52, 0x49, 0x5a, 0xd9, 0x54, 0x53, 0x43, 0x8b, 0x28, 0xc4, 0x9f, 0x42, 0x87, 0x4c, 0x1d, 0xe0,
	0x2e, 0xe6, 0xce, 0x04, 0x88, 0x3b, 0xd3, 0x5d, 0x8c, 0x97, 0xd6, 0xd0, 0x32, 0xe3, 0xa9, 0x60,
	0xd1, 0x00, 0xaf, 0x0c, 0x2b, 0x68, 0xc2, 0xc8, 0xfb, 0xb0, 0x25, 0x55, 0x46, 0xad, 0x50, 0x65,
	0x2a, 0x58, 0x15, 0x6d, 0x61, 0xec, 0x60, 0x85, 0x4d, 0x58, 0x45, 0x5e, 0x42, 0x58, 0xa9, 0xda,
	0xf8, 0x0c, 0xdb, 0x78, 0xc8, 0x4d, 0x0f, 0x4c, 0x18, 0x9e, 0x5e, 0xd6, 0xd5, 0x3c, 0xda, 0x69,
	0x4f, 0xef, 0x1c, 0xf2, 0x15, 0x0c, 0xb4, 0xa4, 0x4b, 0x6e, 0x52, 0x6a, 0xf2, 0x2a, 0xda, 0x3d,
	0x0c, 0x8e, 0x07, 0xa7, 0x71, 0xfc, 0x86, 0xa8, 0xda, 0xf1, 0xc5, 0x0f, 0xe3, 0x8b, 0x9b, 0x71,
	0x3c, 0xc5, 0xb0, 0x33, 0x93, 0x57, 0x09, 0xe8, 0xb5, 0x4d, 0x3e, 0x07, 0x68, 0x05, 0x9a, 0x52,
	0x16, 0xed, 0x61, 0xbe, 0xd7, 0xf1, 0x53, 0x22, 0x8d, 0xdb, 0x71, 0x9f, 0xb1, 0x24, 0xd4, 0x2b,
	0x73, 0x78, 0x04, 0xe1, 0x1a, 0x27, 0xef, 0xc2, 0x26, 0x65, 0x29, 0x5f, 0x58, 0x43, 0x51, 0x04,
	0x61, 0xb2, 0x41, 0xd9, 0xa5, 0x73, 0x87, 0x3f, 0x05, 0xb0, 0xb5, 0xd6, 0x8b, 0x96, 0x4b, 0xf2,
	0x31, 0xf4, 0x84, 0xe5, 0x45, 0x15, 0x05, 0x87, 0xdd, 0xe3, 0xc1, 0xe9, 0xfe, 0x9b, 0x35, 0x51,
	0xd4, 0xcd, 0x38, 0xbe, 0xa0, 0x86, 0x25, 0x9e, 0x48, 0x3e, 0x85, 0x7e, 0xa6, 0xca, 0x1b, 0x91,
	0xa3, 0x8c, 0x06, 0xa7, 0xef, 0x3d, 0x7d, 0xcc, 0x0b, 0xe4, 0x24, 0x2d, 0x77, 0x35, 0xba, 0xee,
	0x7a, 0x74, 0xc3, 0xdf, 0x3b, 0xd0, 0xf7, 0x24, 0x37, 0x76, 0x97, 0x3b, 0xb5, 0xc2, 0x4a, 0xde,
	0x1e, 0x39, 0x74, 0xc8, 0xb5, 0x03, 0xdc, 0x90, 0x67, 0xca, 0x5a, 0x55, 0xa4, 0x96, 0x2f, 0xbc,
	0x7a, 0xc3, 0x04, 0x3c, 0x74, 0xcd, 0x17, 0x96, 0x7c, 0x04, 0xcf, 0x1f, 0x11, 0xd2, 0x4c, 0x3d,
	0x94, 0xda, 0x7d, 0xa0, 0x5d, 0x38, 0x98, 0x1c, 0xc1, 0xee, 0x63, 0x6e, 0x6d, 0x24, 0x6a, 0x3c,
	0x4c, 0xb6, 0x1f, 0x98, 0x5f, 0x1b, 0x49, 0xbe, 0x80, 0xd0, 0x2a, 0x9d, 0xfa, 0xe6, 0xf4, 0xb0,
	0x39, 0xc3, 0xa7, 0x6f, 0x7a, 0xd9, 0xaa, 0xed, 0x6a, 0xae, 0xee, 0x92, 0x4d, 0xab, 0xf4, 0x04,
	0xfb, 0xf4, 0x0a, 0x60, 0xce, 0x29, 0x4b, 0x45, 0x41, 0x73, 0x8e, 0x6b, 0x11, 0x26, 0xa1, 0x43,
	0x26, 0x0e, 0x20, 0x67, 0x00, 0x9a, 0xe6, 0xbc, 0x2d, 0xb0, 0xf1, 0xbf, 0x0b, 0x84, 0x2e, 0xca,
	0x57, 0xd8, 0x83, 0xee, 0x5c, 0x58, 0xdc, 0xa0, 0x6e, 0xe2, 0xcc, 0xe1, 0x0f, 0x1d, 0xd8, 0x7a,
	0xcc, 0x26, 0x04, 0x9e, 0x89, 0x4c, 0x95, 0x6d, 0x4f, 0xd1, 0x76, 0x92, 0xf6, 0x8d, 0xf6, 0x8d,
	0xf4, 0x8e, 0xdb, 0x82, 0x42, 0xb1, 0x5a, 0xe2, 0x16, 0xf8, 0xde, 0x6d, 0x7a, 0x60, 0xc2, 0x5c,
	0xa5, 0xda, 0x88, 0xb6, 0x51, 0xce, 0x74, 0x2a, 0x98, 0xd5, 0xb3, 0x99, 0xe4, 0xf8, 0x16, 0xbc,
	0x55, 0x05, 0xe7, 0xc8, 0x49, 0x5a, 0xee, 0xdf, 0xd7, 0xb5, 0xff, 0x8f, 0x75, 0x7d, 0xe9, 0xbb,
	0xae, 0xe7, 0xca, 0x2a, 0x7c, 0x30, 0x42, 0xec, 0xe8, 0xd4, 0xf9, 0xe4, 0x03, 0xd8, 0x5e, 0x47,
	0xdb, 0xa5, 0xe6, 0x78, 0xf3, 0x5e, 0xb2, 0xb5, 0x02, 0xaf, 0x97, 0x9a, 0x0f, 0x53, 0xe8, 0xfb,
	0xa2, 0xe4, 0x43, 0xd8, 0xf1, 0x65, 0xd3, 0x4c, 0x95, 0xd6, 0xbd, 0x7b, 0x41, 0x3b, 0x68, 0x44,
	0x2f, 0x3c, 0x48, 0x22, 0xd8, 0x68, 0xb8, 0xa9, 0x84, 0x2a, 0xdb, 0x77, 0x71, 0xe5, 0xe2, 0x1b,
	0x65, 0x45, 0xc1, 0xb1, 0x1d, 0xdd, 0xc4, 0x3b, 0xa7, 0xdf, 0xc1, 0x46, 0xbb, 0x41, 0xe4, 0x0a,
	0x7a, 0x93, 0x92, 0xf1, 0x05, 0x39, 0xfa, 0xd7, 0x55, 0x5d, 0xbf, 0xcc, 0xfb, 0xc3, 0xff, 0xe0,
	0x69, 0xb9, 0x3c, 0xbf, 0xfa, 0xf5, 0xfe, 0x20, 0xf8, 0xed, 0xfe, 0x20, 0xf8, 0xe3, 0xfe, 0x20,
	0xf8, 0xf9, 0xcf, 0x83, 0x77, 0xe0, 0x28, 0x53, 0x45, 0x3c, 0xa3, 0x5a, 0x54, 0x4f, 0x84, 0xaf,
	0xfe, 0xd7, 0x9a, 0xf1, 0x34, 0xf8, 0xb6, 0x4b, 0xb5, 0xf8, 0xa5, 0xf3, 0xfc, 0xfc, 0x6c, 0x3a,
	0x71, 0xe3, 0xff, 0x66, 0xdc, 0x66, 0x9e, 0xf5, 0xf1, 0xef, 0xe2, 0x93, 0xbf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x44, 0x67, 0x90, 0xb8, 0x07, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PopularClient is the client API for Popular service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PopularClient interface {
	Index(ctx context.Context, in *PopularResultReq, opts ...grpc.CallOption) (*PopularReply, error)
}

type popularClient struct {
	cc *grpc.ClientConn
}

func NewPopularClient(cc *grpc.ClientConn) PopularClient {
	return &popularClient{cc}
}

func (c *popularClient) Index(ctx context.Context, in *PopularResultReq, opts ...grpc.CallOption) (*PopularReply, error) {
	out := new(PopularReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.show.v1.Popular/Index", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PopularServer is the server API for Popular service.
type PopularServer interface {
	Index(context.Context, *PopularResultReq) (*PopularReply, error)
}

// UnimplementedPopularServer can be embedded to have forward compatible implementations.
type UnimplementedPopularServer struct {
}

func (*UnimplementedPopularServer) Index(ctx context.Context, req *PopularResultReq) (*PopularReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Index not implemented")
}

func RegisterPopularServer(s *grpc.Server, srv PopularServer) {
	s.RegisterService(&_Popular_serviceDesc, srv)
}

func _Popular_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopularResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PopularServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.show.v1.Popular/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PopularServer).Index(ctx, req.(*PopularResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Popular_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.app.show.v1.Popular",
	HandlerType: (*PopularServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Index",
			Handler:    _Popular_Index_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "popular.proto",
}

func (m *PopularResultReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PopularResultReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PopularResultReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PopularAd != nil {
		{
			size, err := m.PopularAd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPopular(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPopular(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.Flush != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Flush))
		i--
		dAtA[i] = 0x70
	}
	if m.SourceId != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.SourceId))
		i--
		dAtA[i] = 0x68
	}
	if len(m.LocationIds) > 0 {
		i -= len(m.LocationIds)
		copy(dAtA[i:], m.LocationIds)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.LocationIds)))
		i--
		dAtA[i] = 0x62
	}
	if m.EntranceId != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.EntranceId))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Ver) > 0 {
		i -= len(m.Ver)
		copy(dAtA[i:], m.Ver)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Ver)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.LastParam) > 0 {
		i -= len(m.LastParam)
		copy(dAtA[i:], m.LastParam)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.LastParam)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Spmid) > 0 {
		i -= len(m.Spmid)
		copy(dAtA[i:], m.Spmid)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Spmid)))
		i--
		dAtA[i] = 0x42
	}
	if m.Fourk != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Fourk))
		i--
		dAtA[i] = 0x38
	}
	if m.ForceHost != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.ForceHost))
		i--
		dAtA[i] = 0x30
	}
	if m.Fnval != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Fnval))
		i--
		dAtA[i] = 0x28
	}
	if m.Fnver != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Fnver))
		i--
		dAtA[i] = 0x20
	}
	if m.Qn != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Qn))
		i--
		dAtA[i] = 0x18
	}
	if m.LoginEvent != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.LoginEvent))
		i--
		dAtA[i] = 0x10
	}
	if m.Idx != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Idx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PopularAd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PopularAd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PopularAd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AdExtra) > 0 {
		i -= len(m.AdExtra)
		copy(dAtA[i:], m.AdExtra)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.AdExtra)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PopularReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PopularReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PopularReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ver) > 0 {
		i -= len(m.Ver)
		copy(dAtA[i:], m.Ver)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Ver)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPopular(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPopular(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Config) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hit != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Hit))
		i--
		dAtA[i] = 0x40
	}
	if len(m.PageItems) > 0 {
		for iNdEx := len(m.PageItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PageItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPopular(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.HeadImage) > 0 {
		i -= len(m.HeadImage)
		copy(dAtA[i:], m.HeadImage)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.HeadImage)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.TopItems) > 0 {
		for iNdEx := len(m.TopItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TopItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPopular(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.BottomTextUrl) > 0 {
		i -= len(m.BottomTextUrl)
		copy(dAtA[i:], m.BottomTextUrl)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.BottomTextUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BottomTextCover) > 0 {
		i -= len(m.BottomTextCover)
		copy(dAtA[i:], m.BottomTextCover)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.BottomTextCover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BottomText) > 0 {
		i -= len(m.BottomText)
		copy(dAtA[i:], m.BottomText)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.BottomText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ItemTitle) > 0 {
		i -= len(m.ItemTitle)
		copy(dAtA[i:], m.ItemTitle)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.ItemTitle)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EntranceShow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EntranceShow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EntranceShow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EntranceType != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.EntranceType))
		i--
		dAtA[i] = 0x40
	}
	if len(m.TopPhoto) > 0 {
		i -= len(m.TopPhoto)
		copy(dAtA[i:], m.TopPhoto)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.TopPhoto)))
		i--
		dAtA[i] = 0x3a
	}
	if m.EntranceId != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.EntranceId))
		i--
		dAtA[i] = 0x30
	}
	if m.Bubble != nil {
		{
			size, err := m.Bubble.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPopular(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ModuleId) > 0 {
		i -= len(m.ModuleId)
		copy(dAtA[i:], m.ModuleId)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.ModuleId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Bubble) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Bubble) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Bubble) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stime != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x18
	}
	if m.Version != 0 {
		i = encodeVarintPopular(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x10
	}
	if len(m.BubbleContent) > 0 {
		i -= len(m.BubbleContent)
		copy(dAtA[i:], m.BubbleContent)
		i = encodeVarintPopular(dAtA, i, uint64(len(m.BubbleContent)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPopular(dAtA []byte, offset int, v uint64) int {
	offset -= sovPopular(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PopularResultReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Idx != 0 {
		n += 1 + sovPopular(uint64(m.Idx))
	}
	if m.LoginEvent != 0 {
		n += 1 + sovPopular(uint64(m.LoginEvent))
	}
	if m.Qn != 0 {
		n += 1 + sovPopular(uint64(m.Qn))
	}
	if m.Fnver != 0 {
		n += 1 + sovPopular(uint64(m.Fnver))
	}
	if m.Fnval != 0 {
		n += 1 + sovPopular(uint64(m.Fnval))
	}
	if m.ForceHost != 0 {
		n += 1 + sovPopular(uint64(m.ForceHost))
	}
	if m.Fourk != 0 {
		n += 1 + sovPopular(uint64(m.Fourk))
	}
	l = len(m.Spmid)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.LastParam)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.Ver)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.EntranceId != 0 {
		n += 1 + sovPopular(uint64(m.EntranceId))
	}
	l = len(m.LocationIds)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.SourceId != 0 {
		n += 1 + sovPopular(uint64(m.SourceId))
	}
	if m.Flush != 0 {
		n += 1 + sovPopular(uint64(m.Flush))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.PopularAd != nil {
		l = m.PopularAd.Size()
		n += 2 + l + sovPopular(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PopularAd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AdExtra)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PopularReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovPopular(uint64(l))
		}
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.Ver)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Config) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ItemTitle)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.BottomText)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.BottomTextCover)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.BottomTextUrl)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if len(m.TopItems) > 0 {
		for _, e := range m.TopItems {
			l = e.Size()
			n += 1 + l + sovPopular(uint64(l))
		}
	}
	l = len(m.HeadImage)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if len(m.PageItems) > 0 {
		for _, e := range m.PageItems {
			l = e.Size()
			n += 1 + l + sovPopular(uint64(l))
		}
	}
	if m.Hit != 0 {
		n += 1 + sovPopular(uint64(m.Hit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EntranceShow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.ModuleId)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.Bubble != nil {
		l = m.Bubble.Size()
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.EntranceId != 0 {
		n += 1 + sovPopular(uint64(m.EntranceId))
	}
	l = len(m.TopPhoto)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.EntranceType != 0 {
		n += 1 + sovPopular(uint64(m.EntranceType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Bubble) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BubbleContent)
	if l > 0 {
		n += 1 + l + sovPopular(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovPopular(uint64(m.Version))
	}
	if m.Stime != 0 {
		n += 1 + sovPopular(uint64(m.Stime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPopular(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPopular(x uint64) (n int) {
	return sovPopular(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PopularResultReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PopularResultReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PopularResultReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idx", wireType)
			}
			m.Idx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Idx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginEvent", wireType)
			}
			m.LoginEvent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoginEvent |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qn", wireType)
			}
			m.Qn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Qn |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fnver", wireType)
			}
			m.Fnver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fnver |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fnval", wireType)
			}
			m.Fnval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fnval |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceHost", wireType)
			}
			m.ForceHost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForceHost |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fourk", wireType)
			}
			m.Fourk = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fourk |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spmid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Spmid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntranceId", wireType)
			}
			m.EntranceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntranceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocationIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceId", wireType)
			}
			m.SourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flush", wireType)
			}
			m.Flush = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flush |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PopularAd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PopularAd == nil {
				m.PopularAd = &PopularAd{}
			}
			if err := m.PopularAd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PopularAd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PopularAd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PopularAd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdExtra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdExtra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PopularReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PopularReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PopularReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &proto1.Card{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ItemTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomTextCover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomTextCover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomTextUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomTextUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopItems = append(m.TopItems, &EntranceShow{})
			if err := m.TopItems[len(m.TopItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PageItems = append(m.PageItems, &EntranceShow{})
			if err := m.PageItems[len(m.PageItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hit", wireType)
			}
			m.Hit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EntranceShow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EntranceShow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EntranceShow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bubble", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bubble == nil {
				m.Bubble = &Bubble{}
			}
			if err := m.Bubble.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntranceId", wireType)
			}
			m.EntranceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntranceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopPhoto", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopPhoto = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntranceType", wireType)
			}
			m.EntranceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntranceType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Bubble) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Bubble: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Bubble: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BubbleContent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPopular
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPopular
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BubbleContent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPopular(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPopular
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPopular(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPopular
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPopular
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPopular
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPopular
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPopular
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPopular        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPopular          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPopular = fmt.Errorf("proto: unexpected end of group")
)
