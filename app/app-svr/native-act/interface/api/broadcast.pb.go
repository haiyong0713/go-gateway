// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/native-act/interface/api/broadcast.proto

package api

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProgressEvent struct {
	// 页面id
	PageID int64 `protobuf:"varint,1,opt,name=PageID,proto3" json:"PageID,omitempty"`
	// event列表
	Items                []*ProgressEventItem `protobuf:"bytes,2,rep,name=Items,proto3" json:"Items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProgressEvent) Reset()         { *m = ProgressEvent{} }
func (m *ProgressEvent) String() string { return proto.CompactTextString(m) }
func (*ProgressEvent) ProtoMessage()    {}
func (*ProgressEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a624d03f652946b4, []int{0}
}
func (m *ProgressEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressEvent.Merge(m, src)
}
func (m *ProgressEvent) XXX_Size() int {
	return m.Size()
}
func (m *ProgressEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressEvent proto.InternalMessageInfo

func (m *ProgressEvent) GetPageID() int64 {
	if m != nil {
		return m.PageID
	}
	return 0
}

func (m *ProgressEvent) GetItems() []*ProgressEventItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ProgressEventItem struct {
	// 组件标识
	ItemID int64 `protobuf:"varint,1,opt,name=ItemID,proto3" json:"ItemID,omitempty"`
	// 组件类型
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	// 进度条数值
	Num int64 `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
	// 进度条展示数值
	DisplayNum string `protobuf:"bytes,4,opt,name=DisplayNum,proto3" json:"DisplayNum,omitempty"`
	// h5的组件标识
	WebKey string `protobuf:"bytes,5,opt,name=WebKey,proto3" json:"WebKey,omitempty"`
	// 活动统计维度：0 用户维度；1 规则维度
	Dimension            int64    `protobuf:"varint,6,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProgressEventItem) Reset()         { *m = ProgressEventItem{} }
func (m *ProgressEventItem) String() string { return proto.CompactTextString(m) }
func (*ProgressEventItem) ProtoMessage()    {}
func (*ProgressEventItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_a624d03f652946b4, []int{1}
}
func (m *ProgressEventItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProgressEventItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProgressEventItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProgressEventItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProgressEventItem.Merge(m, src)
}
func (m *ProgressEventItem) XXX_Size() int {
	return m.Size()
}
func (m *ProgressEventItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ProgressEventItem.DiscardUnknown(m)
}

var xxx_messageInfo_ProgressEventItem proto.InternalMessageInfo

func (m *ProgressEventItem) GetItemID() int64 {
	if m != nil {
		return m.ItemID
	}
	return 0
}

func (m *ProgressEventItem) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ProgressEventItem) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ProgressEventItem) GetDisplayNum() string {
	if m != nil {
		return m.DisplayNum
	}
	return ""
}

func (m *ProgressEventItem) GetWebKey() string {
	if m != nil {
		return m.WebKey
	}
	return ""
}

func (m *ProgressEventItem) GetDimension() int64 {
	if m != nil {
		return m.Dimension
	}
	return 0
}

func init() {
	proto.RegisterType((*ProgressEvent)(nil), "bilibili.app.nativeact.v1.ProgressEvent")
	proto.RegisterType((*ProgressEventItem)(nil), "bilibili.app.nativeact.v1.ProgressEventItem")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/native-act/interface/api/broadcast.proto", fileDescriptor_a624d03f652946b4)
}

var fileDescriptor_a624d03f652946b4 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0xc1, 0x4a, 0x2b, 0x31,
	0x14, 0x7d, 0xe9, 0xb4, 0x85, 0xe6, 0x21, 0x68, 0x16, 0x32, 0x15, 0x19, 0x4a, 0x57, 0x5d, 0x38,
	0x09, 0xea, 0x07, 0x08, 0xa5, 0x2e, 0x8a, 0x20, 0xa5, 0x08, 0x82, 0xbb, 0x3b, 0xd3, 0x34, 0x06,
	0x3b, 0x93, 0x90, 0xa4, 0x23, 0xf3, 0x27, 0xfe, 0x81, 0xbf, 0xd2, 0xa5, 0x9f, 0xa0, 0xf5, 0x47,
	0x24, 0x99, 0x42, 0x15, 0x71, 0x71, 0xc9, 0x39, 0xf7, 0xdc, 0x73, 0x6e, 0xb8, 0xf8, 0x4a, 0xa8,
	0x54, 0x80, 0xe3, 0xcf, 0x50, 0x33, 0xd0, 0xda, 0x57, 0x6a, 0x2b, 0xc3, 0x4a, 0x70, 0xb2, 0xe2,
	0x29, 0xe4, 0x8e, 0xc9, 0xd2, 0x71, 0xb3, 0x84, 0x9c, 0x33, 0xd0, 0x92, 0x65, 0x46, 0xc1, 0x22,
	0x07, 0xeb, 0xa8, 0x36, 0xca, 0x29, 0xd2, 0xcf, 0xe4, 0x4a, 0xfa, 0xa2, 0xa0, 0x35, 0x6d, 0x6c,
	0x90, 0x3b, 0x5a, 0x9d, 0x9f, 0xa4, 0x42, 0xba, 0xc7, 0x75, 0x46, 0x73, 0x55, 0x30, 0xa1, 0x84,
	0x62, 0xc1, 0x91, 0xad, 0x97, 0x81, 0x05, 0x12, 0x50, 0x93, 0x34, 0x7c, 0xc2, 0x07, 0x33, 0xa3,
	0x84, 0xe1, 0xd6, 0x5e, 0x57, 0xbc, 0x74, 0xe4, 0x18, 0x77, 0x67, 0x20, 0xf8, 0x74, 0x12, 0xa3,
	0x01, 0x1a, 0x45, 0xf3, 0x1d, 0x23, 0x63, 0xdc, 0x99, 0x3a, 0x5e, 0xd8, 0xb8, 0x35, 0x88, 0x46,
	0xff, 0x2f, 0xce, 0xe8, 0x9f, 0x5f, 0xa0, 0x3f, 0x02, 0xbd, 0x69, 0xde, 0x58, 0x87, 0xaf, 0x08,
	0x1f, 0xfd, 0x12, 0xfd, 0x46, 0xff, 0xee, 0x37, 0x36, 0x8c, 0x10, 0xdc, 0xbe, 0xab, 0x35, 0x8f,
	0x5b, 0x03, 0x34, 0xea, 0xcd, 0x03, 0x26, 0x87, 0x38, 0xba, 0x5d, 0x17, 0x71, 0x14, 0x06, 0x3d,
	0x24, 0x09, 0xc6, 0x13, 0x69, 0xf5, 0x0a, 0x6a, 0x2f, 0xb4, 0xc3, 0xec, 0xb7, 0x8e, 0x4f, 0xbf,
	0xe7, 0xd9, 0x0d, 0xaf, 0xe3, 0x4e, 0xd0, 0x76, 0x8c, 0x9c, 0xe2, 0xde, 0x42, 0x16, 0xbc, 0xb4,
	0x52, 0x95, 0x71, 0x37, 0xe4, 0xed, 0x1b, 0xe3, 0xfe, 0xe6, 0x23, 0x41, 0x9b, 0x6d, 0x82, 0xde,
	0xb6, 0x09, 0x7a, 0xdf, 0x26, 0xe8, 0xe5, 0x33, 0xf9, 0xf7, 0x10, 0x81, 0x96, 0x59, 0x37, 0x1c,
	0xee, 0xf2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x04, 0x58, 0x23, 0x37, 0xc5, 0x01, 0x00, 0x00,
}

func (m *ProgressEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBroadcast(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.PageID != 0 {
		i = encodeVarintBroadcast(dAtA, i, uint64(m.PageID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProgressEventItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProgressEventItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProgressEventItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dimension != 0 {
		i = encodeVarintBroadcast(dAtA, i, uint64(m.Dimension))
		i--
		dAtA[i] = 0x30
	}
	if len(m.WebKey) > 0 {
		i -= len(m.WebKey)
		copy(dAtA[i:], m.WebKey)
		i = encodeVarintBroadcast(dAtA, i, uint64(len(m.WebKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DisplayNum) > 0 {
		i -= len(m.DisplayNum)
		copy(dAtA[i:], m.DisplayNum)
		i = encodeVarintBroadcast(dAtA, i, uint64(len(m.DisplayNum)))
		i--
		dAtA[i] = 0x22
	}
	if m.Num != 0 {
		i = encodeVarintBroadcast(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintBroadcast(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x12
	}
	if m.ItemID != 0 {
		i = encodeVarintBroadcast(dAtA, i, uint64(m.ItemID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintBroadcast(dAtA []byte, offset int, v uint64) int {
	offset -= sovBroadcast(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProgressEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageID != 0 {
		n += 1 + sovBroadcast(uint64(m.PageID))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovBroadcast(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProgressEventItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ItemID != 0 {
		n += 1 + sovBroadcast(uint64(m.ItemID))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovBroadcast(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovBroadcast(uint64(m.Num))
	}
	l = len(m.DisplayNum)
	if l > 0 {
		n += 1 + l + sovBroadcast(uint64(l))
	}
	l = len(m.WebKey)
	if l > 0 {
		n += 1 + l + sovBroadcast(uint64(l))
	}
	if m.Dimension != 0 {
		n += 1 + sovBroadcast(uint64(m.Dimension))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBroadcast(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBroadcast(x uint64) (n int) {
	return sovBroadcast(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProgressEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBroadcast
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageID", wireType)
			}
			m.PageID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBroadcast
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcast
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ProgressEventItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBroadcast(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBroadcast
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProgressEventItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBroadcast
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProgressEventItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProgressEventItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemID", wireType)
			}
			m.ItemID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcast
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcast
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayNum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcast
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcast
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayNum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcast
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcast
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			m.Dimension = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Dimension |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBroadcast(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBroadcast
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBroadcast(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBroadcast
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBroadcast
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBroadcast
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBroadcast
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBroadcast
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBroadcast        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBroadcast          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBroadcast = fmt.Errorf("proto: unexpected end of group")
)
