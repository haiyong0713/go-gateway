// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package api

/*
	package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebJobClient is the client API for WebJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebJobClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type webJobClient struct {
	cc *grpc.ClientConn
}

func NewWebJobClient(cc *grpc.ClientConn) WebJobClient {
	return &webJobClient{cc}
}

func (c *webJobClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/web.job.v1.WebJob/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebJobServer is the server API for WebJob service.
type WebJobServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterWebJobServer(s *grpc.Server, srv WebJobServer) {
	s.RegisterService(&_WebJob_serviceDesc, srv)
}

func _WebJob_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebJobServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/web.job.v1.WebJob/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebJobServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebJob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "web.job.v1.WebJob",
	HandlerType: (*WebJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _WebJob_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_3683b4751af7b6a0) }

var fileDescriptor_api_3683b4751af7b6a0 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x4f, 0x4d, 0xd2, 0xcb, 0xca, 0x4f, 0xd2, 0x2b,
	0x33, 0x94, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf,
	0x4f, 0xcf, 0xd7, 0x07, 0x2b, 0x49, 0x2a, 0x4d, 0x03, 0xf3, 0xc0, 0x1c, 0x30, 0x0b, 0xa2, 0x55,
	0x4a, 0x3a, 0x3d, 0x3f, 0x3f, 0x3d, 0x27, 0x15, 0xa1, 0x2a, 0x35, 0xb7, 0xa0, 0xa4, 0x12, 0x22,
	0x69, 0xe4, 0xc0, 0xc5, 0x16, 0x9e, 0x9a, 0xe4, 0x95, 0x9f, 0x24, 0x64, 0xc6, 0xc5, 0x12, 0x90,
	0x99, 0x97, 0x2e, 0x24, 0xa6, 0x07, 0x51, 0xaf, 0x07, 0x53, 0xaf, 0xe7, 0x0a, 0x52, 0x2f, 0x85,
	0x43, 0xdc, 0x49, 0xf2, 0xc4, 0x43, 0x39, 0x86, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63,
	0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xe6, 0xc4, 0x82, 0xcc, 0x24, 0x36,
	0xb0, 0x52, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xca, 0xcf, 0xef, 0xc8, 0x00, 0x00,
	0x00,
}
