// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/web-svr/space/service/api/api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PrivacyOption int32

const (
	PrivacyOption_bangumi       PrivacyOption = 0
	PrivacyOption_tags          PrivacyOption = 1
	PrivacyOption_fav_video     PrivacyOption = 2
	PrivacyOption_coins_video   PrivacyOption = 3
	PrivacyOption_groups        PrivacyOption = 4
	PrivacyOption_played_game   PrivacyOption = 5
	PrivacyOption_channel       PrivacyOption = 6
	PrivacyOption_user_info     PrivacyOption = 7
	PrivacyOption_likes_video   PrivacyOption = 8
	PrivacyOption_bbq           PrivacyOption = 9
	PrivacyOption_comic         PrivacyOption = 10
	PrivacyOption_dress_up      PrivacyOption = 11
	PrivacyOption_live_playback PrivacyOption = 12
)

var PrivacyOption_name = map[int32]string{
	0:  "bangumi",
	1:  "tags",
	2:  "fav_video",
	3:  "coins_video",
	4:  "groups",
	5:  "played_game",
	6:  "channel",
	7:  "user_info",
	8:  "likes_video",
	9:  "bbq",
	10: "comic",
	11: "dress_up",
	12: "live_playback",
}

var PrivacyOption_value = map[string]int32{
	"bangumi":       0,
	"tags":          1,
	"fav_video":     2,
	"coins_video":   3,
	"groups":        4,
	"played_game":   5,
	"channel":       6,
	"user_info":     7,
	"likes_video":   8,
	"bbq":           9,
	"comic":         10,
	"dress_up":      11,
	"live_playback": 12,
}

func (x PrivacyOption) String() string {
	return proto.EnumName(PrivacyOption_name, int32(x))
}

func (PrivacyOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{0}
}

type PrivacyState int32

const (
	// 未设置
	PrivacyState_no_set PrivacyState = 0
	// 已关闭
	PrivacyState_closed PrivacyState = 1
	// 已开启
	PrivacyState_opened PrivacyState = 2
)

var PrivacyState_name = map[int32]string{
	0: "no_set",
	1: "closed",
	2: "opened",
}

var PrivacyState_value = map[string]int32{
	"no_set": 0,
	"closed": 1,
	"opened": 2,
}

func (x PrivacyState) String() string {
	return proto.EnumName(PrivacyState_name, int32(x))
}

func (PrivacyState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{1}
}

type PrivacySettingReq struct {
	Mid                  int64           `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"name" validate:"min=1"`
	PrivacyOption        []PrivacyOption `protobuf:"varint,2,rep,packed,name=privacy_option,json=privacyOption,proto3,enum=space.service.v1.PrivacyOption" json:"privacy_option,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PrivacySettingReq) Reset()         { *m = PrivacySettingReq{} }
func (m *PrivacySettingReq) String() string { return proto.CompactTextString(m) }
func (*PrivacySettingReq) ProtoMessage()    {}
func (*PrivacySettingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{0}
}
func (m *PrivacySettingReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacySettingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacySettingReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivacySettingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacySettingReq.Merge(m, src)
}
func (m *PrivacySettingReq) XXX_Size() int {
	return m.Size()
}
func (m *PrivacySettingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacySettingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacySettingReq proto.InternalMessageInfo

type PrivacySettingReply struct {
	Settings             map[string]*PrivacySetting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PrivacySettingReply) Reset()         { *m = PrivacySettingReply{} }
func (m *PrivacySettingReply) String() string { return proto.CompactTextString(m) }
func (*PrivacySettingReply) ProtoMessage()    {}
func (*PrivacySettingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{1}
}
func (m *PrivacySettingReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacySettingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacySettingReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivacySettingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacySettingReply.Merge(m, src)
}
func (m *PrivacySettingReply) XXX_Size() int {
	return m.Size()
}
func (m *PrivacySettingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacySettingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacySettingReply proto.InternalMessageInfo

type PrivacySetting struct {
	Option               PrivacyOption `protobuf:"varint,1,opt,name=option,proto3,enum=space.service.v1.PrivacyOption" json:"option,omitempty"`
	State                PrivacyState  `protobuf:"varint,2,opt,name=state,proto3,enum=space.service.v1.PrivacyState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PrivacySetting) Reset()         { *m = PrivacySetting{} }
func (m *PrivacySetting) String() string { return proto.CompactTextString(m) }
func (*PrivacySetting) ProtoMessage()    {}
func (*PrivacySetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{2}
}
func (m *PrivacySetting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacySetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacySetting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivacySetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacySetting.Merge(m, src)
}
func (m *PrivacySetting) XXX_Size() int {
	return m.Size()
}
func (m *PrivacySetting) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacySetting.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacySetting proto.InternalMessageInfo

type UpdatePrivacysReq struct {
	Mid                  int64             `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"name" validate:"min=1"`
	Settings             []*PrivacySetting `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty" form:"settings" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdatePrivacysReq) Reset()         { *m = UpdatePrivacysReq{} }
func (m *UpdatePrivacysReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePrivacysReq) ProtoMessage()    {}
func (*UpdatePrivacysReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2f0b0a46dffcb3, []int{3}
}
func (m *UpdatePrivacysReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePrivacysReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePrivacysReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdatePrivacysReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePrivacysReq.Merge(m, src)
}
func (m *UpdatePrivacysReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePrivacysReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePrivacysReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePrivacysReq proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("space.service.v1.PrivacyOption", PrivacyOption_name, PrivacyOption_value)
	proto.RegisterEnum("space.service.v1.PrivacyState", PrivacyState_name, PrivacyState_value)
	proto.RegisterType((*PrivacySettingReq)(nil), "space.service.v1.PrivacySettingReq")
	proto.RegisterType((*PrivacySettingReply)(nil), "space.service.v1.PrivacySettingReply")
	proto.RegisterMapType((map[string]*PrivacySetting)(nil), "space.service.v1.PrivacySettingReply.SettingsEntry")
	proto.RegisterType((*PrivacySetting)(nil), "space.service.v1.PrivacySetting")
	proto.RegisterType((*UpdatePrivacysReq)(nil), "space.service.v1.UpdatePrivacysReq")
}

func init() {
	proto.RegisterFile("go-gateway/app/web-svr/space/service/api/api.proto", fileDescriptor_3d2f0b0a46dffcb3)
}

var fileDescriptor_3d2f0b0a46dffcb3 = []byte{
	// 648 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xce, 0xc6, 0x4d, 0x9a, 0x6c, 0x9a, 0xfc, 0xdb, 0xfd, 0x11, 0x0a, 0x01, 0xa5, 0x91, 0x2b,
	0x44, 0x54, 0xa9, 0x8e, 0xea, 0x22, 0x40, 0x95, 0xb8, 0x54, 0x2a, 0xd7, 0xa2, 0x54, 0x5c, 0x10,
	0x28, 0x5a, 0xdb, 0x13, 0x77, 0x55, 0xdb, 0xbb, 0xf1, 0xda, 0xae, 0x72, 0xe2, 0x11, 0xb8, 0xf2,
	0x14, 0x3c, 0x00, 0xf7, 0x4a, 0x3d, 0xf2, 0x04, 0x15, 0x94, 0x37, 0xe8, 0x13, 0xa0, 0xb5, 0x53,
	0x9a, 0xb4, 0x2a, 0xad, 0x38, 0x44, 0x9a, 0xc9, 0xf7, 0xed, 0x37, 0xb3, 0xdf, 0x8c, 0x17, 0xdb,
	0xbe, 0xd8, 0xf4, 0x59, 0x02, 0xc7, 0x6c, 0x3a, 0x60, 0x52, 0x0e, 0x8e, 0xc1, 0xd9, 0x54, 0x59,
	0x3c, 0x50, 0x92, 0xb9, 0x30, 0x50, 0x10, 0x67, 0xdc, 0x85, 0x01, 0x93, 0x5c, 0xff, 0x2c, 0x19,
	0x8b, 0x44, 0x50, 0x92, 0x83, 0xd6, 0x0c, 0xb4, 0xb2, 0xad, 0xce, 0xa6, 0xcf, 0x93, 0xc3, 0xd4,
	0xb1, 0x5c, 0x11, 0x0e, 0x7c, 0xe1, 0x8b, 0x41, 0x4e, 0x74, 0xd2, 0x71, 0x9e, 0xe5, 0x49, 0x1e,
	0x15, 0x02, 0x9d, 0xc7, 0xbe, 0x10, 0x7e, 0x00, 0x57, 0x2c, 0x08, 0x65, 0x32, 0x2d, 0x40, 0xf3,
	0x33, 0xc2, 0xab, 0x6f, 0x63, 0x9e, 0x31, 0x77, 0x7a, 0x00, 0x49, 0xc2, 0x23, 0x7f, 0x08, 0x13,
	0x6a, 0x63, 0x23, 0xe4, 0x5e, 0x1b, 0xf5, 0x50, 0xdf, 0xd8, 0xed, 0x5d, 0x9c, 0xad, 0x3d, 0x19,
	0x8b, 0x38, 0xdc, 0x31, 0x23, 0x16, 0x82, 0xd9, 0xcb, 0x58, 0xc0, 0x3d, 0x96, 0xc0, 0x8e, 0x19,
	0xf2, 0xe8, 0xf5, 0x96, 0x39, 0xd4, 0x64, 0xfa, 0x06, 0xb7, 0x64, 0x21, 0x34, 0x12, 0x32, 0xe1,
	0x22, 0x6a, 0x97, 0x7b, 0x46, 0xbf, 0x65, 0xaf, 0x59, 0xd7, 0x2f, 0x60, 0xcd, 0x0a, 0xee, 0xe7,
	0xb4, 0x61, 0x53, 0xce, 0xa7, 0xe6, 0x09, 0xc2, 0xff, 0x5f, 0xef, 0x48, 0x06, 0x53, 0xba, 0x8f,
	0x6b, 0xaa, 0xc8, 0x55, 0x1b, 0xf5, 0x8c, 0x7e, 0xc3, 0xde, 0xbe, 0x55, 0x79, 0xfe, 0xa0, 0x35,
	0x4b, 0xd4, 0x5e, 0x94, 0xc4, 0xd3, 0xe1, 0x1f, 0x91, 0xce, 0x47, 0xdc, 0x5c, 0x80, 0x28, 0xc1,
	0xc6, 0x11, 0x4c, 0xf3, 0x5b, 0xd7, 0x87, 0x3a, 0xa4, 0x2f, 0x70, 0x25, 0x63, 0x41, 0x0a, 0xed,
	0x72, 0x0f, 0xf5, 0x1b, 0x76, 0xef, 0xce, 0x82, 0x05, 0x7d, 0xa7, 0xfc, 0x0a, 0x99, 0x9f, 0x70,
	0x6b, 0x11, 0xa4, 0x2f, 0x71, 0x75, 0xe6, 0x8c, 0x2e, 0x71, 0x0f, 0x67, 0x66, 0x74, 0xfa, 0x1c,
	0x57, 0x54, 0xc2, 0x92, 0xa2, 0x8d, 0x96, 0xdd, 0xbd, 0xbd, 0x0d, 0xcd, 0x1a, 0x16, 0x64, 0xf3,
	0x2b, 0xc2, 0xab, 0xef, 0xa4, 0x1e, 0xd4, 0x0c, 0x55, 0xff, 0x3a, 0x5a, 0x98, 0xb3, 0xbe, 0x9c,
	0x5b, 0x7f, 0xa7, 0x13, 0xbb, 0xcf, 0x2e, 0xce, 0xd6, 0xd6, 0x0b, 0xe9, 0xcb, 0xb3, 0xf3, 0xf2,
	0x31, 0x4c, 0x52, 0x1e, 0x83, 0x67, 0x5e, 0x0d, 0x64, 0xe3, 0x04, 0xe1, 0xe6, 0x82, 0x01, 0xb4,
	0x81, 0x97, 0x1d, 0x16, 0xf9, 0x69, 0xc8, 0x49, 0x89, 0xd6, 0xf0, 0x52, 0xc2, 0x7c, 0x45, 0x10,
	0x6d, 0xe2, 0xfa, 0x98, 0x65, 0xa3, 0x8c, 0x7b, 0x20, 0x48, 0x99, 0xfe, 0x87, 0x1b, 0xae, 0xe0,
	0x91, 0x9a, 0xfd, 0x61, 0x50, 0x8c, 0xab, 0x7e, 0x2c, 0x52, 0xa9, 0xc8, 0x92, 0x06, 0x65, 0xc0,
	0xa6, 0xe0, 0x8d, 0x7c, 0x16, 0x02, 0xa9, 0x68, 0x4d, 0xf7, 0x90, 0x45, 0x11, 0x04, 0xa4, 0xaa,
	0x95, 0x52, 0x05, 0xf1, 0x88, 0x47, 0x63, 0x41, 0x96, 0x35, 0x39, 0xe0, 0x47, 0x70, 0xa9, 0x54,
	0xa3, 0xcb, 0xd8, 0x70, 0x9c, 0x09, 0xa9, 0xd3, 0x3a, 0xae, 0xb8, 0x22, 0xe4, 0x2e, 0xc1, 0x74,
	0x05, 0xd7, 0xbc, 0x18, 0x94, 0x1a, 0xa5, 0x92, 0x34, 0xe8, 0x2a, 0x6e, 0x06, 0x3c, 0x83, 0x91,
	0x2e, 0xe2, 0x30, 0xf7, 0x88, 0xac, 0x6c, 0xd8, 0x78, 0x65, 0x7e, 0x1e, 0xba, 0x9d, 0x48, 0x8c,
	0x14, 0x24, 0xa4, 0xa4, 0x63, 0x37, 0x10, 0x0a, 0x3c, 0x82, 0x74, 0x2c, 0x24, 0x44, 0xe0, 0x91,
	0xb2, 0xfd, 0x0d, 0xe1, 0xca, 0x81, 0xb6, 0x94, 0x7e, 0xb8, 0xb1, 0x37, 0xeb, 0x77, 0xef, 0xf9,
	0xa4, 0xf3, 0xf4, 0x5e, 0x1f, 0x03, 0x3d, 0xc0, 0x0f, 0x16, 0x76, 0xe2, 0x2f, 0x35, 0x6e, 0xec,
	0x4e, 0xe7, 0xa1, 0x55, 0x3c, 0x25, 0xd6, 0xe5, 0x53, 0x62, 0xed, 0xe9, 0xa7, 0x64, 0xf7, 0xd1,
	0xe9, 0xcf, 0x6e, 0xe9, 0xf4, 0xbc, 0x8b, 0xbe, 0x9f, 0x77, 0xd1, 0x8f, 0xf3, 0x2e, 0xfa, 0xf2,
	0xab, 0x5b, 0x7a, 0x6f, 0x30, 0xc9, 0x9d, 0x6a, 0x4e, 0xdd, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x88, 0x4a, 0x2b, 0xe8, 0xfa, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpaceClient is the client API for Space service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpaceClient interface {
	PrivacySetting(ctx context.Context, in *PrivacySettingReq, opts ...grpc.CallOption) (*PrivacySettingReply, error)
	UpdatePrivacySetting(ctx context.Context, in *UpdatePrivacysReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type spaceClient struct {
	cc *grpc.ClientConn
}

func NewSpaceClient(cc *grpc.ClientConn) SpaceClient {
	return &spaceClient{cc}
}

func (c *spaceClient) PrivacySetting(ctx context.Context, in *PrivacySettingReq, opts ...grpc.CallOption) (*PrivacySettingReply, error) {
	out := new(PrivacySettingReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/PrivacySetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) UpdatePrivacySetting(ctx context.Context, in *UpdatePrivacysReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/UpdatePrivacySetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceServer is the server API for Space service.
type SpaceServer interface {
	PrivacySetting(context.Context, *PrivacySettingReq) (*PrivacySettingReply, error)
	UpdatePrivacySetting(context.Context, *UpdatePrivacysReq) (*empty.Empty, error)
}

// UnimplementedSpaceServer can be embedded to have forward compatible implementations.
type UnimplementedSpaceServer struct {
}

func (*UnimplementedSpaceServer) PrivacySetting(ctx context.Context, req *PrivacySettingReq) (*PrivacySettingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrivacySetting not implemented")
}
func (*UnimplementedSpaceServer) UpdatePrivacySetting(ctx context.Context, req *UpdatePrivacysReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePrivacySetting not implemented")
}

func RegisterSpaceServer(s *grpc.Server, srv SpaceServer) {
	s.RegisterService(&_Space_serviceDesc, srv)
}

func _Space_PrivacySetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivacySettingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).PrivacySetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/PrivacySetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).PrivacySetting(ctx, req.(*PrivacySettingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_UpdatePrivacySetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePrivacysReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).UpdatePrivacySetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/UpdatePrivacySetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).UpdatePrivacySetting(ctx, req.(*UpdatePrivacysReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Space_serviceDesc = grpc.ServiceDesc{
	ServiceName: "space.service.v1.Space",
	HandlerType: (*SpaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PrivacySetting",
			Handler:    _Space_PrivacySetting_Handler,
		},
		{
			MethodName: "UpdatePrivacySetting",
			Handler:    _Space_UpdatePrivacySetting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/web-svr/space/service/api/api.proto",
}

func (m *PrivacySettingReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacySettingReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivacySettingReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PrivacyOption) > 0 {
		dAtA2 := make([]byte, len(m.PrivacyOption)*10)
		var j1 int
		for _, num := range m.PrivacyOption {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintApi(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PrivacySettingReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacySettingReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivacySettingReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Settings) > 0 {
		for k := range m.Settings {
			v := m.Settings[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintApi(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintApi(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintApi(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PrivacySetting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacySetting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivacySetting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if m.Option != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Option))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpdatePrivacysReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePrivacysReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdatePrivacysReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Settings) > 0 {
		for iNdEx := len(m.Settings) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Settings[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PrivacySettingReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if len(m.PrivacyOption) > 0 {
		l = 0
		for _, e := range m.PrivacyOption {
			l += sovApi(uint64(e))
		}
		n += 1 + sovApi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PrivacySettingReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Settings) > 0 {
		for k, v := range m.Settings {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovApi(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovApi(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovApi(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PrivacySetting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Option != 0 {
		n += 1 + sovApi(uint64(m.Option))
	}
	if m.State != 0 {
		n += 1 + sovApi(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePrivacysReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if len(m.Settings) > 0 {
		for _, e := range m.Settings {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PrivacySettingReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacySettingReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacySettingReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v PrivacyOption
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= PrivacyOption(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PrivacyOption = append(m.PrivacyOption, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				if elementCount != 0 && len(m.PrivacyOption) == 0 {
					m.PrivacyOption = make([]PrivacyOption, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v PrivacyOption
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= PrivacyOption(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PrivacyOption = append(m.PrivacyOption, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivacyOption", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PrivacySettingReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacySettingReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacySettingReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = make(map[string]*PrivacySetting)
			}
			var mapkey string
			var mapvalue *PrivacySetting
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthApi
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthApi
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthApi
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthApi
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &PrivacySetting{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipApi(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthApi
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Settings[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PrivacySetting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacySetting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacySetting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Option", wireType)
			}
			m.Option = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Option |= PrivacyOption(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= PrivacyState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePrivacysReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePrivacysReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePrivacysReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Settings = append(m.Settings, &PrivacySetting{})
			if err := m.Settings[len(m.Settings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
