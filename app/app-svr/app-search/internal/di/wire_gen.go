// Code generated by Wire. DO NOT EDIT.

//go:build !wireinject
// +build !wireinject

package di

import (
	"go-gateway/app/app-svr/app-search/internal/dao/v1"
	"go-gateway/app/app-svr/app-search/internal/server/grpc"
	"go-gateway/app/app-svr/app-search/internal/server/http"
	v1_2 "go-gateway/app/app-svr/app-search/internal/service/v1"
)

// Injectors from wire.go:

//go:generate kratos t wire
func InitApp() (*App, func(), error) {
	dao, cleanup, err := v1.New()
	if err != nil {
		return nil, nil, err
	}
	service, cleanup2, err := v1_2.New(dao)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	engine, err := http.New(service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	server, err := grpc.New(service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	app, cleanup3, err := NewApp(service, engine, server)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
