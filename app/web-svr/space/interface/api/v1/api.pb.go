// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/web-svr/space/interface/api/v1/api.proto

// use {app_id}.{version} as package name

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	go_common_library_time "go-common/library/time"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TopPhotoType int32

const (
	TopPhotoType_UNKNOWN TopPhotoType = 0
	TopPhotoType_PIC     TopPhotoType = 1
	TopPhotoType_ARCHIVE TopPhotoType = 2
)

var TopPhotoType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PIC",
	2: "ARCHIVE",
}

var TopPhotoType_value = map[string]int32{
	"UNKNOWN": 0,
	"PIC":     1,
	"ARCHIVE": 2,
}

func (x TopPhotoType) String() string {
	return proto.EnumName(TopPhotoType_name, int32(x))
}

func (TopPhotoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{0}
}

type SpaceSettingReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"mid"  validate:"gt=0,required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpaceSettingReq) Reset()         { *m = SpaceSettingReq{} }
func (m *SpaceSettingReq) String() string { return proto.CompactTextString(m) }
func (*SpaceSettingReq) ProtoMessage()    {}
func (*SpaceSettingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{0}
}
func (m *SpaceSettingReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SpaceSettingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SpaceSettingReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SpaceSettingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpaceSettingReq.Merge(m, src)
}
func (m *SpaceSettingReq) XXX_Size() int {
	return m.Size()
}
func (m *SpaceSettingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SpaceSettingReq.DiscardUnknown(m)
}

var xxx_messageInfo_SpaceSettingReq proto.InternalMessageInfo

func (m *SpaceSettingReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type SpaceSettingReply struct {
	Channel int64 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// 我的收藏 0:关闭，1:开启
	FavVideo int64 `protobuf:"varint,2,opt,name=FavVideo,proto3" json:"FavVideo,omitempty"`
	// 投过硬币的视频 0:关闭，1:开启
	CoinsVideo int64 `protobuf:"varint,3,opt,name=CoinsVideo,proto3" json:"CoinsVideo,omitempty"`
	// 推荐的视频 0:关闭，1:开启
	LikesVideo int64 `protobuf:"varint,4,opt,name=LikesVideo,proto3" json:"LikesVideo,omitempty"`
	// 订阅番剧 0:关闭，1:开启
	Bangumi int64 `protobuf:"varint,5,opt,name=Bangumi,proto3" json:"Bangumi,omitempty"`
	// 玩过的游戏 0:关闭，1:开启
	PlayedGame int64 `protobuf:"varint,6,opt,name=PlayedGame,proto3" json:"PlayedGame,omitempty"`
	// 加入的群组 0:关闭，1:开启
	Groups int64 `protobuf:"varint,7,opt,name=Groups,proto3" json:"Groups,omitempty"`
	// 追漫 0:关闭，1:开启
	Comic int64 `protobuf:"varint,8,opt,name=Comic,proto3" json:"Comic,omitempty"`
	// 轻视频 0:关闭，1:开启
	BBQ int64 `protobuf:"varint,9,opt,name=BBQ,proto3" json:"BBQ,omitempty"`
	// 装扮 0:关闭，1:开启
	DressUp int64 `protobuf:"varint,10,opt,name=DressUp,proto3" json:"DressUp,omitempty"`
	// 禁止展示关注的人 0:开启，1:关闭
	DisableFollowing int64 `protobuf:"varint,11,opt,name=DisableFollowing,proto3" json:"DisableFollowing,omitempty"`
	// 直播回放  0:关闭，1:开启
	LivePlayback int64 `protobuf:"varint,12,opt,name=LivePlayback,proto3" json:"LivePlayback,omitempty"`
	// 公开显示佩戴的粉丝勋章，0:开启，1:关闭
	CloseSpaceMedal int64 `protobuf:"varint,13,opt,name=CloseSpaceMedal,proto3" json:"CloseSpaceMedal,omitempty"`
	// 公开显示粉丝勋章列表，0:开启，1:关闭
	OnlyShowWearing int64 `protobuf:"varint,14,opt,name=OnlyShowWearing,proto3" json:"OnlyShowWearing,omitempty"`
	// 公开展示校园信息 0:开启，1:关闭
	DisableShowSchool int64 `protobuf:"varint,15,opt,name=DisableShowSchool,proto3" json:"DisableShowSchool,omitempty"`
	// 公开拥有的数字艺术品 0:开启，1:关闭
	DisableShowNft       int64    `protobuf:"varint,16,opt,name=DisableShowNft,proto3" json:"DisableShowNft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpaceSettingReply) Reset()         { *m = SpaceSettingReply{} }
func (m *SpaceSettingReply) String() string { return proto.CompactTextString(m) }
func (*SpaceSettingReply) ProtoMessage()    {}
func (*SpaceSettingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{1}
}
func (m *SpaceSettingReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SpaceSettingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SpaceSettingReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SpaceSettingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpaceSettingReply.Merge(m, src)
}
func (m *SpaceSettingReply) XXX_Size() int {
	return m.Size()
}
func (m *SpaceSettingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SpaceSettingReply.DiscardUnknown(m)
}

var xxx_messageInfo_SpaceSettingReply proto.InternalMessageInfo

func (m *SpaceSettingReply) GetChannel() int64 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *SpaceSettingReply) GetFavVideo() int64 {
	if m != nil {
		return m.FavVideo
	}
	return 0
}

func (m *SpaceSettingReply) GetCoinsVideo() int64 {
	if m != nil {
		return m.CoinsVideo
	}
	return 0
}

func (m *SpaceSettingReply) GetLikesVideo() int64 {
	if m != nil {
		return m.LikesVideo
	}
	return 0
}

func (m *SpaceSettingReply) GetBangumi() int64 {
	if m != nil {
		return m.Bangumi
	}
	return 0
}

func (m *SpaceSettingReply) GetPlayedGame() int64 {
	if m != nil {
		return m.PlayedGame
	}
	return 0
}

func (m *SpaceSettingReply) GetGroups() int64 {
	if m != nil {
		return m.Groups
	}
	return 0
}

func (m *SpaceSettingReply) GetComic() int64 {
	if m != nil {
		return m.Comic
	}
	return 0
}

func (m *SpaceSettingReply) GetBBQ() int64 {
	if m != nil {
		return m.BBQ
	}
	return 0
}

func (m *SpaceSettingReply) GetDressUp() int64 {
	if m != nil {
		return m.DressUp
	}
	return 0
}

func (m *SpaceSettingReply) GetDisableFollowing() int64 {
	if m != nil {
		return m.DisableFollowing
	}
	return 0
}

func (m *SpaceSettingReply) GetLivePlayback() int64 {
	if m != nil {
		return m.LivePlayback
	}
	return 0
}

func (m *SpaceSettingReply) GetCloseSpaceMedal() int64 {
	if m != nil {
		return m.CloseSpaceMedal
	}
	return 0
}

func (m *SpaceSettingReply) GetOnlyShowWearing() int64 {
	if m != nil {
		return m.OnlyShowWearing
	}
	return 0
}

func (m *SpaceSettingReply) GetDisableShowSchool() int64 {
	if m != nil {
		return m.DisableShowSchool
	}
	return 0
}

func (m *SpaceSettingReply) GetDisableShowNft() int64 {
	if m != nil {
		return m.DisableShowNft
	}
	return 0
}

type NoReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoReply) Reset()         { *m = NoReply{} }
func (m *NoReply) String() string { return proto.CompactTextString(m) }
func (*NoReply) ProtoMessage()    {}
func (*NoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{2}
}
func (m *NoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoReply.Merge(m, src)
}
func (m *NoReply) XXX_Size() int {
	return m.Size()
}
func (m *NoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NoReply.DiscardUnknown(m)
}

var xxx_messageInfo_NoReply proto.InternalMessageInfo

type TopPhotoArcCancelReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"mid"  validate:"gt=0,required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopPhotoArcCancelReq) Reset()         { *m = TopPhotoArcCancelReq{} }
func (m *TopPhotoArcCancelReq) String() string { return proto.CompactTextString(m) }
func (*TopPhotoArcCancelReq) ProtoMessage()    {}
func (*TopPhotoArcCancelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{3}
}
func (m *TopPhotoArcCancelReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhotoArcCancelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhotoArcCancelReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhotoArcCancelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhotoArcCancelReq.Merge(m, src)
}
func (m *TopPhotoArcCancelReq) XXX_Size() int {
	return m.Size()
}
func (m *TopPhotoArcCancelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhotoArcCancelReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhotoArcCancelReq proto.InternalMessageInfo

func (m *TopPhotoArcCancelReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type OfficialRequest struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"mid"  validate:"gt=0,required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialRequest) Reset()         { *m = OfficialRequest{} }
func (m *OfficialRequest) String() string { return proto.CompactTextString(m) }
func (*OfficialRequest) ProtoMessage()    {}
func (*OfficialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{4}
}
func (m *OfficialRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialRequest.Merge(m, src)
}
func (m *OfficialRequest) XXX_Size() int {
	return m.Size()
}
func (m *OfficialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialRequest proto.InternalMessageInfo

func (m *OfficialRequest) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type OfficialReply struct {
	//主键id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//uid
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	//软件名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//icon
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//scheme
	Scheme string `protobuf:"bytes,5,opt,name=scheme,proto3" json:"scheme,omitempty"`
	//推荐语
	Rcmd string `protobuf:"bytes,6,opt,name=rcmd,proto3" json:"rcmd,omitempty"`
	//ios url
	IosUrl string `protobuf:"bytes,7,opt,name=ios_url,json=iosUrl,proto3" json:"ios_url,omitempty"`
	//android url
	AndroidUrl string `protobuf:"bytes,8,opt,name=android_url,json=androidUrl,proto3" json:"android_url,omitempty"`
	//按钮文案
	Button string `protobuf:"bytes,9,opt,name=button,proto3" json:"button,omitempty"`
	//是否删除
	Deleted string `protobuf:"bytes,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	//更新时间
	Mtime                go_common_library_time.Time `protobuf:"varint,11,opt,name=mtime,proto3,casttype=go-common/library/time.Time" json:"mtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *OfficialReply) Reset()         { *m = OfficialReply{} }
func (m *OfficialReply) String() string { return proto.CompactTextString(m) }
func (*OfficialReply) ProtoMessage()    {}
func (*OfficialReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{5}
}
func (m *OfficialReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialReply.Merge(m, src)
}
func (m *OfficialReply) XXX_Size() int {
	return m.Size()
}
func (m *OfficialReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialReply.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialReply proto.InternalMessageInfo

func (m *OfficialReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OfficialReply) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *OfficialReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OfficialReply) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *OfficialReply) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *OfficialReply) GetRcmd() string {
	if m != nil {
		return m.Rcmd
	}
	return ""
}

func (m *OfficialReply) GetIosUrl() string {
	if m != nil {
		return m.IosUrl
	}
	return ""
}

func (m *OfficialReply) GetAndroidUrl() string {
	if m != nil {
		return m.AndroidUrl
	}
	return ""
}

func (m *OfficialReply) GetButton() string {
	if m != nil {
		return m.Button
	}
	return ""
}

func (m *OfficialReply) GetDeleted() string {
	if m != nil {
		return m.Deleted
	}
	return ""
}

func (m *OfficialReply) GetMtime() go_common_library_time.Time {
	if m != nil {
		return m.Mtime
	}
	return 0
}

type PrivacyRequest struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" validate:"min=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivacyRequest) Reset()         { *m = PrivacyRequest{} }
func (m *PrivacyRequest) String() string { return proto.CompactTextString(m) }
func (*PrivacyRequest) ProtoMessage()    {}
func (*PrivacyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{6}
}
func (m *PrivacyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivacyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacyRequest.Merge(m, src)
}
func (m *PrivacyRequest) XXX_Size() int {
	return m.Size()
}
func (m *PrivacyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacyRequest proto.InternalMessageInfo

func (m *PrivacyRequest) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type PrivacyReply struct {
	Privacy              map[string]int64 `protobuf:"bytes,1,rep,name=privacy,proto3" json:"privacy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrivacyReply) Reset()         { *m = PrivacyReply{} }
func (m *PrivacyReply) String() string { return proto.CompactTextString(m) }
func (*PrivacyReply) ProtoMessage()    {}
func (*PrivacyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{7}
}
func (m *PrivacyReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacyReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivacyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacyReply.Merge(m, src)
}
func (m *PrivacyReply) XXX_Size() int {
	return m.Size()
}
func (m *PrivacyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacyReply.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacyReply proto.InternalMessageInfo

func (m *PrivacyReply) GetPrivacy() map[string]int64 {
	if m != nil {
		return m.Privacy
	}
	return nil
}

type PhotoMallListReq struct {
	Mobiapp              string   `protobuf:"bytes,1,opt,name=mobiapp,proto3" json:"mobiapp,omitempty" validate:"gt=0,required"`
	Mid                  int64    `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty" validate:"gt=0,required"`
	Device               string   `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoMallListReq) Reset()         { *m = PhotoMallListReq{} }
func (m *PhotoMallListReq) String() string { return proto.CompactTextString(m) }
func (*PhotoMallListReq) ProtoMessage()    {}
func (*PhotoMallListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{8}
}
func (m *PhotoMallListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhotoMallListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhotoMallListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhotoMallListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoMallListReq.Merge(m, src)
}
func (m *PhotoMallListReq) XXX_Size() int {
	return m.Size()
}
func (m *PhotoMallListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoMallListReq.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoMallListReq proto.InternalMessageInfo

func (m *PhotoMallListReq) GetMobiapp() string {
	if m != nil {
		return m.Mobiapp
	}
	return ""
}

func (m *PhotoMallListReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *PhotoMallListReq) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type PhotoMallListReply struct {
	List                 []*PhotoMall `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PhotoMallListReply) Reset()         { *m = PhotoMallListReply{} }
func (m *PhotoMallListReply) String() string { return proto.CompactTextString(m) }
func (*PhotoMallListReply) ProtoMessage()    {}
func (*PhotoMallListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{9}
}
func (m *PhotoMallListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhotoMallListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhotoMallListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhotoMallListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoMallListReply.Merge(m, src)
}
func (m *PhotoMallListReply) XXX_Size() int {
	return m.Size()
}
func (m *PhotoMallListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoMallListReply.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoMallListReply proto.InternalMessageInfo

func (m *PhotoMallListReply) GetList() []*PhotoMall {
	if m != nil {
		return m.List
	}
	return nil
}

type PhotoMall struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Img                  string   `protobuf:"bytes,3,opt,name=img,proto3" json:"img"`
	NightImg             string   `protobuf:"bytes,4,opt,name=night_img,json=nightImg,proto3" json:"night_img"`
	IsActivated          int64    `protobuf:"varint,5,opt,name=is_activated,json=isActivated,proto3" json:"is_activated"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoMall) Reset()         { *m = PhotoMall{} }
func (m *PhotoMall) String() string { return proto.CompactTextString(m) }
func (*PhotoMall) ProtoMessage()    {}
func (*PhotoMall) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{10}
}
func (m *PhotoMall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhotoMall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhotoMall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhotoMall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoMall.Merge(m, src)
}
func (m *PhotoMall) XXX_Size() int {
	return m.Size()
}
func (m *PhotoMall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoMall.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoMall proto.InternalMessageInfo

func (m *PhotoMall) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PhotoMall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PhotoMall) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *PhotoMall) GetNightImg() string {
	if m != nil {
		return m.NightImg
	}
	return ""
}

func (m *PhotoMall) GetIsActivated() int64 {
	if m != nil {
		return m.IsActivated
	}
	return 0
}

type SetTopPhotoReq struct {
	Mobiapp              string       `protobuf:"bytes,1,opt,name=mobiapp,proto3" json:"mobiapp,omitempty" validate:"gt=0,required"`
	ID                   int64        `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty" validate:"gt=0,required"`
	Mid                  int64        `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty" validate:"gt=0,required"`
	Type                 TopPhotoType `protobuf:"varint,4,opt,name=type,proto3,enum=space.service.v1.TopPhotoType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetTopPhotoReq) Reset()         { *m = SetTopPhotoReq{} }
func (m *SetTopPhotoReq) String() string { return proto.CompactTextString(m) }
func (*SetTopPhotoReq) ProtoMessage()    {}
func (*SetTopPhotoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{11}
}
func (m *SetTopPhotoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetTopPhotoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetTopPhotoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetTopPhotoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTopPhotoReq.Merge(m, src)
}
func (m *SetTopPhotoReq) XXX_Size() int {
	return m.Size()
}
func (m *SetTopPhotoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTopPhotoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetTopPhotoReq proto.InternalMessageInfo

func (m *SetTopPhotoReq) GetMobiapp() string {
	if m != nil {
		return m.Mobiapp
	}
	return ""
}

func (m *SetTopPhotoReq) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SetTopPhotoReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *SetTopPhotoReq) GetType() TopPhotoType {
	if m != nil {
		return m.Type
	}
	return TopPhotoType_UNKNOWN
}

type TopPhotoReq struct {
	Mobiapp              string   `protobuf:"bytes,1,opt,name=mobiapp,proto3" json:"mobiapp,omitempty" validate:"gt=0,required"`
	Mid                  int64    `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty" validate:"gt=0,required"`
	Build                int32    `protobuf:"varint,3,opt,name=build,proto3" json:"build,omitempty"`
	Device               string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	LoginMid             int64    `protobuf:"varint,5,opt,name=loginMid,proto3" json:"loginMid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopPhotoReq) Reset()         { *m = TopPhotoReq{} }
func (m *TopPhotoReq) String() string { return proto.CompactTextString(m) }
func (*TopPhotoReq) ProtoMessage()    {}
func (*TopPhotoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{12}
}
func (m *TopPhotoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhotoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhotoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhotoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhotoReq.Merge(m, src)
}
func (m *TopPhotoReq) XXX_Size() int {
	return m.Size()
}
func (m *TopPhotoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhotoReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhotoReq proto.InternalMessageInfo

func (m *TopPhotoReq) GetMobiapp() string {
	if m != nil {
		return m.Mobiapp
	}
	return ""
}

func (m *TopPhotoReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *TopPhotoReq) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *TopPhotoReq) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *TopPhotoReq) GetLoginMid() int64 {
	if m != nil {
		return m.LoginMid
	}
	return 0
}

type TopPhotoReply struct {
	TopPhoto             *TopPhoto    `protobuf:"bytes,1,opt,name=top_photo,json=topPhoto,proto3" json:"top_photo,omitempty"`
	TopPhotoArc          *TopPhotoArc `protobuf:"bytes,2,opt,name=top_photo_arc,json=topPhotoArc,proto3" json:"top_photo_arc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TopPhotoReply) Reset()         { *m = TopPhotoReply{} }
func (m *TopPhotoReply) String() string { return proto.CompactTextString(m) }
func (*TopPhotoReply) ProtoMessage()    {}
func (*TopPhotoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{13}
}
func (m *TopPhotoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhotoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhotoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhotoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhotoReply.Merge(m, src)
}
func (m *TopPhotoReply) XXX_Size() int {
	return m.Size()
}
func (m *TopPhotoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhotoReply.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhotoReply proto.InternalMessageInfo

func (m *TopPhotoReply) GetTopPhoto() *TopPhoto {
	if m != nil {
		return m.TopPhoto
	}
	return nil
}

func (m *TopPhotoReply) GetTopPhotoArc() *TopPhotoArc {
	if m != nil {
		return m.TopPhotoArc
	}
	return nil
}

type TopPhoto struct {
	ImgUrl               string   `protobuf:"bytes,1,opt,name=img_url,json=imgUrl,proto3" json:"img_url"`
	NightImgUrl          string   `protobuf:"bytes,2,opt,name=night_img_url,json=nightImgUrl,proto3" json:"night_img_url"`
	Sid                  int64    `protobuf:"varint,3,opt,name=sid,proto3" json:"sid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopPhoto) Reset()         { *m = TopPhoto{} }
func (m *TopPhoto) String() string { return proto.CompactTextString(m) }
func (*TopPhoto) ProtoMessage()    {}
func (*TopPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{14}
}
func (m *TopPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhoto.Merge(m, src)
}
func (m *TopPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TopPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhoto proto.InternalMessageInfo

func (m *TopPhoto) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *TopPhoto) GetNightImgUrl() string {
	if m != nil {
		return m.NightImgUrl
	}
	return ""
}

func (m *TopPhoto) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

type TopPhotoArc struct {
	Show                 bool     `protobuf:"varint,1,opt,name=show,proto3" json:"show"`
	Aid                  int64    `protobuf:"varint,2,opt,name=aid,proto3" json:"aid"`
	Pic                  string   `protobuf:"bytes,3,opt,name=pic,proto3" json:"pic"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopPhotoArc) Reset()         { *m = TopPhotoArc{} }
func (m *TopPhotoArc) String() string { return proto.CompactTextString(m) }
func (*TopPhotoArc) ProtoMessage()    {}
func (*TopPhotoArc) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{15}
}
func (m *TopPhotoArc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhotoArc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhotoArc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhotoArc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhotoArc.Merge(m, src)
}
func (m *TopPhotoArc) XXX_Size() int {
	return m.Size()
}
func (m *TopPhotoArc) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhotoArc.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhotoArc proto.InternalMessageInfo

func (m *TopPhotoArc) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *TopPhotoArc) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *TopPhotoArc) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

type WhitelistReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"mid"  validate:"gt=0,required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhitelistReq) Reset()         { *m = WhitelistReq{} }
func (m *WhitelistReq) String() string { return proto.CompactTextString(m) }
func (*WhitelistReq) ProtoMessage()    {}
func (*WhitelistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{16}
}
func (m *WhitelistReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistReq.Merge(m, src)
}
func (m *WhitelistReq) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistReq.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistReq proto.InternalMessageInfo

func (m *WhitelistReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type WhitelistReply struct {
	IsWhite              bool     `protobuf:"varint,1,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty" form:"is_white"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhitelistReply) Reset()         { *m = WhitelistReply{} }
func (m *WhitelistReply) String() string { return proto.CompactTextString(m) }
func (*WhitelistReply) ProtoMessage()    {}
func (*WhitelistReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{17}
}
func (m *WhitelistReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistReply.Merge(m, src)
}
func (m *WhitelistReply) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistReply.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistReply proto.InternalMessageInfo

func (m *WhitelistReply) GetIsWhite() bool {
	if m != nil {
		return m.IsWhite
	}
	return false
}

type WhitelistValidTimeReply struct {
	IsWhite              bool                        `protobuf:"varint,1,opt,name=is_white,proto3" json:"is_white"`
	Stime                go_common_library_time.Time `protobuf:"varint,2,opt,name=stime,proto3,casttype=go-common/library/time.Time" json:"stime,omitempty"`
	Etime                go_common_library_time.Time `protobuf:"varint,3,opt,name=etime,proto3,casttype=go-common/library/time.Time" json:"etime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WhitelistValidTimeReply) Reset()         { *m = WhitelistValidTimeReply{} }
func (m *WhitelistValidTimeReply) String() string { return proto.CompactTextString(m) }
func (*WhitelistValidTimeReply) ProtoMessage()    {}
func (*WhitelistValidTimeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{18}
}
func (m *WhitelistValidTimeReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistValidTimeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistValidTimeReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistValidTimeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistValidTimeReply.Merge(m, src)
}
func (m *WhitelistValidTimeReply) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistValidTimeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistValidTimeReply.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistValidTimeReply proto.InternalMessageInfo

func (m *WhitelistValidTimeReply) GetIsWhite() bool {
	if m != nil {
		return m.IsWhite
	}
	return false
}

func (m *WhitelistValidTimeReply) GetStime() go_common_library_time.Time {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *WhitelistValidTimeReply) GetEtime() go_common_library_time.Time {
	if m != nil {
		return m.Etime
	}
	return 0
}

type WhitelistAddReq struct {
	Mid                  int64                       `protobuf:"varint,1,opt,name=mid,proto3" json:"mid"`
	Stime                go_common_library_time.Time `protobuf:"varint,2,opt,name=stime,proto3,casttype=go-common/library/time.Time" json:"stime,omitempty"`
	Etime                go_common_library_time.Time `protobuf:"varint,3,opt,name=etime,proto3,casttype=go-common/library/time.Time" json:"etime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WhitelistAddReq) Reset()         { *m = WhitelistAddReq{} }
func (m *WhitelistAddReq) String() string { return proto.CompactTextString(m) }
func (*WhitelistAddReq) ProtoMessage()    {}
func (*WhitelistAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{19}
}
func (m *WhitelistAddReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistAddReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistAddReq.Merge(m, src)
}
func (m *WhitelistAddReq) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistAddReq proto.InternalMessageInfo

func (m *WhitelistAddReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *WhitelistAddReq) GetStime() go_common_library_time.Time {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *WhitelistAddReq) GetEtime() go_common_library_time.Time {
	if m != nil {
		return m.Etime
	}
	return 0
}

type WhitelistAddReply struct {
	AddOk                bool     `protobuf:"varint,1,opt,name=add_ok,proto3" json:"add_ok"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhitelistAddReply) Reset()         { *m = WhitelistAddReply{} }
func (m *WhitelistAddReply) String() string { return proto.CompactTextString(m) }
func (*WhitelistAddReply) ProtoMessage()    {}
func (*WhitelistAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{20}
}
func (m *WhitelistAddReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistAddReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistAddReply.Merge(m, src)
}
func (m *WhitelistAddReply) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistAddReply proto.InternalMessageInfo

func (m *WhitelistAddReply) GetAddOk() bool {
	if m != nil {
		return m.AddOk
	}
	return false
}

type WhitelistUpReply struct {
	UpOk                 bool     `protobuf:"varint,1,opt,name=up_ok,proto3" json:"up_ok"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WhitelistUpReply) Reset()         { *m = WhitelistUpReply{} }
func (m *WhitelistUpReply) String() string { return proto.CompactTextString(m) }
func (*WhitelistUpReply) ProtoMessage()    {}
func (*WhitelistUpReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{21}
}
func (m *WhitelistUpReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistUpReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistUpReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistUpReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistUpReply.Merge(m, src)
}
func (m *WhitelistUpReply) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistUpReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistUpReply.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistUpReply proto.InternalMessageInfo

func (m *WhitelistUpReply) GetUpOk() bool {
	if m != nil {
		return m.UpOk
	}
	return false
}

type UpActivityTabReq struct {
	// 请求mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid"`
	// 操作类型，1-上线，0-下线
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state"`
	// 活动页ID
	TabCont int64 `protobuf:"varint,3,opt,name=tab_cont,proto3" json:"tab_cont"`
	// tab名称
	TabName              string   `protobuf:"bytes,4,opt,name=tab_name,proto3" json:"tab_name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpActivityTabReq) Reset()         { *m = UpActivityTabReq{} }
func (m *UpActivityTabReq) String() string { return proto.CompactTextString(m) }
func (*UpActivityTabReq) ProtoMessage()    {}
func (*UpActivityTabReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{22}
}
func (m *UpActivityTabReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpActivityTabReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpActivityTabReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpActivityTabReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpActivityTabReq.Merge(m, src)
}
func (m *UpActivityTabReq) XXX_Size() int {
	return m.Size()
}
func (m *UpActivityTabReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpActivityTabReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpActivityTabReq proto.InternalMessageInfo

func (m *UpActivityTabReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UpActivityTabReq) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *UpActivityTabReq) GetTabCont() int64 {
	if m != nil {
		return m.TabCont
	}
	return 0
}

func (m *UpActivityTabReq) GetTabName() string {
	if m != nil {
		return m.TabName
	}
	return ""
}

type UpActivityTabResp struct {
	// 操作是否成功
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpActivityTabResp) Reset()         { *m = UpActivityTabResp{} }
func (m *UpActivityTabResp) String() string { return proto.CompactTextString(m) }
func (*UpActivityTabResp) ProtoMessage()    {}
func (*UpActivityTabResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{23}
}
func (m *UpActivityTabResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpActivityTabResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpActivityTabResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpActivityTabResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpActivityTabResp.Merge(m, src)
}
func (m *UpActivityTabResp) XXX_Size() int {
	return m.Size()
}
func (m *UpActivityTabResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpActivityTabResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpActivityTabResp proto.InternalMessageInfo

func (m *UpActivityTabResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type UserTabReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty" form:"mid"  validate:"gt=0,required"`
	Plat                 int32    `protobuf:"varint,2,opt,name=plat,proto3" json:"plat,omitempty" form:"plat"`
	Build                int32    `protobuf:"varint,3,opt,name=build,proto3" json:"build,omitempty" form:"build"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTabReq) Reset()         { *m = UserTabReq{} }
func (m *UserTabReq) String() string { return proto.CompactTextString(m) }
func (*UserTabReq) ProtoMessage()    {}
func (*UserTabReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{24}
}
func (m *UserTabReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserTabReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserTabReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserTabReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTabReq.Merge(m, src)
}
func (m *UserTabReq) XXX_Size() int {
	return m.Size()
}
func (m *UserTabReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTabReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserTabReq proto.InternalMessageInfo

func (m *UserTabReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UserTabReq) GetPlat() int32 {
	if m != nil {
		return m.Plat
	}
	return 0
}

func (m *UserTabReq) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

type UserTabReply struct {
	// tab类型，1-商业，2-其他，3-UP主活动
	TabType int32 `protobuf:"varint,1,opt,name=tab_type,proto3" json:"tab_type"`
	Mid     int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid"`
	// tab名称，最多四个字
	TabName string `protobuf:"bytes,3,opt,name=tab_name,proto3" json:"tab_name"`
	// tab顺序
	TabOrder int32 `protobuf:"varint,4,opt,name=tab_order,proto3" json:"tab_order"`
	// native id
	TabCont int64 `protobuf:"varint,5,opt,name=tab_cont,proto3" json:"tab_cont"`
	// 是否默认定位到该tab
	IsDefault int32 `protobuf:"varint,6,opt,name=is_default,proto3" json:"is_default"`
	// h5 link
	H5Link               string   `protobuf:"bytes,7,opt,name=h5_link,proto3" json:"h5_link"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTabReply) Reset()         { *m = UserTabReply{} }
func (m *UserTabReply) String() string { return proto.CompactTextString(m) }
func (*UserTabReply) ProtoMessage()    {}
func (*UserTabReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{25}
}
func (m *UserTabReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserTabReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserTabReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserTabReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTabReply.Merge(m, src)
}
func (m *UserTabReply) XXX_Size() int {
	return m.Size()
}
func (m *UserTabReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTabReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserTabReply proto.InternalMessageInfo

func (m *UserTabReply) GetTabType() int32 {
	if m != nil {
		return m.TabType
	}
	return 0
}

func (m *UserTabReply) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UserTabReply) GetTabName() string {
	if m != nil {
		return m.TabName
	}
	return ""
}

func (m *UserTabReply) GetTabOrder() int32 {
	if m != nil {
		return m.TabOrder
	}
	return 0
}

func (m *UserTabReply) GetTabCont() int64 {
	if m != nil {
		return m.TabCont
	}
	return 0
}

func (m *UserTabReply) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

func (m *UserTabReply) GetH5Link() string {
	if m != nil {
		return m.H5Link
	}
	return ""
}

type UpRcmdBlackListReply struct {
	// mid列表
	BannedMids           []int64  `protobuf:"varint,1,rep,packed,name=banned_mids,proto3" json:"banned_mids"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpRcmdBlackListReply) Reset()         { *m = UpRcmdBlackListReply{} }
func (m *UpRcmdBlackListReply) String() string { return proto.CompactTextString(m) }
func (*UpRcmdBlackListReply) ProtoMessage()    {}
func (*UpRcmdBlackListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4775b7a442cbd421, []int{26}
}
func (m *UpRcmdBlackListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpRcmdBlackListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpRcmdBlackListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpRcmdBlackListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpRcmdBlackListReply.Merge(m, src)
}
func (m *UpRcmdBlackListReply) XXX_Size() int {
	return m.Size()
}
func (m *UpRcmdBlackListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpRcmdBlackListReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpRcmdBlackListReply proto.InternalMessageInfo

func (m *UpRcmdBlackListReply) GetBannedMids() []int64 {
	if m != nil {
		return m.BannedMids
	}
	return nil
}

func init() {
	proto.RegisterEnum("space.service.v1.TopPhotoType", TopPhotoType_name, TopPhotoType_value)
	proto.RegisterType((*SpaceSettingReq)(nil), "space.service.v1.SpaceSettingReq")
	proto.RegisterType((*SpaceSettingReply)(nil), "space.service.v1.SpaceSettingReply")
	proto.RegisterType((*NoReply)(nil), "space.service.v1.NoReply")
	proto.RegisterType((*TopPhotoArcCancelReq)(nil), "space.service.v1.TopPhotoArcCancelReq")
	proto.RegisterType((*OfficialRequest)(nil), "space.service.v1.OfficialRequest")
	proto.RegisterType((*OfficialReply)(nil), "space.service.v1.OfficialReply")
	proto.RegisterType((*PrivacyRequest)(nil), "space.service.v1.PrivacyRequest")
	proto.RegisterType((*PrivacyReply)(nil), "space.service.v1.PrivacyReply")
	proto.RegisterMapType((map[string]int64)(nil), "space.service.v1.PrivacyReply.PrivacyEntry")
	proto.RegisterType((*PhotoMallListReq)(nil), "space.service.v1.PhotoMallListReq")
	proto.RegisterType((*PhotoMallListReply)(nil), "space.service.v1.PhotoMallListReply")
	proto.RegisterType((*PhotoMall)(nil), "space.service.v1.PhotoMall")
	proto.RegisterType((*SetTopPhotoReq)(nil), "space.service.v1.SetTopPhotoReq")
	proto.RegisterType((*TopPhotoReq)(nil), "space.service.v1.TopPhotoReq")
	proto.RegisterType((*TopPhotoReply)(nil), "space.service.v1.TopPhotoReply")
	proto.RegisterType((*TopPhoto)(nil), "space.service.v1.TopPhoto")
	proto.RegisterType((*TopPhotoArc)(nil), "space.service.v1.TopPhotoArc")
	proto.RegisterType((*WhitelistReq)(nil), "space.service.v1.WhitelistReq")
	proto.RegisterType((*WhitelistReply)(nil), "space.service.v1.WhitelistReply")
	proto.RegisterType((*WhitelistValidTimeReply)(nil), "space.service.v1.WhitelistValidTimeReply")
	proto.RegisterType((*WhitelistAddReq)(nil), "space.service.v1.WhitelistAddReq")
	proto.RegisterType((*WhitelistAddReply)(nil), "space.service.v1.WhitelistAddReply")
	proto.RegisterType((*WhitelistUpReply)(nil), "space.service.v1.WhitelistUpReply")
	proto.RegisterType((*UpActivityTabReq)(nil), "space.service.v1.UpActivityTabReq")
	proto.RegisterType((*UpActivityTabResp)(nil), "space.service.v1.UpActivityTabResp")
	proto.RegisterType((*UserTabReq)(nil), "space.service.v1.UserTabReq")
	proto.RegisterType((*UserTabReply)(nil), "space.service.v1.UserTabReply")
	proto.RegisterType((*UpRcmdBlackListReply)(nil), "space.service.v1.UpRcmdBlackListReply")
}

func init() {
	proto.RegisterFile("go-gateway/app/web-svr/space/interface/api/v1/api.proto", fileDescriptor_4775b7a442cbd421)
}

var fileDescriptor_4775b7a442cbd421 = []byte{
	// 1932 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x6f, 0xdb, 0xc8,
	0x15, 0x5f, 0x4a, 0x96, 0x25, 0x3d, 0xc9, 0xb6, 0x3c, 0x6b, 0x64, 0x15, 0x25, 0x35, 0xbd, 0xdc,
	0x34, 0x70, 0xb3, 0x89, 0x54, 0x3b, 0x48, 0xb3, 0x30, 0xb0, 0x40, 0x2d, 0xc7, 0x9b, 0x3a, 0x1b,
	0x3b, 0xc9, 0xf8, 0x23, 0x6d, 0x2f, 0xea, 0x88, 0x1c, 0x4b, 0x03, 0x93, 0x1c, 0x2e, 0x49, 0xc9,
	0xd0, 0xb5, 0xd7, 0x9e, 0x5a, 0xa0, 0x68, 0x51, 0xf4, 0xd4, 0x53, 0x81, 0x9e, 0xfa, 0x07, 0x14,
	0xbd, 0xf6, 0xd8, 0x73, 0x0f, 0x42, 0x91, 0xde, 0x74, 0xf4, 0xb1, 0xa7, 0x62, 0x66, 0x48, 0xea,
	0x33, 0x72, 0x16, 0x2e, 0xf6, 0x22, 0xbd, 0xf7, 0x7b, 0x1f, 0x7c, 0xf3, 0xde, 0x9b, 0x79, 0x43,
	0xc2, 0xd3, 0x16, 0x7f, 0xd4, 0x22, 0x21, 0xbd, 0x24, 0xbd, 0x1a, 0xf1, 0xbc, 0xda, 0x25, 0x6d,
	0x3e, 0x0a, 0xba, 0x7e, 0x2d, 0xf0, 0x88, 0x49, 0x6b, 0xcc, 0x0d, 0xa9, 0x7f, 0x2e, 0x28, 0xe2,
	0xb1, 0x5a, 0x77, 0x4b, 0xfc, 0x55, 0x3d, 0x9f, 0x87, 0x1c, 0x95, 0xa4, 0x46, 0x35, 0xa0, 0x7e,
	0x97, 0x99, 0xb4, 0xda, 0xdd, 0xaa, 0x3c, 0x6a, 0xb1, 0xb0, 0xdd, 0x69, 0x56, 0x4d, 0xee, 0xd4,
	0x5a, 0xbc, 0xc5, 0x6b, 0x52, 0xb1, 0xd9, 0x39, 0x97, 0x9c, 0x64, 0x24, 0xa5, 0x1c, 0x54, 0xee,
	0xb4, 0x38, 0x6f, 0xd9, 0x74, 0xa8, 0x45, 0x1d, 0x2f, 0xec, 0x29, 0xa1, 0x71, 0x08, 0x2b, 0xc7,
	0xc2, 0xff, 0x31, 0x0d, 0x43, 0xe6, 0xb6, 0x30, 0xfd, 0x06, 0xed, 0x40, 0xda, 0x61, 0x56, 0x59,
	0xdb, 0xd0, 0x36, 0xd3, 0xf5, 0xcd, 0xab, 0xbe, 0x7e, 0xef, 0x9c, 0xfb, 0xce, 0x8e, 0xe1, 0x30,
	0xcb, 0xd8, 0xd8, 0xe8, 0x12, 0x9b, 0x59, 0x24, 0xa4, 0x3b, 0x46, 0x2b, 0xfc, 0xf2, 0x87, 0x0f,
	0x7d, 0xfa, 0x4d, 0x87, 0xf9, 0xd4, 0x32, 0xb0, 0x30, 0x32, 0x7e, 0xb7, 0x00, 0xab, 0xe3, 0xfe,
	0x3c, 0xbb, 0x87, 0xca, 0x90, 0x35, 0xdb, 0xc4, 0x75, 0xa9, 0xad, 0xbc, 0xe2, 0x98, 0x45, 0x15,
	0xc8, 0x7d, 0x45, 0xba, 0x67, 0xcc, 0xa2, 0xbc, 0x9c, 0x92, 0xa2, 0x84, 0x47, 0xeb, 0x00, 0x7b,
	0x9c, 0xb9, 0x81, 0x92, 0xa6, 0xa5, 0x74, 0x04, 0x11, 0xf2, 0x97, 0xec, 0x82, 0x46, 0xf2, 0x05,
	0x25, 0x1f, 0x22, 0xe2, 0xa9, 0x75, 0xe2, 0xb6, 0x3a, 0x0e, 0x2b, 0x67, 0xd4, 0x53, 0x23, 0x56,
	0x58, 0xbe, 0xb6, 0x49, 0x8f, 0x5a, 0xcf, 0x89, 0x43, 0xcb, 0x8b, 0xca, 0x72, 0x88, 0xa0, 0x5b,
	0xb0, 0xf8, 0xdc, 0xe7, 0x1d, 0x2f, 0x28, 0x67, 0xa5, 0x2c, 0xe2, 0xd0, 0x1a, 0x64, 0xf6, 0xb8,
	0xc3, 0xcc, 0x72, 0x4e, 0xc2, 0x8a, 0x41, 0x25, 0x48, 0xd7, 0xeb, 0x6f, 0xca, 0x79, 0x89, 0x09,
	0x52, 0x3c, 0xf9, 0x99, 0x4f, 0x83, 0xe0, 0xd4, 0x2b, 0x83, 0x7a, 0x72, 0xc4, 0xa2, 0x07, 0x50,
	0x7a, 0xc6, 0x02, 0xd2, 0xb4, 0xe9, 0x57, 0xdc, 0xb6, 0xf9, 0x25, 0x73, 0x5b, 0xe5, 0x82, 0x54,
	0x99, 0xc2, 0x91, 0x01, 0xc5, 0x97, 0xac, 0x4b, 0x45, 0x5c, 0x4d, 0x62, 0x5e, 0x94, 0x8b, 0x52,
	0x6f, 0x0c, 0x43, 0x9b, 0xb0, 0xb2, 0x67, 0xf3, 0x80, 0xca, 0x9c, 0x1f, 0x52, 0x8b, 0xd8, 0xe5,
	0x25, 0xa9, 0x36, 0x09, 0x0b, 0xcd, 0x57, 0xae, 0xdd, 0x3b, 0x6e, 0xf3, 0xcb, 0xb7, 0x94, 0xf8,
	0xe2, 0xc1, 0xcb, 0x4a, 0x73, 0x02, 0x46, 0x0f, 0x61, 0x35, 0x8a, 0x45, 0xa0, 0xc7, 0x66, 0x9b,
	0x73, 0xbb, 0xbc, 0x22, 0x75, 0xa7, 0x05, 0xe8, 0x3e, 0x2c, 0x8f, 0x80, 0x47, 0xe7, 0x61, 0xb9,
	0x24, 0x55, 0x27, 0x50, 0x23, 0x0f, 0xd9, 0x23, 0x2e, 0xdb, 0xc1, 0xc0, 0xb0, 0x76, 0xc2, 0xbd,
	0xd7, 0x6d, 0x1e, 0xf2, 0x5d, 0xdf, 0xdc, 0x23, 0xae, 0x49, 0xed, 0x9b, 0x36, 0xde, 0x21, 0xac,
	0xbc, 0x3a, 0x3f, 0x67, 0x26, 0x23, 0xc2, 0x55, 0x87, 0x06, 0xe1, 0x8d, 0xdc, 0xfd, 0x39, 0x05,
	0x4b, 0x43, 0x7f, 0xa2, 0x87, 0x97, 0x21, 0x15, 0x3b, 0xc3, 0x29, 0x66, 0x89, 0xaa, 0x77, 0x98,
	0x15, 0x35, 0xad, 0x20, 0x11, 0x82, 0x05, 0x57, 0xf4, 0x93, 0xe8, 0xd4, 0x3c, 0x96, 0xb4, 0xc0,
	0x98, 0xc9, 0x5d, 0xd9, 0x9d, 0x79, 0x2c, 0x69, 0xd1, 0x5d, 0x81, 0xd9, 0xa6, 0x0e, 0x95, 0x6d,
	0x99, 0xc7, 0x11, 0x27, 0x74, 0x7d, 0xd3, 0xb1, 0x64, 0x3f, 0xe6, 0xb1, 0xa4, 0xd1, 0x27, 0x90,
	0x65, 0x3c, 0x68, 0x74, 0x7c, 0x5b, 0xb6, 0x62, 0x1e, 0x2f, 0x32, 0x1e, 0x9c, 0xfa, 0x36, 0xd2,
	0xa1, 0x40, 0x5c, 0xcb, 0xe7, 0xcc, 0x92, 0xc2, 0x9c, 0x14, 0x42, 0x04, 0x09, 0x85, 0x5b, 0xb0,
	0xd8, 0xec, 0x84, 0x21, 0x77, 0x65, 0x63, 0xe6, 0x71, 0xc4, 0x89, 0xde, 0xb4, 0xa8, 0x4d, 0x43,
	0x6a, 0xc9, 0xde, 0xcc, 0xe3, 0x98, 0x45, 0x4f, 0x20, 0xe3, 0x84, 0xcc, 0xa1, 0xaa, 0x21, 0xeb,
	0xfa, 0x7f, 0xfb, 0xfa, 0x9d, 0x16, 0x7f, 0x64, 0x72, 0xc7, 0xe1, 0x6e, 0xcd, 0x66, 0x4d, 0x9f,
	0xf8, 0xbd, 0x9a, 0xd0, 0xa8, 0x9e, 0x30, 0x87, 0x62, 0xa5, 0x6d, 0x7c, 0x01, 0xcb, 0xaf, 0x7d,
	0xd6, 0x25, 0x66, 0x2f, 0x4e, 0xfc, 0xfd, 0xd1, 0xc4, 0xaf, 0x5d, 0xf5, 0xf5, 0xd2, 0x30, 0xd9,
	0x0e, 0x73, 0xbf, 0xdc, 0x8a, 0x92, 0xfc, 0x6b, 0x0d, 0x8a, 0x89, 0xa9, 0xc8, 0xf1, 0x3e, 0x64,
	0x3d, 0xc5, 0x97, 0xb5, 0x8d, 0xf4, 0x66, 0x61, 0xfb, 0xf3, 0xea, 0xe4, 0xe1, 0x57, 0x1d, 0x35,
	0x88, 0x99, 0x7d, 0x37, 0xf4, 0x7b, 0x38, 0xb6, 0xad, 0xec, 0x24, 0x6e, 0xa5, 0x40, 0x94, 0xea,
	0x82, 0xf6, 0x64, 0x3c, 0x79, 0x2c, 0x48, 0xb1, 0x91, 0xbb, 0xc4, 0xee, 0xd0, 0xa8, 0x7c, 0x8a,
	0xd9, 0x49, 0x7d, 0xa1, 0x19, 0xbf, 0xd1, 0xa0, 0x24, 0x3b, 0xf3, 0x90, 0xd8, 0xf6, 0x4b, 0x16,
	0x84, 0xa2, 0x31, 0x7f, 0x04, 0x59, 0x87, 0x37, 0x19, 0xf1, 0x3c, 0xe5, 0xa4, 0x7e, 0xf7, 0xaa,
	0xaf, 0x97, 0xdf, 0xdb, 0x41, 0xb1, 0x32, 0xaa, 0xaa, 0x44, 0xc8, 0x87, 0x5c, 0x63, 0x23, 0x14,
	0x45, 0xcd, 0x2c, 0x2a, 0x16, 0x1a, 0xf5, 0x50, 0xc4, 0x19, 0xfb, 0x80, 0x26, 0x62, 0x12, 0xd9,
	0xaa, 0xc1, 0x82, 0xcd, 0x82, 0x30, 0x4a, 0xd5, 0x9d, 0x19, 0xa9, 0x8a, 0x6d, 0xb0, 0x54, 0x34,
	0xfe, 0xa6, 0x41, 0x3e, 0xc1, 0xd0, 0xad, 0x61, 0x43, 0xd7, 0x17, 0x07, 0x7d, 0x3d, 0xc5, 0x2c,
	0xd9, 0xd8, 0x77, 0xa3, 0x36, 0x4e, 0xc9, 0x95, 0xe6, 0x06, 0x7d, 0x5d, 0xf2, 0x51, 0x43, 0xdf,
	0x86, 0x34, 0x73, 0x5a, 0x2a, 0xbe, 0x7a, 0x76, 0xd0, 0xd7, 0x05, 0x8b, 0xc5, 0x0f, 0x7a, 0x00,
	0x79, 0x97, 0xb5, 0xda, 0x61, 0x43, 0x28, 0xc8, 0x86, 0xaf, 0x2f, 0x0d, 0xfa, 0xfa, 0x10, 0xc4,
	0x39, 0x49, 0x1e, 0x38, 0x2d, 0xf4, 0x18, 0x8a, 0x2c, 0x68, 0x10, 0x33, 0x64, 0x5d, 0x22, 0x5a,
	0x51, 0x1e, 0xd0, 0xf5, 0xd2, 0xa0, 0xaf, 0x8f, 0xe1, 0xb8, 0xc0, 0x82, 0xdd, 0x98, 0x31, 0xfe,
	0xa5, 0xc1, 0xf2, 0x31, 0x0d, 0xe3, 0xb3, 0xe3, 0x26, 0x95, 0x79, 0x08, 0xa9, 0x83, 0x67, 0x1f,
	0x54, 0x98, 0xd4, 0xc1, 0xb3, 0xb8, 0x8e, 0xe9, 0x0f, 0xad, 0xe3, 0x36, 0x2c, 0x84, 0x3d, 0x8f,
	0xca, 0x24, 0x2c, 0x6f, 0xaf, 0x4f, 0x57, 0x26, 0x5e, 0xc2, 0x49, 0xcf, 0xa3, 0x58, 0xea, 0x1a,
	0x7f, 0xd7, 0xa0, 0xf0, 0xff, 0x58, 0xd9, 0xb7, 0xed, 0xb9, 0x35, 0xc8, 0x34, 0x3b, 0xcc, 0x56,
	0xab, 0xcb, 0x60, 0xc5, 0x8c, 0x74, 0xe2, 0xc2, 0x68, 0x27, 0x8a, 0x79, 0x6d, 0xf3, 0x16, 0x73,
	0x0f, 0x59, 0x54, 0x33, 0x9c, 0xf0, 0xc6, 0xaf, 0x34, 0x58, 0x1a, 0xae, 0x40, 0x74, 0xe8, 0x53,
	0xc8, 0x87, 0xdc, 0x6b, 0x78, 0x02, 0x91, 0xab, 0x28, 0x6c, 0x57, 0xde, 0x9f, 0x0c, 0x9c, 0x0b,
	0x23, 0x0a, 0xed, 0xc2, 0x52, 0x62, 0xd8, 0x20, 0xbe, 0x29, 0x97, 0x53, 0xd8, 0xfe, 0xde, 0xfb,
	0x8d, 0x77, 0x7d, 0x13, 0x17, 0xc2, 0x21, 0x63, 0xfc, 0x52, 0x83, 0x5c, 0x2c, 0x44, 0xf7, 0x20,
	0xcb, 0x9c, 0x96, 0x3c, 0x29, 0x55, 0x32, 0x0b, 0x83, 0xbe, 0x1e, 0x43, 0x78, 0x91, 0x39, 0x2d,
	0x71, 0x64, 0x3e, 0x81, 0xa5, 0xa4, 0x57, 0xa5, 0xae, 0xda, 0x02, 0xab, 0x83, 0xbe, 0x3e, 0x2e,
	0xc0, 0x85, 0xb8, 0x91, 0x85, 0xd9, 0x6d, 0x48, 0x07, 0x49, 0x77, 0xc8, 0x2d, 0x11, 0x30, 0x0b,
	0x8b, 0x1f, 0x83, 0x0c, 0x6b, 0xba, 0xeb, 0x9b, 0x62, 0x6b, 0x05, 0x6d, 0x7e, 0x29, 0x63, 0xc8,
	0xa9, 0xad, 0x25, 0x78, 0x2c, 0x7f, 0x85, 0x1f, 0x92, 0x54, 0x4e, 0xfa, 0x21, 0xc2, 0x0f, 0x61,
	0x96, 0x10, 0x79, 0xcc, 0x1c, 0xdd, 0x75, 0x1e, 0x33, 0xb1, 0xf8, 0x31, 0x5e, 0x40, 0xf1, 0x6d,
	0x9b, 0x85, 0xd4, 0x8e, 0xce, 0xaa, 0x9b, 0x4c, 0xbd, 0x1f, 0xc3, 0xf2, 0x88, 0x2f, 0x51, 0xc1,
	0x2a, 0xe4, 0x58, 0xd0, 0xb8, 0x14, 0x60, 0x14, 0xf5, 0xc7, 0x57, 0x7d, 0x7d, 0x45, 0xb9, 0x8c,
	0x25, 0x06, 0xce, 0xb2, 0x40, 0x1a, 0x1a, 0x7f, 0xd5, 0xe0, 0x93, 0xc4, 0xc5, 0x99, 0x78, 0x98,
	0x1c, 0x15, 0xd2, 0xd7, 0xe6, 0x94, 0xaf, 0xe2, 0xa0, 0xaf, 0x27, 0x18, 0x4e, 0x28, 0x31, 0x89,
	0x02, 0x39, 0x89, 0x52, 0x1f, 0x38, 0x89, 0xa4, 0xb6, 0x30, 0xa3, 0xd2, 0x2c, 0xfd, 0x81, 0x66,
	0x52, 0xdb, 0xf8, 0x83, 0x06, 0x2b, 0x49, 0xcc, 0xbb, 0x96, 0x25, 0xb2, 0x78, 0x7b, 0x34, 0x8b,
	0x32, 0xe1, 0x8e, 0xa8, 0x85, 0xd8, 0x30, 0xdf, 0x6d, 0x70, 0x4f, 0x61, 0x75, 0x3c, 0x36, 0x91,
	0x49, 0x03, 0x16, 0x89, 0x65, 0x35, 0xf8, 0x45, 0x94, 0x47, 0x18, 0xf4, 0xf5, 0x08, 0xc1, 0xd1,
	0xbf, 0xf1, 0x18, 0x4a, 0x89, 0xe1, 0xa9, 0xa7, 0xec, 0x74, 0xc8, 0x74, 0xbc, 0xa1, 0x59, 0x7e,
	0xd0, 0xd7, 0x15, 0x80, 0xd5, 0x9f, 0xf1, 0x27, 0x0d, 0x4a, 0xa7, 0x9e, 0x3c, 0x71, 0x59, 0xd8,
	0x3b, 0x21, 0xcd, 0x6b, 0x72, 0xa1, 0x8b, 0x5c, 0x90, 0x50, 0xe5, 0x22, 0xa3, 0x1c, 0x4a, 0x00,
	0xab, 0x3f, 0x51, 0xf3, 0x90, 0x34, 0x1b, 0x26, 0x77, 0xc3, 0x68, 0xe1, 0xb2, 0xe6, 0x31, 0x86,
	0x13, 0x2a, 0xd6, 0x94, 0xa3, 0x47, 0x0d, 0x8f, 0x44, 0x53, 0x8e, 0x9f, 0x84, 0x32, 0x76, 0x60,
	0x75, 0x22, 0xc6, 0xc0, 0x43, 0xdf, 0x87, 0x6c, 0xd0, 0x31, 0x4d, 0x1a, 0x04, 0xd1, 0xe2, 0xe4,
	0x0e, 0x8f, 0x20, 0x1c, 0x13, 0xc6, 0x6f, 0x35, 0x80, 0xd3, 0x80, 0xfa, 0xd1, 0xd2, 0x6e, 0xb0,
	0x59, 0xd0, 0x67, 0xb0, 0xe0, 0xd9, 0x24, 0x8c, 0x96, 0xbe, 0x72, 0xd5, 0xd7, 0x0b, 0xca, 0x58,
	0xa0, 0x06, 0x96, 0x42, 0x74, 0x7f, 0xec, 0x74, 0xad, 0x97, 0xae, 0xfa, 0x7a, 0x51, 0x69, 0x49,
	0xd8, 0x88, 0xce, 0x5b, 0xe3, 0x2f, 0x29, 0x28, 0x26, 0x71, 0x45, 0x9b, 0x45, 0x2c, 0x58, 0x8e,
	0x11, 0x4d, 0xda, 0x26, 0xe9, 0x10, 0x18, 0x4e, 0xa8, 0xb8, 0x3c, 0xa9, 0x19, 0xe5, 0x19, 0xcd,
	0x69, 0x7a, 0x5e, 0x4e, 0xd1, 0xe7, 0x90, 0x17, 0x34, 0xf7, 0x2d, 0xea, 0xcb, 0xf4, 0x67, 0xd4,
	0xec, 0x4e, 0x40, 0x3c, 0x24, 0xc7, 0x8a, 0x9a, 0x99, 0x5b, 0xd4, 0x2a, 0x00, 0x0b, 0x1a, 0x16,
	0x3d, 0x27, 0x1d, 0x3b, 0x94, 0x17, 0xdb, 0x4c, 0x7d, 0x79, 0xd0, 0xd7, 0x47, 0x50, 0x3c, 0x42,
	0x8b, 0x2a, 0xb6, 0x9f, 0x34, 0x6c, 0xe6, 0x5e, 0xa8, 0xeb, 0xae, 0xaa, 0x62, 0x04, 0xe1, 0x98,
	0x30, 0x0e, 0x60, 0xed, 0xd4, 0xc3, 0xa6, 0x63, 0xd5, 0x6d, 0x62, 0x5e, 0x0c, 0x6f, 0x44, 0x5b,
	0x50, 0x68, 0x8a, 0xf7, 0x4a, 0xab, 0xe1, 0x30, 0x2b, 0x90, 0x17, 0xa3, 0x74, 0x7d, 0x65, 0xd0,
	0xd7, 0x47, 0x61, 0x3c, 0xca, 0x3c, 0xd8, 0x82, 0xe2, 0xe8, 0x30, 0x46, 0x05, 0xc8, 0x9e, 0x1e,
	0x7d, 0x7d, 0xf4, 0xea, 0xed, 0x51, 0xe9, 0x23, 0x94, 0x85, 0xf4, 0xeb, 0x83, 0xbd, 0x92, 0x26,
	0xd0, 0x5d, 0xbc, 0xf7, 0x93, 0x83, 0xb3, 0xfd, 0x52, 0x6a, 0xfb, 0x8f, 0x79, 0xc8, 0xc8, 0x17,
	0x2b, 0x74, 0x04, 0xb9, 0xf8, 0x25, 0x01, 0x7d, 0x3a, 0x3d, 0x9b, 0x26, 0x5e, 0x48, 0x2a, 0xfa,
	0x3c, 0x15, 0x11, 0xff, 0xd7, 0x90, 0x8d, 0x2e, 0xae, 0x68, 0x63, 0xce, 0xcd, 0x57, 0x79, 0x5b,
	0x9f, 0x7f, 0x37, 0x46, 0x3f, 0x83, 0xa5, 0xb1, 0x4b, 0x23, 0x32, 0xe6, 0xdc, 0x10, 0xa3, 0x9b,
	0x6e, 0xe5, 0xde, 0xb5, 0x3a, 0xc2, 0xf5, 0x0b, 0x28, 0x8c, 0xdc, 0xc3, 0x66, 0xc5, 0x3a, 0x7e,
	0x4d, 0xab, 0xdc, 0x9e, 0xd6, 0x88, 0x5e, 0x06, 0xd1, 0x8b, 0x91, 0x31, 0x3d, 0x67, 0xbe, 0x0b,
	0x2f, 0xfa, 0x3c, 0xb1, 0xf0, 0xf5, 0x1c, 0xb2, 0xd1, 0x26, 0x42, 0x77, 0xa7, 0x75, 0x87, 0xfb,
	0x7e, 0x56, 0xee, 0xc6, 0x76, 0xdf, 0x19, 0xac, 0x4e, 0xbd, 0xa1, 0xa2, 0xfb, 0x73, 0x6f, 0x1f,
	0xc9, 0x6b, 0xec, 0xbc, 0xc5, 0x1e, 0x42, 0x3e, 0x39, 0x94, 0xd1, 0x8c, 0x20, 0x46, 0x27, 0x79,
	0x65, 0x63, 0xae, 0x5c, 0x85, 0x59, 0xdc, 0xb5, 0xac, 0xa1, 0xc7, 0x4f, 0xe7, 0x58, 0xa8, 0xc1,
	0x56, 0xf9, 0xec, 0x3a, 0x15, 0xe1, 0xf7, 0x04, 0x0a, 0xa7, 0xde, 0xb7, 0x72, 0x6b, 0xcc, 0x51,
	0x89, 0xa7, 0xcf, 0x2f, 0xe0, 0xe3, 0x37, 0x1d, 0xea, 0xf7, 0xc6, 0xef, 0x07, 0xd7, 0xa6, 0xe1,
	0x07, 0x73, 0xe4, 0x13, 0x37, 0x8c, 0x9f, 0xc2, 0xd2, 0xd8, 0x64, 0x98, 0xd5, 0xf2, 0x93, 0xe3,
	0x6d, 0x56, 0x46, 0xa6, 0xc7, 0xcb, 0x1b, 0x58, 0x99, 0x38, 0x71, 0xd0, 0xad, 0xaa, 0xfa, 0xae,
	0x56, 0x8d, 0xbf, 0xab, 0x55, 0xf7, 0x1d, 0x2f, 0xec, 0x55, 0xee, 0xcf, 0xf2, 0x37, 0xe3, 0xb0,
	0x3a, 0x83, 0xe2, 0xe8, 0x97, 0xb2, 0x59, 0x59, 0x9e, 0xf8, 0x32, 0x37, 0x2b, 0xd4, 0xa9, 0x8f,
	0x6d, 0xf5, 0xb5, 0x7f, 0xbc, 0x5b, 0xd7, 0xfe, 0xf9, 0x6e, 0x5d, 0xfb, 0xf7, 0xbb, 0x75, 0xed,
	0xf7, 0xff, 0x59, 0xff, 0xe8, 0xe7, 0xa9, 0xee, 0x56, 0x73, 0x51, 0x46, 0xf9, 0xf8, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xeb, 0x4f, 0x2a, 0xe3, 0x87, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpaceClient is the client API for Space service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpaceClient interface {
	//官仿号 返回值 -400 参数错误, -404找不到数据
	Official(ctx context.Context, in *OfficialRequest, opts ...grpc.CallOption) (*OfficialReply, error)
	// 根据mid查询空间隐私设置
	Privacy(ctx context.Context, in *PrivacyRequest, opts ...grpc.CallOption) (*PrivacyReply, error)
	// 获取app端空间头图列表
	PhotoMallList(ctx context.Context, in *PhotoMallListReq, opts ...grpc.CallOption) (*PhotoMallListReply, error)
	// 设置app端空间默认头图
	SetTopPhoto(ctx context.Context, in *SetTopPhotoReq, opts ...grpc.CallOption) (*NoReply, error)
	// 获取头图
	TopPhoto(ctx context.Context, in *TopPhotoReq, opts ...grpc.CallOption) (*TopPhotoReply, error)
	// 个人空间tab
	UserTab(ctx context.Context, in *UserTabReq, opts ...grpc.CallOption) (*UserTabReply, error)
	// 清除视频头图
	TopPhotoArcCancel(ctx context.Context, in *TopPhotoArcCancelReq, opts ...grpc.CallOption) (*NoReply, error)
	// 空间白名单
	Whitelist(ctx context.Context, in *WhitelistReq, opts ...grpc.CallOption) (*WhitelistReply, error)
	// 增加空间白名单
	AddWhitelist(ctx context.Context, in *WhitelistAddReq, opts ...grpc.CallOption) (*WhitelistAddReply, error)
	// 修改白名单生效时间
	UpWhitelist(ctx context.Context, in *WhitelistAddReq, opts ...grpc.CallOption) (*WhitelistUpReply, error)
	// 白名单查询时间
	QueryWhitelistValid(ctx context.Context, in *WhitelistReq, opts ...grpc.CallOption) (*WhitelistValidTimeReply, error)
	// up主活动同步空间tab
	UpActivityTab(ctx context.Context, in *UpActivityTabReq, opts ...grpc.CallOption) (*UpActivityTabResp, error)
	// 关注用户后, 相关用户推荐的黑名单
	UpRcmdBlackList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UpRcmdBlackListReply, error)
	// 空间设置
	SpaceSetting(ctx context.Context, in *SpaceSettingReq, opts ...grpc.CallOption) (*SpaceSettingReply, error)
}

type spaceClient struct {
	cc *grpc.ClientConn
}

func NewSpaceClient(cc *grpc.ClientConn) SpaceClient {
	return &spaceClient{cc}
}

func (c *spaceClient) Official(ctx context.Context, in *OfficialRequest, opts ...grpc.CallOption) (*OfficialReply, error) {
	out := new(OfficialReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/Official", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) Privacy(ctx context.Context, in *PrivacyRequest, opts ...grpc.CallOption) (*PrivacyReply, error) {
	out := new(PrivacyReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/Privacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) PhotoMallList(ctx context.Context, in *PhotoMallListReq, opts ...grpc.CallOption) (*PhotoMallListReply, error) {
	out := new(PhotoMallListReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/PhotoMallList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetTopPhoto(ctx context.Context, in *SetTopPhotoReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/SetTopPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) TopPhoto(ctx context.Context, in *TopPhotoReq, opts ...grpc.CallOption) (*TopPhotoReply, error) {
	out := new(TopPhotoReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/TopPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) UserTab(ctx context.Context, in *UserTabReq, opts ...grpc.CallOption) (*UserTabReply, error) {
	out := new(UserTabReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/UserTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) TopPhotoArcCancel(ctx context.Context, in *TopPhotoArcCancelReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/TopPhotoArcCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) Whitelist(ctx context.Context, in *WhitelistReq, opts ...grpc.CallOption) (*WhitelistReply, error) {
	out := new(WhitelistReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/Whitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) AddWhitelist(ctx context.Context, in *WhitelistAddReq, opts ...grpc.CallOption) (*WhitelistAddReply, error) {
	out := new(WhitelistAddReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/AddWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) UpWhitelist(ctx context.Context, in *WhitelistAddReq, opts ...grpc.CallOption) (*WhitelistUpReply, error) {
	out := new(WhitelistUpReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/UpWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) QueryWhitelistValid(ctx context.Context, in *WhitelistReq, opts ...grpc.CallOption) (*WhitelistValidTimeReply, error) {
	out := new(WhitelistValidTimeReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/QueryWhitelistValid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) UpActivityTab(ctx context.Context, in *UpActivityTabReq, opts ...grpc.CallOption) (*UpActivityTabResp, error) {
	out := new(UpActivityTabResp)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/UpActivityTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) UpRcmdBlackList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UpRcmdBlackListReply, error) {
	out := new(UpRcmdBlackListReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/UpRcmdBlackList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SpaceSetting(ctx context.Context, in *SpaceSettingReq, opts ...grpc.CallOption) (*SpaceSettingReply, error) {
	out := new(SpaceSettingReply)
	err := c.cc.Invoke(ctx, "/space.service.v1.Space/SpaceSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceServer is the server API for Space service.
type SpaceServer interface {
	//官仿号 返回值 -400 参数错误, -404找不到数据
	Official(context.Context, *OfficialRequest) (*OfficialReply, error)
	// 根据mid查询空间隐私设置
	Privacy(context.Context, *PrivacyRequest) (*PrivacyReply, error)
	// 获取app端空间头图列表
	PhotoMallList(context.Context, *PhotoMallListReq) (*PhotoMallListReply, error)
	// 设置app端空间默认头图
	SetTopPhoto(context.Context, *SetTopPhotoReq) (*NoReply, error)
	// 获取头图
	TopPhoto(context.Context, *TopPhotoReq) (*TopPhotoReply, error)
	// 个人空间tab
	UserTab(context.Context, *UserTabReq) (*UserTabReply, error)
	// 清除视频头图
	TopPhotoArcCancel(context.Context, *TopPhotoArcCancelReq) (*NoReply, error)
	// 空间白名单
	Whitelist(context.Context, *WhitelistReq) (*WhitelistReply, error)
	// 增加空间白名单
	AddWhitelist(context.Context, *WhitelistAddReq) (*WhitelistAddReply, error)
	// 修改白名单生效时间
	UpWhitelist(context.Context, *WhitelistAddReq) (*WhitelistUpReply, error)
	// 白名单查询时间
	QueryWhitelistValid(context.Context, *WhitelistReq) (*WhitelistValidTimeReply, error)
	// up主活动同步空间tab
	UpActivityTab(context.Context, *UpActivityTabReq) (*UpActivityTabResp, error)
	// 关注用户后, 相关用户推荐的黑名单
	UpRcmdBlackList(context.Context, *empty.Empty) (*UpRcmdBlackListReply, error)
	// 空间设置
	SpaceSetting(context.Context, *SpaceSettingReq) (*SpaceSettingReply, error)
}

// UnimplementedSpaceServer can be embedded to have forward compatible implementations.
type UnimplementedSpaceServer struct {
}

func (*UnimplementedSpaceServer) Official(ctx context.Context, req *OfficialRequest) (*OfficialReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Official not implemented")
}
func (*UnimplementedSpaceServer) Privacy(ctx context.Context, req *PrivacyRequest) (*PrivacyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Privacy not implemented")
}
func (*UnimplementedSpaceServer) PhotoMallList(ctx context.Context, req *PhotoMallListReq) (*PhotoMallListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PhotoMallList not implemented")
}
func (*UnimplementedSpaceServer) SetTopPhoto(ctx context.Context, req *SetTopPhotoReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTopPhoto not implemented")
}
func (*UnimplementedSpaceServer) TopPhoto(ctx context.Context, req *TopPhotoReq) (*TopPhotoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopPhoto not implemented")
}
func (*UnimplementedSpaceServer) UserTab(ctx context.Context, req *UserTabReq) (*UserTabReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserTab not implemented")
}
func (*UnimplementedSpaceServer) TopPhotoArcCancel(ctx context.Context, req *TopPhotoArcCancelReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopPhotoArcCancel not implemented")
}
func (*UnimplementedSpaceServer) Whitelist(ctx context.Context, req *WhitelistReq) (*WhitelistReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Whitelist not implemented")
}
func (*UnimplementedSpaceServer) AddWhitelist(ctx context.Context, req *WhitelistAddReq) (*WhitelistAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWhitelist not implemented")
}
func (*UnimplementedSpaceServer) UpWhitelist(ctx context.Context, req *WhitelistAddReq) (*WhitelistUpReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpWhitelist not implemented")
}
func (*UnimplementedSpaceServer) QueryWhitelistValid(ctx context.Context, req *WhitelistReq) (*WhitelistValidTimeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryWhitelistValid not implemented")
}
func (*UnimplementedSpaceServer) UpActivityTab(ctx context.Context, req *UpActivityTabReq) (*UpActivityTabResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpActivityTab not implemented")
}
func (*UnimplementedSpaceServer) UpRcmdBlackList(ctx context.Context, req *empty.Empty) (*UpRcmdBlackListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpRcmdBlackList not implemented")
}
func (*UnimplementedSpaceServer) SpaceSetting(ctx context.Context, req *SpaceSettingReq) (*SpaceSettingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceSetting not implemented")
}

func RegisterSpaceServer(s *grpc.Server, srv SpaceServer) {
	s.RegisterService(&_Space_serviceDesc, srv)
}

func _Space_Official_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfficialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).Official(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/Official",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).Official(ctx, req.(*OfficialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_Privacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivacyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).Privacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/Privacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).Privacy(ctx, req.(*PrivacyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_PhotoMallList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhotoMallListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).PhotoMallList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/PhotoMallList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).PhotoMallList(ctx, req.(*PhotoMallListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetTopPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTopPhotoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetTopPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/SetTopPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetTopPhoto(ctx, req.(*SetTopPhotoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_TopPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopPhotoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).TopPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/TopPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).TopPhoto(ctx, req.(*TopPhotoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_UserTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserTabReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).UserTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/UserTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).UserTab(ctx, req.(*UserTabReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_TopPhotoArcCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopPhotoArcCancelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).TopPhotoArcCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/TopPhotoArcCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).TopPhotoArcCancel(ctx, req.(*TopPhotoArcCancelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_Whitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhitelistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).Whitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/Whitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).Whitelist(ctx, req.(*WhitelistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_AddWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhitelistAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).AddWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/AddWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).AddWhitelist(ctx, req.(*WhitelistAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_UpWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhitelistAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).UpWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/UpWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).UpWhitelist(ctx, req.(*WhitelistAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_QueryWhitelistValid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhitelistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).QueryWhitelistValid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/QueryWhitelistValid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).QueryWhitelistValid(ctx, req.(*WhitelistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_UpActivityTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpActivityTabReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).UpActivityTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/UpActivityTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).UpActivityTab(ctx, req.(*UpActivityTabReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_UpRcmdBlackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).UpRcmdBlackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/UpRcmdBlackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).UpRcmdBlackList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SpaceSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpaceSettingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SpaceSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.service.v1.Space/SpaceSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SpaceSetting(ctx, req.(*SpaceSettingReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Space_serviceDesc = grpc.ServiceDesc{
	ServiceName: "space.service.v1.Space",
	HandlerType: (*SpaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Official",
			Handler:    _Space_Official_Handler,
		},
		{
			MethodName: "Privacy",
			Handler:    _Space_Privacy_Handler,
		},
		{
			MethodName: "PhotoMallList",
			Handler:    _Space_PhotoMallList_Handler,
		},
		{
			MethodName: "SetTopPhoto",
			Handler:    _Space_SetTopPhoto_Handler,
		},
		{
			MethodName: "TopPhoto",
			Handler:    _Space_TopPhoto_Handler,
		},
		{
			MethodName: "UserTab",
			Handler:    _Space_UserTab_Handler,
		},
		{
			MethodName: "TopPhotoArcCancel",
			Handler:    _Space_TopPhotoArcCancel_Handler,
		},
		{
			MethodName: "Whitelist",
			Handler:    _Space_Whitelist_Handler,
		},
		{
			MethodName: "AddWhitelist",
			Handler:    _Space_AddWhitelist_Handler,
		},
		{
			MethodName: "UpWhitelist",
			Handler:    _Space_UpWhitelist_Handler,
		},
		{
			MethodName: "QueryWhitelistValid",
			Handler:    _Space_QueryWhitelistValid_Handler,
		},
		{
			MethodName: "UpActivityTab",
			Handler:    _Space_UpActivityTab_Handler,
		},
		{
			MethodName: "UpRcmdBlackList",
			Handler:    _Space_UpRcmdBlackList_Handler,
		},
		{
			MethodName: "SpaceSetting",
			Handler:    _Space_SpaceSetting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/web-svr/space/interface/api/v1/api.proto",
}

func (m *SpaceSettingReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SpaceSettingReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SpaceSettingReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SpaceSettingReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SpaceSettingReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SpaceSettingReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DisableShowNft != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DisableShowNft))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.DisableShowSchool != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DisableShowSchool))
		i--
		dAtA[i] = 0x78
	}
	if m.OnlyShowWearing != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OnlyShowWearing))
		i--
		dAtA[i] = 0x70
	}
	if m.CloseSpaceMedal != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CloseSpaceMedal))
		i--
		dAtA[i] = 0x68
	}
	if m.LivePlayback != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LivePlayback))
		i--
		dAtA[i] = 0x60
	}
	if m.DisableFollowing != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DisableFollowing))
		i--
		dAtA[i] = 0x58
	}
	if m.DressUp != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DressUp))
		i--
		dAtA[i] = 0x50
	}
	if m.BBQ != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BBQ))
		i--
		dAtA[i] = 0x48
	}
	if m.Comic != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Comic))
		i--
		dAtA[i] = 0x40
	}
	if m.Groups != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Groups))
		i--
		dAtA[i] = 0x38
	}
	if m.PlayedGame != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PlayedGame))
		i--
		dAtA[i] = 0x30
	}
	if m.Bangumi != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Bangumi))
		i--
		dAtA[i] = 0x28
	}
	if m.LikesVideo != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LikesVideo))
		i--
		dAtA[i] = 0x20
	}
	if m.CoinsVideo != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CoinsVideo))
		i--
		dAtA[i] = 0x18
	}
	if m.FavVideo != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.FavVideo))
		i--
		dAtA[i] = 0x10
	}
	if m.Channel != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Channel))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *NoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *TopPhotoArcCancelReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhotoArcCancelReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhotoArcCancelReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mtime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mtime))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Deleted) > 0 {
		i -= len(m.Deleted)
		copy(dAtA[i:], m.Deleted)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Deleted)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Button) > 0 {
		i -= len(m.Button)
		copy(dAtA[i:], m.Button)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Button)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.AndroidUrl) > 0 {
		i -= len(m.AndroidUrl)
		copy(dAtA[i:], m.AndroidUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.AndroidUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.IosUrl) > 0 {
		i -= len(m.IosUrl)
		copy(dAtA[i:], m.IosUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.IosUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Rcmd) > 0 {
		i -= len(m.Rcmd)
		copy(dAtA[i:], m.Rcmd)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Rcmd)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Scheme) > 0 {
		i -= len(m.Scheme)
		copy(dAtA[i:], m.Scheme)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Scheme)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Uid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PrivacyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivacyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PrivacyReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacyReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivacyReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Privacy) > 0 {
		for k := range m.Privacy {
			v := m.Privacy[k]
			baseI := i
			i = encodeVarintApi(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintApi(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintApi(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PhotoMallListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhotoMallListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhotoMallListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Device) > 0 {
		i -= len(m.Device)
		copy(dAtA[i:], m.Device)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Device)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Mobiapp) > 0 {
		i -= len(m.Mobiapp)
		copy(dAtA[i:], m.Mobiapp)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Mobiapp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhotoMallListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhotoMallListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhotoMallListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PhotoMall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhotoMall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhotoMall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsActivated != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.IsActivated))
		i--
		dAtA[i] = 0x28
	}
	if len(m.NightImg) > 0 {
		i -= len(m.NightImg)
		copy(dAtA[i:], m.NightImg)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NightImg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Img) > 0 {
		i -= len(m.Img)
		copy(dAtA[i:], m.Img)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Img)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SetTopPhotoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetTopPhotoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetTopPhotoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x18
	}
	if m.ID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Mobiapp) > 0 {
		i -= len(m.Mobiapp)
		copy(dAtA[i:], m.Mobiapp)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Mobiapp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopPhotoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhotoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhotoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LoginMid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LoginMid))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Device) > 0 {
		i -= len(m.Device)
		copy(dAtA[i:], m.Device)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Device)))
		i--
		dAtA[i] = 0x22
	}
	if m.Build != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x18
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Mobiapp) > 0 {
		i -= len(m.Mobiapp)
		copy(dAtA[i:], m.Mobiapp)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Mobiapp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopPhotoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhotoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhotoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TopPhotoArc != nil {
		{
			size, err := m.TopPhotoArc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.TopPhoto != nil {
		{
			size, err := m.TopPhoto.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Sid))
		i--
		dAtA[i] = 0x18
	}
	if len(m.NightImgUrl) > 0 {
		i -= len(m.NightImgUrl)
		copy(dAtA[i:], m.NightImgUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.NightImgUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ImgUrl) > 0 {
		i -= len(m.ImgUrl)
		copy(dAtA[i:], m.ImgUrl)
		i = encodeVarintApi(dAtA, i, uint64(len(m.ImgUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopPhotoArc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhotoArc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhotoArc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Pic) > 0 {
		i -= len(m.Pic)
		copy(dAtA[i:], m.Pic)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Pic)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Aid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x10
	}
	if m.Show {
		i--
		if m.Show {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsWhite {
		i--
		if m.IsWhite {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistValidTimeReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistValidTimeReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistValidTimeReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Etime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Etime))
		i--
		dAtA[i] = 0x18
	}
	if m.Stime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x10
	}
	if m.IsWhite {
		i--
		if m.IsWhite {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistAddReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistAddReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistAddReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Etime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Etime))
		i--
		dAtA[i] = 0x18
	}
	if m.Stime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x10
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistAddReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistAddReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistAddReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AddOk {
		i--
		if m.AddOk {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WhitelistUpReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistUpReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistUpReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UpOk {
		i--
		if m.UpOk {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpActivityTabReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpActivityTabReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpActivityTabReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TabName) > 0 {
		i -= len(m.TabName)
		copy(dAtA[i:], m.TabName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabName)))
		i--
		dAtA[i] = 0x22
	}
	if m.TabCont != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabCont))
		i--
		dAtA[i] = 0x18
	}
	if m.State != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpActivityTabResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpActivityTabResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpActivityTabResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserTabReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserTabReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserTabReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Build != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x18
	}
	if m.Plat != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Plat))
		i--
		dAtA[i] = 0x10
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserTabReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserTabReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserTabReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.H5Link) > 0 {
		i -= len(m.H5Link)
		copy(dAtA[i:], m.H5Link)
		i = encodeVarintApi(dAtA, i, uint64(len(m.H5Link)))
		i--
		dAtA[i] = 0x3a
	}
	if m.IsDefault != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.IsDefault))
		i--
		dAtA[i] = 0x30
	}
	if m.TabCont != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabCont))
		i--
		dAtA[i] = 0x28
	}
	if m.TabOrder != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabOrder))
		i--
		dAtA[i] = 0x20
	}
	if len(m.TabName) > 0 {
		i -= len(m.TabName)
		copy(dAtA[i:], m.TabName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TabName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if m.TabType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TabType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpRcmdBlackListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpRcmdBlackListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpRcmdBlackListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BannedMids) > 0 {
		dAtA4 := make([]byte, len(m.BannedMids)*10)
		var j3 int
		for _, num1 := range m.BannedMids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintApi(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SpaceSettingReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SpaceSettingReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Channel != 0 {
		n += 1 + sovApi(uint64(m.Channel))
	}
	if m.FavVideo != 0 {
		n += 1 + sovApi(uint64(m.FavVideo))
	}
	if m.CoinsVideo != 0 {
		n += 1 + sovApi(uint64(m.CoinsVideo))
	}
	if m.LikesVideo != 0 {
		n += 1 + sovApi(uint64(m.LikesVideo))
	}
	if m.Bangumi != 0 {
		n += 1 + sovApi(uint64(m.Bangumi))
	}
	if m.PlayedGame != 0 {
		n += 1 + sovApi(uint64(m.PlayedGame))
	}
	if m.Groups != 0 {
		n += 1 + sovApi(uint64(m.Groups))
	}
	if m.Comic != 0 {
		n += 1 + sovApi(uint64(m.Comic))
	}
	if m.BBQ != 0 {
		n += 1 + sovApi(uint64(m.BBQ))
	}
	if m.DressUp != 0 {
		n += 1 + sovApi(uint64(m.DressUp))
	}
	if m.DisableFollowing != 0 {
		n += 1 + sovApi(uint64(m.DisableFollowing))
	}
	if m.LivePlayback != 0 {
		n += 1 + sovApi(uint64(m.LivePlayback))
	}
	if m.CloseSpaceMedal != 0 {
		n += 1 + sovApi(uint64(m.CloseSpaceMedal))
	}
	if m.OnlyShowWearing != 0 {
		n += 1 + sovApi(uint64(m.OnlyShowWearing))
	}
	if m.DisableShowSchool != 0 {
		n += 1 + sovApi(uint64(m.DisableShowSchool))
	}
	if m.DisableShowNft != 0 {
		n += 2 + sovApi(uint64(m.DisableShowNft))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhotoArcCancelReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.Uid != 0 {
		n += 1 + sovApi(uint64(m.Uid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Scheme)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Rcmd)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.IosUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.AndroidUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Button)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Deleted)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Mtime != 0 {
		n += 1 + sovApi(uint64(m.Mtime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PrivacyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PrivacyReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Privacy) > 0 {
		for k, v := range m.Privacy {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovApi(uint64(len(k))) + 1 + sovApi(uint64(v))
			n += mapEntrySize + 1 + sovApi(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhotoMallListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobiapp)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhotoMallListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhotoMall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Img)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.NightImg)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.IsActivated != 0 {
		n += 1 + sovApi(uint64(m.IsActivated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetTopPhotoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobiapp)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ID != 0 {
		n += 1 + sovApi(uint64(m.ID))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.Type != 0 {
		n += 1 + sovApi(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhotoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobiapp)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LoginMid != 0 {
		n += 1 + sovApi(uint64(m.LoginMid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhotoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopPhoto != nil {
		l = m.TopPhoto.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TopPhotoArc != nil {
		l = m.TopPhotoArc.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ImgUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.NightImgUrl)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Sid != 0 {
		n += 1 + sovApi(uint64(m.Sid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhotoArc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Show {
		n += 2
	}
	if m.Aid != 0 {
		n += 1 + sovApi(uint64(m.Aid))
	}
	l = len(m.Pic)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsWhite {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistValidTimeReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsWhite {
		n += 2
	}
	if m.Stime != 0 {
		n += 1 + sovApi(uint64(m.Stime))
	}
	if m.Etime != 0 {
		n += 1 + sovApi(uint64(m.Etime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistAddReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.Stime != 0 {
		n += 1 + sovApi(uint64(m.Stime))
	}
	if m.Etime != 0 {
		n += 1 + sovApi(uint64(m.Etime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistAddReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AddOk {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WhitelistUpReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpOk {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpActivityTabReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.State != 0 {
		n += 1 + sovApi(uint64(m.State))
	}
	if m.TabCont != 0 {
		n += 1 + sovApi(uint64(m.TabCont))
	}
	l = len(m.TabName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpActivityTabResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserTabReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.Plat != 0 {
		n += 1 + sovApi(uint64(m.Plat))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserTabReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TabType != 0 {
		n += 1 + sovApi(uint64(m.TabType))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.TabName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TabOrder != 0 {
		n += 1 + sovApi(uint64(m.TabOrder))
	}
	if m.TabCont != 0 {
		n += 1 + sovApi(uint64(m.TabCont))
	}
	if m.IsDefault != 0 {
		n += 1 + sovApi(uint64(m.IsDefault))
	}
	l = len(m.H5Link)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpRcmdBlackListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BannedMids) > 0 {
		l = 0
		for _, e := range m.BannedMids {
			l += sovApi(uint64(e))
		}
		n += 1 + sovApi(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SpaceSettingReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SpaceSettingReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SpaceSettingReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SpaceSettingReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SpaceSettingReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SpaceSettingReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			m.Channel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Channel |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FavVideo", wireType)
			}
			m.FavVideo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FavVideo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinsVideo", wireType)
			}
			m.CoinsVideo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinsVideo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikesVideo", wireType)
			}
			m.LikesVideo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikesVideo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bangumi", wireType)
			}
			m.Bangumi = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Bangumi |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayedGame", wireType)
			}
			m.PlayedGame = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayedGame |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			m.Groups = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Groups |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comic", wireType)
			}
			m.Comic = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Comic |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BBQ", wireType)
			}
			m.BBQ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BBQ |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DressUp", wireType)
			}
			m.DressUp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DressUp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableFollowing", wireType)
			}
			m.DisableFollowing = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisableFollowing |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LivePlayback", wireType)
			}
			m.LivePlayback = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LivePlayback |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseSpaceMedal", wireType)
			}
			m.CloseSpaceMedal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CloseSpaceMedal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlyShowWearing", wireType)
			}
			m.OnlyShowWearing = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OnlyShowWearing |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableShowSchool", wireType)
			}
			m.DisableShowSchool = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisableShowSchool |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisableShowNft", wireType)
			}
			m.DisableShowNft = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisableShowNft |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhotoArcCancelReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhotoArcCancelReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhotoArcCancelReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scheme", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scheme = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rcmd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rcmd = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IosUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Button = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deleted", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deleted = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			m.Mtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mtime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PrivacyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PrivacyReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacyReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacyReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Privacy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Privacy == nil {
				m.Privacy = make(map[string]int64)
			}
			var mapkey string
			var mapvalue int64
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthApi
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthApi
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipApi(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthApi
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Privacy[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhotoMallListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhotoMallListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhotoMallListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobiapp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobiapp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhotoMallListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhotoMallListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhotoMallListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &PhotoMall{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhotoMall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhotoMall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhotoMall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Img", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Img = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NightImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NightImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActivated", wireType)
			}
			m.IsActivated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsActivated |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetTopPhotoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetTopPhotoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetTopPhotoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobiapp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobiapp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= TopPhotoType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhotoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhotoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhotoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobiapp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobiapp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginMid", wireType)
			}
			m.LoginMid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoginMid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhotoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhotoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhotoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopPhoto", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopPhoto == nil {
				m.TopPhoto = &TopPhoto{}
			}
			if err := m.TopPhoto.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopPhotoArc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopPhotoArc == nil {
				m.TopPhotoArc = &TopPhotoArc{}
			}
			if err := m.TopPhotoArc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImgUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImgUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NightImgUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NightImgUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			m.Sid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhotoArc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhotoArc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhotoArc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Show", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Show = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsWhite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsWhite = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistValidTimeReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistValidTimeReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistValidTimeReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsWhite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsWhite = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Etime", wireType)
			}
			m.Etime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Etime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistAddReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistAddReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistAddReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Etime", wireType)
			}
			m.Etime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Etime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistAddReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistAddReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistAddReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOk", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddOk = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistUpReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistUpReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistUpReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpOk", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpOk = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpActivityTabReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpActivityTabReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpActivityTabReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabCont", wireType)
			}
			m.TabCont = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabCont |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpActivityTabResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpActivityTabResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpActivityTabResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserTabReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserTabReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserTabReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plat", wireType)
			}
			m.Plat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Plat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserTabReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserTabReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserTabReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabType", wireType)
			}
			m.TabType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TabName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabOrder", wireType)
			}
			m.TabOrder = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabOrder |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabCont", wireType)
			}
			m.TabCont = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabCont |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDefault", wireType)
			}
			m.IsDefault = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsDefault |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field H5Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.H5Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpRcmdBlackListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpRcmdBlackListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpRcmdBlackListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BannedMids = append(m.BannedMids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthApi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthApi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.BannedMids) == 0 {
					m.BannedMids = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BannedMids = append(m.BannedMids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedMids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
