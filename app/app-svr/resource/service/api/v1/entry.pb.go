// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entry.proto

package v1

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	go_common_library_time "go-common/library/time"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetAppEntryStateReq struct {
	// 系统平台
	Plat int32 `protobuf:"varint,1,opt,name=plat,proto3" json:"plat"`
	// 端版本
	Build                int32    `protobuf:"varint,2,opt,name=build,proto3" json:"build"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppEntryStateReq) Reset()         { *m = GetAppEntryStateReq{} }
func (m *GetAppEntryStateReq) String() string { return proto.CompactTextString(m) }
func (*GetAppEntryStateReq) ProtoMessage()    {}
func (*GetAppEntryStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{0}
}
func (m *GetAppEntryStateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAppEntryStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAppEntryStateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAppEntryStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppEntryStateReq.Merge(m, src)
}
func (m *GetAppEntryStateReq) XXX_Size() int {
	return m.Size()
}
func (m *GetAppEntryStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppEntryStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppEntryStateReq proto.InternalMessageInfo

func (m *GetAppEntryStateReq) GetPlat() int32 {
	if m != nil {
		return m.Plat
	}
	return 0
}

func (m *GetAppEntryStateReq) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

type GetAppEntryStateV2Rep struct {
	//不存在时返回nil
	Item                 *GetAppEntryStateRep `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetAppEntryStateV2Rep) Reset()         { *m = GetAppEntryStateV2Rep{} }
func (m *GetAppEntryStateV2Rep) String() string { return proto.CompactTextString(m) }
func (*GetAppEntryStateV2Rep) ProtoMessage()    {}
func (*GetAppEntryStateV2Rep) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{1}
}
func (m *GetAppEntryStateV2Rep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAppEntryStateV2Rep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAppEntryStateV2Rep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAppEntryStateV2Rep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppEntryStateV2Rep.Merge(m, src)
}
func (m *GetAppEntryStateV2Rep) XXX_Size() int {
	return m.Size()
}
func (m *GetAppEntryStateV2Rep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppEntryStateV2Rep.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppEntryStateV2Rep proto.InternalMessageInfo

func (m *GetAppEntryStateV2Rep) GetItem() *GetAppEntryStateRep {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetAppEntryStateRep struct {
	// 常驻入口状态id
	StateID int32 `protobuf:"varint,1,opt,name=stateID,json=state_id,proto3" json:"state_id"`
	// 常驻入口状态名
	StateName string `protobuf:"bytes,2,opt,name=stateName,json=state_name,proto3" json:"state_name"`
	// 跳转url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 静态icon，兜底
	StaticIcon string `protobuf:"bytes,4,opt,name=staticIcon,json=static_icon,proto3" json:"static_icon"`
	// 动态icon
	DynamicIcon string `protobuf:"bytes,5,opt,name=dynamicIcon,json=dynamic_icon,proto3" json:"dynamic_icon"`
	// 动态icon循环次数
	LoopCount int32 `protobuf:"varint,6,opt,name=loopCount,json=loop_count,proto3" json:"loop_count"`
	// 状态配置生效时间
	STime go_common_library_time.Time `protobuf:"varint,7,opt,name=sTime,json=stime,proto3,casttype=go-common/library/time.Time" json:"stime"`
	// 入口总配置结束时间
	ETime go_common_library_time.Time `protobuf:"varint,8,opt,name=eTime,json=etime,proto3,casttype=go-common/library/time.Time" json:"etime"`
	// 入口名称
	EntryName string `protobuf:"bytes,9,opt,name=entryName,json=entry_name,proto3" json:"entry_name"`
	// 时间配置ID
	ID                   int32    `protobuf:"varint,10,opt,name=ID,json=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppEntryStateRep) Reset()         { *m = GetAppEntryStateRep{} }
func (m *GetAppEntryStateRep) String() string { return proto.CompactTextString(m) }
func (*GetAppEntryStateRep) ProtoMessage()    {}
func (*GetAppEntryStateRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{2}
}
func (m *GetAppEntryStateRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAppEntryStateRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAppEntryStateRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAppEntryStateRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppEntryStateRep.Merge(m, src)
}
func (m *GetAppEntryStateRep) XXX_Size() int {
	return m.Size()
}
func (m *GetAppEntryStateRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppEntryStateRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppEntryStateRep proto.InternalMessageInfo

func (m *GetAppEntryStateRep) GetStateID() int32 {
	if m != nil {
		return m.StateID
	}
	return 0
}

func (m *GetAppEntryStateRep) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *GetAppEntryStateRep) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetAppEntryStateRep) GetStaticIcon() string {
	if m != nil {
		return m.StaticIcon
	}
	return ""
}

func (m *GetAppEntryStateRep) GetDynamicIcon() string {
	if m != nil {
		return m.DynamicIcon
	}
	return ""
}

func (m *GetAppEntryStateRep) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *GetAppEntryStateRep) GetSTime() go_common_library_time.Time {
	if m != nil {
		return m.STime
	}
	return 0
}

func (m *GetAppEntryStateRep) GetETime() go_common_library_time.Time {
	if m != nil {
		return m.ETime
	}
	return 0
}

func (m *GetAppEntryStateRep) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func (m *GetAppEntryStateRep) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type EffectivePlatform struct {
	// 生效平台
	Platform int32 `protobuf:"varint,1,opt,name=platform,proto3" json:"plat" validate:"required"`
	// 版本运算符
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"conditions" validate:"required"`
	// 平台版本
	Build                int32    `protobuf:"varint,3,opt,name=build,proto3" json:"build" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EffectivePlatform) Reset()         { *m = EffectivePlatform{} }
func (m *EffectivePlatform) String() string { return proto.CompactTextString(m) }
func (*EffectivePlatform) ProtoMessage()    {}
func (*EffectivePlatform) Descriptor() ([]byte, []int) {
	return fileDescriptor_daa6c5b6c627940f, []int{3}
}
func (m *EffectivePlatform) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EffectivePlatform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EffectivePlatform.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EffectivePlatform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EffectivePlatform.Merge(m, src)
}
func (m *EffectivePlatform) XXX_Size() int {
	return m.Size()
}
func (m *EffectivePlatform) XXX_DiscardUnknown() {
	xxx_messageInfo_EffectivePlatform.DiscardUnknown(m)
}

var xxx_messageInfo_EffectivePlatform proto.InternalMessageInfo

func (m *EffectivePlatform) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *EffectivePlatform) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *EffectivePlatform) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAppEntryStateReq)(nil), "resource.service.v1.GetAppEntryStateReq")
	proto.RegisterType((*GetAppEntryStateV2Rep)(nil), "resource.service.v1.GetAppEntryStateV2Rep")
	proto.RegisterType((*GetAppEntryStateRep)(nil), "resource.service.v1.GetAppEntryStateRep")
	proto.RegisterType((*EffectivePlatform)(nil), "resource.service.v1.EffectivePlatform")
}

func init() { proto.RegisterFile("entry.proto", fileDescriptor_daa6c5b6c627940f) }

var fileDescriptor_daa6c5b6c627940f = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0x26, 0xed, 0x76, 0xdb, 0x4e, 0x17, 0x5d, 0xa7, 0x28, 0xf1, 0x07, 0x9d, 0x12, 0x10, 0x7b,
	0x69, 0xea, 0xee, 0x82, 0x07, 0x15, 0xc1, 0xee, 0x2e, 0xd2, 0x8b, 0xc8, 0xb8, 0x7a, 0xf0, 0x52,
	0xd2, 0xe4, 0xb5, 0x0e, 0x24, 0x99, 0xec, 0x64, 0x52, 0xe8, 0x7f, 0xe8, 0x45, 0xf0, 0x2f, 0x08,
	0x52, 0xf0, 0x92, 0xa3, 0x47, 0x4f, 0x32, 0x2f, 0xd9, 0xb6, 0xea, 0x2e, 0x78, 0x99, 0x7e, 0xef,
	0x9b, 0xef, 0x7b, 0xfd, 0x66, 0xe6, 0x85, 0x74, 0x20, 0xd6, 0x6a, 0xe5, 0x26, 0x4a, 0x6a, 0x49,
	0xbb, 0x0a, 0x52, 0x99, 0x29, 0x1f, 0xdc, 0x14, 0xd4, 0x52, 0xf8, 0xe0, 0x2e, 0x8f, 0x1e, 0x0c,
	0x17, 0x42, 0x7f, 0xce, 0x66, 0xae, 0x2f, 0xa3, 0xd1, 0x42, 0x2e, 0xe4, 0x08, 0xb5, 0xb3, 0x6c,
	0x8e, 0x15, 0x16, 0x88, 0xca, 0x1e, 0xce, 0x05, 0xe9, 0xbe, 0x01, 0xfd, 0x3a, 0x49, 0xce, 0x4d,
	0xe3, 0xf7, 0xda, 0xd3, 0xc0, 0xe1, 0x92, 0x3e, 0x22, 0x7b, 0x49, 0xe8, 0x69, 0xdb, 0xea, 0x5b,
	0x83, 0xc6, 0xb8, 0x55, 0xe4, 0x0c, 0x6b, 0x8e, 0x2b, 0x65, 0xa4, 0x31, 0xcb, 0x44, 0x18, 0xd8,
	0x35, 0xdc, 0x6e, 0x17, 0x39, 0x2b, 0x09, 0x5e, 0xfe, 0x38, 0x1f, 0xc8, 0xdd, 0xbf, 0xbb, 0x7e,
	0x3c, 0xe6, 0x90, 0xd0, 0x97, 0x64, 0x4f, 0x68, 0x88, 0xb0, 0x6f, 0xe7, 0x78, 0xe0, 0x5e, 0x73,
	0x02, 0xf7, 0xdf, 0x3c, 0x09, 0x47, 0x97, 0xf3, 0xa3, 0x7e, 0x5d, 0xda, 0x84, 0x3e, 0x21, 0xcd,
	0xd4, 0xe0, 0xc9, 0x59, 0x15, 0xf8, 0xa0, 0xc8, 0x59, 0x0b, 0xa9, 0xa9, 0x08, 0xf8, 0x06, 0xd1,
	0x21, 0x69, 0x23, 0x7e, 0xeb, 0x45, 0x80, 0xe1, 0xdb, 0xe3, 0x5b, 0x45, 0xce, 0x48, 0x29, 0x88,
	0xbd, 0x08, 0xf8, 0x0e, 0xa6, 0xf7, 0x49, 0x3d, 0x53, 0xa1, 0x5d, 0x47, 0x61, 0xb3, 0xc8, 0x99,
	0x29, 0xb9, 0x59, 0xe8, 0x53, 0x82, 0x42, 0xe1, 0x4f, 0x7c, 0x19, 0xdb, 0x7b, 0xa8, 0xb8, 0x5d,
	0xe4, 0xac, 0x53, 0xb2, 0x53, 0xe1, 0xcb, 0x98, 0xef, 0x16, 0xf4, 0x84, 0x74, 0x82, 0x55, 0xec,
	0x45, 0x95, 0xa5, 0x81, 0x96, 0xc3, 0x22, 0x67, 0x07, 0x15, 0x5d, 0x7a, 0xfe, 0xa8, 0x4c, 0xe0,
	0x50, 0xca, 0xe4, 0x54, 0x66, 0xb1, 0xb6, 0xf7, 0xf1, 0x6c, 0x18, 0xd8, 0x90, 0x53, 0xdf, 0xb0,
	0x7c, 0x07, 0xd3, 0x57, 0xa4, 0x91, 0x5e, 0x88, 0x08, 0xec, 0x66, 0xdf, 0x1a, 0xd4, 0xc7, 0x03,
	0xf3, 0x30, 0xa9, 0x16, 0x11, 0xfc, 0xca, 0xd9, 0xc3, 0x85, 0x1c, 0xfa, 0x32, 0x8a, 0x64, 0x3c,
	0x0a, 0xc5, 0x4c, 0x79, 0x6a, 0x35, 0x32, 0x3b, 0xae, 0xd1, 0xf3, 0x52, 0x65, 0xfc, 0x80, 0xfe,
	0xd6, 0xd6, 0x0f, 0xff, 0xe5, 0x47, 0x95, 0x89, 0x8b, 0x03, 0x8a, 0xf7, 0xdb, 0xde, 0xde, 0x2f,
	0x92, 0xd5, 0xfd, 0x6e, 0x31, 0xbd, 0x47, 0x6a, 0x93, 0x33, 0x9b, 0xe0, 0xb1, 0xf6, 0x8b, 0x9c,
	0xd5, 0x44, 0xc0, 0x6b, 0x22, 0x70, 0xbe, 0x5a, 0xe4, 0xce, 0xf9, 0x7c, 0x0e, 0xbe, 0x16, 0x4b,
	0x78, 0x17, 0x7a, 0x7a, 0x2e, 0x55, 0x44, 0x5f, 0x90, 0x56, 0x52, 0xe1, 0xea, 0x99, 0xd9, 0xd5,
	0x5c, 0xfe, 0xcc, 0x59, 0x77, 0xe9, 0x85, 0x22, 0xf0, 0x34, 0x3c, 0x77, 0x14, 0x5c, 0x66, 0x42,
	0x41, 0xe0, 0xf0, 0x8d, 0x81, 0x9e, 0x92, 0xb6, 0x2f, 0xe3, 0x40, 0x68, 0x21, 0xe3, 0xea, 0xe5,
	0x1f, 0x9b, 0x64, 0x1b, 0x32, 0xbd, 0xa9, 0xc7, 0xd6, 0x47, 0x9f, 0x5d, 0xcd, 0x7d, 0x1d, 0xff,
	0xbe, 0xbf, 0x99, 0xfb, 0x9b, 0xbc, 0xe5, 0xee, 0xf8, 0xf0, 0xcb, 0xba, 0x67, 0x7d, 0x5b, 0xf7,
	0xac, 0xef, 0xeb, 0x9e, 0xf5, 0xa9, 0xb6, 0x3c, 0x9a, 0xed, 0xe3, 0xd7, 0x77, 0xf2, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x6f, 0x88, 0xbf, 0xde, 0xd0, 0x03, 0x00, 0x00,
}

func (m *GetAppEntryStateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAppEntryStateReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAppEntryStateReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Build != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x10
	}
	if m.Plat != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.Plat))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAppEntryStateV2Rep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAppEntryStateV2Rep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAppEntryStateV2Rep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEntry(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAppEntryStateRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAppEntryStateRep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAppEntryStateRep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ID != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x50
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0x4a
	}
	if m.ETime != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.ETime))
		i--
		dAtA[i] = 0x40
	}
	if m.STime != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.STime))
		i--
		dAtA[i] = 0x38
	}
	if m.LoopCount != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.LoopCount))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DynamicIcon) > 0 {
		i -= len(m.DynamicIcon)
		copy(dAtA[i:], m.DynamicIcon)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.DynamicIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StaticIcon) > 0 {
		i -= len(m.StaticIcon)
		copy(dAtA[i:], m.StaticIcon)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.StaticIcon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StateName) > 0 {
		i -= len(m.StateName)
		copy(dAtA[i:], m.StateName)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.StateName)))
		i--
		dAtA[i] = 0x12
	}
	if m.StateID != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.StateID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EffectivePlatform) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EffectivePlatform) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EffectivePlatform) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Build != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Condition) > 0 {
		i -= len(m.Condition)
		copy(dAtA[i:], m.Condition)
		i = encodeVarintEntry(dAtA, i, uint64(len(m.Condition)))
		i--
		dAtA[i] = 0x12
	}
	if m.Platform != 0 {
		i = encodeVarintEntry(dAtA, i, uint64(m.Platform))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintEntry(dAtA []byte, offset int, v uint64) int {
	offset -= sovEntry(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetAppEntryStateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Plat != 0 {
		n += 1 + sovEntry(uint64(m.Plat))
	}
	if m.Build != 0 {
		n += 1 + sovEntry(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAppEntryStateV2Rep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovEntry(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAppEntryStateRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StateID != 0 {
		n += 1 + sovEntry(uint64(m.StateID))
	}
	l = len(m.StateName)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	l = len(m.StaticIcon)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	l = len(m.DynamicIcon)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	if m.LoopCount != 0 {
		n += 1 + sovEntry(uint64(m.LoopCount))
	}
	if m.STime != 0 {
		n += 1 + sovEntry(uint64(m.STime))
	}
	if m.ETime != 0 {
		n += 1 + sovEntry(uint64(m.ETime))
	}
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	if m.ID != 0 {
		n += 1 + sovEntry(uint64(m.ID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EffectivePlatform) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Platform != 0 {
		n += 1 + sovEntry(uint64(m.Platform))
	}
	l = len(m.Condition)
	if l > 0 {
		n += 1 + l + sovEntry(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovEntry(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEntry(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEntry(x uint64) (n int) {
	return sovEntry(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetAppEntryStateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAppEntryStateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAppEntryStateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plat", wireType)
			}
			m.Plat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Plat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAppEntryStateV2Rep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAppEntryStateV2Rep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAppEntryStateV2Rep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &GetAppEntryStateRep{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAppEntryStateRep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAppEntryStateRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAppEntryStateRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateID", wireType)
			}
			m.StateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StaticIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopCount", wireType)
			}
			m.LoopCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoopCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field STime", wireType)
			}
			m.STime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.STime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ETime", wireType)
			}
			m.ETime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ETime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EffectivePlatform) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntry
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EffectivePlatform: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EffectivePlatform: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Condition", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntry
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntry
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEntry(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntry
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEntry(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEntry
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntry
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEntry
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEntry
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEntry
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEntry        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEntry          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEntry = fmt.Errorf("proto: unexpected end of group")
)
