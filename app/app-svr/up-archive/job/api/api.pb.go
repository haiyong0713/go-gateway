// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package api

/*
	package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UpArchiveJobClient is the client API for UpArchiveJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpArchiveJobClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type upArchiveJobClient struct {
	cc *grpc.ClientConn
}

func NewUpArchiveJobClient(cc *grpc.ClientConn) UpArchiveJobClient {
	return &upArchiveJobClient{cc}
}

func (c *upArchiveJobClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/up.archive.job.v1.UpArchiveJob/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpArchiveJobServer is the server API for UpArchiveJob service.
type UpArchiveJobServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterUpArchiveJobServer(s *grpc.Server, srv UpArchiveJobServer) {
	s.RegisterService(&_UpArchiveJob_serviceDesc, srv)
}

func _UpArchiveJob_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpArchiveJobServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/up.archive.job.v1.UpArchiveJob/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpArchiveJobServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpArchiveJob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "up.archive.job.v1.UpArchiveJob",
	HandlerType: (*UpArchiveJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _UpArchiveJob_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_1d9ee73d35da225e) }

var fileDescriptor_api_1d9ee73d35da225e = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2c, 0x2d, 0xd0, 0x4b, 0x2c, 0x4a, 0xce, 0xc8, 0x2c,
	0x4b, 0xd5, 0xcb, 0xca, 0x4f, 0xd2, 0x2b, 0x33, 0x94, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d,
	0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0xab, 0x4c, 0x2a, 0x4d, 0x03,
	0xf3, 0xc0, 0x1c, 0x30, 0x0b, 0x62, 0x82, 0x94, 0x74, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0x2a, 0x42,
	0x55, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x54, 0x52, 0x06, 0x2a, 0x99, 0x58, 0x90, 0xa9, 0x9f, 0x98,
	0x97, 0x97, 0x5f, 0x92, 0x58, 0x92, 0x99, 0x9f, 0x57, 0x0c, 0x91, 0x35, 0x72, 0xe3, 0xe2, 0x09,
	0x2d, 0x70, 0x84, 0xd8, 0xee, 0x95, 0x9f, 0x24, 0x64, 0xc6, 0xc5, 0x12, 0x90, 0x99, 0x97, 0x2e,
	0x24, 0xa6, 0x07, 0xd1, 0xa6, 0x07, 0x33, 0x53, 0xcf, 0x15, 0x64, 0xa6, 0x14, 0x0e, 0x71, 0x27,
	0xc9, 0x13, 0x0f, 0xe5, 0x18, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23,
	0x39, 0xc6, 0x19, 0x8f, 0xe5, 0x18, 0xa2, 0x98, 0x13, 0x0b, 0x32, 0x93, 0xd8, 0xc0, 0x4a, 0x8d,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x01, 0x46, 0x46, 0x52, 0xf3, 0x00, 0x00, 0x00,
}
