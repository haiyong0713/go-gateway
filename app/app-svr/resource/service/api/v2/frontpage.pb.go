// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: frontpage.proto

package v2

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type State_Enum int32

const (
	State_Normal   State_Enum = 0
	State_Offline  State_Enum = 1
	State_NotAudit State_Enum = 2
	State_Deleted  State_Enum = -1
)

var State_Enum_name = map[int32]string{
	0:  "Normal",
	1:  "Offline",
	2:  "NotAudit",
	-1: "Deleted",
}

var State_Enum_value = map[string]int32{
	"Normal":   0,
	"Offline":  1,
	"NotAudit": 2,
	"Deleted":  -1,
}

func (x State_Enum) String() string {
	return proto.EnumName(State_Enum_name, int32(x))
}

func (State_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8538a3db1a618972, []int{2, 0}
}

type GetFrontPageConfigReq struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip" form:"ip" validate:"required"`
	ResourceId           int64    `protobuf:"varint,2,opt,name=resourceId,proto3" json:"resourceId" form:"resourceId" validate:"min=0"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrontPageConfigReq) Reset()         { *m = GetFrontPageConfigReq{} }
func (m *GetFrontPageConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetFrontPageConfigReq) ProtoMessage()    {}
func (*GetFrontPageConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8538a3db1a618972, []int{0}
}
func (m *GetFrontPageConfigReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrontPageConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrontPageConfigReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFrontPageConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrontPageConfigReq.Merge(m, src)
}
func (m *GetFrontPageConfigReq) XXX_Size() int {
	return m.Size()
}
func (m *GetFrontPageConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrontPageConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrontPageConfigReq proto.InternalMessageInfo

func (m *GetFrontPageConfigReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GetFrontPageConfigReq) GetResourceId() int64 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

type FrontPageConfig struct {
	Id                   int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContractId           string     `protobuf:"bytes,3,opt,name=contractId,proto3" json:"contractId,omitempty"`
	ResourceId           int64      `protobuf:"varint,4,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	Pic                  string     `protobuf:"bytes,5,opt,name=pic,proto3" json:"pic,omitempty"`
	Litpic               string     `protobuf:"bytes,6,opt,name=litpic,proto3" json:"litpic,omitempty"`
	Url                  string     `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Rule                 string     `protobuf:"bytes,8,opt,name=rule,proto3" json:"rule,omitempty"`
	Weight               int64      `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Agency               string     `protobuf:"bytes,10,opt,name=agency,proto3" json:"agency,omitempty"`
	Price                float64    `protobuf:"fixed64,11,opt,name=price,proto3" json:"price,omitempty"`
	State                State_Enum `protobuf:"varint,12,opt,name=state,proto3,enum=resource.service.v2.State_Enum" json:"state,omitempty"`
	Atype                int32      `protobuf:"varint,13,opt,name=atype,proto3" json:"atype,omitempty"`
	Stime                int64      `protobuf:"varint,14,opt,name=stime,proto3" json:"stime,omitempty"`
	Etime                int64      `protobuf:"varint,15,opt,name=etime,proto3" json:"etime,omitempty"`
	IsSplitLayer         int32      `protobuf:"varint,16,opt,name=isSplitLayer,proto3" json:"isSplitLayer,omitempty"`
	SplitLayer           string     `protobuf:"bytes,17,opt,name=splitLayer,proto3" json:"splitLayer,omitempty"`
	LocPolicyGroupId     int64      `protobuf:"varint,18,opt,name=locPolicyGroupId,proto3" json:"locPolicyGroupId,omitempty"`
	Position             int64      `protobuf:"varint,19,opt,name=position,proto3" json:"position,omitempty"`
	Auto                 int32      `protobuf:"varint,20,opt,name=auto,proto3" json:"auto,omitempty"`
	Ctime                int64      `protobuf:"varint,21,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Cuser                string     `protobuf:"bytes,22,opt,name=cuser,proto3" json:"cuser,omitempty"`
	Mtime                int64      `protobuf:"varint,23,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Muser                string     `protobuf:"bytes,24,opt,name=muser,proto3" json:"muser,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FrontPageConfig) Reset()         { *m = FrontPageConfig{} }
func (m *FrontPageConfig) String() string { return proto.CompactTextString(m) }
func (*FrontPageConfig) ProtoMessage()    {}
func (*FrontPageConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8538a3db1a618972, []int{1}
}
func (m *FrontPageConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FrontPageConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FrontPageConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FrontPageConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrontPageConfig.Merge(m, src)
}
func (m *FrontPageConfig) XXX_Size() int {
	return m.Size()
}
func (m *FrontPageConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FrontPageConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FrontPageConfig proto.InternalMessageInfo

func (m *FrontPageConfig) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FrontPageConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FrontPageConfig) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *FrontPageConfig) GetResourceId() int64 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

func (m *FrontPageConfig) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *FrontPageConfig) GetLitpic() string {
	if m != nil {
		return m.Litpic
	}
	return ""
}

func (m *FrontPageConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *FrontPageConfig) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *FrontPageConfig) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *FrontPageConfig) GetAgency() string {
	if m != nil {
		return m.Agency
	}
	return ""
}

func (m *FrontPageConfig) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *FrontPageConfig) GetState() State_Enum {
	if m != nil {
		return m.State
	}
	return State_Normal
}

func (m *FrontPageConfig) GetAtype() int32 {
	if m != nil {
		return m.Atype
	}
	return 0
}

func (m *FrontPageConfig) GetStime() int64 {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *FrontPageConfig) GetEtime() int64 {
	if m != nil {
		return m.Etime
	}
	return 0
}

func (m *FrontPageConfig) GetIsSplitLayer() int32 {
	if m != nil {
		return m.IsSplitLayer
	}
	return 0
}

func (m *FrontPageConfig) GetSplitLayer() string {
	if m != nil {
		return m.SplitLayer
	}
	return ""
}

func (m *FrontPageConfig) GetLocPolicyGroupId() int64 {
	if m != nil {
		return m.LocPolicyGroupId
	}
	return 0
}

func (m *FrontPageConfig) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *FrontPageConfig) GetAuto() int32 {
	if m != nil {
		return m.Auto
	}
	return 0
}

func (m *FrontPageConfig) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *FrontPageConfig) GetCuser() string {
	if m != nil {
		return m.Cuser
	}
	return ""
}

func (m *FrontPageConfig) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *FrontPageConfig) GetMuser() string {
	if m != nil {
		return m.Muser
	}
	return ""
}

type State struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_8538a3db1a618972, []int{2}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_State.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return m.Size()
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("resource.service.v2.State_Enum", State_Enum_name, State_Enum_value)
	proto.RegisterType((*GetFrontPageConfigReq)(nil), "resource.service.v2.GetFrontPageConfigReq")
	proto.RegisterType((*FrontPageConfig)(nil), "resource.service.v2.FrontPageConfig")
	proto.RegisterType((*State)(nil), "resource.service.v2.State")
}

func init() { proto.RegisterFile("frontpage.proto", fileDescriptor_8538a3db1a618972) }

var fileDescriptor_8538a3db1a618972 = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcd, 0x4e, 0x14, 0x4f,
	0x14, 0xc5, 0xa9, 0x9e, 0x0f, 0xa0, 0xe0, 0x0f, 0xfd, 0x2f, 0x06, 0xac, 0x90, 0x38, 0x33, 0xe9,
	0x8d, 0x13, 0x13, 0x1b, 0x83, 0x1a, 0x13, 0x12, 0x17, 0x82, 0x4a, 0x48, 0x08, 0x92, 0xc6, 0x95,
	0xbb, 0xa6, 0xfa, 0x4e, 0x53, 0x49, 0x77, 0x57, 0x53, 0x5d, 0x3d, 0x66, 0xde, 0xc4, 0x27, 0xf0,
	0x59, 0x5c, 0xfa, 0x04, 0x13, 0x83, 0x3b, 0x96, 0xac, 0x4d, 0x34, 0x75, 0x8b, 0x91, 0xf6, 0x63,
	0x56, 0xf7, 0xfc, 0xea, 0xd4, 0xa9, 0x33, 0x37, 0x33, 0x74, 0x7d, 0xac, 0x55, 0x61, 0xca, 0x38,
	0x85, 0xb0, 0xd4, 0xca, 0x28, 0xb6, 0xa1, 0xa1, 0x52, 0xb5, 0x16, 0x10, 0x56, 0xa0, 0x27, 0x52,
	0x40, 0x38, 0xd9, 0xdd, 0x7e, 0x94, 0x4a, 0x73, 0x51, 0x9f, 0x87, 0x42, 0xe5, 0x3b, 0xa9, 0x4a,
	0xd5, 0x0e, 0x7a, 0xcf, 0xeb, 0x31, 0x2a, 0x14, 0x38, 0xb9, 0x8c, 0xe0, 0x13, 0xa1, 0x9b, 0x87,
	0x60, 0xde, 0xd8, 0xe8, 0xd3, 0x38, 0x85, 0x03, 0x55, 0x8c, 0x65, 0x1a, 0xc1, 0x25, 0x7b, 0x4e,
	0x3d, 0x59, 0x72, 0x32, 0x24, 0xa3, 0xe5, 0xfd, 0x07, 0xd7, 0xb3, 0x81, 0x27, 0xcb, 0x9b, 0xd9,
	0xe0, 0xfe, 0x58, 0xe9, 0x7c, 0x2f, 0x90, 0x65, 0x30, 0x9c, 0xc4, 0x99, 0x4c, 0x62, 0x03, 0x7b,
	0x81, 0x86, 0xcb, 0x5a, 0x6a, 0x48, 0x82, 0xc8, 0x93, 0x25, 0x7b, 0x47, 0xe9, 0xbc, 0xd8, 0x51,
	0xc2, 0xbd, 0x21, 0x19, 0xb5, 0xf6, 0x9f, 0x5e, 0xcf, 0x06, 0x0d, 0x7a, 0x33, 0x1b, 0x04, 0x2e,
	0xe8, 0x8e, 0x35, 0x03, 0x73, 0x59, 0xbc, 0x78, 0x1c, 0x44, 0x8d, 0x1b, 0xc1, 0xf7, 0x36, 0x5d,
	0xff, 0xa3, 0x25, 0x5b, 0xa3, 0x9e, 0x4c, 0xb0, 0x62, 0x2b, 0xf2, 0x64, 0xc2, 0x18, 0x6d, 0x17,
	0x71, 0x0e, 0xf8, 0xe6, 0x72, 0x84, 0x33, 0xeb, 0x53, 0x2a, 0x54, 0x61, 0x74, 0x2c, 0xcc, 0x51,
	0xc2, 0x5b, 0x78, 0xd2, 0x20, 0xf6, 0xbc, 0xd1, 0xb6, 0x8d, 0x59, 0x0d, 0xc2, 0x7c, 0xda, 0x2a,
	0xa5, 0xe0, 0x1d, 0xbc, 0x68, 0x47, 0xb6, 0x45, 0xbb, 0x99, 0x34, 0x16, 0x76, 0x11, 0xde, 0x2a,
	0xeb, 0xac, 0x75, 0xc6, 0x17, 0x9d, 0xb3, 0xd6, 0x99, 0xed, 0xa3, 0xeb, 0x0c, 0xf8, 0x92, 0xeb,
	0x63, 0x67, 0x7b, 0xfb, 0x03, 0xc8, 0xf4, 0xc2, 0xf0, 0x65, 0x7c, 0xeb, 0x56, 0x59, 0x1e, 0xa7,
	0x50, 0x88, 0x29, 0xa7, 0x2e, 0xd5, 0x29, 0xd6, 0xa3, 0x9d, 0x52, 0x4b, 0x01, 0x7c, 0x65, 0x48,
	0x46, 0x24, 0x72, 0x82, 0x3d, 0xa3, 0x9d, 0xca, 0xc4, 0x06, 0xf8, 0xea, 0x90, 0x8c, 0xd6, 0x76,
	0x07, 0xe1, 0x3f, 0x7e, 0x0a, 0xe1, 0x99, 0x75, 0x84, 0xaf, 0x8b, 0x3a, 0x8f, 0x9c, 0xdb, 0x86,
	0xc5, 0x66, 0x5a, 0x02, 0xff, 0x6f, 0x48, 0x46, 0x9d, 0xc8, 0x09, 0x4b, 0x2b, 0x23, 0x73, 0xe0,
	0x6b, 0xd8, 0xc8, 0x09, 0x4b, 0x01, 0xe9, 0xba, 0xa3, 0x28, 0x58, 0x40, 0x57, 0x65, 0x75, 0x56,
	0x66, 0xd2, 0x1c, 0xc7, 0x53, 0xd0, 0xdc, 0xc7, 0xa0, 0xdf, 0x98, 0x5d, 0x69, 0x75, 0xe7, 0xf8,
	0xdf, 0xad, 0xfc, 0x8e, 0xb0, 0x87, 0xd4, 0xcf, 0x94, 0x38, 0x55, 0x99, 0x14, 0xd3, 0x43, 0xad,
	0xea, 0xf2, 0x28, 0xe1, 0x0c, 0x1f, 0xf9, 0x8b, 0xb3, 0x6d, 0xba, 0x54, 0xaa, 0x4a, 0x1a, 0xa9,
	0x0a, 0xbe, 0x81, 0x9e, 0x5f, 0xda, 0xae, 0x37, 0xae, 0x8d, 0xe2, 0x3d, 0xec, 0x80, 0xb3, 0x6d,
	0x2d, 0xb0, 0xf5, 0xa6, 0x6b, 0x2d, 0xe6, 0xdf, 0x45, 0xd4, 0x15, 0x68, 0xbe, 0x85, 0x65, 0x9c,
	0xb0, 0x34, 0x47, 0xef, 0x3d, 0xe7, 0xcd, 0xe7, 0xde, 0x1c, 0xbd, 0xdc, 0x79, 0x51, 0x04, 0xc7,
	0xb4, 0x83, 0xeb, 0x0c, 0x0e, 0x68, 0xdb, 0x6e, 0x94, 0x51, 0xda, 0x3d, 0x51, 0x3a, 0x8f, 0x33,
	0x7f, 0x81, 0xad, 0xd0, 0xc5, 0xb7, 0xe3, 0x71, 0x26, 0x0b, 0xf0, 0x09, 0x5b, 0xa5, 0x4b, 0x27,
	0xca, 0xbc, 0xac, 0x13, 0x69, 0x7c, 0x8f, 0xf5, 0xe8, 0xe2, 0x2b, 0xc8, 0xc0, 0x40, 0xe2, 0xff,
	0x98, 0x7f, 0xc8, 0x7e, 0xef, 0xf3, 0x55, 0x9f, 0x7c, 0xb9, 0xea, 0x93, 0xaf, 0x57, 0x7d, 0xf2,
	0xf1, 0x5b, 0x7f, 0xe1, 0xbd, 0x37, 0xd9, 0x3d, 0xef, 0xe2, 0x5f, 0xf2, 0xc9, 0xcf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5e, 0x8b, 0x50, 0xf1, 0xe9, 0x03, 0x00, 0x00,
}

func (m *GetFrontPageConfigReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrontPageConfigReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFrontPageConfigReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ResourceId != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.ResourceId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FrontPageConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FrontPageConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FrontPageConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Muser) > 0 {
		i -= len(m.Muser)
		copy(dAtA[i:], m.Muser)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Muser)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.Mtime != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Mtime))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if len(m.Cuser) > 0 {
		i -= len(m.Cuser)
		copy(dAtA[i:], m.Cuser)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Cuser)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if m.Ctime != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Ctime))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.Auto != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Auto))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.Position != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.LocPolicyGroupId != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.LocPolicyGroupId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if len(m.SplitLayer) > 0 {
		i -= len(m.SplitLayer)
		copy(dAtA[i:], m.SplitLayer)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.SplitLayer)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.IsSplitLayer != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.IsSplitLayer))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.Etime != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Etime))
		i--
		dAtA[i] = 0x78
	}
	if m.Stime != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x70
	}
	if m.Atype != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Atype))
		i--
		dAtA[i] = 0x68
	}
	if m.State != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x60
	}
	if m.Price != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Price))))
		i--
		dAtA[i] = 0x59
	}
	if len(m.Agency) > 0 {
		i -= len(m.Agency)
		copy(dAtA[i:], m.Agency)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Agency)))
		i--
		dAtA[i] = 0x52
	}
	if m.Weight != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Weight))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Rule) > 0 {
		i -= len(m.Rule)
		copy(dAtA[i:], m.Rule)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Rule)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Litpic) > 0 {
		i -= len(m.Litpic)
		copy(dAtA[i:], m.Litpic)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Litpic)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Pic) > 0 {
		i -= len(m.Pic)
		copy(dAtA[i:], m.Pic)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Pic)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ResourceId != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.ResourceId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ContractId) > 0 {
		i -= len(m.ContractId)
		copy(dAtA[i:], m.ContractId)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.ContractId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintFrontpage(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintFrontpage(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *State) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *State) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *State) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintFrontpage(dAtA []byte, offset int, v uint64) int {
	offset -= sovFrontpage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetFrontPageConfigReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Ip)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	if m.ResourceId != 0 {
		n += 1 + sovFrontpage(uint64(m.ResourceId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FrontPageConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovFrontpage(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	l = len(m.ContractId)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	if m.ResourceId != 0 {
		n += 1 + sovFrontpage(uint64(m.ResourceId))
	}
	l = len(m.Pic)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	l = len(m.Litpic)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	l = len(m.Rule)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	if m.Weight != 0 {
		n += 1 + sovFrontpage(uint64(m.Weight))
	}
	l = len(m.Agency)
	if l > 0 {
		n += 1 + l + sovFrontpage(uint64(l))
	}
	if m.Price != 0 {
		n += 9
	}
	if m.State != 0 {
		n += 1 + sovFrontpage(uint64(m.State))
	}
	if m.Atype != 0 {
		n += 1 + sovFrontpage(uint64(m.Atype))
	}
	if m.Stime != 0 {
		n += 1 + sovFrontpage(uint64(m.Stime))
	}
	if m.Etime != 0 {
		n += 1 + sovFrontpage(uint64(m.Etime))
	}
	if m.IsSplitLayer != 0 {
		n += 2 + sovFrontpage(uint64(m.IsSplitLayer))
	}
	l = len(m.SplitLayer)
	if l > 0 {
		n += 2 + l + sovFrontpage(uint64(l))
	}
	if m.LocPolicyGroupId != 0 {
		n += 2 + sovFrontpage(uint64(m.LocPolicyGroupId))
	}
	if m.Position != 0 {
		n += 2 + sovFrontpage(uint64(m.Position))
	}
	if m.Auto != 0 {
		n += 2 + sovFrontpage(uint64(m.Auto))
	}
	if m.Ctime != 0 {
		n += 2 + sovFrontpage(uint64(m.Ctime))
	}
	l = len(m.Cuser)
	if l > 0 {
		n += 2 + l + sovFrontpage(uint64(l))
	}
	if m.Mtime != 0 {
		n += 2 + sovFrontpage(uint64(m.Mtime))
	}
	l = len(m.Muser)
	if l > 0 {
		n += 2 + l + sovFrontpage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *State) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovFrontpage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFrontpage(x uint64) (n int) {
	return sovFrontpage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetFrontPageConfigReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFrontpage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrontPageConfigReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrontPageConfigReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			m.ResourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFrontpage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FrontPageConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFrontpage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FrontPageConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FrontPageConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			m.ResourceId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResourceId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Litpic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Litpic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Agency", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Agency = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Price = float64(math.Float64frombits(v))
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= State_Enum(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Atype", wireType)
			}
			m.Atype = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Atype |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Etime", wireType)
			}
			m.Etime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Etime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSplitLayer", wireType)
			}
			m.IsSplitLayer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsSplitLayer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SplitLayer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SplitLayer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocPolicyGroupId", wireType)
			}
			m.LocPolicyGroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocPolicyGroupId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auto", wireType)
			}
			m.Auto = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Auto |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			m.Ctime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ctime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cuser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cuser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			m.Mtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mtime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFrontpage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFrontpage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Muser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFrontpage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *State) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFrontpage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: State: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: State: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipFrontpage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFrontpage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFrontpage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFrontpage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFrontpage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFrontpage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFrontpage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFrontpage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFrontpage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFrontpage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFrontpage = fmt.Errorf("proto: unexpected end of group")
)
