// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/app-interface/api-dependence/ott-service/api.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BiliLinkEntryReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Platform             string   `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	MobiApp              string   `protobuf:"bytes,3,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	Build                int64    `protobuf:"varint,4,opt,name=build,proto3" json:"build,omitempty"`
	Channel              string   `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	BiliLinkNew          int64    `protobuf:"varint,6,opt,name=bili_link_new,json=biliLinkNew,proto3" json:"bili_link_new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiliLinkEntryReq) Reset()         { *m = BiliLinkEntryReq{} }
func (m *BiliLinkEntryReq) String() string { return proto.CompactTextString(m) }
func (*BiliLinkEntryReq) ProtoMessage()    {}
func (*BiliLinkEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fed0814fcb7e353, []int{0}
}
func (m *BiliLinkEntryReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BiliLinkEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BiliLinkEntryReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BiliLinkEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiliLinkEntryReq.Merge(m, src)
}
func (m *BiliLinkEntryReq) XXX_Size() int {
	return m.Size()
}
func (m *BiliLinkEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BiliLinkEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_BiliLinkEntryReq proto.InternalMessageInfo

func (m *BiliLinkEntryReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *BiliLinkEntryReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *BiliLinkEntryReq) GetMobiApp() string {
	if m != nil {
		return m.MobiApp
	}
	return ""
}

func (m *BiliLinkEntryReq) GetBuild() int64 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *BiliLinkEntryReq) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *BiliLinkEntryReq) GetBiliLinkNew() int64 {
	if m != nil {
		return m.BiliLinkNew
	}
	return 0
}

type BiliLinkEntryReply struct {
	// true:展示  false:不展示
	Show                 bool            `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	BiliLinkBubble       *BiliLinkBubble `protobuf:"bytes,2,opt,name=bili_link_bubble,json=biliLinkBubble,proto3" json:"bili_link_bubble,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BiliLinkEntryReply) Reset()         { *m = BiliLinkEntryReply{} }
func (m *BiliLinkEntryReply) String() string { return proto.CompactTextString(m) }
func (*BiliLinkEntryReply) ProtoMessage()    {}
func (*BiliLinkEntryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fed0814fcb7e353, []int{1}
}
func (m *BiliLinkEntryReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BiliLinkEntryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BiliLinkEntryReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BiliLinkEntryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiliLinkEntryReply.Merge(m, src)
}
func (m *BiliLinkEntryReply) XXX_Size() int {
	return m.Size()
}
func (m *BiliLinkEntryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BiliLinkEntryReply.DiscardUnknown(m)
}

var xxx_messageInfo_BiliLinkEntryReply proto.InternalMessageInfo

func (m *BiliLinkEntryReply) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *BiliLinkEntryReply) GetBiliLinkBubble() *BiliLinkBubble {
	if m != nil {
		return m.BiliLinkBubble
	}
	return nil
}

type BiliLinkBubble struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Pic                  string   `protobuf:"bytes,3,opt,name=pic,proto3" json:"pic,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiliLinkBubble) Reset()         { *m = BiliLinkBubble{} }
func (m *BiliLinkBubble) String() string { return proto.CompactTextString(m) }
func (*BiliLinkBubble) ProtoMessage()    {}
func (*BiliLinkBubble) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fed0814fcb7e353, []int{2}
}
func (m *BiliLinkBubble) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BiliLinkBubble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BiliLinkBubble.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BiliLinkBubble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiliLinkBubble.Merge(m, src)
}
func (m *BiliLinkBubble) XXX_Size() int {
	return m.Size()
}
func (m *BiliLinkBubble) XXX_DiscardUnknown() {
	xxx_messageInfo_BiliLinkBubble.DiscardUnknown(m)
}

var xxx_messageInfo_BiliLinkBubble proto.InternalMessageInfo

func (m *BiliLinkBubble) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BiliLinkBubble) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BiliLinkBubble) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *BiliLinkBubble) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type BiliLinkReportReq struct {
	ActType              int64    `protobuf:"varint,1,opt,name=act_type,json=actType,proto3" json:"act_type,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Mid                  int64    `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiliLinkReportReq) Reset()         { *m = BiliLinkReportReq{} }
func (m *BiliLinkReportReq) String() string { return proto.CompactTextString(m) }
func (*BiliLinkReportReq) ProtoMessage()    {}
func (*BiliLinkReportReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fed0814fcb7e353, []int{3}
}
func (m *BiliLinkReportReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BiliLinkReportReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BiliLinkReportReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BiliLinkReportReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiliLinkReportReq.Merge(m, src)
}
func (m *BiliLinkReportReq) XXX_Size() int {
	return m.Size()
}
func (m *BiliLinkReportReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BiliLinkReportReq.DiscardUnknown(m)
}

var xxx_messageInfo_BiliLinkReportReq proto.InternalMessageInfo

func (m *BiliLinkReportReq) GetActType() int64 {
	if m != nil {
		return m.ActType
	}
	return 0
}

func (m *BiliLinkReportReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BiliLinkReportReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

type BiliLinkReportReply struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BiliLinkReportReply) Reset()         { *m = BiliLinkReportReply{} }
func (m *BiliLinkReportReply) String() string { return proto.CompactTextString(m) }
func (*BiliLinkReportReply) ProtoMessage()    {}
func (*BiliLinkReportReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fed0814fcb7e353, []int{4}
}
func (m *BiliLinkReportReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BiliLinkReportReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BiliLinkReportReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BiliLinkReportReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BiliLinkReportReply.Merge(m, src)
}
func (m *BiliLinkReportReply) XXX_Size() int {
	return m.Size()
}
func (m *BiliLinkReportReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BiliLinkReportReply.DiscardUnknown(m)
}

var xxx_messageInfo_BiliLinkReportReply proto.InternalMessageInfo

func (m *BiliLinkReportReply) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*BiliLinkEntryReq)(nil), "ott.service.v1.BiliLinkEntryReq")
	proto.RegisterType((*BiliLinkEntryReply)(nil), "ott.service.v1.BiliLinkEntryReply")
	proto.RegisterType((*BiliLinkBubble)(nil), "ott.service.v1.BiliLinkBubble")
	proto.RegisterType((*BiliLinkReportReq)(nil), "ott.service.v1.BiliLinkReportReq")
	proto.RegisterType((*BiliLinkReportReply)(nil), "ott.service.v1.BiliLinkReportReply")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/app-interface/api-dependence/ott-service/api.proto", fileDescriptor_0fed0814fcb7e353)
}

var fileDescriptor_0fed0814fcb7e353 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x26, 0xed, 0x6e, 0x7f, 0x66, 0xb5, 0x55, 0x31, 0x3f, 0xca, 0xf6, 0x50, 0x95, 0x70, 0xd9,
	0x4b, 0x12, 0xb1, 0x1c, 0x39, 0x51, 0x09, 0x09, 0x24, 0x04, 0xab, 0x50, 0x24, 0x40, 0x48, 0x95,
	0xed, 0xb8, 0xa9, 0xb5, 0x6e, 0x6c, 0x12, 0xb7, 0x55, 0xde, 0x84, 0xb7, 0xe0, 0x09, 0xb8, 0x73,
	0xe4, 0x11, 0x50, 0x79, 0x11, 0x64, 0xc7, 0xcd, 0xd2, 0x95, 0x56, 0x7b, 0x70, 0x32, 0x5f, 0xfc,
	0xcd, 0xcc, 0x97, 0x6f, 0x6c, 0x78, 0x93, 0xc9, 0x30, 0xc3, 0x9a, 0x6d, 0x71, 0x15, 0x63, 0xa5,
	0xcc, 0x0a, 0xcb, 0x4d, 0x61, 0xdf, 0x3c, 0xd7, 0xac, 0x58, 0x60, 0xca, 0x62, 0xac, 0x78, 0x98,
	0x32, 0xc5, 0xf2, 0x94, 0xe5, 0x94, 0xc5, 0x52, 0xeb, 0xb0, 0x64, 0xc5, 0x86, 0xd7, 0x5b, 0x91,
	0x2a, 0xa4, 0x96, 0x68, 0x20, 0xb5, 0x8e, 0xdc, 0xe7, 0x68, 0xf3, 0x6c, 0x14, 0x66, 0x5c, 0x2f,
	0xd7, 0x24, 0xa2, 0x72, 0x15, 0x67, 0x32, 0x93, 0xb1, 0xa5, 0x91, 0xf5, 0xc2, 0x22, 0x0b, 0x6c,
	0x54, 0xa7, 0x07, 0x3f, 0x3c, 0x18, 0x4e, 0xb9, 0xe0, 0x6f, 0x79, 0x7e, 0xf5, 0x2a, 0xd7, 0x45,
	0x95, 0xb0, 0x6f, 0x68, 0x08, 0xed, 0x15, 0x4f, 0x7d, 0x6f, 0xe2, 0x9d, 0xb7, 0x13, 0x13, 0xa2,
	0x11, 0xf4, 0x94, 0xc0, 0x7a, 0x21, 0x8b, 0x95, 0xdf, 0x9a, 0x78, 0xe7, 0xfd, 0xa4, 0xc1, 0xe8,
	0x0c, 0x7a, 0x2b, 0x49, 0xf8, 0x1c, 0x2b, 0xe5, 0xb7, 0xed, 0x5e, 0xd7, 0xe0, 0x97, 0x4a, 0xa1,
	0x87, 0x70, 0x4c, 0xd6, 0x5c, 0xa4, 0xfe, 0x91, 0x2d, 0x55, 0x03, 0xe4, 0x43, 0x97, 0x2e, 0x71,
	0x9e, 0x33, 0xe1, 0x1f, 0xd7, 0x7c, 0x07, 0x51, 0x00, 0xa7, 0x84, 0x0b, 0x3e, 0x17, 0x3c, 0xbf,
	0x9a, 0xe7, 0x6c, 0xeb, 0x77, 0x6c, 0xde, 0x09, 0x71, 0x0a, 0xdf, 0xb1, 0x6d, 0x50, 0x00, 0xba,
	0x21, 0x58, 0x89, 0x0a, 0x21, 0x38, 0x2a, 0x97, 0x72, 0x6b, 0x35, 0xf7, 0x12, 0x1b, 0xa3, 0xd7,
	0x30, 0xbc, 0xae, 0x46, 0xd6, 0x84, 0x08, 0x66, 0xc5, 0x9f, 0x5c, 0x8c, 0xa3, 0x43, 0xd7, 0xa2,
	0x7d, 0xc5, 0xa9, 0x65, 0x25, 0x03, 0x72, 0x80, 0x83, 0xaf, 0x30, 0x38, 0x64, 0xa0, 0x01, 0xb4,
	0x1a, 0x87, 0x5a, 0x3c, 0x35, 0x7f, 0xaa, 0xb9, 0x76, 0x0d, 0xfa, 0x49, 0x0d, 0x8c, 0x91, 0x8a,
	0x53, 0xe7, 0x8a, 0x09, 0x8d, 0xce, 0x94, 0x95, 0xd4, 0x1a, 0xd2, 0x4f, 0x6c, 0x1c, 0x5c, 0xc2,
	0xfd, 0x7d, 0xf5, 0x84, 0x29, 0x59, 0x68, 0x33, 0x83, 0x33, 0xe8, 0x61, 0xaa, 0xe7, 0xba, 0x52,
	0xcc, 0xb5, 0xe9, 0x62, 0xaa, 0x67, 0x95, 0xda, 0xf7, 0x6e, 0x35, 0xbd, 0xdd, 0xb8, 0xda, 0xcd,
	0xb8, 0x82, 0x10, 0x1e, 0xdc, 0xac, 0x68, 0x4c, 0x7a, 0x0c, 0x9d, 0x82, 0x95, 0x6b, 0xa1, 0x9d,
	0x4d, 0x0e, 0x5d, 0xfc, 0xf4, 0x00, 0xde, 0xcf, 0x66, 0x1f, 0x6a, 0x3f, 0xd0, 0x47, 0x38, 0x3d,
	0x70, 0x18, 0x4d, 0x6e, 0xb3, 0x6b, 0x7f, 0x62, 0x46, 0xc1, 0x1d, 0x0c, 0xd3, 0xfd, 0xd3, 0xb5,
	0x89, 0xb5, 0x28, 0xf4, 0xe4, 0xb6, 0xac, 0xc6, 0x86, 0xd1, 0xd3, 0xbb, 0x28, 0x4a, 0x54, 0xd3,
	0xcf, 0xbf, 0x76, 0x63, 0xef, 0xf7, 0x6e, 0xec, 0xfd, 0xd9, 0x8d, 0xbd, 0xef, 0x7f, 0xc7, 0xf7,
	0xe0, 0x11, 0x95, 0xab, 0x88, 0x60, 0xc5, 0xcb, 0xff, 0xf3, 0x2f, 0xbd, 0x2f, 0x51, 0xc6, 0x75,
	0x64, 0xa6, 0x6b, 0x56, 0x44, 0x65, 0x6c, 0x49, 0xf5, 0x33, 0xcc, 0xa4, 0xb9, 0x64, 0xb1, 0x63,
	0xbf, 0xc0, 0x8a, 0x93, 0x8e, 0xbd, 0x26, 0xcf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x46, 0x7f,
	0x96, 0xe0, 0xb2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OTTServiceClient is the client API for OTTService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OTTServiceClient interface {
	// 必连入口展示开关
	BiliLinkEntry(ctx context.Context, in *BiliLinkEntryReq, opts ...grpc.CallOption) (*BiliLinkEntryReply, error)
	// 必连活动事件上报
	BiliLinkReport(ctx context.Context, in *BiliLinkReportReq, opts ...grpc.CallOption) (*BiliLinkReportReply, error)
}

type oTTServiceClient struct {
	cc *grpc.ClientConn
}

func NewOTTServiceClient(cc *grpc.ClientConn) OTTServiceClient {
	return &oTTServiceClient{cc}
}

func (c *oTTServiceClient) BiliLinkEntry(ctx context.Context, in *BiliLinkEntryReq, opts ...grpc.CallOption) (*BiliLinkEntryReply, error) {
	out := new(BiliLinkEntryReply)
	err := c.cc.Invoke(ctx, "/ott.service.v1.OTTService/BiliLinkEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oTTServiceClient) BiliLinkReport(ctx context.Context, in *BiliLinkReportReq, opts ...grpc.CallOption) (*BiliLinkReportReply, error) {
	out := new(BiliLinkReportReply)
	err := c.cc.Invoke(ctx, "/ott.service.v1.OTTService/BiliLinkReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OTTServiceServer is the server API for OTTService service.
type OTTServiceServer interface {
	// 必连入口展示开关
	BiliLinkEntry(context.Context, *BiliLinkEntryReq) (*BiliLinkEntryReply, error)
	// 必连活动事件上报
	BiliLinkReport(context.Context, *BiliLinkReportReq) (*BiliLinkReportReply, error)
}

// UnimplementedOTTServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOTTServiceServer struct {
}

func (*UnimplementedOTTServiceServer) BiliLinkEntry(ctx context.Context, req *BiliLinkEntryReq) (*BiliLinkEntryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BiliLinkEntry not implemented")
}
func (*UnimplementedOTTServiceServer) BiliLinkReport(ctx context.Context, req *BiliLinkReportReq) (*BiliLinkReportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BiliLinkReport not implemented")
}

func RegisterOTTServiceServer(s *grpc.Server, srv OTTServiceServer) {
	s.RegisterService(&_OTTService_serviceDesc, srv)
}

func _OTTService_BiliLinkEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiliLinkEntryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTTServiceServer).BiliLinkEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ott.service.v1.OTTService/BiliLinkEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTTServiceServer).BiliLinkEntry(ctx, req.(*BiliLinkEntryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OTTService_BiliLinkReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BiliLinkReportReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTTServiceServer).BiliLinkReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ott.service.v1.OTTService/BiliLinkReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTTServiceServer).BiliLinkReport(ctx, req.(*BiliLinkReportReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OTTService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ott.service.v1.OTTService",
	HandlerType: (*OTTServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BiliLinkEntry",
			Handler:    _OTTService_BiliLinkEntry_Handler,
		},
		{
			MethodName: "BiliLinkReport",
			Handler:    _OTTService_BiliLinkReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/app-svr/app-interface/api-dependence/ott-service/api.proto",
}

func (m *BiliLinkEntryReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BiliLinkEntryReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BiliLinkEntryReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BiliLinkNew != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BiliLinkNew))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Build != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x20
	}
	if len(m.MobiApp) > 0 {
		i -= len(m.MobiApp)
		copy(dAtA[i:], m.MobiApp)
		i = encodeVarintApi(dAtA, i, uint64(len(m.MobiApp)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Platform) > 0 {
		i -= len(m.Platform)
		copy(dAtA[i:], m.Platform)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Platform)))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BiliLinkEntryReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BiliLinkEntryReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BiliLinkEntryReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BiliLinkBubble != nil {
		{
			size, err := m.BiliLinkBubble.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Show {
		i--
		if m.Show {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BiliLinkBubble) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BiliLinkBubble) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BiliLinkBubble) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Pic) > 0 {
		i -= len(m.Pic)
		copy(dAtA[i:], m.Pic)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Pic)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BiliLinkReportReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BiliLinkReportReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BiliLinkReportReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if m.ActType != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ActType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BiliLinkReportReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BiliLinkReportReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BiliLinkReportReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BiliLinkEntryReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.MobiApp)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.BiliLinkNew != 0 {
		n += 1 + sovApi(uint64(m.BiliLinkNew))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BiliLinkEntryReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Show {
		n += 2
	}
	if m.BiliLinkBubble != nil {
		l = m.BiliLinkBubble.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BiliLinkBubble) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Pic)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BiliLinkReportReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ActType != 0 {
		n += 1 + sovApi(uint64(m.ActType))
	}
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BiliLinkReportReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BiliLinkEntryReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiliLinkEntryReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiliLinkEntryReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobiApp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobiApp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BiliLinkNew", wireType)
			}
			m.BiliLinkNew = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BiliLinkNew |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BiliLinkEntryReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiliLinkEntryReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiliLinkEntryReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Show", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Show = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BiliLinkBubble", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BiliLinkBubble == nil {
				m.BiliLinkBubble = &BiliLinkBubble{}
			}
			if err := m.BiliLinkBubble.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BiliLinkBubble) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiliLinkBubble: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiliLinkBubble: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BiliLinkReportReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiliLinkReportReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiliLinkReportReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActType", wireType)
			}
			m.ActType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BiliLinkReportReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BiliLinkReportReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BiliLinkReportReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
