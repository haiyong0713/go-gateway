// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x4a, 0x2c, 0x28, 0xd0, 0x4b, 0x4b, 0x4d, 0x4d, 0xd1,
	0xcb, 0x4b, 0xd7, 0x4b, 0xce, 0x49, 0x2c, 0xca, 0x4c, 0xab, 0xd4, 0xcb, 0xca, 0x4f, 0xd2, 0x2b,
	0x33, 0x94, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0xab, 0x4c, 0x2a, 0x4d, 0xd3,
	0x4f, 0xcd, 0x2d, 0x28, 0xa9, 0x84, 0x68, 0x34, 0xf2, 0xe5, 0x12, 0x76, 0x2c, 0x28, 0x70, 0x4b,
	0x4d, 0x4d, 0xf1, 0x73, 0x77, 0x86, 0xe8, 0xf3, 0xca, 0x4f, 0x12, 0x32, 0xe3, 0x62, 0x09, 0xc8,
	0xcc, 0x4b, 0x17, 0x12, 0xd3, 0x83, 0x68, 0xd6, 0x83, 0x69, 0xd6, 0x73, 0x05, 0x69, 0x96, 0xc2,
	0x21, 0xee, 0x24, 0x78, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31,
	0x46, 0x31, 0x27, 0x16, 0x64, 0x26, 0xb1, 0x81, 0x95, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x6f, 0xbf, 0xff, 0x2f, 0xae, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppFeedNGClarifyJobClient is the client API for AppFeedNGClarifyJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppFeedNGClarifyJobClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type appFeedNGClarifyJobClient struct {
	cc *grpc.ClientConn
}

func NewAppFeedNGClarifyJobClient(cc *grpc.ClientConn) AppFeedNGClarifyJobClient {
	return &appFeedNGClarifyJobClient{cc}
}

func (c *appFeedNGClarifyJobClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/app.feed.ng.clarify.job.v1.AppFeedNGClarifyJob/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppFeedNGClarifyJobServer is the server API for AppFeedNGClarifyJob service.
type AppFeedNGClarifyJobServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterAppFeedNGClarifyJobServer(s *grpc.Server, srv AppFeedNGClarifyJobServer) {
	s.RegisterService(&_AppFeedNGClarifyJob_serviceDesc, srv)
}

func _AppFeedNGClarifyJob_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppFeedNGClarifyJobServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.feed.ng.clarify.job.v1.AppFeedNGClarifyJob/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppFeedNGClarifyJobServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppFeedNGClarifyJob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.feed.ng.clarify.job.v1.AppFeedNGClarifyJob",
	HandlerType: (*AppFeedNGClarifyJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _AppFeedNGClarifyJob_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
