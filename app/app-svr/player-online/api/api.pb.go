// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/player-online/api/api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NoReply
type NoReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoReply) Reset()         { *m = NoReply{} }
func (m *NoReply) String() string { return proto.CompactTextString(m) }
func (*NoReply) ProtoMessage()    {}
func (*NoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{0}
}
func (m *NoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoReply.Merge(m, src)
}
func (m *NoReply) XXX_Size() int {
	return m.Size()
}
func (m *NoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NoReply.DiscardUnknown(m)
}

var xxx_messageInfo_NoReply proto.InternalMessageInfo

type ReportWatchReq struct {
	// aid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// app or web
	Biz string `protobuf:"bytes,2,opt,name=biz,proto3" json:"biz,omitempty"`
	// buvid
	Buvid                string   `protobuf:"bytes,3,opt,name=buvid,proto3" json:"buvid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportWatchReq) Reset()         { *m = ReportWatchReq{} }
func (m *ReportWatchReq) String() string { return proto.CompactTextString(m) }
func (*ReportWatchReq) ProtoMessage()    {}
func (*ReportWatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{1}
}
func (m *ReportWatchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportWatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportWatchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportWatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportWatchReq.Merge(m, src)
}
func (m *ReportWatchReq) XXX_Size() int {
	return m.Size()
}
func (m *ReportWatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportWatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReportWatchReq proto.InternalMessageInfo

func (m *ReportWatchReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ReportWatchReq) GetBiz() string {
	if m != nil {
		return m.Biz
	}
	return ""
}

func (m *ReportWatchReq) GetBuvid() string {
	if m != nil {
		return m.Buvid
	}
	return ""
}

type PremiereInfoReq struct {
	// aid
	Aid                  int64    `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PremiereInfoReq) Reset()         { *m = PremiereInfoReq{} }
func (m *PremiereInfoReq) String() string { return proto.CompactTextString(m) }
func (*PremiereInfoReq) ProtoMessage()    {}
func (*PremiereInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{2}
}
func (m *PremiereInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PremiereInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PremiereInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PremiereInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PremiereInfoReq.Merge(m, src)
}
func (m *PremiereInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *PremiereInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PremiereInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_PremiereInfoReq proto.InternalMessageInfo

func (m *PremiereInfoReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type PremiereInfoReply struct {
	// 期间共xxx人参与，发生xxx次互动
	PremiereOverText string `protobuf:"bytes,1,opt,name=premiere_over_text,json=premiereOverText,proto3" json:"premiere_over_text,omitempty"`
	// xxx人参与
	Participant int64 `protobuf:"varint,2,opt,name=participant,proto3" json:"participant,omitempty"`
	// xxx次互动
	Interaction          int64    `protobuf:"varint,3,opt,name=interaction,proto3" json:"interaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PremiereInfoReply) Reset()         { *m = PremiereInfoReply{} }
func (m *PremiereInfoReply) String() string { return proto.CompactTextString(m) }
func (*PremiereInfoReply) ProtoMessage()    {}
func (*PremiereInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{3}
}
func (m *PremiereInfoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PremiereInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PremiereInfoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PremiereInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PremiereInfoReply.Merge(m, src)
}
func (m *PremiereInfoReply) XXX_Size() int {
	return m.Size()
}
func (m *PremiereInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PremiereInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_PremiereInfoReply proto.InternalMessageInfo

func (m *PremiereInfoReply) GetPremiereOverText() string {
	if m != nil {
		return m.PremiereOverText
	}
	return ""
}

func (m *PremiereInfoReply) GetParticipant() int64 {
	if m != nil {
		return m.Participant
	}
	return 0
}

func (m *PremiereInfoReply) GetInteraction() int64 {
	if m != nil {
		return m.Interaction
	}
	return 0
}

type PlayerOnlineReq struct {
	// aid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// true为新的播放行为
	PlayOpen             bool     `protobuf:"varint,3,opt,name=play_open,json=playOpen,proto3" json:"play_open,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerOnlineReq) Reset()         { *m = PlayerOnlineReq{} }
func (m *PlayerOnlineReq) String() string { return proto.CompactTextString(m) }
func (*PlayerOnlineReq) ProtoMessage()    {}
func (*PlayerOnlineReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{4}
}
func (m *PlayerOnlineReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerOnlineReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerOnlineReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerOnlineReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerOnlineReq.Merge(m, src)
}
func (m *PlayerOnlineReq) XXX_Size() int {
	return m.Size()
}
func (m *PlayerOnlineReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerOnlineReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerOnlineReq proto.InternalMessageInfo

func (m *PlayerOnlineReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *PlayerOnlineReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *PlayerOnlineReq) GetPlayOpen() bool {
	if m != nil {
		return m.PlayOpen
	}
	return false
}

type PlayerOnlineReply struct {
	// xxx人在看
	TotalText string `protobuf:"bytes,1,opt,name=total_text,json=totalText,proto3" json:"total_text,omitempty"`
	// 下次获取在看人数间隔（秒）
	SecNext int64 `protobuf:"varint,2,opt,name=sec_next,json=secNext,proto3" json:"sec_next,omitempty"`
	// 是否展示左下角底部在看人数
	BottomShow bool `protobuf:"varint,3,opt,name=bottom_show,json=bottomShow,proto3" json:"bottom_show,omitempty"`
	// 是否展示特殊弹幕
	SdmShow bool `protobuf:"varint,4,opt,name=sdm_show,json=sdmShow,proto3" json:"sdm_show,omitempty"`
	// 特殊弹幕 展示文案
	SdmText string `protobuf:"bytes,5,opt,name=sdm_text,json=sdmText,proto3" json:"sdm_text,omitempty"`
	// 在线人数
	TotalNumber int64 `protobuf:"varint,6,opt,name=total_number,json=totalNumber,proto3" json:"total_number,omitempty"`
	// 在线人数文本
	TotalNumberText      string   `protobuf:"bytes,7,opt,name=total_number_text,json=totalNumberText,proto3" json:"total_number_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerOnlineReply) Reset()         { *m = PlayerOnlineReply{} }
func (m *PlayerOnlineReply) String() string { return proto.CompactTextString(m) }
func (*PlayerOnlineReply) ProtoMessage()    {}
func (*PlayerOnlineReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0cbc0a191f2b044, []int{5}
}
func (m *PlayerOnlineReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerOnlineReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerOnlineReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerOnlineReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerOnlineReply.Merge(m, src)
}
func (m *PlayerOnlineReply) XXX_Size() int {
	return m.Size()
}
func (m *PlayerOnlineReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerOnlineReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerOnlineReply proto.InternalMessageInfo

func (m *PlayerOnlineReply) GetTotalText() string {
	if m != nil {
		return m.TotalText
	}
	return ""
}

func (m *PlayerOnlineReply) GetSecNext() int64 {
	if m != nil {
		return m.SecNext
	}
	return 0
}

func (m *PlayerOnlineReply) GetBottomShow() bool {
	if m != nil {
		return m.BottomShow
	}
	return false
}

func (m *PlayerOnlineReply) GetSdmShow() bool {
	if m != nil {
		return m.SdmShow
	}
	return false
}

func (m *PlayerOnlineReply) GetSdmText() string {
	if m != nil {
		return m.SdmText
	}
	return ""
}

func (m *PlayerOnlineReply) GetTotalNumber() int64 {
	if m != nil {
		return m.TotalNumber
	}
	return 0
}

func (m *PlayerOnlineReply) GetTotalNumberText() string {
	if m != nil {
		return m.TotalNumberText
	}
	return ""
}

func init() {
	proto.RegisterType((*NoReply)(nil), "bilibili.app.playeronline.v1.NoReply")
	proto.RegisterType((*ReportWatchReq)(nil), "bilibili.app.playeronline.v1.ReportWatchReq")
	proto.RegisterType((*PremiereInfoReq)(nil), "bilibili.app.playeronline.v1.PremiereInfoReq")
	proto.RegisterType((*PremiereInfoReply)(nil), "bilibili.app.playeronline.v1.PremiereInfoReply")
	proto.RegisterType((*PlayerOnlineReq)(nil), "bilibili.app.playeronline.v1.PlayerOnlineReq")
	proto.RegisterType((*PlayerOnlineReply)(nil), "bilibili.app.playeronline.v1.PlayerOnlineReply")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/player-online/api/api.proto", fileDescriptor_f0cbc0a191f2b044)
}

var fileDescriptor_f0cbc0a191f2b044 = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xd1, 0x6e, 0xd3, 0x3c,
	0x14, 0xfe, 0xb3, 0xfc, 0x5b, 0xdb, 0xd3, 0x89, 0x6e, 0x16, 0x48, 0xa5, 0x83, 0x52, 0x82, 0x90,
	0x26, 0xb4, 0x26, 0x62, 0xbc, 0x01, 0x77, 0x70, 0xd1, 0x4e, 0x06, 0x09, 0x89, 0x9b, 0xca, 0x49,
	0xcf, 0x5a, 0x4b, 0xa9, 0x6d, 0x5c, 0xb7, 0x5d, 0xb8, 0xe7, 0x1d, 0x78, 0x24, 0x2e, 0x11, 0x4f,
	0x80, 0xca, 0x23, 0xf0, 0x02, 0xc8, 0x76, 0x90, 0x92, 0x0a, 0x3a, 0x71, 0x61, 0xc9, 0xf9, 0xbe,
	0xef, 0x9c, 0xe3, 0xef, 0xe4, 0x1c, 0xb8, 0x9c, 0xc9, 0xe1, 0x8c, 0x19, 0xdc, 0xb0, 0x22, 0x61,
	0x4a, 0xd9, 0x33, 0x5c, 0xae, 0x75, 0xa2, 0x72, 0x56, 0xa0, 0x1e, 0x4a, 0x91, 0x73, 0x81, 0x09,
	0x53, 0xdc, 0x9e, 0x58, 0x69, 0x69, 0x24, 0x79, 0x90, 0xf2, 0x9c, 0xdb, 0x13, 0x33, 0xa5, 0x62,
	0xaf, 0xf4, 0xc2, 0x78, 0xfd, 0xbc, 0x77, 0x36, 0x93, 0x72, 0x96, 0x63, 0xe2, 0xb4, 0xe9, 0xea,
	0x3a, 0xc1, 0x85, 0x32, 0x85, 0x0f, 0x8d, 0x5a, 0xd0, 0x18, 0x49, 0x8a, 0x2a, 0x2f, 0xa2, 0xd7,
	0x70, 0x87, 0xa2, 0x92, 0xda, 0xbc, 0x63, 0x26, 0x9b, 0x53, 0xfc, 0x40, 0x4e, 0x20, 0x64, 0x7c,
	0xda, 0x0d, 0x06, 0xc1, 0x79, 0x48, 0xed, 0xd5, 0x22, 0x29, 0xff, 0xd8, 0x3d, 0x18, 0x04, 0xe7,
	0x2d, 0x6a, 0xaf, 0xe4, 0x2e, 0x1c, 0xa6, 0xab, 0x35, 0x9f, 0x76, 0x43, 0x87, 0xf9, 0x8f, 0xe8,
	0x09, 0x74, 0xae, 0x34, 0x2e, 0x38, 0x6a, 0x7c, 0x25, 0xae, 0xe5, 0x1f, 0x93, 0x45, 0x9f, 0x02,
	0x38, 0xad, 0xab, 0x54, 0x5e, 0x90, 0x0b, 0x20, 0xaa, 0x04, 0x27, 0x72, 0x8d, 0x7a, 0x62, 0xf0,
	0xc6, 0xb8, 0xb0, 0x16, 0x3d, 0xf9, 0xcd, 0x8c, 0xd7, 0xa8, 0xdf, 0xe2, 0x8d, 0x21, 0x03, 0x68,
	0x2b, 0xa6, 0x0d, 0xcf, 0xb8, 0x62, 0xc2, 0xb8, 0x87, 0x85, 0xb4, 0x0a, 0x59, 0x05, 0x17, 0x06,
	0x35, 0xcb, 0x0c, 0x97, 0xc2, 0x3d, 0x33, 0xa4, 0x55, 0x28, 0xa2, 0xd0, 0xb9, 0x72, 0x3d, 0x1b,
	0xbb, 0x9e, 0xfd, 0xd5, 0x79, 0xc6, 0xa7, 0x65, 0x01, 0x7b, 0x25, 0x67, 0xd0, 0xb2, 0xad, 0x9e,
	0x48, 0x85, 0x3e, 0x6d, 0x93, 0x36, 0x2d, 0x30, 0x56, 0x28, 0xa2, 0x9f, 0xd6, 0x5b, 0x2d, 0xa9,
	0xf5, 0xf6, 0x10, 0xc0, 0x48, 0xc3, 0xf2, 0xaa, 0xa7, 0x96, 0x43, 0x9c, 0x99, 0xfb, 0xd0, 0x5c,
	0x62, 0x36, 0x11, 0x96, 0xf4, 0x85, 0x1a, 0x4b, 0xcc, 0x46, 0x96, 0x7a, 0x04, 0xed, 0x54, 0x1a,
	0x23, 0x17, 0x93, 0xe5, 0x5c, 0x6e, 0xca, 0x72, 0xe0, 0xa1, 0x37, 0x73, 0xb9, 0x71, 0xb1, 0xd3,
	0x92, 0xfd, 0xdf, 0xb1, 0x8d, 0xe5, 0xb4, 0x46, 0xb9, 0x9a, 0x87, 0xae, 0xa6, 0xa5, 0x5c, 0xc5,
	0xc7, 0x70, 0xec, 0x1f, 0x24, 0x56, 0x8b, 0x14, 0x75, 0xf7, 0xc8, 0x77, 0xc7, 0x61, 0x23, 0x07,
	0x91, 0x67, 0x70, 0x5a, 0x95, 0xf8, 0x34, 0x0d, 0x97, 0xa6, 0x53, 0xd1, 0xd9, 0x74, 0x97, 0xdf,
	0x0e, 0xe0, 0xb8, 0xea, 0x9a, 0x88, 0x9d, 0xef, 0x61, 0xbc, 0x6f, 0x54, 0xe3, 0x9d, 0xdf, 0xd0,
	0x4b, 0xfe, 0x45, 0x6e, 0x1b, 0x9c, 0x42, 0xbb, 0x32, 0xc3, 0xe4, 0x62, 0x7f, 0x7c, 0x7d, 0xdc,
	0x7b, 0x4f, 0xf7, 0xab, 0xcb, 0x3d, 0x71, 0x9e, 0x2a, 0x53, 0x7b, 0xab, 0xa7, 0xfa, 0x1e, 0xdc,
	0xea, 0x69, 0x77, 0x21, 0x5e, 0xde, 0xfb, 0xb2, 0xed, 0x07, 0x5f, 0xb7, 0xfd, 0xe0, 0xfb, 0xb6,
	0x1f, 0x7c, 0xfe, 0xd1, 0xff, 0xef, 0x7d, 0xc8, 0x14, 0x4f, 0x8f, 0xdc, 0x02, 0xbf, 0xf8, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xcd, 0xd3, 0x42, 0xa7, 0x31, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayerOnlineClient is the client API for PlayerOnline service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerOnlineClient interface {
	//查询在看人数
	PlayerOnline(ctx context.Context, in *PlayerOnlineReq, opts ...grpc.CallOption) (*PlayerOnlineReply, error)
	//上报在看参与
	ReportWatch(ctx context.Context, in *ReportWatchReq, opts ...grpc.CallOption) (*NoReply, error)
	//查询首映结束后参与人数与互动信息
	PremiereInfo(ctx context.Context, in *PremiereInfoReq, opts ...grpc.CallOption) (*PremiereInfoReply, error)
}

type playerOnlineClient struct {
	cc *grpc.ClientConn
}

func NewPlayerOnlineClient(cc *grpc.ClientConn) PlayerOnlineClient {
	return &playerOnlineClient{cc}
}

func (c *playerOnlineClient) PlayerOnline(ctx context.Context, in *PlayerOnlineReq, opts ...grpc.CallOption) (*PlayerOnlineReply, error) {
	out := new(PlayerOnlineReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playeronline.v1.PlayerOnline/PlayerOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerOnlineClient) ReportWatch(ctx context.Context, in *ReportWatchReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playeronline.v1.PlayerOnline/ReportWatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerOnlineClient) PremiereInfo(ctx context.Context, in *PremiereInfoReq, opts ...grpc.CallOption) (*PremiereInfoReply, error) {
	out := new(PremiereInfoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playeronline.v1.PlayerOnline/PremiereInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerOnlineServer is the server API for PlayerOnline service.
type PlayerOnlineServer interface {
	//查询在看人数
	PlayerOnline(context.Context, *PlayerOnlineReq) (*PlayerOnlineReply, error)
	//上报在看参与
	ReportWatch(context.Context, *ReportWatchReq) (*NoReply, error)
	//查询首映结束后参与人数与互动信息
	PremiereInfo(context.Context, *PremiereInfoReq) (*PremiereInfoReply, error)
}

// UnimplementedPlayerOnlineServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerOnlineServer struct {
}

func (*UnimplementedPlayerOnlineServer) PlayerOnline(ctx context.Context, req *PlayerOnlineReq) (*PlayerOnlineReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerOnline not implemented")
}
func (*UnimplementedPlayerOnlineServer) ReportWatch(ctx context.Context, req *ReportWatchReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportWatch not implemented")
}
func (*UnimplementedPlayerOnlineServer) PremiereInfo(ctx context.Context, req *PremiereInfoReq) (*PremiereInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PremiereInfo not implemented")
}

func RegisterPlayerOnlineServer(s *grpc.Server, srv PlayerOnlineServer) {
	s.RegisterService(&_PlayerOnline_serviceDesc, srv)
}

func _PlayerOnline_PlayerOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerOnlineReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerOnlineServer).PlayerOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playeronline.v1.PlayerOnline/PlayerOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerOnlineServer).PlayerOnline(ctx, req.(*PlayerOnlineReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerOnline_ReportWatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportWatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerOnlineServer).ReportWatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playeronline.v1.PlayerOnline/ReportWatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerOnlineServer).ReportWatch(ctx, req.(*ReportWatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerOnline_PremiereInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PremiereInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerOnlineServer).PremiereInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playeronline.v1.PlayerOnline/PremiereInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerOnlineServer).PremiereInfo(ctx, req.(*PremiereInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayerOnline_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.app.playeronline.v1.PlayerOnline",
	HandlerType: (*PlayerOnlineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlayerOnline",
			Handler:    _PlayerOnline_PlayerOnline_Handler,
		},
		{
			MethodName: "ReportWatch",
			Handler:    _PlayerOnline_ReportWatch_Handler,
		},
		{
			MethodName: "PremiereInfo",
			Handler:    _PlayerOnline_PremiereInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/app-svr/player-online/api/api.proto",
}

func (m *NoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReportWatchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportWatchReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportWatchReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Buvid) > 0 {
		i -= len(m.Buvid)
		copy(dAtA[i:], m.Buvid)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Buvid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Biz) > 0 {
		i -= len(m.Biz)
		copy(dAtA[i:], m.Biz)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Biz)))
		i--
		dAtA[i] = 0x12
	}
	if m.Aid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PremiereInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PremiereInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PremiereInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Aid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PremiereInfoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PremiereInfoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PremiereInfoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Interaction != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Interaction))
		i--
		dAtA[i] = 0x18
	}
	if m.Participant != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Participant))
		i--
		dAtA[i] = 0x10
	}
	if len(m.PremiereOverText) > 0 {
		i -= len(m.PremiereOverText)
		copy(dAtA[i:], m.PremiereOverText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.PremiereOverText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PlayerOnlineReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerOnlineReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerOnlineReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayOpen {
		i--
		if m.PlayOpen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Cid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x10
	}
	if m.Aid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PlayerOnlineReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerOnlineReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayerOnlineReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TotalNumberText) > 0 {
		i -= len(m.TotalNumberText)
		copy(dAtA[i:], m.TotalNumberText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TotalNumberText)))
		i--
		dAtA[i] = 0x3a
	}
	if m.TotalNumber != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TotalNumber))
		i--
		dAtA[i] = 0x30
	}
	if len(m.SdmText) > 0 {
		i -= len(m.SdmText)
		copy(dAtA[i:], m.SdmText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.SdmText)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SdmShow {
		i--
		if m.SdmShow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.BottomShow {
		i--
		if m.BottomShow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.SecNext != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SecNext))
		i--
		dAtA[i] = 0x10
	}
	if len(m.TotalText) > 0 {
		i -= len(m.TotalText)
		copy(dAtA[i:], m.TotalText)
		i = encodeVarintApi(dAtA, i, uint64(len(m.TotalText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportWatchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aid != 0 {
		n += 1 + sovApi(uint64(m.Aid))
	}
	l = len(m.Biz)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Buvid)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PremiereInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aid != 0 {
		n += 1 + sovApi(uint64(m.Aid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PremiereInfoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PremiereOverText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Participant != 0 {
		n += 1 + sovApi(uint64(m.Participant))
	}
	if m.Interaction != 0 {
		n += 1 + sovApi(uint64(m.Interaction))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PlayerOnlineReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aid != 0 {
		n += 1 + sovApi(uint64(m.Aid))
	}
	if m.Cid != 0 {
		n += 1 + sovApi(uint64(m.Cid))
	}
	if m.PlayOpen {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PlayerOnlineReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TotalText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.SecNext != 0 {
		n += 1 + sovApi(uint64(m.SecNext))
	}
	if m.BottomShow {
		n += 2
	}
	if m.SdmShow {
		n += 2
	}
	l = len(m.SdmText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TotalNumber != 0 {
		n += 1 + sovApi(uint64(m.TotalNumber))
	}
	l = len(m.TotalNumberText)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportWatchReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportWatchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportWatchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Biz", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Biz = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buvid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buvid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PremiereInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PremiereInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PremiereInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PremiereInfoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PremiereInfoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PremiereInfoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PremiereOverText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PremiereOverText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			m.Participant = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Participant |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interaction", wireType)
			}
			m.Interaction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Interaction |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerOnlineReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerOnlineReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerOnlineReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayOpen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PlayOpen = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerOnlineReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerOnlineReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerOnlineReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TotalText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecNext", wireType)
			}
			m.SecNext = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecNext |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomShow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BottomShow = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SdmShow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SdmShow = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SdmText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SdmText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNumber", wireType)
			}
			m.TotalNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalNumberText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TotalNumberText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
