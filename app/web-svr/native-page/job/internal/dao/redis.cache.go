// Code generated by kratos tool redisgen. DO NOT EDIT.

/*
  Package dao is a generated redis cache package.
  It is generated from:
  type _redis interface {
		// redis: -struct_name=progressDao -key=pageProgressParamsKey -expire=d.cfg.PageProgressParamsExpire -encode=json
		AddCachePageProgressParams(c context.Context, pageID int64, data []*model.ProgressParam) error
	}
*/

package dao

import (
	"context"
	"encoding/json"

	"go-common/library/log"
	"go-gateway/app/web-svr/native-page/job/internal/model"
)

var _ _redis

// AddCachePageProgressParams Set data to redis
func (d *progressDao) AddCachePageProgressParams(c context.Context, id int64, val []*model.ProgressParam) (err error) {
	if len(val) == 0 {
		return
	}
	key := pageProgressParamsKey(id)
	var bs []byte
	bs, err = json.Marshal(val)
	if err != nil {
		log.Errorc(c, "d.AddCachePageProgressParams(get key: %v) err: %+v", key, err)
		return
	}
	expire := d.cfg.PageProgressParamsExpire
	if _, err = d.redis.Do(c, "set", key, bs, "EX", expire); err != nil {
		log.Errorc(c, "d.AddCachePageProgressParams(get key: %v) err: %+v", key, err)
		return
	}
	return
}
