// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-gateway/app/app-svr/app-dynamic/interface/api/v2/dynamicV2.proto

package v2

import (
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	v1 "go-gateway/app/app-svr/archive/middleware/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Refresh 枚举-刷新方式
type Refresh int32

const (
	Refresh_refresh_new     Refresh = 0
	Refresh_refresh_history Refresh = 1
)

var Refresh_name = map[int32]string{
	0: "refresh_new",
	1: "refresh_history",
}

var Refresh_value = map[string]int32{
	"refresh_new":     0,
	"refresh_history": 1,
}

func (x Refresh) String() string {
	return proto.EnumName(Refresh_name, int32(x))
}

func (Refresh) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{0}
}

// DynamicType 枚举-动态类型
type DynamicType int32

const (
	DynamicType_dyn_none         DynamicType = 0
	DynamicType_forward          DynamicType = 1
	DynamicType_av               DynamicType = 2
	DynamicType_pgc              DynamicType = 3
	DynamicType_courses          DynamicType = 4
	DynamicType_fold             DynamicType = 5
	DynamicType_word             DynamicType = 6
	DynamicType_draw             DynamicType = 7
	DynamicType_article          DynamicType = 8
	DynamicType_music            DynamicType = 9
	DynamicType_common_square    DynamicType = 10
	DynamicType_common_vertical  DynamicType = 11
	DynamicType_live             DynamicType = 12
	DynamicType_medialist        DynamicType = 13
	DynamicType_courses_season   DynamicType = 14
	DynamicType_ad               DynamicType = 15
	DynamicType_applet           DynamicType = 16
	DynamicType_subscription     DynamicType = 17
	DynamicType_live_rcmd        DynamicType = 18
	DynamicType_banner           DynamicType = 19
	DynamicType_ugc_season       DynamicType = 20
	DynamicType_subscription_new DynamicType = 21
	DynamicType_story            DynamicType = 22
	DynamicType_topic_rcmd       DynamicType = 23
	DynamicType_cour_up          DynamicType = 24
	DynamicType_topic_set        DynamicType = 25
	DynamicType_notice           DynamicType = 26
)

var DynamicType_name = map[int32]string{
	0:  "dyn_none",
	1:  "forward",
	2:  "av",
	3:  "pgc",
	4:  "courses",
	5:  "fold",
	6:  "word",
	7:  "draw",
	8:  "article",
	9:  "music",
	10: "common_square",
	11: "common_vertical",
	12: "live",
	13: "medialist",
	14: "courses_season",
	15: "ad",
	16: "applet",
	17: "subscription",
	18: "live_rcmd",
	19: "banner",
	20: "ugc_season",
	21: "subscription_new",
	22: "story",
	23: "topic_rcmd",
	24: "cour_up",
	25: "topic_set",
	26: "notice",
}

var DynamicType_value = map[string]int32{
	"dyn_none":         0,
	"forward":          1,
	"av":               2,
	"pgc":              3,
	"courses":          4,
	"fold":             5,
	"word":             6,
	"draw":             7,
	"article":          8,
	"music":            9,
	"common_square":    10,
	"common_vertical":  11,
	"live":             12,
	"medialist":        13,
	"courses_season":   14,
	"ad":               15,
	"applet":           16,
	"subscription":     17,
	"live_rcmd":        18,
	"banner":           19,
	"ugc_season":       20,
	"subscription_new": 21,
	"story":            22,
	"topic_rcmd":       23,
	"cour_up":          24,
	"topic_set":        25,
	"notice":           26,
}

func (x DynamicType) String() string {
	return proto.EnumName(DynamicType_name, int32(x))
}

func (DynamicType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{1}
}

type NFTRegionType int32

const (
	NFTRegionType_nft_region_default  NFTRegionType = 0
	NFTRegionType_nft_region_mainlang NFTRegionType = 1
	NFTRegionType_nft_region_gat      NFTRegionType = 2
)

var NFTRegionType_name = map[int32]string{
	0: "nft_region_default",
	1: "nft_region_mainlang",
	2: "nft_region_gat",
}

var NFTRegionType_value = map[string]int32{
	"nft_region_default":  0,
	"nft_region_mainlang": 1,
	"nft_region_gat":      2,
}

func (x NFTRegionType) String() string {
	return proto.EnumName(NFTRegionType_name, int32(x))
}

func (NFTRegionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{2}
}

type NFTShowStatus int32

const (
	NFTShowStatus_nft_show_default        NFTShowStatus = 0
	NFTShowStatus_nft_show_zoominmainlang NFTShowStatus = 1
	NFTShowStatus_nft_show_raw            NFTShowStatus = 2
)

var NFTShowStatus_name = map[int32]string{
	0: "nft_show_default",
	1: "nft_show_zoominmainlang",
	2: "nft_show_raw",
}

var NFTShowStatus_value = map[string]int32{
	"nft_show_default":        0,
	"nft_show_zoominmainlang": 1,
	"nft_show_raw":            2,
}

func (x NFTShowStatus) String() string {
	return proto.EnumName(NFTShowStatus_name, int32(x))
}

func (NFTShowStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{3}
}

// LiveState 枚举-直播状态
type LiveState int32

const (
	LiveState_live_none     LiveState = 0
	LiveState_live_live     LiveState = 1
	LiveState_live_rotation LiveState = 2
)

var LiveState_name = map[int32]string{
	0: "live_none",
	1: "live_live",
	2: "live_rotation",
}

var LiveState_value = map[string]int32{
	"live_none":     0,
	"live_live":     1,
	"live_rotation": 2,
}

func (x LiveState) String() string {
	return proto.EnumName(LiveState_name, int32(x))
}

func (LiveState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{4}
}

// DescType 枚举-文本类型
type DescType int32

const (
	DescType_desc_type_none        DescType = 0
	DescType_desc_type_text        DescType = 1
	DescType_desc_type_aite        DescType = 2
	DescType_desc_type_lottery     DescType = 3
	DescType_desc_type_vote        DescType = 4
	DescType_desc_type_topic       DescType = 5
	DescType_desc_type_goods       DescType = 6
	DescType_desc_type_bv          DescType = 7
	DescType_desc_type_av          DescType = 8
	DescType_desc_type_emoji       DescType = 9
	DescType_desc_type_user        DescType = 10
	DescType_desc_type_cv          DescType = 11
	DescType_desc_type_vc          DescType = 12
	DescType_desc_type_web         DescType = 13
	DescType_desc_type_taobao      DescType = 14
	DescType_desc_type_mail        DescType = 15
	DescType_desc_type_ogv_season  DescType = 16
	DescType_desc_type_ogv_ep      DescType = 17
	DescType_desc_type_search_word DescType = 18
)

var DescType_name = map[int32]string{
	0:  "desc_type_none",
	1:  "desc_type_text",
	2:  "desc_type_aite",
	3:  "desc_type_lottery",
	4:  "desc_type_vote",
	5:  "desc_type_topic",
	6:  "desc_type_goods",
	7:  "desc_type_bv",
	8:  "desc_type_av",
	9:  "desc_type_emoji",
	10: "desc_type_user",
	11: "desc_type_cv",
	12: "desc_type_vc",
	13: "desc_type_web",
	14: "desc_type_taobao",
	15: "desc_type_mail",
	16: "desc_type_ogv_season",
	17: "desc_type_ogv_ep",
	18: "desc_type_search_word",
}

var DescType_value = map[string]int32{
	"desc_type_none":        0,
	"desc_type_text":        1,
	"desc_type_aite":        2,
	"desc_type_lottery":     3,
	"desc_type_vote":        4,
	"desc_type_topic":       5,
	"desc_type_goods":       6,
	"desc_type_bv":          7,
	"desc_type_av":          8,
	"desc_type_emoji":       9,
	"desc_type_user":        10,
	"desc_type_cv":          11,
	"desc_type_vc":          12,
	"desc_type_web":         13,
	"desc_type_taobao":      14,
	"desc_type_mail":        15,
	"desc_type_ogv_season":  16,
	"desc_type_ogv_ep":      17,
	"desc_type_search_word": 18,
}

func (x DescType) String() string {
	return proto.EnumName(DescType_name, int32(x))
}

func (DescType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{5}
}

// EmojiType 枚举-表情包类型
type EmojiType int32

const (
	EmojiType_emoji_none EmojiType = 0
	EmojiType_emoji_old  EmojiType = 1
	EmojiType_emoji_new  EmojiType = 2
	EmojiType_vip        EmojiType = 3
)

var EmojiType_name = map[int32]string{
	0: "emoji_none",
	1: "emoji_old",
	2: "emoji_new",
	3: "vip",
}

var EmojiType_value = map[string]int32{
	"emoji_none": 0,
	"emoji_old":  1,
	"emoji_new":  2,
	"vip":        3,
}

func (x EmojiType) String() string {
	return proto.EnumName(EmojiType_name, int32(x))
}

func (EmojiType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{6}
}

// ModuleDynamicType 枚举-动态详情模块类型
type ModuleDynamicType int32

const (
	ModuleDynamicType_mdl_dyn_archive          ModuleDynamicType = 0
	ModuleDynamicType_mdl_dyn_pgc              ModuleDynamicType = 1
	ModuleDynamicType_mdl_dyn_cour_season      ModuleDynamicType = 2
	ModuleDynamicType_mdl_dyn_cour_batch       ModuleDynamicType = 3
	ModuleDynamicType_mdl_dyn_forward          ModuleDynamicType = 4
	ModuleDynamicType_mdl_dyn_draw             ModuleDynamicType = 5
	ModuleDynamicType_mdl_dyn_article          ModuleDynamicType = 6
	ModuleDynamicType_mdl_dyn_music            ModuleDynamicType = 7
	ModuleDynamicType_mdl_dyn_common           ModuleDynamicType = 8
	ModuleDynamicType_mdl_dyn_live             ModuleDynamicType = 9
	ModuleDynamicType_mdl_dyn_medialist        ModuleDynamicType = 10
	ModuleDynamicType_mdl_dyn_applet           ModuleDynamicType = 11
	ModuleDynamicType_mdl_dyn_subscription     ModuleDynamicType = 12
	ModuleDynamicType_mdl_dyn_live_rcmd        ModuleDynamicType = 13
	ModuleDynamicType_mdl_dyn_ugc_season       ModuleDynamicType = 14
	ModuleDynamicType_mdl_dyn_subscription_new ModuleDynamicType = 15
	ModuleDynamicType_mdl_dyn_cour_up          ModuleDynamicType = 16
	ModuleDynamicType_mdl_dyn_topic_set        ModuleDynamicType = 17
)

var ModuleDynamicType_name = map[int32]string{
	0:  "mdl_dyn_archive",
	1:  "mdl_dyn_pgc",
	2:  "mdl_dyn_cour_season",
	3:  "mdl_dyn_cour_batch",
	4:  "mdl_dyn_forward",
	5:  "mdl_dyn_draw",
	6:  "mdl_dyn_article",
	7:  "mdl_dyn_music",
	8:  "mdl_dyn_common",
	9:  "mdl_dyn_live",
	10: "mdl_dyn_medialist",
	11: "mdl_dyn_applet",
	12: "mdl_dyn_subscription",
	13: "mdl_dyn_live_rcmd",
	14: "mdl_dyn_ugc_season",
	15: "mdl_dyn_subscription_new",
	16: "mdl_dyn_cour_up",
	17: "mdl_dyn_topic_set",
}

var ModuleDynamicType_value = map[string]int32{
	"mdl_dyn_archive":          0,
	"mdl_dyn_pgc":              1,
	"mdl_dyn_cour_season":      2,
	"mdl_dyn_cour_batch":       3,
	"mdl_dyn_forward":          4,
	"mdl_dyn_draw":             5,
	"mdl_dyn_article":          6,
	"mdl_dyn_music":            7,
	"mdl_dyn_common":           8,
	"mdl_dyn_live":             9,
	"mdl_dyn_medialist":        10,
	"mdl_dyn_applet":           11,
	"mdl_dyn_subscription":     12,
	"mdl_dyn_live_rcmd":        13,
	"mdl_dyn_ugc_season":       14,
	"mdl_dyn_subscription_new": 15,
	"mdl_dyn_cour_up":          16,
	"mdl_dyn_topic_set":        17,
}

func (x ModuleDynamicType) String() string {
	return proto.EnumName(ModuleDynamicType_name, int32(x))
}

func (ModuleDynamicType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{7}
}

// 播放器类型
type MediaType int32

const (
	// 本地
	MediaType_MediaTypeNone MediaType = 0
	// UGC
	MediaType_MediaTypeUGC MediaType = 1
	// PGC
	MediaType_MediaTypePGC MediaType = 2
	// 直播
	MediaType_MediaTypeLive MediaType = 3
	// 小视频
	MediaType_MediaTypeVCS MediaType = 4
)

var MediaType_name = map[int32]string{
	0: "MediaTypeNone",
	1: "MediaTypeUGC",
	2: "MediaTypePGC",
	3: "MediaTypeLive",
	4: "MediaTypeVCS",
}

var MediaType_value = map[string]int32{
	"MediaTypeNone": 0,
	"MediaTypeUGC":  1,
	"MediaTypePGC":  2,
	"MediaTypeLive": 3,
	"MediaTypeVCS":  4,
}

func (x MediaType) String() string {
	return proto.EnumName(MediaType_name, int32(x))
}

func (MediaType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{8}
}

type ReserveType int32

const (
	// 占位
	ReserveType_reserve_none ReserveType = 0
	// 预约召回
	ReserveType_reserve_recall ReserveType = 1
)

var ReserveType_name = map[int32]string{
	0: "reserve_none",
	1: "reserve_recall",
}

var ReserveType_value = map[string]int32{
	"reserve_none":   0,
	"reserve_recall": 1,
}

func (x ReserveType) String() string {
	return proto.EnumName(ReserveType_name, int32(x))
}

func (ReserveType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{9}
}

// VideoType 枚举-视频类型
type VideoType int32

const (
	VideoType_video_type_general  VideoType = 0
	VideoType_video_type_dynamic  VideoType = 1
	VideoType_video_type_playback VideoType = 2
	VideoType_video_type_story    VideoType = 3
)

var VideoType_name = map[int32]string{
	0: "video_type_general",
	1: "video_type_dynamic",
	2: "video_type_playback",
	3: "video_type_story",
}

var VideoType_value = map[string]int32{
	"video_type_general":  0,
	"video_type_dynamic":  1,
	"video_type_playback": 2,
	"video_type_story":    3,
}

func (x VideoType) String() string {
	return proto.EnumName(VideoType_name, int32(x))
}

func (VideoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{10}
}

// 番剧类型
type VideoSubType int32

const (
	// 没有子类型
	VideoSubType_VideoSubTypeNone VideoSubType = 0
	// 番剧
	VideoSubType_VideoSubTypeBangumi VideoSubType = 1
	// 电影
	VideoSubType_VideoSubTypeMovie VideoSubType = 2
	// 纪录片
	VideoSubType_VideoSubTypeDocumentary VideoSubType = 3
	// 国创
	VideoSubType_VideoSubTypeDomestic VideoSubType = 4
	// 电视剧
	VideoSubType_VideoSubTypeTeleplay VideoSubType = 5
)

var VideoSubType_name = map[int32]string{
	0: "VideoSubTypeNone",
	1: "VideoSubTypeBangumi",
	2: "VideoSubTypeMovie",
	3: "VideoSubTypeDocumentary",
	4: "VideoSubTypeDomestic",
	5: "VideoSubTypeTeleplay",
}

var VideoSubType_value = map[string]int32{
	"VideoSubTypeNone":        0,
	"VideoSubTypeBangumi":     1,
	"VideoSubTypeMovie":       2,
	"VideoSubTypeDocumentary": 3,
	"VideoSubTypeDomestic":    4,
	"VideoSubTypeTeleplay":    5,
}

func (x VideoSubType) String() string {
	return proto.EnumName(VideoSubType_name, int32(x))
}

func (VideoSubType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{11}
}

// DrawTagType 枚举-图文标签类型
type MdlDynDrawTagType int32

const (
	MdlDynDrawTagType_mdl_draw_tag_none   MdlDynDrawTagType = 0
	MdlDynDrawTagType_mdl_draw_tag_common MdlDynDrawTagType = 1
	MdlDynDrawTagType_mdl_draw_tag_goods  MdlDynDrawTagType = 2
	MdlDynDrawTagType_mdl_draw_tag_user   MdlDynDrawTagType = 3
	MdlDynDrawTagType_mdl_draw_tag_topic  MdlDynDrawTagType = 4
	MdlDynDrawTagType_mdl_draw_tag_lbs    MdlDynDrawTagType = 5
)

var MdlDynDrawTagType_name = map[int32]string{
	0: "mdl_draw_tag_none",
	1: "mdl_draw_tag_common",
	2: "mdl_draw_tag_goods",
	3: "mdl_draw_tag_user",
	4: "mdl_draw_tag_topic",
	5: "mdl_draw_tag_lbs",
}

var MdlDynDrawTagType_value = map[string]int32{
	"mdl_draw_tag_none":   0,
	"mdl_draw_tag_common": 1,
	"mdl_draw_tag_goods":  2,
	"mdl_draw_tag_user":   3,
	"mdl_draw_tag_topic":  4,
	"mdl_draw_tag_lbs":    5,
}

func (x MdlDynDrawTagType) String() string {
	return proto.EnumName(MdlDynDrawTagType_name, int32(x))
}

func (MdlDynDrawTagType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{12}
}

type MdlDynCommonType int32

const (
	MdlDynCommonType_mdl_dyn_common_none    MdlDynCommonType = 0
	MdlDynCommonType_mdl_dyn_common_square  MdlDynCommonType = 1
	MdlDynCommonType_mdl_dyn_common_vertica MdlDynCommonType = 2
)

var MdlDynCommonType_name = map[int32]string{
	0: "mdl_dyn_common_none",
	1: "mdl_dyn_common_square",
	2: "mdl_dyn_common_vertica",
}

var MdlDynCommonType_value = map[string]int32{
	"mdl_dyn_common_none":    0,
	"mdl_dyn_common_square":  1,
	"mdl_dyn_common_vertica": 2,
}

func (x MdlDynCommonType) String() string {
	return proto.EnumName(MdlDynCommonType_name, int32(x))
}

func (MdlDynCommonType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{13}
}

type MdlDynSubscriptionNewStyle int32

const (
	// 占位
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_nont MdlDynSubscriptionNewStyle = 0
	// 直播
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_live MdlDynSubscriptionNewStyle = 1
	// 图文
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_draw MdlDynSubscriptionNewStyle = 2
)

var MdlDynSubscriptionNewStyle_name = map[int32]string{
	0: "mdl_dyn_subscription_new_style_nont",
	1: "mdl_dyn_subscription_new_style_live",
	2: "mdl_dyn_subscription_new_style_draw",
}

var MdlDynSubscriptionNewStyle_value = map[string]int32{
	"mdl_dyn_subscription_new_style_nont": 0,
	"mdl_dyn_subscription_new_style_live": 1,
	"mdl_dyn_subscription_new_style_draw": 2,
}

func (x MdlDynSubscriptionNewStyle) String() string {
	return proto.EnumName(MdlDynSubscriptionNewStyle_name, int32(x))
}

func (MdlDynSubscriptionNewStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{14}
}

// AdditionalType 枚举-动态附加卡
type AdditionalType int32

const (
	AdditionalType_additional_none                AdditionalType = 0
	AdditionalType_additional_type_pgc            AdditionalType = 1
	AdditionalType_additional_type_goods          AdditionalType = 2
	AdditionalType_additional_type_vote           AdditionalType = 3
	AdditionalType_additional_type_common         AdditionalType = 4
	AdditionalType_additional_type_esport         AdditionalType = 5
	AdditionalType_additional_type_up_rcmd        AdditionalType = 6
	AdditionalType_additional_type_ugc            AdditionalType = 7
	AdditionalType_additional_type_up_reservation AdditionalType = 8
)

var AdditionalType_name = map[int32]string{
	0: "additional_none",
	1: "additional_type_pgc",
	2: "additional_type_goods",
	3: "additional_type_vote",
	4: "additional_type_common",
	5: "additional_type_esport",
	6: "additional_type_up_rcmd",
	7: "additional_type_ugc",
	8: "additional_type_up_reservation",
}

var AdditionalType_value = map[string]int32{
	"additional_none":                0,
	"additional_type_pgc":            1,
	"additional_type_goods":          2,
	"additional_type_vote":           3,
	"additional_type_common":         4,
	"additional_type_esport":         5,
	"additional_type_up_rcmd":        6,
	"additional_type_ugc":            7,
	"additional_type_up_reservation": 8,
}

func (x AdditionalType) String() string {
	return proto.EnumName(AdditionalType_name, int32(x))
}

func (AdditionalType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{15}
}

// ImageStyle 枚举-附加卡样式
type ImageStyle int32

const (
	ImageStyle_add_style_vertical ImageStyle = 0
	ImageStyle_add_style_square   ImageStyle = 1
)

var ImageStyle_name = map[int32]string{
	0: "add_style_vertical",
	1: "add_style_square",
}

var ImageStyle_value = map[string]int32{
	"add_style_vertical": 0,
	"add_style_square":   1,
}

func (x ImageStyle) String() string {
	return proto.EnumName(ImageStyle_name, int32(x))
}

func (ImageStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{16}
}

type AddButtonType int32

const (
	AddButtonType_bt_none   AddButtonType = 0
	AddButtonType_bt_jump   AddButtonType = 1
	AddButtonType_bt_button AddButtonType = 2
)

var AddButtonType_name = map[int32]string{
	0: "bt_none",
	1: "bt_jump",
	2: "bt_button",
}

var AddButtonType_value = map[string]int32{
	"bt_none":   0,
	"bt_jump":   1,
	"bt_button": 2,
}

func (x AddButtonType) String() string {
	return proto.EnumName(AddButtonType_name, int32(x))
}

func (AddButtonType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{17}
}

// AdditionalButtonStatus 枚举-附加卡按钮状态
type AdditionalButtonStatus int32

const (
	AdditionalButtonStatus_none    AdditionalButtonStatus = 0
	AdditionalButtonStatus_uncheck AdditionalButtonStatus = 1
	AdditionalButtonStatus_check   AdditionalButtonStatus = 2
)

var AdditionalButtonStatus_name = map[int32]string{
	0: "none",
	1: "uncheck",
	2: "check",
}

var AdditionalButtonStatus_value = map[string]int32{
	"none":    0,
	"uncheck": 1,
	"check":   2,
}

func (x AdditionalButtonStatus) String() string {
	return proto.EnumName(AdditionalButtonStatus_name, int32(x))
}

func (AdditionalButtonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{18}
}

// 附加卡按钮点击类型
type AdditionalButtonClickType int32

const (
	AdditionalButtonClickType_click_none AdditionalButtonClickType = 0
	AdditionalButtonClickType_click_up   AdditionalButtonClickType = 1
)

var AdditionalButtonClickType_name = map[int32]string{
	0: "click_none",
	1: "click_up",
}

var AdditionalButtonClickType_value = map[string]int32{
	"click_none": 0,
	"click_up":   1,
}

func (x AdditionalButtonClickType) String() string {
	return proto.EnumName(AdditionalButtonClickType_name, int32(x))
}

func (AdditionalButtonClickType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{19}
}

type AdditionalShareShowType int32

const (
	// 默认 不展示
	AdditionalShareShowType_st_none AdditionalShareShowType = 0
	// 展示
	AdditionalShareShowType_st_show AdditionalShareShowType = 1
)

var AdditionalShareShowType_name = map[int32]string{
	0: "st_none",
	1: "st_show",
}

var AdditionalShareShowType_value = map[string]int32{
	"st_none": 0,
	"st_show": 1,
}

func (x AdditionalShareShowType) String() string {
	return proto.EnumName(AdditionalShareShowType_name, int32(x))
}

func (AdditionalShareShowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{20}
}

type DisableState int32

const (
	// 高亮
	DisableState_highlight DisableState = 0
	// 置灰(按钮不可点击)
	DisableState_gary DisableState = 1
)

var DisableState_name = map[int32]string{
	0: "highlight",
	1: "gary",
}

var DisableState_value = map[string]int32{
	"highlight": 0,
	"gary":      1,
}

func (x DisableState) String() string {
	return proto.EnumName(DisableState_name, int32(x))
}

func (DisableState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{21}
}

type AddButtonBgStyle int32

const (
	// 默认填充
	AddButtonBgStyle_fill AddButtonBgStyle = 0
	// 描边
	AddButtonBgStyle_stroke AddButtonBgStyle = 1
	// 置灰
	AddButtonBgStyle_gray AddButtonBgStyle = 2
)

var AddButtonBgStyle_name = map[int32]string{
	0: "fill",
	1: "stroke",
	2: "gray",
}

var AddButtonBgStyle_value = map[string]int32{
	"fill":   0,
	"stroke": 1,
	"gray":   2,
}

func (x AddButtonBgStyle) String() string {
	return proto.EnumName(AddButtonBgStyle_name, int32(x))
}

func (AddButtonBgStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{22}
}

type GoodsJumpType int32

const (
	// 默认
	GoodsJumpType_goods_none GoodsJumpType = 0
	// 站外跳转
	GoodsJumpType_goods_schema GoodsJumpType = 1
	// 站内
	GoodsJumpType_goods_url GoodsJumpType = 2
)

var GoodsJumpType_name = map[int32]string{
	0: "goods_none",
	1: "goods_schema",
	2: "goods_url",
}

var GoodsJumpType_value = map[string]int32{
	"goods_none":   0,
	"goods_schema": 1,
	"goods_url":    2,
}

func (x GoodsJumpType) String() string {
	return proto.EnumName(GoodsJumpType_name, int32(x))
}

func (GoodsJumpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{23}
}

// EspaceStyle 枚举-附加大卡-电竞卡样式
type EspaceStyle int32

const (
	EspaceStyle_moba EspaceStyle = 0
)

var EspaceStyle_name = map[int32]string{
	0: "moba",
}

var EspaceStyle_value = map[string]int32{
	"moba": 0,
}

func (x EspaceStyle) String() string {
	return proto.EnumName(EspaceStyle_name, int32(x))
}

func (EspaceStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{24}
}

// 文本高亮枚举
type HighlightTextStyle int32

const (
	// 默认
	HighlightTextStyle_style_none HighlightTextStyle = 0
	// 高亮
	HighlightTextStyle_style_highlight HighlightTextStyle = 1
)

var HighlightTextStyle_name = map[int32]string{
	0: "style_none",
	1: "style_highlight",
}

var HighlightTextStyle_value = map[string]int32{
	"style_none":      0,
	"style_highlight": 1,
}

func (x HighlightTextStyle) String() string {
	return proto.EnumName(HighlightTextStyle_name, int32(x))
}

func (HighlightTextStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{25}
}

// 抽奖类型
type ReserveRelationLotteryType int32

const (
	// 默认
	ReserveRelationLotteryType_reserve_relation_lottery_type_default ReserveRelationLotteryType = 0
	// 定时抽奖
	ReserveRelationLotteryType_reserve_relation_lottery_type_cron ReserveRelationLotteryType = 1
)

var ReserveRelationLotteryType_name = map[int32]string{
	0: "reserve_relation_lottery_type_default",
	1: "reserve_relation_lottery_type_cron",
}

var ReserveRelationLotteryType_value = map[string]int32{
	"reserve_relation_lottery_type_default": 0,
	"reserve_relation_lottery_type_cron":    1,
}

func (x ReserveRelationLotteryType) String() string {
	return proto.EnumName(ReserveRelationLotteryType_name, int32(x))
}

func (ReserveRelationLotteryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{26}
}

// DynExtendType 枚举-动态小卡类型
type DynExtendType int32

const (
	DynExtendType_dyn_ext_type_none     DynExtendType = 0
	DynExtendType_dyn_ext_type_topic    DynExtendType = 1
	DynExtendType_dyn_ext_type_lbs      DynExtendType = 2
	DynExtendType_dyn_ext_type_hot      DynExtendType = 3
	DynExtendType_dyn_ext_type_game     DynExtendType = 4
	DynExtendType_dyn_ext_type_common   DynExtendType = 5
	DynExtendType_dyn_ext_type_biliCut  DynExtendType = 6
	DynExtendType_dyn_ext_type_ogv      DynExtendType = 7
	DynExtendType_dyn_ext_type_auto_ogv DynExtendType = 8
)

var DynExtendType_name = map[int32]string{
	0: "dyn_ext_type_none",
	1: "dyn_ext_type_topic",
	2: "dyn_ext_type_lbs",
	3: "dyn_ext_type_hot",
	4: "dyn_ext_type_game",
	5: "dyn_ext_type_common",
	6: "dyn_ext_type_biliCut",
	7: "dyn_ext_type_ogv",
	8: "dyn_ext_type_auto_ogv",
}

var DynExtendType_value = map[string]int32{
	"dyn_ext_type_none":     0,
	"dyn_ext_type_topic":    1,
	"dyn_ext_type_lbs":      2,
	"dyn_ext_type_hot":      3,
	"dyn_ext_type_game":     4,
	"dyn_ext_type_common":   5,
	"dyn_ext_type_biliCut":  6,
	"dyn_ext_type_ogv":      7,
	"dyn_ext_type_auto_ogv": 8,
}

func (x DynExtendType) String() string {
	return proto.EnumName(DynExtendType_name, int32(x))
}

func (DynExtendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{27}
}

type LocalIconType int32

const (
	LocalIconType_local_icon_comment LocalIconType = 0
	LocalIconType_local_icon_like    LocalIconType = 1
	LocalIconType_local_icon_avatar  LocalIconType = 2
	LocalIconType_local_icon_cover   LocalIconType = 3
)

var LocalIconType_name = map[int32]string{
	0: "local_icon_comment",
	1: "local_icon_like",
	2: "local_icon_avatar",
	3: "local_icon_cover",
}

var LocalIconType_value = map[string]int32{
	"local_icon_comment": 0,
	"local_icon_like":    1,
	"local_icon_avatar":  2,
	"local_icon_cover":   3,
}

func (x LocalIconType) String() string {
	return proto.EnumName(LocalIconType_name, int32(x))
}

func (LocalIconType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{28}
}

// DynUriType
type DynUriType int32

const (
	DynUriType_dyn_uri_type_none   DynUriType = 0
	DynUriType_dyn_uri_type_direct DynUriType = 1
	DynUriType_dyn_uri_type_suffix DynUriType = 2
)

var DynUriType_name = map[int32]string{
	0: "dyn_uri_type_none",
	1: "dyn_uri_type_direct",
	2: "dyn_uri_type_suffix",
}

var DynUriType_value = map[string]int32{
	"dyn_uri_type_none":   0,
	"dyn_uri_type_direct": 1,
	"dyn_uri_type_suffix": 2,
}

func (x DynUriType) String() string {
	return proto.EnumName(DynUriType_name, int32(x))
}

func (DynUriType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{29}
}

// FoldType 枚举-折叠类型
type FoldType int32

const (
	// 占位
	FoldType_FoldTypeZore FoldType = 0
	// 用户发布折叠
	FoldType_FoldTypePublish FoldType = 1
	// 转发超频折叠
	FoldType_FoldTypeFrequent FoldType = 2
	// 联合投稿折叠
	FoldType_FoldTypeUnite FoldType = 3
	// 动态受限折叠
	FoldType_FoldTypeLimit FoldType = 4
	// 话题收拢折叠
	FoldType_FoldTypeTopicMerged FoldType = 5
)

var FoldType_name = map[int32]string{
	0: "FoldTypeZore",
	1: "FoldTypePublish",
	2: "FoldTypeFrequent",
	3: "FoldTypeUnite",
	4: "FoldTypeLimit",
	5: "FoldTypeTopicMerged",
}

var FoldType_value = map[string]int32{
	"FoldTypeZore":        0,
	"FoldTypePublish":     1,
	"FoldTypeFrequent":    2,
	"FoldTypeUnite":       3,
	"FoldTypeLimit":       4,
	"FoldTypeTopicMerged": 5,
}

func (x FoldType) String() string {
	return proto.EnumName(FoldType_name, int32(x))
}

func (FoldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{30}
}

// 头像样式类型
type StyleType int32

const (
	StyleType_STYLE_TYPE_NONE   StyleType = 0
	StyleType_STYLE_TYPE_LIVE   StyleType = 1
	StyleType_STYLE_TYPE_DYN_UP StyleType = 2
)

var StyleType_name = map[int32]string{
	0: "STYLE_TYPE_NONE",
	1: "STYLE_TYPE_LIVE",
	2: "STYLE_TYPE_DYN_UP",
}

var StyleType_value = map[string]int32{
	"STYLE_TYPE_NONE":   0,
	"STYLE_TYPE_LIVE":   1,
	"STYLE_TYPE_DYN_UP": 2,
}

func (x StyleType) String() string {
	return proto.EnumName(StyleType_name, int32(x))
}

func (StyleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{31}
}

type UserItemType int32

const (
	UserItemType_user_item_type_none        UserItemType = 0
	UserItemType_user_item_type_live        UserItemType = 1
	UserItemType_user_item_type_live_custom UserItemType = 2
	UserItemType_user_item_type_normal      UserItemType = 3
	UserItemType_user_item_type_extend      UserItemType = 4
	// 首映已预约
	UserItemType_user_item_type_premiere_reserve UserItemType = 5
	// 首映未预约
	UserItemType_user_item_type_premiere UserItemType = 6
)

var UserItemType_name = map[int32]string{
	0: "user_item_type_none",
	1: "user_item_type_live",
	2: "user_item_type_live_custom",
	3: "user_item_type_normal",
	4: "user_item_type_extend",
	5: "user_item_type_premiere_reserve",
	6: "user_item_type_premiere",
}

var UserItemType_value = map[string]int32{
	"user_item_type_none":             0,
	"user_item_type_live":             1,
	"user_item_type_live_custom":      2,
	"user_item_type_normal":           3,
	"user_item_type_extend":           4,
	"user_item_type_premiere_reserve": 5,
	"user_item_type_premiere":         6,
}

func (x UserItemType) String() string {
	return proto.EnumName(UserItemType_name, int32(x))
}

func (UserItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{32}
}

// DynModuleType 枚举-动态模块类型
type DynModuleType int32

const (
	DynModuleType_module_none              DynModuleType = 0
	DynModuleType_module_author            DynModuleType = 1
	DynModuleType_module_dispute           DynModuleType = 2
	DynModuleType_module_desc              DynModuleType = 3
	DynModuleType_module_dynamic           DynModuleType = 4
	DynModuleType_module_forward           DynModuleType = 5
	DynModuleType_module_likeUser          DynModuleType = 6
	DynModuleType_module_extend            DynModuleType = 7
	DynModuleType_module_additional        DynModuleType = 8
	DynModuleType_module_stat              DynModuleType = 9
	DynModuleType_module_fold              DynModuleType = 10
	DynModuleType_module_comment           DynModuleType = 11
	DynModuleType_module_interaction       DynModuleType = 12
	DynModuleType_module_author_forward    DynModuleType = 13
	DynModuleType_module_ad                DynModuleType = 14
	DynModuleType_module_banner            DynModuleType = 15
	DynModuleType_module_item_null         DynModuleType = 16
	DynModuleType_module_share_info        DynModuleType = 17
	DynModuleType_module_recommend         DynModuleType = 18
	DynModuleType_module_stat_forward      DynModuleType = 19
	DynModuleType_module_top               DynModuleType = 20
	DynModuleType_module_bottom            DynModuleType = 21
	DynModuleType_module_story             DynModuleType = 22
	DynModuleType_module_topic             DynModuleType = 23
	DynModuleType_module_topic_details_ext DynModuleType = 24
	DynModuleType_module_top_tag           DynModuleType = 25
	DynModuleType_module_topic_brief       DynModuleType = 26
	DynModuleType_module_title             DynModuleType = 27
	DynModuleType_module_button            DynModuleType = 28
	DynModuleType_module_notice            DynModuleType = 29
)

var DynModuleType_name = map[int32]string{
	0:  "module_none",
	1:  "module_author",
	2:  "module_dispute",
	3:  "module_desc",
	4:  "module_dynamic",
	5:  "module_forward",
	6:  "module_likeUser",
	7:  "module_extend",
	8:  "module_additional",
	9:  "module_stat",
	10: "module_fold",
	11: "module_comment",
	12: "module_interaction",
	13: "module_author_forward",
	14: "module_ad",
	15: "module_banner",
	16: "module_item_null",
	17: "module_share_info",
	18: "module_recommend",
	19: "module_stat_forward",
	20: "module_top",
	21: "module_bottom",
	22: "module_story",
	23: "module_topic",
	24: "module_topic_details_ext",
	25: "module_top_tag",
	26: "module_topic_brief",
	27: "module_title",
	28: "module_button",
	29: "module_notice",
}

var DynModuleType_value = map[string]int32{
	"module_none":              0,
	"module_author":            1,
	"module_dispute":           2,
	"module_desc":              3,
	"module_dynamic":           4,
	"module_forward":           5,
	"module_likeUser":          6,
	"module_extend":            7,
	"module_additional":        8,
	"module_stat":              9,
	"module_fold":              10,
	"module_comment":           11,
	"module_interaction":       12,
	"module_author_forward":    13,
	"module_ad":                14,
	"module_banner":            15,
	"module_item_null":         16,
	"module_share_info":        17,
	"module_recommend":         18,
	"module_stat_forward":      19,
	"module_top":               20,
	"module_bottom":            21,
	"module_story":             22,
	"module_topic":             23,
	"module_topic_details_ext": 24,
	"module_top_tag":           25,
	"module_topic_brief":       26,
	"module_title":             27,
	"module_button":            28,
	"module_notice":            29,
}

func (x DynModuleType) String() string {
	return proto.EnumName(DynModuleType_name, int32(x))
}

func (DynModuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{33}
}

// AdditionVoteType 投票类型
type AdditionVoteType int32

const (
	AdditionVoteType_addition_vote_type_none    AdditionVoteType = 0
	AdditionVoteType_addition_vote_type_word    AdditionVoteType = 1
	AdditionVoteType_addition_vote_type_pic     AdditionVoteType = 2
	AdditionVoteType_addition_vote_type_default AdditionVoteType = 3
)

var AdditionVoteType_name = map[int32]string{
	0: "addition_vote_type_none",
	1: "addition_vote_type_word",
	2: "addition_vote_type_pic",
	3: "addition_vote_type_default",
}

var AdditionVoteType_value = map[string]int32{
	"addition_vote_type_none":    0,
	"addition_vote_type_word":    1,
	"addition_vote_type_pic":     2,
	"addition_vote_type_default": 3,
}

func (x AdditionVoteType) String() string {
	return proto.EnumName(AdditionVoteType_name, int32(x))
}

func (AdditionVoteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{34}
}

// AdditionVoteState 投票状态
type AdditionVoteState int32

const (
	AdditionVoteState_addition_vote_state_none  AdditionVoteState = 0
	AdditionVoteState_addition_vote_state_open  AdditionVoteState = 1
	AdditionVoteState_addition_vote_state_close AdditionVoteState = 2
)

var AdditionVoteState_name = map[int32]string{
	0: "addition_vote_state_none",
	1: "addition_vote_state_open",
	2: "addition_vote_state_close",
}

var AdditionVoteState_value = map[string]int32{
	"addition_vote_state_none":  0,
	"addition_vote_state_open":  1,
	"addition_vote_state_close": 2,
}

func (x AdditionVoteState) String() string {
	return proto.EnumName(AdditionVoteState_name, int32(x))
}

func (AdditionVoteState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{35}
}

// 动态列表-通栏类型
type ModuleBannerType int32

const (
	ModuleBannerType_module_banner_type_none ModuleBannerType = 0
	ModuleBannerType_module_banner_type_user ModuleBannerType = 1
)

var ModuleBannerType_name = map[int32]string{
	0: "module_banner_type_none",
	1: "module_banner_type_user",
}

var ModuleBannerType_value = map[string]int32{
	"module_banner_type_none": 0,
	"module_banner_type_user": 1,
}

func (x ModuleBannerType) String() string {
	return proto.EnumName(ModuleBannerType_name, int32(x))
}

func (ModuleBannerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{36}
}

type ModuleAuthorBadgeType int32

const (
	ModuleAuthorBadgeType_module_author_badge_type_none       ModuleAuthorBadgeType = 0
	ModuleAuthorBadgeType_module_author_badge_type_threePoint ModuleAuthorBadgeType = 1
	ModuleAuthorBadgeType_module_author_badge_type_button     ModuleAuthorBadgeType = 2
	ModuleAuthorBadgeType_module_author_badge_type_weight     ModuleAuthorBadgeType = 3
)

var ModuleAuthorBadgeType_name = map[int32]string{
	0: "module_author_badge_type_none",
	1: "module_author_badge_type_threePoint",
	2: "module_author_badge_type_button",
	3: "module_author_badge_type_weight",
}

var ModuleAuthorBadgeType_value = map[string]int32{
	"module_author_badge_type_none":       0,
	"module_author_badge_type_threePoint": 1,
	"module_author_badge_type_button":     2,
	"module_author_badge_type_weight":     3,
}

func (x ModuleAuthorBadgeType) String() string {
	return proto.EnumName(ModuleAuthorBadgeType_name, int32(x))
}

func (ModuleAuthorBadgeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{37}
}

// ThreePointType 枚举-三点类型
type ThreePointType int32

const (
	ThreePointType_tp_none          ThreePointType = 0
	ThreePointType_background       ThreePointType = 1
	ThreePointType_auto_play        ThreePointType = 2
	ThreePointType_share            ThreePointType = 3
	ThreePointType_wait             ThreePointType = 4
	ThreePointType_attention        ThreePointType = 5
	ThreePointType_report           ThreePointType = 6
	ThreePointType_delete           ThreePointType = 7
	ThreePointType_dislike          ThreePointType = 8
	ThreePointType_favorite         ThreePointType = 9
	ThreePointType_top              ThreePointType = 10
	ThreePointType_comment          ThreePointType = 11
	ThreePointType_hide             ThreePointType = 12
	ThreePointType_campus_delete    ThreePointType = 13
	ThreePointType_topic_irrelevant ThreePointType = 14
	ThreePointType_batch_cancel     ThreePointType = 15
	ThreePointType_topic_set_cancel ThreePointType = 16
	ThreePointType_dynamic_edit     ThreePointType = 17
)

var ThreePointType_name = map[int32]string{
	0:  "tp_none",
	1:  "background",
	2:  "auto_play",
	3:  "share",
	4:  "wait",
	5:  "attention",
	6:  "report",
	7:  "delete",
	8:  "dislike",
	9:  "favorite",
	10: "top",
	11: "comment",
	12: "hide",
	13: "campus_delete",
	14: "topic_irrelevant",
	15: "batch_cancel",
	16: "topic_set_cancel",
	17: "dynamic_edit",
}

var ThreePointType_value = map[string]int32{
	"tp_none":          0,
	"background":       1,
	"auto_play":        2,
	"share":            3,
	"wait":             4,
	"attention":        5,
	"report":           6,
	"delete":           7,
	"dislike":          8,
	"favorite":         9,
	"top":              10,
	"comment":          11,
	"hide":             12,
	"campus_delete":    13,
	"topic_irrelevant": 14,
	"batch_cancel":     15,
	"topic_set_cancel": 16,
	"dynamic_edit":     17,
}

func (x ThreePointType) String() string {
	return proto.EnumName(ThreePointType_name, int32(x))
}

func (ThreePointType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{38}
}

// ThreePointAttentionStatus 枚举-三点关注状态
type ThreePointAttentionStatus int32

const (
	ThreePointAttentionStatus_tp_not_attention ThreePointAttentionStatus = 0
	ThreePointAttentionStatus_tp_attention     ThreePointAttentionStatus = 1
)

var ThreePointAttentionStatus_name = map[int32]string{
	0: "tp_not_attention",
	1: "tp_attention",
}

var ThreePointAttentionStatus_value = map[string]int32{
	"tp_not_attention": 0,
	"tp_attention":     1,
}

func (x ThreePointAttentionStatus) String() string {
	return proto.EnumName(ThreePointAttentionStatus_name, int32(x))
}

func (ThreePointAttentionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{39}
}

type TopType int32

const (
	// 默认 置顶
	TopType_top_none TopType = 0
	// 取消置顶
	TopType_top_cancel TopType = 1
)

var TopType_name = map[int32]string{
	0: "top_none",
	1: "top_cancel",
}

var TopType_value = map[string]int32{
	"top_none":   0,
	"top_cancel": 1,
}

func (x TopType) String() string {
	return proto.EnumName(TopType_name, int32(x))
}

func (TopType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{40}
}

// WeightType 枚举-提权类型
type WeightType int32

const (
	// 默认 占位
	WeightType_weight_none WeightType = 0
	// 不感兴趣
	WeightType_weight_dislike WeightType = 1
	// 跳链
	WeightType_weight_jump WeightType = 2
)

var WeightType_name = map[int32]string{
	0: "weight_none",
	1: "weight_dislike",
	2: "weight_jump",
}

var WeightType_value = map[string]int32{
	"weight_none":    0,
	"weight_dislike": 1,
	"weight_jump":    2,
}

func (x WeightType) String() string {
	return proto.EnumName(WeightType_name, int32(x))
}

func (WeightType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{41}
}

type FollowType int32

const (
	FollowType_ft_not_follow FollowType = 0
	FollowType_ft_follow     FollowType = 1
)

var FollowType_name = map[int32]string{
	0: "ft_not_follow",
	1: "ft_follow",
}

var FollowType_value = map[string]int32{
	"ft_not_follow": 0,
	"ft_follow":     1,
}

func (x FollowType) String() string {
	return proto.EnumName(FollowType_name, int32(x))
}

func (FollowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{42}
}

type ThumbType int32

const (
	ThumbType_cancel ThumbType = 0
	ThumbType_thumb  ThumbType = 1
)

var ThumbType_name = map[int32]string{
	0: "cancel",
	1: "thumb",
}

var ThumbType_value = map[string]int32{
	"cancel": 0,
	"thumb":  1,
}

func (x ThumbType) String() string {
	return proto.EnumName(ThumbType_name, int32(x))
}

func (ThumbType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{43}
}

type VoteStatus int32

const (
	VoteStatus_normal    VoteStatus = 0
	VoteStatus_anonymous VoteStatus = 1
)

var VoteStatus_name = map[int32]string{
	0: "normal",
	1: "anonymous",
}

var VoteStatus_value = map[string]int32{
	"normal":    0,
	"anonymous": 1,
}

func (x VoteStatus) String() string {
	return proto.EnumName(VoteStatus_name, int32(x))
}

func (VoteStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{44}
}

// 关注关系 枚举
type RelationStatus int32

const (
	// 1-未关注 2-关注 3-被关注 4-互相关注 5-特别关注
	RelationStatus_relation_status_none           RelationStatus = 0
	RelationStatus_relation_status_nofollow       RelationStatus = 1
	RelationStatus_relation_status_follow         RelationStatus = 2
	RelationStatus_relation_status_followed       RelationStatus = 3
	RelationStatus_relation_status_mutual_concern RelationStatus = 4
	RelationStatus_relation_status_special        RelationStatus = 5
)

var RelationStatus_name = map[int32]string{
	0: "relation_status_none",
	1: "relation_status_nofollow",
	2: "relation_status_follow",
	3: "relation_status_followed",
	4: "relation_status_mutual_concern",
	5: "relation_status_special",
}

var RelationStatus_value = map[string]int32{
	"relation_status_none":           0,
	"relation_status_nofollow":       1,
	"relation_status_follow":         2,
	"relation_status_followed":       3,
	"relation_status_mutual_concern": 4,
	"relation_status_special":        5,
}

func (x RelationStatus) String() string {
	return proto.EnumName(RelationStatus_name, int32(x))
}

func (RelationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{45}
}

// 轻浏览来源，根据来源请求不同的接口
type LightFromType int32

const (
	// 登录
	LightFromType_from_login LightFromType = 0
	// 未登录
	LightFromType_from_unlogin LightFromType = 1
)

var LightFromType_name = map[int32]string{
	0: "from_login",
	1: "from_unlogin",
}

var LightFromType_value = map[string]int32{
	"from_login":   0,
	"from_unlogin": 1,
}

func (x LightFromType) String() string {
	return proto.EnumName(LightFromType_name, int32(x))
}

func (LightFromType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{46}
}

// 评论类型
type RepostType int32

const (
	// 热门评论
	RepostType_repost_hot RepostType = 0
	// 普通评论
	RepostType_repost_general RepostType = 1
)

var RepostType_name = map[int32]string{
	0: "repost_hot",
	1: "repost_general",
}

var RepostType_value = map[string]int32{
	"repost_hot":     0,
	"repost_general": 1,
}

func (x RepostType) String() string {
	return proto.EnumName(RepostType_name, int32(x))
}

func (RepostType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{47}
}

// 推荐模块数据类型
type RcmdType int32

const (
	// 稿件
	RcmdType_rcmd_archive RcmdType = 0
	// 动态（图文）
	RcmdType_rcmd_dynamic RcmdType = 1
)

var RcmdType_name = map[int32]string{
	0: "rcmd_archive",
	1: "rcmd_dynamic",
}

var RcmdType_value = map[string]int32{
	"rcmd_archive": 0,
	"rcmd_dynamic": 1,
}

func (x RcmdType) String() string {
	return proto.EnumName(RcmdType_name, int32(x))
}

func (RcmdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{48}
}

type RcmdReasonStyle int32

const (
	// 无推荐样式(或者新增样式老版本不识别）走兜底的校园名称 显示学校icon
	RcmdReasonStyle_rcmd_reason_style_none RcmdReasonStyle = 0
	// 端上预设 附近校园双列推荐卡片的推荐样式，显示 rcmd_reason 字段
	RcmdReasonStyle_rcmd_reason_style_campus_nearby RcmdReasonStyle = 1
	// 瀑布流 up主样式，显示 up_name 字段
	RcmdReasonStyle_rcmd_reason_style_campus_up RcmdReasonStyle = 2
	// 瀑布流 推荐理由 + up主 混合样式，同时显示 rcmd_reason up_name 字段
	RcmdReasonStyle_rcmd_reason_style_campus_near_up_mix RcmdReasonStyle = 3
)

var RcmdReasonStyle_name = map[int32]string{
	0: "rcmd_reason_style_none",
	1: "rcmd_reason_style_campus_nearby",
	2: "rcmd_reason_style_campus_up",
	3: "rcmd_reason_style_campus_near_up_mix",
}

var RcmdReasonStyle_value = map[string]int32{
	"rcmd_reason_style_none":               0,
	"rcmd_reason_style_campus_nearby":      1,
	"rcmd_reason_style_campus_up":          2,
	"rcmd_reason_style_campus_near_up_mix": 3,
}

func (x RcmdReasonStyle) String() string {
	return proto.EnumName(RcmdReasonStyle_name, int32(x))
}

func (RcmdReasonStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{49}
}

type CoverIcon int32

const (
	// 占位 啥都不展示
	CoverIcon_cover_icon_none CoverIcon = 0
	// 播放icon
	CoverIcon_cover_icon_play CoverIcon = 1
	// 弹幕icon
	CoverIcon_cover_icon_danmaku CoverIcon = 2
	// up icon
	CoverIcon_cover_icon_up CoverIcon = 3
)

var CoverIcon_name = map[int32]string{
	0: "cover_icon_none",
	1: "cover_icon_play",
	2: "cover_icon_danmaku",
	3: "cover_icon_up",
}

var CoverIcon_value = map[string]int32{
	"cover_icon_none":    0,
	"cover_icon_play":    1,
	"cover_icon_danmaku": 2,
	"cover_icon_up":      3,
}

func (x CoverIcon) String() string {
	return proto.EnumName(CoverIcon_name, int32(x))
}

func (CoverIcon) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{50}
}

type CampusTabType int32

const (
	// 占位
	CampusTabType_campus_none CampusTabType = 0
	// 校友圈
	CampusTabType_campus_school CampusTabType = 1
	// 入校必看
	CampusTabType_campus_dynamic CampusTabType = 2
	// 官方账号
	CampusTabType_campus_account CampusTabType = 3
	// 校园十大榜单
	CampusTabType_campus_billboard CampusTabType = 4
	// 校园话题讨论
	CampusTabType_campus_topic CampusTabType = 5
	// 其它院校
	CampusTabType_campues_other CampusTabType = 6
)

var CampusTabType_name = map[int32]string{
	0: "campus_none",
	1: "campus_school",
	2: "campus_dynamic",
	3: "campus_account",
	4: "campus_billboard",
	5: "campus_topic",
	6: "campues_other",
}

var CampusTabType_value = map[string]int32{
	"campus_none":      0,
	"campus_school":    1,
	"campus_dynamic":   2,
	"campus_account":   3,
	"campus_billboard": 4,
	"campus_topic":     5,
	"campues_other":    6,
}

func (x CampusTabType) String() string {
	return proto.EnumName(CampusTabType_name, int32(x))
}

func (CampusTabType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{51}
}

// 是否展示备选
type ShowType int32

const (
	// 默认
	ShowType_show_type_none ShowType = 0
	// 展示备选
	ShowType_show_type_backup ShowType = 1
)

var ShowType_name = map[int32]string{
	0: "show_type_none",
	1: "show_type_backup",
}

var ShowType_value = map[string]int32{
	"show_type_none":   0,
	"show_type_backup": 1,
}

func (x ShowType) String() string {
	return proto.EnumName(ShowType_name, int32(x))
}

func (ShowType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{52}
}

type NetworkType int32

const (
	NetworkType_NT_UNKNOWN NetworkType = 0
	NetworkType_WIFI       NetworkType = 1
	NetworkType_CELLULAR   NetworkType = 2
	NetworkType_OFFLINE    NetworkType = 3
	NetworkType_OTHERNET   NetworkType = 4
	NetworkType_ETHERNET   NetworkType = 5
)

var NetworkType_name = map[int32]string{
	0: "NT_UNKNOWN",
	1: "WIFI",
	2: "CELLULAR",
	3: "OFFLINE",
	4: "OTHERNET",
	5: "ETHERNET",
}

var NetworkType_value = map[string]int32{
	"NT_UNKNOWN": 0,
	"WIFI":       1,
	"CELLULAR":   2,
	"OFFLINE":    3,
	"OTHERNET":   4,
	"ETHERNET":   5,
}

func (x NetworkType) String() string {
	return proto.EnumName(NetworkType_name, int32(x))
}

func (NetworkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{53}
}

type TFType int32

const (
	TFType_TF_UNKNOWN TFType = 0
	TFType_U_CARD     TFType = 1
	TFType_U_PKG      TFType = 2
	TFType_C_CARD     TFType = 3
	TFType_C_PKG      TFType = 4
	TFType_T_CARD     TFType = 5
	TFType_T_PKG      TFType = 6
)

var TFType_name = map[int32]string{
	0: "TF_UNKNOWN",
	1: "U_CARD",
	2: "U_PKG",
	3: "C_CARD",
	4: "C_PKG",
	5: "T_CARD",
	6: "T_PKG",
}

var TFType_value = map[string]int32{
	"TF_UNKNOWN": 0,
	"U_CARD":     1,
	"U_PKG":      2,
	"C_CARD":     3,
	"C_PKG":      4,
	"T_CARD":     5,
	"T_PKG":      6,
}

func (x TFType) String() string {
	return proto.EnumName(TFType_name, int32(x))
}

func (TFType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{54}
}

// 校园tab设置
type HomePageTabSttingStatus int32

const (
	// 无效
	HomePageTabSttingStatus_SETTING_INVALID HomePageTabSttingStatus = 0
	// 打开首页校园tab设置
	HomePageTabSttingStatus_SETTING_OPEN HomePageTabSttingStatus = 1
	// 关闭首页校园tab设置
	HomePageTabSttingStatus_SETTING_CLOSE HomePageTabSttingStatus = 2
)

var HomePageTabSttingStatus_name = map[int32]string{
	0: "SETTING_INVALID",
	1: "SETTING_OPEN",
	2: "SETTING_CLOSE",
}

var HomePageTabSttingStatus_value = map[string]int32{
	"SETTING_INVALID": 0,
	"SETTING_OPEN":    1,
	"SETTING_CLOSE":   2,
}

func (x HomePageTabSttingStatus) String() string {
	return proto.EnumName(HomePageTabSttingStatus_name, int32(x))
}

func (HomePageTabSttingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{55}
}

type CampusHomePageType int32

const (
	// 默认 主态首页 简化后不含二级tab信息
	CampusHomePageType_PAGE_MAJOR CampusHomePageType = 0
	// 二级页 基本和主态首页一样（通常用于以客态访问其他学校的首页/或者从h5榜单跳进学校主页等）
	CampusHomePageType_PAGE_SUBORDINATE CampusHomePageType = 1
	// 校园首页简化后跳进的二级页 相比主态首页增加二级tab信息和校园简介等
	CampusHomePageType_PAGE_MAJOR_DETAIL CampusHomePageType = 2
)

var CampusHomePageType_name = map[int32]string{
	0: "PAGE_MAJOR",
	1: "PAGE_SUBORDINATE",
	2: "PAGE_MAJOR_DETAIL",
}

var CampusHomePageType_value = map[string]int32{
	"PAGE_MAJOR":        0,
	"PAGE_SUBORDINATE":  1,
	"PAGE_MAJOR_DETAIL": 2,
}

func (x CampusHomePageType) String() string {
	return proto.EnumName(CampusHomePageType_name, int32(x))
}

func (CampusHomePageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{56}
}

// 学校请求来源
type CampusReqFromType int32

const (
	// 动态页
	CampusReqFromType_DYNAMIC CampusReqFromType = 0
	// 首页
	CampusReqFromType_HOME CampusReqFromType = 1
)

var CampusReqFromType_name = map[int32]string{
	0: "DYNAMIC",
	1: "HOME",
}

var CampusReqFromType_value = map[string]int32{
	"DYNAMIC": 0,
	"HOME":    1,
}

func (x CampusReqFromType) String() string {
	return proto.EnumName(CampusReqFromType_name, int32(x))
}

func (CampusReqFromType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{57}
}

// 校园双列推荐请求来源枚举
type CampusRcmdReqFrom int32

const (
	// 未知来源
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_UNKNOWN CampusRcmdReqFrom = 0
	// 首页-未开校双列推荐
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_HOME_UN_OPEN CampusRcmdReqFrom = 1
	// 其他院校下的双列推荐
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_VISIT_OTHER CampusRcmdReqFrom = 2
	// 首页-校友圈刷完出双列推荐
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_HOME_MOMENT CampusRcmdReqFrom = 3
	// 动态-校友圈刷完出双列推荐
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_DYN_MOMENT CampusRcmdReqFrom = 4
	// 二级详情页-校友圈刷完出双列推荐
	CampusRcmdReqFrom_CAMPUS_RCMD_FROM_PAGE_SUBORDINATE_MOMENT CampusRcmdReqFrom = 5
)

var CampusRcmdReqFrom_name = map[int32]string{
	0: "CAMPUS_RCMD_FROM_UNKNOWN",
	1: "CAMPUS_RCMD_FROM_HOME_UN_OPEN",
	2: "CAMPUS_RCMD_FROM_VISIT_OTHER",
	3: "CAMPUS_RCMD_FROM_HOME_MOMENT",
	4: "CAMPUS_RCMD_FROM_DYN_MOMENT",
	5: "CAMPUS_RCMD_FROM_PAGE_SUBORDINATE_MOMENT",
}

var CampusRcmdReqFrom_value = map[string]int32{
	"CAMPUS_RCMD_FROM_UNKNOWN":                 0,
	"CAMPUS_RCMD_FROM_HOME_UN_OPEN":            1,
	"CAMPUS_RCMD_FROM_VISIT_OTHER":             2,
	"CAMPUS_RCMD_FROM_HOME_MOMENT":             3,
	"CAMPUS_RCMD_FROM_DYN_MOMENT":              4,
	"CAMPUS_RCMD_FROM_PAGE_SUBORDINATE_MOMENT": 5,
}

func (x CampusRcmdReqFrom) String() string {
	return proto.EnumName(CampusRcmdReqFrom_name, int32(x))
}

func (CampusRcmdReqFrom) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{58}
}

type CampusEntryType int32

const (
	// 无效 占位
	CampusEntryType_NONE CampusEntryType = 0
	// 动态校园入口
	CampusEntryType_ENTRY_DYNAMIC CampusEntryType = 1
	// 首页校园入口
	CampusEntryType_ENTRY_HOME CampusEntryType = 2
)

var CampusEntryType_name = map[int32]string{
	0: "NONE",
	1: "ENTRY_DYNAMIC",
	2: "ENTRY_HOME",
}

var CampusEntryType_value = map[string]int32{
	"NONE":          0,
	"ENTRY_DYNAMIC": 1,
	"ENTRY_HOME":    2,
}

func (x CampusEntryType) String() string {
	return proto.EnumName(CampusEntryType_name, int32(x))
}

func (CampusEntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{59}
}

type CampusOnlineStatus int32

const (
	CampusOnlineStatus_campus_online_offline CampusOnlineStatus = 0
	CampusOnlineStatus_campus_online_online  CampusOnlineStatus = 1
)

var CampusOnlineStatus_name = map[int32]string{
	0: "campus_online_offline",
	1: "campus_online_online",
}

var CampusOnlineStatus_value = map[string]int32{
	"campus_online_offline": 0,
	"campus_online_online":  1,
}

func (x CampusOnlineStatus) String() string {
	return proto.EnumName(CampusOnlineStatus_name, int32(x))
}

func (CampusOnlineStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{60}
}

type CampusMngAuditStatus int32

const (
	CampusMngAuditStatus_campus_mng_audit_none       CampusMngAuditStatus = 0
	CampusMngAuditStatus_campus_mng_audit_in_process CampusMngAuditStatus = 1
	CampusMngAuditStatus_campus_mng_audit_failed     CampusMngAuditStatus = 2
)

var CampusMngAuditStatus_name = map[int32]string{
	0: "campus_mng_audit_none",
	1: "campus_mng_audit_in_process",
	2: "campus_mng_audit_failed",
}

var CampusMngAuditStatus_value = map[string]int32{
	"campus_mng_audit_none":       0,
	"campus_mng_audit_in_process": 1,
	"campus_mng_audit_failed":     2,
}

func (x CampusMngAuditStatus) String() string {
	return proto.EnumName(CampusMngAuditStatus_name, int32(x))
}

func (CampusMngAuditStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{61}
}

type CampusMngItemType int32

const (
	CampusMngItemType_campus_mng_none       CampusMngItemType = 0
	CampusMngItemType_campus_mng_basic_info CampusMngItemType = 1
	CampusMngItemType_campus_mng_badge      CampusMngItemType = 2
	CampusMngItemType_campus_mng_slogan     CampusMngItemType = 3
	CampusMngItemType_campus_mng_quiz       CampusMngItemType = 4
)

var CampusMngItemType_name = map[int32]string{
	0: "campus_mng_none",
	1: "campus_mng_basic_info",
	2: "campus_mng_badge",
	3: "campus_mng_slogan",
	4: "campus_mng_quiz",
}

var CampusMngItemType_value = map[string]int32{
	"campus_mng_none":       0,
	"campus_mng_basic_info": 1,
	"campus_mng_badge":      2,
	"campus_mng_slogan":     3,
	"campus_mng_quiz":       4,
}

func (x CampusMngItemType) String() string {
	return proto.EnumName(CampusMngItemType_name, int32(x))
}

func (CampusMngItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{62}
}

type CampusMngQuizAction int32

const (
	CampusMngQuizAction_campus_mng_quiz_act_list CampusMngQuizAction = 0
	CampusMngQuizAction_campus_mng_quiz_act_add  CampusMngQuizAction = 1
	CampusMngQuizAction_campus_mng_quiz_act_del  CampusMngQuizAction = 2
)

var CampusMngQuizAction_name = map[int32]string{
	0: "campus_mng_quiz_act_list",
	1: "campus_mng_quiz_act_add",
	2: "campus_mng_quiz_act_del",
}

var CampusMngQuizAction_value = map[string]int32{
	"campus_mng_quiz_act_list": 0,
	"campus_mng_quiz_act_add":  1,
	"campus_mng_quiz_act_del":  2,
}

func (x CampusMngQuizAction) String() string {
	return proto.EnumName(CampusMngQuizAction_name, int32(x))
}

func (CampusMngQuizAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{63}
}

type NoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoReq) Reset()         { *m = NoReq{} }
func (m *NoReq) String() string { return proto.CompactTextString(m) }
func (*NoReq) ProtoMessage()    {}
func (*NoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{0}
}
func (m *NoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoReq.Merge(m, src)
}
func (m *NoReq) XXX_Size() int {
	return m.Size()
}
func (m *NoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NoReq.DiscardUnknown(m)
}

var xxx_messageInfo_NoReq proto.InternalMessageInfo

type NoReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoReply) Reset()         { *m = NoReply{} }
func (m *NoReply) String() string { return proto.CompactTextString(m) }
func (*NoReply) ProtoMessage()    {}
func (*NoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{1}
}
func (m *NoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoReply.Merge(m, src)
}
func (m *NoReply) XXX_Size() int {
	return m.Size()
}
func (m *NoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NoReply.DiscardUnknown(m)
}

var xxx_messageInfo_NoReply proto.InternalMessageInfo

// DynVideoReq 动态视频页请求参数
type DynVideoReq struct {
	// 透传 update_baseline
	UpdateBaseline string `protobuf:"bytes,1,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 透传 history_offset
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 刷新方式 1向上刷新 2向下翻页
	RefreshType Refresh `protobuf:"varint,4,opt,name=refresh_type,json=refreshType,proto3,enum=bilibili.app.dynamic.v2.Refresh" json:"refresh_type,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 综合页当前更新的最大值
	AssistBaseline string `protobuf:"bytes,6,opt,name=assist_baseline,json=assistBaseline,proto3" json:"assist_baseline,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,7,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynVideoReq) Reset()         { *m = DynVideoReq{} }
func (m *DynVideoReq) String() string { return proto.CompactTextString(m) }
func (*DynVideoReq) ProtoMessage()    {}
func (*DynVideoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{2}
}
func (m *DynVideoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVideoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVideoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVideoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVideoReq.Merge(m, src)
}
func (m *DynVideoReq) XXX_Size() int {
	return m.Size()
}
func (m *DynVideoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVideoReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynVideoReq proto.InternalMessageInfo

func (m *DynVideoReq) GetUpdateBaseline() string {
	if m != nil {
		return m.UpdateBaseline
	}
	return ""
}

func (m *DynVideoReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynVideoReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynVideoReq) GetRefreshType() Refresh {
	if m != nil {
		return m.RefreshType
	}
	return Refresh_refresh_new
}

func (m *DynVideoReq) GetPlayurlParam() *PlayurlParam {
	if m != nil {
		return m.PlayurlParam
	}
	return nil
}

func (m *DynVideoReq) GetAssistBaseline() string {
	if m != nil {
		return m.AssistBaseline
	}
	return ""
}

func (m *DynVideoReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynVideoReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynVideoReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

// PlayurlParam 秒开通用参数
type PlayurlParam struct {
	// 秒开清晰度（秒开用）
	Qn int32 `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	// 功能版本号（秒开用）
	Fnver int32 `protobuf:"varint,2,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 功能标识（秒开用）
	Fnval int32 `protobuf:"varint,3,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 返回url是否强制使用域名（秒开用）
	ForceHost int32 `protobuf:"varint,4,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否需要4k视频，fourk=1 表示需要，其他表示不需要（秒开用）
	Fourk                int32    `protobuf:"varint,5,opt,name=fourk,proto3" json:"fourk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayurlParam) Reset()         { *m = PlayurlParam{} }
func (m *PlayurlParam) String() string { return proto.CompactTextString(m) }
func (*PlayurlParam) ProtoMessage()    {}
func (*PlayurlParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{3}
}
func (m *PlayurlParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayurlParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayurlParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayurlParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayurlParam.Merge(m, src)
}
func (m *PlayurlParam) XXX_Size() int {
	return m.Size()
}
func (m *PlayurlParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayurlParam.DiscardUnknown(m)
}

var xxx_messageInfo_PlayurlParam proto.InternalMessageInfo

func (m *PlayurlParam) GetQn() int32 {
	if m != nil {
		return m.Qn
	}
	return 0
}

func (m *PlayurlParam) GetFnver() int32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *PlayurlParam) GetFnval() int32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *PlayurlParam) GetForceHost() int32 {
	if m != nil {
		return m.ForceHost
	}
	return 0
}

func (m *PlayurlParam) GetFourk() int32 {
	if m != nil {
		return m.Fourk
	}
	return 0
}

// DynVideoReqReply 动态视频页返回值
type DynVideoReply struct {
	// 卡片列表
	DynamicList          *CardVideoDynList    `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	VideoUpList          *CardVideoUpList     `protobuf:"bytes,2,opt,name=video_up_list,json=videoUpList,proto3" json:"video_up_list,omitempty"`
	VideoFollowList      *CardVideoFollowList `protobuf:"bytes,3,opt,name=video_follow_list,json=videoFollowList,proto3" json:"video_follow_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DynVideoReply) Reset()         { *m = DynVideoReply{} }
func (m *DynVideoReply) String() string { return proto.CompactTextString(m) }
func (*DynVideoReply) ProtoMessage()    {}
func (*DynVideoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{4}
}
func (m *DynVideoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVideoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVideoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVideoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVideoReply.Merge(m, src)
}
func (m *DynVideoReply) XXX_Size() int {
	return m.Size()
}
func (m *DynVideoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVideoReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynVideoReply proto.InternalMessageInfo

func (m *DynVideoReply) GetDynamicList() *CardVideoDynList {
	if m != nil {
		return m.DynamicList
	}
	return nil
}

func (m *DynVideoReply) GetVideoUpList() *CardVideoUpList {
	if m != nil {
		return m.VideoUpList
	}
	return nil
}

func (m *DynVideoReply) GetVideoFollowList() *CardVideoFollowList {
	if m != nil {
		return m.VideoFollowList
	}
	return nil
}

// CardDynamic 动态卡片列表
type CardVideoDynList struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新的动态数
	UpdateNum int64 `protobuf:"varint,2,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,3,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 更新基础信息
	UpdateBaseline string `protobuf:"bytes,4,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 是否还有更多数据
	HasMore              bool     `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardVideoDynList) Reset()         { *m = CardVideoDynList{} }
func (m *CardVideoDynList) String() string { return proto.CompactTextString(m) }
func (*CardVideoDynList) ProtoMessage()    {}
func (*CardVideoDynList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{5}
}
func (m *CardVideoDynList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CardVideoDynList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CardVideoDynList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CardVideoDynList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardVideoDynList.Merge(m, src)
}
func (m *CardVideoDynList) XXX_Size() int {
	return m.Size()
}
func (m *CardVideoDynList) XXX_DiscardUnknown() {
	xxx_messageInfo_CardVideoDynList.DiscardUnknown(m)
}

var xxx_messageInfo_CardVideoDynList proto.InternalMessageInfo

func (m *CardVideoDynList) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CardVideoDynList) GetUpdateNum() int64 {
	if m != nil {
		return m.UpdateNum
	}
	return 0
}

func (m *CardVideoDynList) GetHistoryOffset() string {
	if m != nil {
		return m.HistoryOffset
	}
	return ""
}

func (m *CardVideoDynList) GetUpdateBaseline() string {
	if m != nil {
		return m.UpdateBaseline
	}
	return ""
}

func (m *CardVideoDynList) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// DynamicItem 动态卡片
type DynamicItem struct {
	// 动态卡片类型
	CardType DynamicType `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"card_type,omitempty"`
	// 转发类型下，源卡片类型
	ItemType DynamicType `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"item_type,omitempty"`
	// 模块内容
	Modules []*Module `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	// 操作相关字段
	Extend *Extend `protobuf:"bytes,4,opt,name=extend,proto3" json:"extend,omitempty"`
	// 该卡片下面是否含有折叠卡
	HasFold int32 `protobuf:"varint,5,opt,name=has_fold,json=hasFold,proto3" json:"has_fold,omitempty"`
	// 透传到客户端的埋点字段。
	ServerInfo           string   `protobuf:"bytes,6,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicItem) Reset()         { *m = DynamicItem{} }
func (m *DynamicItem) String() string { return proto.CompactTextString(m) }
func (*DynamicItem) ProtoMessage()    {}
func (*DynamicItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{6}
}
func (m *DynamicItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicItem.Merge(m, src)
}
func (m *DynamicItem) XXX_Size() int {
	return m.Size()
}
func (m *DynamicItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicItem.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicItem proto.InternalMessageInfo

func (m *DynamicItem) GetCardType() DynamicType {
	if m != nil {
		return m.CardType
	}
	return DynamicType_dyn_none
}

func (m *DynamicItem) GetItemType() DynamicType {
	if m != nil {
		return m.ItemType
	}
	return DynamicType_dyn_none
}

func (m *DynamicItem) GetModules() []*Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *DynamicItem) GetExtend() *Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (m *DynamicItem) GetHasFold() int32 {
	if m != nil {
		return m.HasFold
	}
	return 0
}

func (m *DynamicItem) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

// Module 动态模块
type Module struct {
	ModuleType DynModuleType `protobuf:"varint,1,opt,name=module_type,json=moduleType,proto3,enum=bilibili.app.dynamic.v2.DynModuleType" json:"module_type,omitempty"`
	// Types that are valid to be assigned to ModuleItem:
	//	*Module_ModuleAuthor
	//	*Module_ModuleDispute
	//	*Module_ModuleDesc
	//	*Module_ModuleDynamic
	//	*Module_ModuleLikeUser
	//	*Module_ModuleExtend
	//	*Module_ModuleAdditional
	//	*Module_ModuleStat
	//	*Module_ModuleFold
	//	*Module_ModuleComment
	//	*Module_ModuleInteraction
	//	*Module_ModuleAuthorForward
	//	*Module_ModuleAd
	//	*Module_ModuleBanner
	//	*Module_ModuleItemNull
	//	*Module_ModuleShareInfo
	//	*Module_ModuleRecommend
	//	*Module_ModuleTop
	//	*Module_ModuleButtom
	//	*Module_ModuleStatForward
	//	*Module_ModuleStory
	//	*Module_ModuleTopic
	//	*Module_ModuleTopicDetailsExt
	//	*Module_ModuleTopTag
	//	*Module_ModuleTopicBrief
	//	*Module_ModuleTitle
	//	*Module_ModuleButton
	//	*Module_ModuleNotice
	ModuleItem           isModule_ModuleItem `protobuf_oneof:"module_item"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Module) Reset()         { *m = Module{} }
func (m *Module) String() string { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()    {}
func (*Module) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{7}
}
func (m *Module) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Module) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Module.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Module) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Module.Merge(m, src)
}
func (m *Module) XXX_Size() int {
	return m.Size()
}
func (m *Module) XXX_DiscardUnknown() {
	xxx_messageInfo_Module.DiscardUnknown(m)
}

var xxx_messageInfo_Module proto.InternalMessageInfo

type isModule_ModuleItem interface {
	isModule_ModuleItem()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Module_ModuleAuthor struct {
	ModuleAuthor *ModuleAuthor `protobuf:"bytes,2,opt,name=module_author,json=moduleAuthor,proto3,oneof" json:"module_author,omitempty"`
}
type Module_ModuleDispute struct {
	ModuleDispute *ModuleDispute `protobuf:"bytes,3,opt,name=module_dispute,json=moduleDispute,proto3,oneof" json:"module_dispute,omitempty"`
}
type Module_ModuleDesc struct {
	ModuleDesc *ModuleDesc `protobuf:"bytes,4,opt,name=module_desc,json=moduleDesc,proto3,oneof" json:"module_desc,omitempty"`
}
type Module_ModuleDynamic struct {
	ModuleDynamic *ModuleDynamic `protobuf:"bytes,5,opt,name=module_dynamic,json=moduleDynamic,proto3,oneof" json:"module_dynamic,omitempty"`
}
type Module_ModuleLikeUser struct {
	ModuleLikeUser *ModuleLikeUser `protobuf:"bytes,6,opt,name=module_likeUser,json=moduleLikeUser,proto3,oneof" json:"module_likeUser,omitempty"`
}
type Module_ModuleExtend struct {
	ModuleExtend *ModuleExtend `protobuf:"bytes,7,opt,name=module_extend,json=moduleExtend,proto3,oneof" json:"module_extend,omitempty"`
}
type Module_ModuleAdditional struct {
	ModuleAdditional *ModuleAdditional `protobuf:"bytes,8,opt,name=module_additional,json=moduleAdditional,proto3,oneof" json:"module_additional,omitempty"`
}
type Module_ModuleStat struct {
	ModuleStat *ModuleStat `protobuf:"bytes,9,opt,name=module_stat,json=moduleStat,proto3,oneof" json:"module_stat,omitempty"`
}
type Module_ModuleFold struct {
	ModuleFold *ModuleFold `protobuf:"bytes,10,opt,name=module_fold,json=moduleFold,proto3,oneof" json:"module_fold,omitempty"`
}
type Module_ModuleComment struct {
	ModuleComment *ModuleComment `protobuf:"bytes,11,opt,name=module_comment,json=moduleComment,proto3,oneof" json:"module_comment,omitempty"`
}
type Module_ModuleInteraction struct {
	ModuleInteraction *ModuleInteraction `protobuf:"bytes,12,opt,name=module_interaction,json=moduleInteraction,proto3,oneof" json:"module_interaction,omitempty"`
}
type Module_ModuleAuthorForward struct {
	ModuleAuthorForward *ModuleAuthorForward `protobuf:"bytes,13,opt,name=module_author_forward,json=moduleAuthorForward,proto3,oneof" json:"module_author_forward,omitempty"`
}
type Module_ModuleAd struct {
	ModuleAd *ModuleAd `protobuf:"bytes,14,opt,name=module_ad,json=moduleAd,proto3,oneof" json:"module_ad,omitempty"`
}
type Module_ModuleBanner struct {
	ModuleBanner *ModuleBanner `protobuf:"bytes,15,opt,name=module_banner,json=moduleBanner,proto3,oneof" json:"module_banner,omitempty"`
}
type Module_ModuleItemNull struct {
	ModuleItemNull *ModuleItemNull `protobuf:"bytes,16,opt,name=module_item_null,json=moduleItemNull,proto3,oneof" json:"module_item_null,omitempty"`
}
type Module_ModuleShareInfo struct {
	ModuleShareInfo *ModuleShareInfo `protobuf:"bytes,17,opt,name=module_share_info,json=moduleShareInfo,proto3,oneof" json:"module_share_info,omitempty"`
}
type Module_ModuleRecommend struct {
	ModuleRecommend *ModuleRecommend `protobuf:"bytes,18,opt,name=module_recommend,json=moduleRecommend,proto3,oneof" json:"module_recommend,omitempty"`
}
type Module_ModuleTop struct {
	ModuleTop *ModuleTop `protobuf:"bytes,19,opt,name=module_top,json=moduleTop,proto3,oneof" json:"module_top,omitempty"`
}
type Module_ModuleButtom struct {
	ModuleButtom *ModuleButtom `protobuf:"bytes,20,opt,name=module_buttom,json=moduleButtom,proto3,oneof" json:"module_buttom,omitempty"`
}
type Module_ModuleStatForward struct {
	ModuleStatForward *ModuleStat `protobuf:"bytes,21,opt,name=module_stat_forward,json=moduleStatForward,proto3,oneof" json:"module_stat_forward,omitempty"`
}
type Module_ModuleStory struct {
	ModuleStory *ModuleStory `protobuf:"bytes,22,opt,name=module_story,json=moduleStory,proto3,oneof" json:"module_story,omitempty"`
}
type Module_ModuleTopic struct {
	ModuleTopic *ModuleTopic `protobuf:"bytes,23,opt,name=module_topic,json=moduleTopic,proto3,oneof" json:"module_topic,omitempty"`
}
type Module_ModuleTopicDetailsExt struct {
	ModuleTopicDetailsExt *ModuleTopicDetailsExt `protobuf:"bytes,24,opt,name=module_topic_details_ext,json=moduleTopicDetailsExt,proto3,oneof" json:"module_topic_details_ext,omitempty"`
}
type Module_ModuleTopTag struct {
	ModuleTopTag *ModuleTopTag `protobuf:"bytes,25,opt,name=module_top_tag,json=moduleTopTag,proto3,oneof" json:"module_top_tag,omitempty"`
}
type Module_ModuleTopicBrief struct {
	ModuleTopicBrief *ModuleTopicBrief `protobuf:"bytes,26,opt,name=module_topic_brief,json=moduleTopicBrief,proto3,oneof" json:"module_topic_brief,omitempty"`
}
type Module_ModuleTitle struct {
	ModuleTitle *ModuleTitle `protobuf:"bytes,27,opt,name=module_title,json=moduleTitle,proto3,oneof" json:"module_title,omitempty"`
}
type Module_ModuleButton struct {
	ModuleButton *ModuleButton `protobuf:"bytes,28,opt,name=module_button,json=moduleButton,proto3,oneof" json:"module_button,omitempty"`
}
type Module_ModuleNotice struct {
	ModuleNotice *ModuleNotice `protobuf:"bytes,29,opt,name=module_notice,json=moduleNotice,proto3,oneof" json:"module_notice,omitempty"`
}

func (*Module_ModuleAuthor) isModule_ModuleItem()          {}
func (*Module_ModuleDispute) isModule_ModuleItem()         {}
func (*Module_ModuleDesc) isModule_ModuleItem()            {}
func (*Module_ModuleDynamic) isModule_ModuleItem()         {}
func (*Module_ModuleLikeUser) isModule_ModuleItem()        {}
func (*Module_ModuleExtend) isModule_ModuleItem()          {}
func (*Module_ModuleAdditional) isModule_ModuleItem()      {}
func (*Module_ModuleStat) isModule_ModuleItem()            {}
func (*Module_ModuleFold) isModule_ModuleItem()            {}
func (*Module_ModuleComment) isModule_ModuleItem()         {}
func (*Module_ModuleInteraction) isModule_ModuleItem()     {}
func (*Module_ModuleAuthorForward) isModule_ModuleItem()   {}
func (*Module_ModuleAd) isModule_ModuleItem()              {}
func (*Module_ModuleBanner) isModule_ModuleItem()          {}
func (*Module_ModuleItemNull) isModule_ModuleItem()        {}
func (*Module_ModuleShareInfo) isModule_ModuleItem()       {}
func (*Module_ModuleRecommend) isModule_ModuleItem()       {}
func (*Module_ModuleTop) isModule_ModuleItem()             {}
func (*Module_ModuleButtom) isModule_ModuleItem()          {}
func (*Module_ModuleStatForward) isModule_ModuleItem()     {}
func (*Module_ModuleStory) isModule_ModuleItem()           {}
func (*Module_ModuleTopic) isModule_ModuleItem()           {}
func (*Module_ModuleTopicDetailsExt) isModule_ModuleItem() {}
func (*Module_ModuleTopTag) isModule_ModuleItem()          {}
func (*Module_ModuleTopicBrief) isModule_ModuleItem()      {}
func (*Module_ModuleTitle) isModule_ModuleItem()           {}
func (*Module_ModuleButton) isModule_ModuleItem()          {}
func (*Module_ModuleNotice) isModule_ModuleItem()          {}

func (m *Module) GetModuleItem() isModule_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (m *Module) GetModuleType() DynModuleType {
	if m != nil {
		return m.ModuleType
	}
	return DynModuleType_module_none
}

func (m *Module) GetModuleAuthor() *ModuleAuthor {
	if x, ok := m.GetModuleItem().(*Module_ModuleAuthor); ok {
		return x.ModuleAuthor
	}
	return nil
}

func (m *Module) GetModuleDispute() *ModuleDispute {
	if x, ok := m.GetModuleItem().(*Module_ModuleDispute); ok {
		return x.ModuleDispute
	}
	return nil
}

func (m *Module) GetModuleDesc() *ModuleDesc {
	if x, ok := m.GetModuleItem().(*Module_ModuleDesc); ok {
		return x.ModuleDesc
	}
	return nil
}

func (m *Module) GetModuleDynamic() *ModuleDynamic {
	if x, ok := m.GetModuleItem().(*Module_ModuleDynamic); ok {
		return x.ModuleDynamic
	}
	return nil
}

func (m *Module) GetModuleLikeUser() *ModuleLikeUser {
	if x, ok := m.GetModuleItem().(*Module_ModuleLikeUser); ok {
		return x.ModuleLikeUser
	}
	return nil
}

func (m *Module) GetModuleExtend() *ModuleExtend {
	if x, ok := m.GetModuleItem().(*Module_ModuleExtend); ok {
		return x.ModuleExtend
	}
	return nil
}

func (m *Module) GetModuleAdditional() *ModuleAdditional {
	if x, ok := m.GetModuleItem().(*Module_ModuleAdditional); ok {
		return x.ModuleAdditional
	}
	return nil
}

func (m *Module) GetModuleStat() *ModuleStat {
	if x, ok := m.GetModuleItem().(*Module_ModuleStat); ok {
		return x.ModuleStat
	}
	return nil
}

func (m *Module) GetModuleFold() *ModuleFold {
	if x, ok := m.GetModuleItem().(*Module_ModuleFold); ok {
		return x.ModuleFold
	}
	return nil
}

func (m *Module) GetModuleComment() *ModuleComment {
	if x, ok := m.GetModuleItem().(*Module_ModuleComment); ok {
		return x.ModuleComment
	}
	return nil
}

func (m *Module) GetModuleInteraction() *ModuleInteraction {
	if x, ok := m.GetModuleItem().(*Module_ModuleInteraction); ok {
		return x.ModuleInteraction
	}
	return nil
}

func (m *Module) GetModuleAuthorForward() *ModuleAuthorForward {
	if x, ok := m.GetModuleItem().(*Module_ModuleAuthorForward); ok {
		return x.ModuleAuthorForward
	}
	return nil
}

func (m *Module) GetModuleAd() *ModuleAd {
	if x, ok := m.GetModuleItem().(*Module_ModuleAd); ok {
		return x.ModuleAd
	}
	return nil
}

func (m *Module) GetModuleBanner() *ModuleBanner {
	if x, ok := m.GetModuleItem().(*Module_ModuleBanner); ok {
		return x.ModuleBanner
	}
	return nil
}

func (m *Module) GetModuleItemNull() *ModuleItemNull {
	if x, ok := m.GetModuleItem().(*Module_ModuleItemNull); ok {
		return x.ModuleItemNull
	}
	return nil
}

func (m *Module) GetModuleShareInfo() *ModuleShareInfo {
	if x, ok := m.GetModuleItem().(*Module_ModuleShareInfo); ok {
		return x.ModuleShareInfo
	}
	return nil
}

func (m *Module) GetModuleRecommend() *ModuleRecommend {
	if x, ok := m.GetModuleItem().(*Module_ModuleRecommend); ok {
		return x.ModuleRecommend
	}
	return nil
}

func (m *Module) GetModuleTop() *ModuleTop {
	if x, ok := m.GetModuleItem().(*Module_ModuleTop); ok {
		return x.ModuleTop
	}
	return nil
}

func (m *Module) GetModuleButtom() *ModuleButtom {
	if x, ok := m.GetModuleItem().(*Module_ModuleButtom); ok {
		return x.ModuleButtom
	}
	return nil
}

func (m *Module) GetModuleStatForward() *ModuleStat {
	if x, ok := m.GetModuleItem().(*Module_ModuleStatForward); ok {
		return x.ModuleStatForward
	}
	return nil
}

func (m *Module) GetModuleStory() *ModuleStory {
	if x, ok := m.GetModuleItem().(*Module_ModuleStory); ok {
		return x.ModuleStory
	}
	return nil
}

func (m *Module) GetModuleTopic() *ModuleTopic {
	if x, ok := m.GetModuleItem().(*Module_ModuleTopic); ok {
		return x.ModuleTopic
	}
	return nil
}

func (m *Module) GetModuleTopicDetailsExt() *ModuleTopicDetailsExt {
	if x, ok := m.GetModuleItem().(*Module_ModuleTopicDetailsExt); ok {
		return x.ModuleTopicDetailsExt
	}
	return nil
}

func (m *Module) GetModuleTopTag() *ModuleTopTag {
	if x, ok := m.GetModuleItem().(*Module_ModuleTopTag); ok {
		return x.ModuleTopTag
	}
	return nil
}

func (m *Module) GetModuleTopicBrief() *ModuleTopicBrief {
	if x, ok := m.GetModuleItem().(*Module_ModuleTopicBrief); ok {
		return x.ModuleTopicBrief
	}
	return nil
}

func (m *Module) GetModuleTitle() *ModuleTitle {
	if x, ok := m.GetModuleItem().(*Module_ModuleTitle); ok {
		return x.ModuleTitle
	}
	return nil
}

func (m *Module) GetModuleButton() *ModuleButton {
	if x, ok := m.GetModuleItem().(*Module_ModuleButton); ok {
		return x.ModuleButton
	}
	return nil
}

func (m *Module) GetModuleNotice() *ModuleNotice {
	if x, ok := m.GetModuleItem().(*Module_ModuleNotice); ok {
		return x.ModuleNotice
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Module) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Module_ModuleAuthor)(nil),
		(*Module_ModuleDispute)(nil),
		(*Module_ModuleDesc)(nil),
		(*Module_ModuleDynamic)(nil),
		(*Module_ModuleLikeUser)(nil),
		(*Module_ModuleExtend)(nil),
		(*Module_ModuleAdditional)(nil),
		(*Module_ModuleStat)(nil),
		(*Module_ModuleFold)(nil),
		(*Module_ModuleComment)(nil),
		(*Module_ModuleInteraction)(nil),
		(*Module_ModuleAuthorForward)(nil),
		(*Module_ModuleAd)(nil),
		(*Module_ModuleBanner)(nil),
		(*Module_ModuleItemNull)(nil),
		(*Module_ModuleShareInfo)(nil),
		(*Module_ModuleRecommend)(nil),
		(*Module_ModuleTop)(nil),
		(*Module_ModuleButtom)(nil),
		(*Module_ModuleStatForward)(nil),
		(*Module_ModuleStory)(nil),
		(*Module_ModuleTopic)(nil),
		(*Module_ModuleTopicDetailsExt)(nil),
		(*Module_ModuleTopTag)(nil),
		(*Module_ModuleTopicBrief)(nil),
		(*Module_ModuleTitle)(nil),
		(*Module_ModuleButton)(nil),
		(*Module_ModuleNotice)(nil),
	}
}

// ModuleTopTag 置顶tag模块
type ModuleTopTag struct {
	TagName              string   `protobuf:"bytes,1,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleTopTag) Reset()         { *m = ModuleTopTag{} }
func (m *ModuleTopTag) String() string { return proto.CompactTextString(m) }
func (*ModuleTopTag) ProtoMessage()    {}
func (*ModuleTopTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{8}
}
func (m *ModuleTopTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTopTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTopTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTopTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTopTag.Merge(m, src)
}
func (m *ModuleTopTag) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTopTag) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTopTag.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTopTag proto.InternalMessageInfo

func (m *ModuleTopTag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

// ModuleAuthor 动态-发布人模块
type ModuleAuthor struct {
	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 时间标签
	PtimeLabelText string `protobuf:"bytes,2,opt,name=ptime_label_text,json=ptimeLabelText,proto3" json:"ptime_label_text,omitempty"`
	// 用户详情
	Author *UserInfo `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// 装扮卡片
	DecorateCard *DecorateCard `protobuf:"bytes,4,opt,name=decorate_card,json=decorateCard,proto3" json:"decorate_card,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 右侧操作区域 - 三点样式
	TpList []*ThreePointItem `protobuf:"bytes,6,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
	// 右侧操作区域样式枚举
	BadgeType ModuleAuthorBadgeType `protobuf:"varint,7,opt,name=badge_type,json=badgeType,proto3,enum=bilibili.app.dynamic.v2.ModuleAuthorBadgeType" json:"badge_type,omitempty"`
	// 右侧操作区域 - 按钮样式
	BadgeButton *ModuleAuthorBadgeButton `protobuf:"bytes,8,opt,name=badge_button,json=badgeButton,proto3" json:"badge_button,omitempty"`
	// 是否关注 1关注 0不关注 默认0，注：点赞列表使用，其他场景不使用该字段
	Attend int32 `protobuf:"varint,9,opt,name=attend,proto3" json:"attend,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,10,opt,name=relation,proto3" json:"relation,omitempty"`
	// 右侧操作区域 - 提权样式
	Weight *Weight `protobuf:"bytes,11,opt,name=weight,proto3" json:"weight,omitempty"`
	// 是否展示关注
	ShowFollow bool `protobuf:"varint,12,opt,name=show_follow,json=showFollow,proto3" json:"show_follow,omitempty"`
	// 是否置顶
	IsTop bool `protobuf:"varint,13,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	// 发布时的IP属地信息
	// 例如：发布于上海
	PtimeLocationText string `protobuf:"bytes,14,opt,name=ptime_location_text,json=ptimeLocationText,proto3" json:"ptime_location_text,omitempty"`
	// 是否外显等级
	ShowLevel            bool     `protobuf:"varint,15,opt,name=show_level,json=showLevel,proto3" json:"show_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleAuthor) Reset()         { *m = ModuleAuthor{} }
func (m *ModuleAuthor) String() string { return proto.CompactTextString(m) }
func (*ModuleAuthor) ProtoMessage()    {}
func (*ModuleAuthor) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{9}
}
func (m *ModuleAuthor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAuthor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAuthor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAuthor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAuthor.Merge(m, src)
}
func (m *ModuleAuthor) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAuthor) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAuthor.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAuthor proto.InternalMessageInfo

func (m *ModuleAuthor) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *ModuleAuthor) GetPtimeLabelText() string {
	if m != nil {
		return m.PtimeLabelText
	}
	return ""
}

func (m *ModuleAuthor) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ModuleAuthor) GetDecorateCard() *DecorateCard {
	if m != nil {
		return m.DecorateCard
	}
	return nil
}

func (m *ModuleAuthor) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ModuleAuthor) GetTpList() []*ThreePointItem {
	if m != nil {
		return m.TpList
	}
	return nil
}

func (m *ModuleAuthor) GetBadgeType() ModuleAuthorBadgeType {
	if m != nil {
		return m.BadgeType
	}
	return ModuleAuthorBadgeType_module_author_badge_type_none
}

func (m *ModuleAuthor) GetBadgeButton() *ModuleAuthorBadgeButton {
	if m != nil {
		return m.BadgeButton
	}
	return nil
}

func (m *ModuleAuthor) GetAttend() int32 {
	if m != nil {
		return m.Attend
	}
	return 0
}

func (m *ModuleAuthor) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *ModuleAuthor) GetWeight() *Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *ModuleAuthor) GetShowFollow() bool {
	if m != nil {
		return m.ShowFollow
	}
	return false
}

func (m *ModuleAuthor) GetIsTop() bool {
	if m != nil {
		return m.IsTop
	}
	return false
}

func (m *ModuleAuthor) GetPtimeLocationText() string {
	if m != nil {
		return m.PtimeLocationText
	}
	return ""
}

func (m *ModuleAuthor) GetShowLevel() bool {
	if m != nil {
		return m.ShowLevel
	}
	return false
}

// UserInfo 用户信息
type UserInfo struct {
	// 用户Mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,4,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,5,opt,name=vip,proto3" json:"vip,omitempty"`
	// 直播信息
	Live *LiveInfo `protobuf:"bytes,6,opt,name=live,proto3" json:"live,omitempty"`
	// 空间页跳转链接
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// 挂件信息
	Pendant *UserPendant `protobuf:"bytes,8,opt,name=pendant,proto3" json:"pendant,omitempty"`
	// 认证名牌
	Nameplate *Nameplate `protobuf:"bytes,9,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	// 用户等级
	Level int32 `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	// 用户简介
	Sign string `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
	// 1 nft头像 0 非nft头像 废弃
	FaceNft int32 `protobuf:"varint,12,opt,name=face_nft,json=faceNft,proto3" json:"face_nft,omitempty"`
	// 新face_nft_new 1 nft头像 0 非nft头像
	FaceNftNew int32 `protobuf:"varint,13,opt,name=face_nft_new,json=faceNftNew,proto3" json:"face_nft_new,omitempty"`
	// nft信息
	NftInfo *NFTInfo `protobuf:"bytes,14,opt,name=nft_info,json=nftInfo,proto3" json:"nft_info,omitempty"`
	// is_senior_member 1 硬核会员 0 非硬核会员
	IsSeniorMember       int32    `protobuf:"varint,15,opt,name=is_senior_member,json=isSeniorMember,proto3" json:"is_senior_member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{10}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return m.Size()
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *UserInfo) GetOfficial() *OfficialVerify {
	if m != nil {
		return m.Official
	}
	return nil
}

func (m *UserInfo) GetVip() *VipInfo {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *UserInfo) GetLive() *LiveInfo {
	if m != nil {
		return m.Live
	}
	return nil
}

func (m *UserInfo) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *UserInfo) GetPendant() *UserPendant {
	if m != nil {
		return m.Pendant
	}
	return nil
}

func (m *UserInfo) GetNameplate() *Nameplate {
	if m != nil {
		return m.Nameplate
	}
	return nil
}

func (m *UserInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *UserInfo) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *UserInfo) GetFaceNft() int32 {
	if m != nil {
		return m.FaceNft
	}
	return 0
}

func (m *UserInfo) GetFaceNftNew() int32 {
	if m != nil {
		return m.FaceNftNew
	}
	return 0
}

func (m *UserInfo) GetNftInfo() *NFTInfo {
	if m != nil {
		return m.NftInfo
	}
	return nil
}

func (m *UserInfo) GetIsSeniorMember() int32 {
	if m != nil {
		return m.IsSeniorMember
	}
	return 0
}

type NFTInfo struct {
	// nft所属区域 0 默认 1 大陆 2 港澳台
	RegionType NFTRegionType `protobuf:"varint,1,opt,name=region_type,json=regionType,proto3,enum=bilibili.app.dynamic.v2.NFTRegionType" json:"region_type,omitempty"`
	// 角标链接
	RegionIcon string `protobuf:"bytes,2,opt,name=region_icon,json=regionIcon,proto3" json:"region_icon,omitempty"`
	// 展示状态 0: 默认 1: 放大20% 2:  原图大小
	RegionShowStatus     NFTShowStatus `protobuf:"varint,3,opt,name=region_show_status,json=regionShowStatus,proto3,enum=bilibili.app.dynamic.v2.NFTShowStatus" json:"region_show_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NFTInfo) Reset()         { *m = NFTInfo{} }
func (m *NFTInfo) String() string { return proto.CompactTextString(m) }
func (*NFTInfo) ProtoMessage()    {}
func (*NFTInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{11}
}
func (m *NFTInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NFTInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NFTInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NFTInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFTInfo.Merge(m, src)
}
func (m *NFTInfo) XXX_Size() int {
	return m.Size()
}
func (m *NFTInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NFTInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NFTInfo proto.InternalMessageInfo

func (m *NFTInfo) GetRegionType() NFTRegionType {
	if m != nil {
		return m.RegionType
	}
	return NFTRegionType_nft_region_default
}

func (m *NFTInfo) GetRegionIcon() string {
	if m != nil {
		return m.RegionIcon
	}
	return ""
}

func (m *NFTInfo) GetRegionShowStatus() NFTShowStatus {
	if m != nil {
		return m.RegionShowStatus
	}
	return NFTShowStatus_nft_show_default
}

// OfficialVerify 认证信息
type OfficialVerify struct {
	// 0：个人；1：官方；127：未认证
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 认证描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 是否关注
	IsAtten              int32    `protobuf:"varint,3,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialVerify) Reset()         { *m = OfficialVerify{} }
func (m *OfficialVerify) String() string { return proto.CompactTextString(m) }
func (*OfficialVerify) ProtoMessage()    {}
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{12}
}
func (m *OfficialVerify) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialVerify.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialVerify.Merge(m, src)
}
func (m *OfficialVerify) XXX_Size() int {
	return m.Size()
}
func (m *OfficialVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialVerify.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialVerify proto.InternalMessageInfo

func (m *OfficialVerify) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *OfficialVerify) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *OfficialVerify) GetIsAtten() int32 {
	if m != nil {
		return m.IsAtten
	}
	return 0
}

// VipInfo 大会员信息
type VipInfo struct {
	// 大会员类型
	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// 大会员状态
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 到期时间
	DueDate int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	// 标签
	Label *VipLabel `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// 主题
	ThemeType int32 `protobuf:"varint,5,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	// 大会员角标，0：无角标，1：粉色大会员角标，2：绿色小会员角标
	AvatarSubscript int32 `protobuf:"varint,6,opt,name=avatar_subscript,json=avatarSubscript,proto3" json:"avatar_subscript,omitempty"`
	// 昵称色值，可能为空，色值示例：#FFFB9E60
	NicknameColor        string   `protobuf:"bytes,7,opt,name=nickname_color,json=nicknameColor,proto3" json:"nickname_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VipInfo) Reset()         { *m = VipInfo{} }
func (m *VipInfo) String() string { return proto.CompactTextString(m) }
func (*VipInfo) ProtoMessage()    {}
func (*VipInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{13}
}
func (m *VipInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VipInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VipInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VipInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipInfo.Merge(m, src)
}
func (m *VipInfo) XXX_Size() int {
	return m.Size()
}
func (m *VipInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VipInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VipInfo proto.InternalMessageInfo

func (m *VipInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *VipInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VipInfo) GetDueDate() int64 {
	if m != nil {
		return m.DueDate
	}
	return 0
}

func (m *VipInfo) GetLabel() *VipLabel {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *VipInfo) GetThemeType() int32 {
	if m != nil {
		return m.ThemeType
	}
	return 0
}

func (m *VipInfo) GetAvatarSubscript() int32 {
	if m != nil {
		return m.AvatarSubscript
	}
	return 0
}

func (m *VipInfo) GetNicknameColor() string {
	if m != nil {
		return m.NicknameColor
	}
	return ""
}

// 大会员标签
type VipLabel struct {
	// 图片地址
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// 文本值
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 对应颜色类型，在mod资源中通过：$app_theme_type.$label_theme获取对应标签的颜色配置信息
	LabelTheme           string   `protobuf:"bytes,3,opt,name=label_theme,json=labelTheme,proto3" json:"label_theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VipLabel) Reset()         { *m = VipLabel{} }
func (m *VipLabel) String() string { return proto.CompactTextString(m) }
func (*VipLabel) ProtoMessage()    {}
func (*VipLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{14}
}
func (m *VipLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VipLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VipLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VipLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VipLabel.Merge(m, src)
}
func (m *VipLabel) XXX_Size() int {
	return m.Size()
}
func (m *VipLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_VipLabel.DiscardUnknown(m)
}

var xxx_messageInfo_VipLabel proto.InternalMessageInfo

func (m *VipLabel) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VipLabel) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *VipLabel) GetLabelTheme() string {
	if m != nil {
		return m.LabelTheme
	}
	return ""
}

// LiveInfo 直播信息
type LiveInfo struct {
	// 是否在直播，0未直播，1正在直播 (废弃)
	IsLiving int32 `protobuf:"varint,1,opt,name=is_living,json=isLiving,proto3" json:"is_living,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 直播状态
	LiveState            LiveState `protobuf:"varint,3,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LiveInfo) Reset()         { *m = LiveInfo{} }
func (m *LiveInfo) String() string { return proto.CompactTextString(m) }
func (*LiveInfo) ProtoMessage()    {}
func (*LiveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{15}
}
func (m *LiveInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveInfo.Merge(m, src)
}
func (m *LiveInfo) XXX_Size() int {
	return m.Size()
}
func (m *LiveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LiveInfo proto.InternalMessageInfo

func (m *LiveInfo) GetIsLiving() int32 {
	if m != nil {
		return m.IsLiving
	}
	return 0
}

func (m *LiveInfo) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *LiveInfo) GetLiveState() LiveState {
	if m != nil {
		return m.LiveState
	}
	return LiveState_live_none
}

// UserPendant 头像挂件信息
type UserPendant struct {
	// pid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片链接
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 有效期
	Expire               int64    `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPendant) Reset()         { *m = UserPendant{} }
func (m *UserPendant) String() string { return proto.CompactTextString(m) }
func (*UserPendant) ProtoMessage()    {}
func (*UserPendant) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{16}
}
func (m *UserPendant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserPendant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserPendant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserPendant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPendant.Merge(m, src)
}
func (m *UserPendant) XXX_Size() int {
	return m.Size()
}
func (m *UserPendant) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPendant.DiscardUnknown(m)
}

var xxx_messageInfo_UserPendant proto.InternalMessageInfo

func (m *UserPendant) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *UserPendant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserPendant) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UserPendant) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

// 认证名牌
type Nameplate struct {
	// nid
	Nid int64 `protobuf:"varint,1,opt,name=nid,proto3" json:"nid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片地址
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 小图地址
	ImageSmall string `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	// 等级
	Level string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	// 获取条件
	Condition            string   `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nameplate) Reset()         { *m = Nameplate{} }
func (m *Nameplate) String() string { return proto.CompactTextString(m) }
func (*Nameplate) ProtoMessage()    {}
func (*Nameplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{17}
}
func (m *Nameplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Nameplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Nameplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Nameplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nameplate.Merge(m, src)
}
func (m *Nameplate) XXX_Size() int {
	return m.Size()
}
func (m *Nameplate) XXX_DiscardUnknown() {
	xxx_messageInfo_Nameplate.DiscardUnknown(m)
}

var xxx_messageInfo_Nameplate proto.InternalMessageInfo

func (m *Nameplate) GetNid() int64 {
	if m != nil {
		return m.Nid
	}
	return 0
}

func (m *Nameplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Nameplate) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Nameplate) GetImageSmall() string {
	if m != nil {
		return m.ImageSmall
	}
	return ""
}

func (m *Nameplate) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Nameplate) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

// DecorateCard 装扮卡片
type DecorateCard struct {
	// 装扮卡片id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 装扮卡片链接
	CardUrl string `protobuf:"bytes,2,opt,name=card_url,json=cardUrl,proto3" json:"card_url,omitempty"`
	// 装扮卡片点击跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 粉丝样式
	Fan                  *DecoCardFan `protobuf:"bytes,4,opt,name=fan,proto3" json:"fan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DecorateCard) Reset()         { *m = DecorateCard{} }
func (m *DecorateCard) String() string { return proto.CompactTextString(m) }
func (*DecorateCard) ProtoMessage()    {}
func (*DecorateCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{18}
}
func (m *DecorateCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecorateCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecorateCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecorateCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecorateCard.Merge(m, src)
}
func (m *DecorateCard) XXX_Size() int {
	return m.Size()
}
func (m *DecorateCard) XXX_DiscardUnknown() {
	xxx_messageInfo_DecorateCard.DiscardUnknown(m)
}

var xxx_messageInfo_DecorateCard proto.InternalMessageInfo

func (m *DecorateCard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DecorateCard) GetCardUrl() string {
	if m != nil {
		return m.CardUrl
	}
	return ""
}

func (m *DecorateCard) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *DecorateCard) GetFan() *DecoCardFan {
	if m != nil {
		return m.Fan
	}
	return nil
}

// DecoCardFan 装扮卡片-粉丝勋章信息
type DecoCardFan struct {
	// 是否是粉丝
	IsFan int32 `protobuf:"varint,1,opt,name=is_fan,json=isFan,proto3" json:"is_fan,omitempty"`
	// 数量
	Number int32 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	// 数量（string）
	NumberStr string `protobuf:"bytes,3,opt,name=number_str,json=numberStr,proto3" json:"number_str,omitempty"`
	// 颜色
	Color                string   `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecoCardFan) Reset()         { *m = DecoCardFan{} }
func (m *DecoCardFan) String() string { return proto.CompactTextString(m) }
func (*DecoCardFan) ProtoMessage()    {}
func (*DecoCardFan) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{19}
}
func (m *DecoCardFan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DecoCardFan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DecoCardFan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DecoCardFan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecoCardFan.Merge(m, src)
}
func (m *DecoCardFan) XXX_Size() int {
	return m.Size()
}
func (m *DecoCardFan) XXX_DiscardUnknown() {
	xxx_messageInfo_DecoCardFan.DiscardUnknown(m)
}

var xxx_messageInfo_DecoCardFan proto.InternalMessageInfo

func (m *DecoCardFan) GetIsFan() int32 {
	if m != nil {
		return m.IsFan
	}
	return 0
}

func (m *DecoCardFan) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *DecoCardFan) GetNumberStr() string {
	if m != nil {
		return m.NumberStr
	}
	return ""
}

func (m *DecoCardFan) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

// ModuleDispute 动态-争议小黄条模块
type ModuleDispute struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述内容
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 跳转链接
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleDispute) Reset()         { *m = ModuleDispute{} }
func (m *ModuleDispute) String() string { return proto.CompactTextString(m) }
func (*ModuleDispute) ProtoMessage()    {}
func (*ModuleDispute) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{20}
}
func (m *ModuleDispute) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleDispute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleDispute.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleDispute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleDispute.Merge(m, src)
}
func (m *ModuleDispute) XXX_Size() int {
	return m.Size()
}
func (m *ModuleDispute) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleDispute.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleDispute proto.InternalMessageInfo

func (m *ModuleDispute) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleDispute) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ModuleDispute) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// ModuleDesc 动态-描述文字模块
type ModuleDesc struct {
	// 描述信息（已按高亮拆分）
	Desc []*Description `protobuf:"bytes,1,rep,name=desc,proto3" json:"desc,omitempty"`
	// 点击跳转链接
	JumpUri string `protobuf:"bytes,2,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	// 文本原本
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleDesc) Reset()         { *m = ModuleDesc{} }
func (m *ModuleDesc) String() string { return proto.CompactTextString(m) }
func (*ModuleDesc) ProtoMessage()    {}
func (*ModuleDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{21}
}
func (m *ModuleDesc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleDesc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleDesc.Merge(m, src)
}
func (m *ModuleDesc) XXX_Size() int {
	return m.Size()
}
func (m *ModuleDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleDesc.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleDesc proto.InternalMessageInfo

func (m *ModuleDesc) GetDesc() []*Description {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *ModuleDesc) GetJumpUri() string {
	if m != nil {
		return m.JumpUri
	}
	return ""
}

func (m *ModuleDesc) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// Description 文本描述
type Description struct {
	// 文本内容
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文本类型
	Type DescType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DescType" json:"type,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// emoji类型
	EmojiType EmojiType `protobuf:"varint,4,opt,name=emoji_type,json=emojiType,proto3,enum=bilibili.app.dynamic.v2.EmojiType" json:"emoji_type,omitempty"`
	// 商品类型
	GoodsType string `protobuf:"bytes,5,opt,name=goods_type,json=goodsType,proto3" json:"goods_type,omitempty"`
	// 前置Icon
	IconUrl string `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// icon_name
	IconName string `protobuf:"bytes,7,opt,name=icon_name,json=iconName,proto3" json:"icon_name,omitempty"`
	// 资源ID
	Rid string `protobuf:"bytes,8,opt,name=rid,proto3" json:"rid,omitempty"`
	// 商品卡特殊字段
	Goods *ModuleDescGoods `protobuf:"bytes,9,opt,name=goods,proto3" json:"goods,omitempty"`
	// 文本原始文案
	OrigText string `protobuf:"bytes,10,opt,name=orig_text,json=origText,proto3" json:"orig_text,omitempty"`
	// 表情的大小 1-小 2-大
	EmojiSize            int32    `protobuf:"varint,11,opt,name=emoji_size,json=emojiSize,proto3" json:"emoji_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Description) Reset()         { *m = Description{} }
func (m *Description) String() string { return proto.CompactTextString(m) }
func (*Description) ProtoMessage()    {}
func (*Description) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{22}
}
func (m *Description) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Description) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Description.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Description) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Description.Merge(m, src)
}
func (m *Description) XXX_Size() int {
	return m.Size()
}
func (m *Description) XXX_DiscardUnknown() {
	xxx_messageInfo_Description.DiscardUnknown(m)
}

var xxx_messageInfo_Description proto.InternalMessageInfo

func (m *Description) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Description) GetType() DescType {
	if m != nil {
		return m.Type
	}
	return DescType_desc_type_none
}

func (m *Description) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Description) GetEmojiType() EmojiType {
	if m != nil {
		return m.EmojiType
	}
	return EmojiType_emoji_none
}

func (m *Description) GetGoodsType() string {
	if m != nil {
		return m.GoodsType
	}
	return ""
}

func (m *Description) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *Description) GetIconName() string {
	if m != nil {
		return m.IconName
	}
	return ""
}

func (m *Description) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *Description) GetGoods() *ModuleDescGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *Description) GetOrigText() string {
	if m != nil {
		return m.OrigText
	}
	return ""
}

func (m *Description) GetEmojiSize() int32 {
	if m != nil {
		return m.EmojiSize
	}
	return 0
}

// ModuleDescGoods 正文商品卡参数
type ModuleDescGoods struct {
	// 商品类型 1淘宝、2会员购
	SourceType int32 `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// schema_url
	SchemaUrl string `protobuf:"bytes,3,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	// item_id
	ItemId int64 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// open_white_list
	OpenWhiteList []string `protobuf:"bytes,5,rep,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"`
	// use_web_v2
	UserWebV2 bool `protobuf:"varint,6,opt,name=user_web_v2,json=userWebV2,proto3" json:"user_web_v2,omitempty"`
	// ad mark
	AdMark string `protobuf:"bytes,7,opt,name=ad_mark,json=adMark,proto3" json:"ad_mark,omitempty"`
	// schemaPackageName（Android用）
	SchemaPackageName string `protobuf:"bytes,8,opt,name=schema_package_name,json=schemaPackageName,proto3" json:"schema_package_name,omitempty"`
	// 跳转站内还是站外
	JumpType GoodsJumpType `protobuf:"varint,9,opt,name=jump_type,json=jumpType,proto3,enum=bilibili.app.dynamic.v2.GoodsJumpType" json:"jump_type,omitempty"`
	// app name
	AppName              string   `protobuf:"bytes,10,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleDescGoods) Reset()         { *m = ModuleDescGoods{} }
func (m *ModuleDescGoods) String() string { return proto.CompactTextString(m) }
func (*ModuleDescGoods) ProtoMessage()    {}
func (*ModuleDescGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{23}
}
func (m *ModuleDescGoods) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleDescGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleDescGoods.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleDescGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleDescGoods.Merge(m, src)
}
func (m *ModuleDescGoods) XXX_Size() int {
	return m.Size()
}
func (m *ModuleDescGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleDescGoods.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleDescGoods proto.InternalMessageInfo

func (m *ModuleDescGoods) GetSourceType() int32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *ModuleDescGoods) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *ModuleDescGoods) GetSchemaUrl() string {
	if m != nil {
		return m.SchemaUrl
	}
	return ""
}

func (m *ModuleDescGoods) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ModuleDescGoods) GetOpenWhiteList() []string {
	if m != nil {
		return m.OpenWhiteList
	}
	return nil
}

func (m *ModuleDescGoods) GetUserWebV2() bool {
	if m != nil {
		return m.UserWebV2
	}
	return false
}

func (m *ModuleDescGoods) GetAdMark() string {
	if m != nil {
		return m.AdMark
	}
	return ""
}

func (m *ModuleDescGoods) GetSchemaPackageName() string {
	if m != nil {
		return m.SchemaPackageName
	}
	return ""
}

func (m *ModuleDescGoods) GetJumpType() GoodsJumpType {
	if m != nil {
		return m.JumpType
	}
	return GoodsJumpType_goods_none
}

func (m *ModuleDescGoods) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

// ModuleDynamic 动态-详情模块
type ModuleDynamic struct {
	Type ModuleDynamicType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ModuleDynamicType" json:"type,omitempty"`
	// Types that are valid to be assigned to ModuleItem:
	//	*ModuleDynamic_DynArchive
	//	*ModuleDynamic_DynPgc
	//	*ModuleDynamic_DynCourSeason
	//	*ModuleDynamic_DynCourBatch
	//	*ModuleDynamic_DynForward
	//	*ModuleDynamic_DynDraw
	//	*ModuleDynamic_DynArticle
	//	*ModuleDynamic_DynMusic
	//	*ModuleDynamic_DynCommon
	//	*ModuleDynamic_DynCommonLive
	//	*ModuleDynamic_DynMedialist
	//	*ModuleDynamic_DynApplet
	//	*ModuleDynamic_DynSubscription
	//	*ModuleDynamic_DynLiveRcmd
	//	*ModuleDynamic_DynUgcSeason
	//	*ModuleDynamic_DynSubscriptionNew
	//	*ModuleDynamic_DynCourBatchUp
	//	*ModuleDynamic_DynTopicSet
	ModuleItem           isModuleDynamic_ModuleItem `protobuf_oneof:"module_item"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ModuleDynamic) Reset()         { *m = ModuleDynamic{} }
func (m *ModuleDynamic) String() string { return proto.CompactTextString(m) }
func (*ModuleDynamic) ProtoMessage()    {}
func (*ModuleDynamic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{24}
}
func (m *ModuleDynamic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleDynamic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleDynamic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleDynamic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleDynamic.Merge(m, src)
}
func (m *ModuleDynamic) XXX_Size() int {
	return m.Size()
}
func (m *ModuleDynamic) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleDynamic.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleDynamic proto.InternalMessageInfo

type isModuleDynamic_ModuleItem interface {
	isModuleDynamic_ModuleItem()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ModuleDynamic_DynArchive struct {
	DynArchive *MdlDynArchive `protobuf:"bytes,2,opt,name=dyn_archive,json=dynArchive,proto3,oneof" json:"dyn_archive,omitempty"`
}
type ModuleDynamic_DynPgc struct {
	DynPgc *MdlDynPGC `protobuf:"bytes,3,opt,name=dyn_pgc,json=dynPgc,proto3,oneof" json:"dyn_pgc,omitempty"`
}
type ModuleDynamic_DynCourSeason struct {
	DynCourSeason *MdlDynCourSeason `protobuf:"bytes,4,opt,name=dyn_cour_season,json=dynCourSeason,proto3,oneof" json:"dyn_cour_season,omitempty"`
}
type ModuleDynamic_DynCourBatch struct {
	DynCourBatch *MdlDynCourBatch `protobuf:"bytes,5,opt,name=dyn_cour_batch,json=dynCourBatch,proto3,oneof" json:"dyn_cour_batch,omitempty"`
}
type ModuleDynamic_DynForward struct {
	DynForward *MdlDynForward `protobuf:"bytes,6,opt,name=dyn_forward,json=dynForward,proto3,oneof" json:"dyn_forward,omitempty"`
}
type ModuleDynamic_DynDraw struct {
	DynDraw *MdlDynDraw `protobuf:"bytes,7,opt,name=dyn_draw,json=dynDraw,proto3,oneof" json:"dyn_draw,omitempty"`
}
type ModuleDynamic_DynArticle struct {
	DynArticle *MdlDynArticle `protobuf:"bytes,8,opt,name=dyn_article,json=dynArticle,proto3,oneof" json:"dyn_article,omitempty"`
}
type ModuleDynamic_DynMusic struct {
	DynMusic *MdlDynMusic `protobuf:"bytes,9,opt,name=dyn_music,json=dynMusic,proto3,oneof" json:"dyn_music,omitempty"`
}
type ModuleDynamic_DynCommon struct {
	DynCommon *MdlDynCommon `protobuf:"bytes,10,opt,name=dyn_common,json=dynCommon,proto3,oneof" json:"dyn_common,omitempty"`
}
type ModuleDynamic_DynCommonLive struct {
	DynCommonLive *MdlDynLive `protobuf:"bytes,11,opt,name=dyn_common_live,json=dynCommonLive,proto3,oneof" json:"dyn_common_live,omitempty"`
}
type ModuleDynamic_DynMedialist struct {
	DynMedialist *MdlDynMedialist `protobuf:"bytes,12,opt,name=dyn_medialist,json=dynMedialist,proto3,oneof" json:"dyn_medialist,omitempty"`
}
type ModuleDynamic_DynApplet struct {
	DynApplet *MdlDynApplet `protobuf:"bytes,13,opt,name=dyn_applet,json=dynApplet,proto3,oneof" json:"dyn_applet,omitempty"`
}
type ModuleDynamic_DynSubscription struct {
	DynSubscription *MdlDynSubscription `protobuf:"bytes,14,opt,name=dyn_subscription,json=dynSubscription,proto3,oneof" json:"dyn_subscription,omitempty"`
}
type ModuleDynamic_DynLiveRcmd struct {
	DynLiveRcmd *MdlDynLiveRcmd `protobuf:"bytes,15,opt,name=dyn_live_rcmd,json=dynLiveRcmd,proto3,oneof" json:"dyn_live_rcmd,omitempty"`
}
type ModuleDynamic_DynUgcSeason struct {
	DynUgcSeason *MdlDynUGCSeason `protobuf:"bytes,16,opt,name=dyn_ugc_season,json=dynUgcSeason,proto3,oneof" json:"dyn_ugc_season,omitempty"`
}
type ModuleDynamic_DynSubscriptionNew struct {
	DynSubscriptionNew *MdlDynSubscriptionNew `protobuf:"bytes,17,opt,name=dyn_subscription_new,json=dynSubscriptionNew,proto3,oneof" json:"dyn_subscription_new,omitempty"`
}
type ModuleDynamic_DynCourBatchUp struct {
	DynCourBatchUp *MdlDynCourUp `protobuf:"bytes,18,opt,name=dyn_cour_batch_up,json=dynCourBatchUp,proto3,oneof" json:"dyn_cour_batch_up,omitempty"`
}
type ModuleDynamic_DynTopicSet struct {
	DynTopicSet *MdlDynTopicSet `protobuf:"bytes,19,opt,name=dyn_topic_set,json=dynTopicSet,proto3,oneof" json:"dyn_topic_set,omitempty"`
}

func (*ModuleDynamic_DynArchive) isModuleDynamic_ModuleItem()         {}
func (*ModuleDynamic_DynPgc) isModuleDynamic_ModuleItem()             {}
func (*ModuleDynamic_DynCourSeason) isModuleDynamic_ModuleItem()      {}
func (*ModuleDynamic_DynCourBatch) isModuleDynamic_ModuleItem()       {}
func (*ModuleDynamic_DynForward) isModuleDynamic_ModuleItem()         {}
func (*ModuleDynamic_DynDraw) isModuleDynamic_ModuleItem()            {}
func (*ModuleDynamic_DynArticle) isModuleDynamic_ModuleItem()         {}
func (*ModuleDynamic_DynMusic) isModuleDynamic_ModuleItem()           {}
func (*ModuleDynamic_DynCommon) isModuleDynamic_ModuleItem()          {}
func (*ModuleDynamic_DynCommonLive) isModuleDynamic_ModuleItem()      {}
func (*ModuleDynamic_DynMedialist) isModuleDynamic_ModuleItem()       {}
func (*ModuleDynamic_DynApplet) isModuleDynamic_ModuleItem()          {}
func (*ModuleDynamic_DynSubscription) isModuleDynamic_ModuleItem()    {}
func (*ModuleDynamic_DynLiveRcmd) isModuleDynamic_ModuleItem()        {}
func (*ModuleDynamic_DynUgcSeason) isModuleDynamic_ModuleItem()       {}
func (*ModuleDynamic_DynSubscriptionNew) isModuleDynamic_ModuleItem() {}
func (*ModuleDynamic_DynCourBatchUp) isModuleDynamic_ModuleItem()     {}
func (*ModuleDynamic_DynTopicSet) isModuleDynamic_ModuleItem()        {}

func (m *ModuleDynamic) GetModuleItem() isModuleDynamic_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (m *ModuleDynamic) GetType() ModuleDynamicType {
	if m != nil {
		return m.Type
	}
	return ModuleDynamicType_mdl_dyn_archive
}

func (m *ModuleDynamic) GetDynArchive() *MdlDynArchive {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynArchive); ok {
		return x.DynArchive
	}
	return nil
}

func (m *ModuleDynamic) GetDynPgc() *MdlDynPGC {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynPgc); ok {
		return x.DynPgc
	}
	return nil
}

func (m *ModuleDynamic) GetDynCourSeason() *MdlDynCourSeason {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynCourSeason); ok {
		return x.DynCourSeason
	}
	return nil
}

func (m *ModuleDynamic) GetDynCourBatch() *MdlDynCourBatch {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynCourBatch); ok {
		return x.DynCourBatch
	}
	return nil
}

func (m *ModuleDynamic) GetDynForward() *MdlDynForward {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynForward); ok {
		return x.DynForward
	}
	return nil
}

func (m *ModuleDynamic) GetDynDraw() *MdlDynDraw {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynDraw); ok {
		return x.DynDraw
	}
	return nil
}

func (m *ModuleDynamic) GetDynArticle() *MdlDynArticle {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynArticle); ok {
		return x.DynArticle
	}
	return nil
}

func (m *ModuleDynamic) GetDynMusic() *MdlDynMusic {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynMusic); ok {
		return x.DynMusic
	}
	return nil
}

func (m *ModuleDynamic) GetDynCommon() *MdlDynCommon {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynCommon); ok {
		return x.DynCommon
	}
	return nil
}

func (m *ModuleDynamic) GetDynCommonLive() *MdlDynLive {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynCommonLive); ok {
		return x.DynCommonLive
	}
	return nil
}

func (m *ModuleDynamic) GetDynMedialist() *MdlDynMedialist {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynMedialist); ok {
		return x.DynMedialist
	}
	return nil
}

func (m *ModuleDynamic) GetDynApplet() *MdlDynApplet {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynApplet); ok {
		return x.DynApplet
	}
	return nil
}

func (m *ModuleDynamic) GetDynSubscription() *MdlDynSubscription {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynSubscription); ok {
		return x.DynSubscription
	}
	return nil
}

func (m *ModuleDynamic) GetDynLiveRcmd() *MdlDynLiveRcmd {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynLiveRcmd); ok {
		return x.DynLiveRcmd
	}
	return nil
}

func (m *ModuleDynamic) GetDynUgcSeason() *MdlDynUGCSeason {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynUgcSeason); ok {
		return x.DynUgcSeason
	}
	return nil
}

func (m *ModuleDynamic) GetDynSubscriptionNew() *MdlDynSubscriptionNew {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynSubscriptionNew); ok {
		return x.DynSubscriptionNew
	}
	return nil
}

func (m *ModuleDynamic) GetDynCourBatchUp() *MdlDynCourUp {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynCourBatchUp); ok {
		return x.DynCourBatchUp
	}
	return nil
}

func (m *ModuleDynamic) GetDynTopicSet() *MdlDynTopicSet {
	if x, ok := m.GetModuleItem().(*ModuleDynamic_DynTopicSet); ok {
		return x.DynTopicSet
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ModuleDynamic) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ModuleDynamic_DynArchive)(nil),
		(*ModuleDynamic_DynPgc)(nil),
		(*ModuleDynamic_DynCourSeason)(nil),
		(*ModuleDynamic_DynCourBatch)(nil),
		(*ModuleDynamic_DynForward)(nil),
		(*ModuleDynamic_DynDraw)(nil),
		(*ModuleDynamic_DynArticle)(nil),
		(*ModuleDynamic_DynMusic)(nil),
		(*ModuleDynamic_DynCommon)(nil),
		(*ModuleDynamic_DynCommonLive)(nil),
		(*ModuleDynamic_DynMedialist)(nil),
		(*ModuleDynamic_DynApplet)(nil),
		(*ModuleDynamic_DynSubscription)(nil),
		(*ModuleDynamic_DynLiveRcmd)(nil),
		(*ModuleDynamic_DynUgcSeason)(nil),
		(*ModuleDynamic_DynSubscriptionNew)(nil),
		(*ModuleDynamic_DynCourBatchUp)(nil),
		(*ModuleDynamic_DynTopicSet)(nil),
	}
}

// MdlDynUGC 动态-详情模块-稿件
type MdlDynArchive struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,7,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,8,opt,name=cid,proto3" json:"cid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,9,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v2.MediaType" json:"media_type,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,10,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标，多个角标之前有间距
	Badge []*VideoBadge `protobuf:"bytes,11,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,12,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// stype
	Stype VideoType `protobuf:"varint,13,opt,name=stype,proto3,enum=bilibili.app.dynamic.v2.VideoType" json:"stype,omitempty"`
	// 是否PGC
	IsPGC bool `protobuf:"varint,14,opt,name=isPGC,proto3" json:"isPGC,omitempty"`
	// inline播放地址
	InlineURL string `protobuf:"bytes,15,opt,name=inlineURL,proto3" json:"inlineURL,omitempty"`
	// PGC的epid
	EpisodeId int64 `protobuf:"varint,16,opt,name=EpisodeId,proto3" json:"EpisodeId,omitempty"`
	// 子类型
	SubType int32 `protobuf:"varint,17,opt,name=SubType,proto3" json:"SubType,omitempty"`
	// PGC的ssid
	PgcSeasonId int64 `protobuf:"varint,18,opt,name=PgcSeasonId,proto3" json:"PgcSeasonId,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,19,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 总视频时长（所有分p）单位秒
	Duration int64 `protobuf:"varint,20,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,21,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,22,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 新角标，多个角标之前没有间距
	BadgeCategory []*VideoBadge `protobuf:"bytes,23,rep,name=badge_category,json=badgeCategory,proto3" json:"badge_category,omitempty"`
	// 当前是否是pgc正片
	IsFeature bool `protobuf:"varint,24,opt,name=is_feature,json=isFeature,proto3" json:"is_feature,omitempty"`
	// 是否是预约召回
	ReserveType ReserveType `protobuf:"varint,25,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
	// bvid
	Bvid string `protobuf:"bytes,26,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 播放数
	View int32 `protobuf:"varint,27,opt,name=view,proto3" json:"view,omitempty"`
	// 是否展示首映角标
	ShowPremiereBadge bool `protobuf:"varint,28,opt,name=show_premiere_badge,json=showPremiereBadge,proto3" json:"show_premiere_badge,omitempty"`
	// 是否是首映卡
	PremiereCard bool `protobuf:"varint,29,opt,name=premiere_card,json=premiereCard,proto3" json:"premiere_card,omitempty"`
	// 是否在封面上展示历史播放进度条
	ShowProgress bool `protobuf:"varint,30,opt,name=show_progress,json=showProgress,proto3" json:"show_progress,omitempty"`
	// 默认播放的单p时长 单位秒
	PartDuration int64 `protobuf:"varint,31,opt,name=part_duration,json=partDuration,proto3" json:"part_duration,omitempty"`
	// 默认播放的分p播放进度 单位秒
	PartProgress         int64    `protobuf:"varint,32,opt,name=part_progress,json=partProgress,proto3" json:"part_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynArchive) Reset()         { *m = MdlDynArchive{} }
func (m *MdlDynArchive) String() string { return proto.CompactTextString(m) }
func (*MdlDynArchive) ProtoMessage()    {}
func (*MdlDynArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{25}
}
func (m *MdlDynArchive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynArchive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynArchive.Merge(m, src)
}
func (m *MdlDynArchive) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynArchive.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynArchive proto.InternalMessageInfo

func (m *MdlDynArchive) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynArchive) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynArchive) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynArchive) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *MdlDynArchive) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *MdlDynArchive) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

func (m *MdlDynArchive) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *MdlDynArchive) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynArchive) GetMediaType() MediaType {
	if m != nil {
		return m.MediaType
	}
	return MediaType_MediaTypeNone
}

func (m *MdlDynArchive) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MdlDynArchive) GetBadge() []*VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynArchive) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynArchive) GetStype() VideoType {
	if m != nil {
		return m.Stype
	}
	return VideoType_video_type_general
}

func (m *MdlDynArchive) GetIsPGC() bool {
	if m != nil {
		return m.IsPGC
	}
	return false
}

func (m *MdlDynArchive) GetInlineURL() string {
	if m != nil {
		return m.InlineURL
	}
	return ""
}

func (m *MdlDynArchive) GetEpisodeId() int64 {
	if m != nil {
		return m.EpisodeId
	}
	return 0
}

func (m *MdlDynArchive) GetSubType() int32 {
	if m != nil {
		return m.SubType
	}
	return 0
}

func (m *MdlDynArchive) GetPgcSeasonId() int64 {
	if m != nil {
		return m.PgcSeasonId
	}
	return 0
}

func (m *MdlDynArchive) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynArchive) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynArchive) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *MdlDynArchive) GetIsPreview() bool {
	if m != nil {
		return m.IsPreview
	}
	return false
}

func (m *MdlDynArchive) GetBadgeCategory() []*VideoBadge {
	if m != nil {
		return m.BadgeCategory
	}
	return nil
}

func (m *MdlDynArchive) GetIsFeature() bool {
	if m != nil {
		return m.IsFeature
	}
	return false
}

func (m *MdlDynArchive) GetReserveType() ReserveType {
	if m != nil {
		return m.ReserveType
	}
	return ReserveType_reserve_none
}

func (m *MdlDynArchive) GetBvid() string {
	if m != nil {
		return m.Bvid
	}
	return ""
}

func (m *MdlDynArchive) GetView() int32 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *MdlDynArchive) GetShowPremiereBadge() bool {
	if m != nil {
		return m.ShowPremiereBadge
	}
	return false
}

func (m *MdlDynArchive) GetPremiereCard() bool {
	if m != nil {
		return m.PremiereCard
	}
	return false
}

func (m *MdlDynArchive) GetShowProgress() bool {
	if m != nil {
		return m.ShowProgress
	}
	return false
}

func (m *MdlDynArchive) GetPartDuration() int64 {
	if m != nil {
		return m.PartDuration
	}
	return 0
}

func (m *MdlDynArchive) GetPartProgress() int64 {
	if m != nil {
		return m.PartProgress
	}
	return 0
}

// Dimension 尺寸信息
type Dimension struct {
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width  int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
	// 强制视频卡横屏展示（包括竖屏和story视频）
	ForceHorizontal      bool     `protobuf:"varint,4,opt,name=force_horizontal,json=forceHorizontal,proto3" json:"force_horizontal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dimension) Reset()         { *m = Dimension{} }
func (m *Dimension) String() string { return proto.CompactTextString(m) }
func (*Dimension) ProtoMessage()    {}
func (*Dimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{26}
}
func (m *Dimension) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Dimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Dimension.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Dimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dimension.Merge(m, src)
}
func (m *Dimension) XXX_Size() int {
	return m.Size()
}
func (m *Dimension) XXX_DiscardUnknown() {
	xxx_messageInfo_Dimension.DiscardUnknown(m)
}

var xxx_messageInfo_Dimension proto.InternalMessageInfo

func (m *Dimension) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Dimension) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Dimension) GetRotate() int64 {
	if m != nil {
		return m.Rotate
	}
	return 0
}

func (m *Dimension) GetForceHorizontal() bool {
	if m != nil {
		return m.ForceHorizontal
	}
	return false
}

// VideoBadge 角标信息
type VideoBadge struct {
	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文案颜色-日间
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 文案颜色-夜间
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景颜色-日间
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 背景颜色-夜间
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 边框颜色-日间
	BorderColor string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 边框颜色-夜间
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 样式
	BgStyle int32 `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
	// 背景透明度-日间
	BgAlpha int32 `protobuf:"varint,9,opt,name=bg_alpha,json=bgAlpha,proto3" json:"bg_alpha,omitempty"`
	// 背景透明度-夜间
	BgAlphaNight         int32    `protobuf:"varint,10,opt,name=bg_alpha_night,json=bgAlphaNight,proto3" json:"bg_alpha_night,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoBadge) Reset()         { *m = VideoBadge{} }
func (m *VideoBadge) String() string { return proto.CompactTextString(m) }
func (*VideoBadge) ProtoMessage()    {}
func (*VideoBadge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{27}
}
func (m *VideoBadge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoBadge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoBadge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoBadge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoBadge.Merge(m, src)
}
func (m *VideoBadge) XXX_Size() int {
	return m.Size()
}
func (m *VideoBadge) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoBadge.DiscardUnknown(m)
}

var xxx_messageInfo_VideoBadge proto.InternalMessageInfo

func (m *VideoBadge) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *VideoBadge) GetTextColor() string {
	if m != nil {
		return m.TextColor
	}
	return ""
}

func (m *VideoBadge) GetTextColorNight() string {
	if m != nil {
		return m.TextColorNight
	}
	return ""
}

func (m *VideoBadge) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *VideoBadge) GetBgColorNight() string {
	if m != nil {
		return m.BgColorNight
	}
	return ""
}

func (m *VideoBadge) GetBorderColor() string {
	if m != nil {
		return m.BorderColor
	}
	return ""
}

func (m *VideoBadge) GetBorderColorNight() string {
	if m != nil {
		return m.BorderColorNight
	}
	return ""
}

func (m *VideoBadge) GetBgStyle() int32 {
	if m != nil {
		return m.BgStyle
	}
	return 0
}

func (m *VideoBadge) GetBgAlpha() int32 {
	if m != nil {
		return m.BgAlpha
	}
	return 0
}

func (m *VideoBadge) GetBgAlphaNight() int32 {
	if m != nil {
		return m.BgAlphaNight
	}
	return 0
}

// MdlDynPGC 动态-详情模块-pgc
type MdlDynPGC struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,7,opt,name=cid,proto3" json:"cid,omitempty"`
	// season_id
	SeasonId int64 `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,9,opt,name=epid,proto3" json:"epid,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,10,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,11,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v2.MediaType" json:"media_type,omitempty"`
	// 番剧类型
	SubType VideoSubType `protobuf:"varint,12,opt,name=sub_type,json=subType,proto3,enum=bilibili.app.dynamic.v2.VideoSubType" json:"sub_type,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,14,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标，多个角标之前有间距
	Badge []*VideoBadge `protobuf:"bytes,15,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,16,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// season
	Season *PGCSeason `protobuf:"bytes,17,opt,name=season,proto3" json:"season,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,18,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,19,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,20,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 新角标，多个角标之前没有间距
	BadgeCategory []*VideoBadge `protobuf:"bytes,21,rep,name=badge_category,json=badgeCategory,proto3" json:"badge_category,omitempty"`
	// 当前是否是pgc正片
	IsFeature            bool     `protobuf:"varint,22,opt,name=is_feature,json=isFeature,proto3" json:"is_feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynPGC) Reset()         { *m = MdlDynPGC{} }
func (m *MdlDynPGC) String() string { return proto.CompactTextString(m) }
func (*MdlDynPGC) ProtoMessage()    {}
func (*MdlDynPGC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{28}
}
func (m *MdlDynPGC) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynPGC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynPGC.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynPGC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynPGC.Merge(m, src)
}
func (m *MdlDynPGC) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynPGC) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynPGC.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynPGC proto.InternalMessageInfo

func (m *MdlDynPGC) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynPGC) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynPGC) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynPGC) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *MdlDynPGC) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *MdlDynPGC) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

func (m *MdlDynPGC) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynPGC) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *MdlDynPGC) GetEpid() int64 {
	if m != nil {
		return m.Epid
	}
	return 0
}

func (m *MdlDynPGC) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *MdlDynPGC) GetMediaType() MediaType {
	if m != nil {
		return m.MediaType
	}
	return MediaType_MediaTypeNone
}

func (m *MdlDynPGC) GetSubType() VideoSubType {
	if m != nil {
		return m.SubType
	}
	return VideoSubType_VideoSubTypeNone
}

func (m *MdlDynPGC) GetIsPreview() bool {
	if m != nil {
		return m.IsPreview
	}
	return false
}

func (m *MdlDynPGC) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MdlDynPGC) GetBadge() []*VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynPGC) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynPGC) GetSeason() *PGCSeason {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *MdlDynPGC) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynPGC) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynPGC) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *MdlDynPGC) GetBadgeCategory() []*VideoBadge {
	if m != nil {
		return m.BadgeCategory
	}
	return nil
}

func (m *MdlDynPGC) GetIsFeature() bool {
	if m != nil {
		return m.IsFeature
	}
	return false
}

// PGCSeason season information
type PGCSeason struct {
	// is_finish
	IsFinish int32 `protobuf:"varint,1,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 类型
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PGCSeason) Reset()         { *m = PGCSeason{} }
func (m *PGCSeason) String() string { return proto.CompactTextString(m) }
func (*PGCSeason) ProtoMessage()    {}
func (*PGCSeason) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{29}
}
func (m *PGCSeason) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PGCSeason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PGCSeason.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PGCSeason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PGCSeason.Merge(m, src)
}
func (m *PGCSeason) XXX_Size() int {
	return m.Size()
}
func (m *PGCSeason) XXX_DiscardUnknown() {
	xxx_messageInfo_PGCSeason.DiscardUnknown(m)
}

var xxx_messageInfo_PGCSeason proto.InternalMessageInfo

func (m *PGCSeason) GetIsFinish() int32 {
	if m != nil {
		return m.IsFinish
	}
	return 0
}

func (m *PGCSeason) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PGCSeason) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// MdlDynCourSeason 动态-详情模块-付费课程系列
type MdlDynCourSeason struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1（更新信息）
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 描述信息
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,7,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,8,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,9,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,10,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,11,opt,name=cid,proto3" json:"cid,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,12,opt,name=epid,proto3" json:"epid,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`
	// season_id
	SeasonId             int64    `protobuf:"varint,14,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynCourSeason) Reset()         { *m = MdlDynCourSeason{} }
func (m *MdlDynCourSeason) String() string { return proto.CompactTextString(m) }
func (*MdlDynCourSeason) ProtoMessage()    {}
func (*MdlDynCourSeason) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{30}
}
func (m *MdlDynCourSeason) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynCourSeason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynCourSeason.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynCourSeason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynCourSeason.Merge(m, src)
}
func (m *MdlDynCourSeason) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynCourSeason) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynCourSeason.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynCourSeason proto.InternalMessageInfo

func (m *MdlDynCourSeason) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynCourSeason) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynCourSeason) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynCourSeason) GetText_1() string {
	if m != nil {
		return m.Text_1
	}
	return ""
}

func (m *MdlDynCourSeason) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MdlDynCourSeason) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynCourSeason) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynCourSeason) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynCourSeason) GetIsPreview() bool {
	if m != nil {
		return m.IsPreview
	}
	return false
}

func (m *MdlDynCourSeason) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *MdlDynCourSeason) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynCourSeason) GetEpid() int64 {
	if m != nil {
		return m.Epid
	}
	return 0
}

func (m *MdlDynCourSeason) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynCourSeason) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

// MdlDynCourBatch 动态-详情模块-付费课程批次
type MdlDynCourBatch struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1(本集标题）
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 展示项 2（更新了多少个视频）
	Text_2 string `protobuf:"bytes,5,opt,name=text_2,json=text2,proto3" json:"text_2,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,7,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,8,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,9,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,10,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,11,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,12,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,13,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,14,opt,name=cid,proto3" json:"cid,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,15,opt,name=epid,proto3" json:"epid,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	// season_id
	SeasonId             int64    `protobuf:"varint,17,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynCourBatch) Reset()         { *m = MdlDynCourBatch{} }
func (m *MdlDynCourBatch) String() string { return proto.CompactTextString(m) }
func (*MdlDynCourBatch) ProtoMessage()    {}
func (*MdlDynCourBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{31}
}
func (m *MdlDynCourBatch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynCourBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynCourBatch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynCourBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynCourBatch.Merge(m, src)
}
func (m *MdlDynCourBatch) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynCourBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynCourBatch.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynCourBatch proto.InternalMessageInfo

func (m *MdlDynCourBatch) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynCourBatch) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynCourBatch) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynCourBatch) GetText_1() string {
	if m != nil {
		return m.Text_1
	}
	return ""
}

func (m *MdlDynCourBatch) GetText_2() string {
	if m != nil {
		return m.Text_2
	}
	return ""
}

func (m *MdlDynCourBatch) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynCourBatch) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynCourBatch) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynCourBatch) GetIsPreview() bool {
	if m != nil {
		return m.IsPreview
	}
	return false
}

func (m *MdlDynCourBatch) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *MdlDynCourBatch) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *MdlDynCourBatch) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

func (m *MdlDynCourBatch) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *MdlDynCourBatch) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynCourBatch) GetEpid() int64 {
	if m != nil {
		return m.Epid
	}
	return 0
}

func (m *MdlDynCourBatch) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynCourBatch) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

// MdlDynForward 动态列表渲染部分-详情模块-转发模块
type MdlDynForward struct {
	// 动态转发核心模块 套娃
	Item *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// 透传类型 0分享 1转发
	Rtype                int32    `protobuf:"varint,2,opt,name=rtype,proto3" json:"rtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynForward) Reset()         { *m = MdlDynForward{} }
func (m *MdlDynForward) String() string { return proto.CompactTextString(m) }
func (*MdlDynForward) ProtoMessage()    {}
func (*MdlDynForward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{32}
}
func (m *MdlDynForward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynForward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynForward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynForward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynForward.Merge(m, src)
}
func (m *MdlDynForward) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynForward) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynForward.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynForward proto.InternalMessageInfo

func (m *MdlDynForward) GetItem() *DynamicItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *MdlDynForward) GetRtype() int32 {
	if m != nil {
		return m.Rtype
	}
	return 0
}

// MdlDynDraw 动态列表渲染部分-详情模块-图文模块
type MdlDynDraw struct {
	// 图片
	Items []*MdlDynDrawItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 图文ID
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	// 是否是"上图下文"的样式
	// 是该样式时，图文模块会出现在Author模块的上面
	IsDrawFirst          bool     `protobuf:"varint,4,opt,name=is_draw_first,json=isDrawFirst,proto3" json:"is_draw_first,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynDraw) Reset()         { *m = MdlDynDraw{} }
func (m *MdlDynDraw) String() string { return proto.CompactTextString(m) }
func (*MdlDynDraw) ProtoMessage()    {}
func (*MdlDynDraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{33}
}
func (m *MdlDynDraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynDraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynDraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynDraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynDraw.Merge(m, src)
}
func (m *MdlDynDraw) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynDraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynDraw.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynDraw proto.InternalMessageInfo

func (m *MdlDynDraw) GetItems() []*MdlDynDrawItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *MdlDynDraw) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynDraw) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynDraw) GetIsDrawFirst() bool {
	if m != nil {
		return m.IsDrawFirst
	}
	return false
}

// MdlDynDrawItem 动态列表渲染部分-详情模块-图文
type MdlDynDrawItem struct {
	// 图片链接
	Src string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	// 图片宽度
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	// 图片高度
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// 图片大小
	Size_ float32 `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`
	// 图片标签
	Tags                 []*MdlDynDrawTag `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MdlDynDrawItem) Reset()         { *m = MdlDynDrawItem{} }
func (m *MdlDynDrawItem) String() string { return proto.CompactTextString(m) }
func (*MdlDynDrawItem) ProtoMessage()    {}
func (*MdlDynDrawItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{34}
}
func (m *MdlDynDrawItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynDrawItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynDrawItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynDrawItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynDrawItem.Merge(m, src)
}
func (m *MdlDynDrawItem) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynDrawItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynDrawItem.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynDrawItem proto.InternalMessageInfo

func (m *MdlDynDrawItem) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *MdlDynDrawItem) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *MdlDynDrawItem) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MdlDynDrawItem) GetSize_() float32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *MdlDynDrawItem) GetTags() []*MdlDynDrawTag {
	if m != nil {
		return m.Tags
	}
	return nil
}

// MdlDynDrawTag 动态列表渲染部分-详情模块-图文-标签
type MdlDynDrawTag struct {
	// 标签类型
	Type MdlDynDrawTagType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.MdlDynDrawTagType" json:"type,omitempty"`
	// 标签详情
	Item                 *MdlDynDrawTagItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MdlDynDrawTag) Reset()         { *m = MdlDynDrawTag{} }
func (m *MdlDynDrawTag) String() string { return proto.CompactTextString(m) }
func (*MdlDynDrawTag) ProtoMessage()    {}
func (*MdlDynDrawTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{35}
}
func (m *MdlDynDrawTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynDrawTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynDrawTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynDrawTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynDrawTag.Merge(m, src)
}
func (m *MdlDynDrawTag) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynDrawTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynDrawTag.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynDrawTag proto.InternalMessageInfo

func (m *MdlDynDrawTag) GetType() MdlDynDrawTagType {
	if m != nil {
		return m.Type
	}
	return MdlDynDrawTagType_mdl_draw_tag_none
}

func (m *MdlDynDrawTag) GetItem() *MdlDynDrawTagItem {
	if m != nil {
		return m.Item
	}
	return nil
}

// MdlDynDrawTag 动态列表部分-详情模块-图文-标签详情
type MdlDynDrawTagItem struct {
	// 跳转链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 标签内容
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 坐标-x
	X int64 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	// 坐标-y
	Y int64 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	// 方向
	Orientation int32 `protobuf:"varint,5,opt,name=orientation,proto3" json:"orientation,omitempty"`
	// 来源 0未知、1淘宝、2自营
	Source int32 `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`
	// 商品id
	ItemId int64 `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,8,opt,name=mid,proto3" json:"mid,omitempty"`
	// 话题id
	Tid int64 `protobuf:"varint,9,opt,name=tid,proto3" json:"tid,omitempty"`
	// lbs信息
	Poi string `protobuf:"bytes,10,opt,name=poi,proto3" json:"poi,omitempty"`
	// 商品标签链接
	SchemaUrl            string   `protobuf:"bytes,11,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynDrawTagItem) Reset()         { *m = MdlDynDrawTagItem{} }
func (m *MdlDynDrawTagItem) String() string { return proto.CompactTextString(m) }
func (*MdlDynDrawTagItem) ProtoMessage()    {}
func (*MdlDynDrawTagItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{36}
}
func (m *MdlDynDrawTagItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynDrawTagItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynDrawTagItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynDrawTagItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynDrawTagItem.Merge(m, src)
}
func (m *MdlDynDrawTagItem) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynDrawTagItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynDrawTagItem.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynDrawTagItem proto.InternalMessageInfo

func (m *MdlDynDrawTagItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MdlDynDrawTagItem) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MdlDynDrawTagItem) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetOrientation() int32 {
	if m != nil {
		return m.Orientation
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *MdlDynDrawTagItem) GetPoi() string {
	if m != nil {
		return m.Poi
	}
	return ""
}

func (m *MdlDynDrawTagItem) GetSchemaUrl() string {
	if m != nil {
		return m.SchemaUrl
	}
	return ""
}

// MdlDynArticle 动态列表渲染部分-详情模块-专栏模块
type MdlDynArticle struct {
	// 专栏id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 文案部分
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 配图
	Covers []string `protobuf:"bytes,5,rep,name=covers,proto3" json:"covers,omitempty"`
	// 阅读量标签
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// 模板类型
	TemplateID           int32    `protobuf:"varint,7,opt,name=templateID,proto3" json:"templateID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynArticle) Reset()         { *m = MdlDynArticle{} }
func (m *MdlDynArticle) String() string { return proto.CompactTextString(m) }
func (*MdlDynArticle) ProtoMessage()    {}
func (*MdlDynArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{37}
}
func (m *MdlDynArticle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynArticle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynArticle.Merge(m, src)
}
func (m *MdlDynArticle) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynArticle.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynArticle proto.InternalMessageInfo

func (m *MdlDynArticle) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynArticle) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynArticle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynArticle) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MdlDynArticle) GetCovers() []string {
	if m != nil {
		return m.Covers
	}
	return nil
}

func (m *MdlDynArticle) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MdlDynArticle) GetTemplateID() int32 {
	if m != nil {
		return m.TemplateID
	}
	return 0
}

// MdlDynMusic 动态列表渲染部分-详情模块-音频模块
type MdlDynMusic struct {
	// 音频id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// upId
	UpId int64 `protobuf:"varint,3,opt,name=up_id,json=upId,proto3" json:"up_id,omitempty"`
	// 歌名
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 专辑封面
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 展示项1
	Label1 string `protobuf:"bytes,6,opt,name=label1,proto3" json:"label1,omitempty"`
	// upper
	Upper                string   `protobuf:"bytes,7,opt,name=upper,proto3" json:"upper,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynMusic) Reset()         { *m = MdlDynMusic{} }
func (m *MdlDynMusic) String() string { return proto.CompactTextString(m) }
func (*MdlDynMusic) ProtoMessage()    {}
func (*MdlDynMusic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{38}
}
func (m *MdlDynMusic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynMusic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynMusic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynMusic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynMusic.Merge(m, src)
}
func (m *MdlDynMusic) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynMusic) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynMusic.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynMusic proto.InternalMessageInfo

func (m *MdlDynMusic) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynMusic) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynMusic) GetUpId() int64 {
	if m != nil {
		return m.UpId
	}
	return 0
}

func (m *MdlDynMusic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynMusic) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynMusic) GetLabel1() string {
	if m != nil {
		return m.Label1
	}
	return ""
}

func (m *MdlDynMusic) GetUpper() string {
	if m != nil {
		return m.Upper
	}
	return ""
}

// MdlDynCommon 动态列表渲染部分-详情模块-通用
type MdlDynCommon struct {
	// 物料id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 描述 漫画卡标题下第一行
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 标签1 漫画卡标题下第二行
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// 所属业务类型
	BizType int32 `protobuf:"varint,7,opt,name=bizType,proto3" json:"bizType,omitempty"`
	// 镜像数据ID
	SketchID int64 `protobuf:"varint,8,opt,name=sketchID,proto3" json:"sketchID,omitempty"`
	// 卡片样式
	Style MdlDynCommonType `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.MdlDynCommonType" json:"style,omitempty"`
	// 角标
	Badge []*VideoBadge `protobuf:"bytes,10,rep,name=badge,proto3" json:"badge,omitempty"`
	// 按钮
	Button               *AdditionalButton `protobuf:"bytes,11,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MdlDynCommon) Reset()         { *m = MdlDynCommon{} }
func (m *MdlDynCommon) String() string { return proto.CompactTextString(m) }
func (*MdlDynCommon) ProtoMessage()    {}
func (*MdlDynCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{39}
}
func (m *MdlDynCommon) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynCommon.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynCommon.Merge(m, src)
}
func (m *MdlDynCommon) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynCommon.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynCommon proto.InternalMessageInfo

func (m *MdlDynCommon) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *MdlDynCommon) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynCommon) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynCommon) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MdlDynCommon) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynCommon) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MdlDynCommon) GetBizType() int32 {
	if m != nil {
		return m.BizType
	}
	return 0
}

func (m *MdlDynCommon) GetSketchID() int64 {
	if m != nil {
		return m.SketchID
	}
	return 0
}

func (m *MdlDynCommon) GetStyle() MdlDynCommonType {
	if m != nil {
		return m.Style
	}
	return MdlDynCommonType_mdl_dyn_common_none
}

func (m *MdlDynCommon) GetBadge() []*VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynCommon) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

// MdlDynLive 动态列表渲染部分-详情模块-直播
type MdlDynLive struct {
	// 房间号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 直播间标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 直播间封面
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	// 标题1 例: 陪伴学习
	CoverLabel string `protobuf:"bytes,5,opt,name=cover_label,json=coverLabel,proto3" json:"cover_label,omitempty"`
	// 标题2 例: 54.6万人气
	CoverLabel2 string `protobuf:"bytes,6,opt,name=cover_label2,json=coverLabel2,proto3" json:"cover_label2,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,7,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 直播角标
	Badge *VideoBadge `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`
	// 是否是预约召回
	ReserveType          ReserveType `protobuf:"varint,9,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MdlDynLive) Reset()         { *m = MdlDynLive{} }
func (m *MdlDynLive) String() string { return proto.CompactTextString(m) }
func (*MdlDynLive) ProtoMessage()    {}
func (*MdlDynLive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{40}
}
func (m *MdlDynLive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynLive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynLive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynLive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynLive.Merge(m, src)
}
func (m *MdlDynLive) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynLive) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynLive.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynLive proto.InternalMessageInfo

func (m *MdlDynLive) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynLive) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynLive) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynLive) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynLive) GetCoverLabel() string {
	if m != nil {
		return m.CoverLabel
	}
	return ""
}

func (m *MdlDynLive) GetCoverLabel2() string {
	if m != nil {
		return m.CoverLabel2
	}
	return ""
}

func (m *MdlDynLive) GetLiveState() LiveState {
	if m != nil {
		return m.LiveState
	}
	return LiveState_live_none
}

func (m *MdlDynLive) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynLive) GetReserveType() ReserveType {
	if m != nil {
		return m.ReserveType
	}
	return ReserveType_reserve_none
}

// MdlDynMedialist 动态列表渲染部分-详情模块-播单
type MdlDynMedialist struct {
	// 播单id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 主标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 封面类型
	CoverType int32 `protobuf:"varint,6,opt,name=cover_type,json=coverType,proto3" json:"cover_type,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
	// 封面右下角icon 有这个的话直接展示 不用看 cover_type
	CoverBottomRightIcon string   `protobuf:"bytes,8,opt,name=cover_bottom_right_icon,json=coverBottomRightIcon,proto3" json:"cover_bottom_right_icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynMedialist) Reset()         { *m = MdlDynMedialist{} }
func (m *MdlDynMedialist) String() string { return proto.CompactTextString(m) }
func (*MdlDynMedialist) ProtoMessage()    {}
func (*MdlDynMedialist) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{41}
}
func (m *MdlDynMedialist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynMedialist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynMedialist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynMedialist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynMedialist.Merge(m, src)
}
func (m *MdlDynMedialist) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynMedialist) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynMedialist.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynMedialist proto.InternalMessageInfo

func (m *MdlDynMedialist) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynMedialist) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynMedialist) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynMedialist) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *MdlDynMedialist) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynMedialist) GetCoverType() int32 {
	if m != nil {
		return m.CoverType
	}
	return 0
}

func (m *MdlDynMedialist) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynMedialist) GetCoverBottomRightIcon() string {
	if m != nil {
		return m.CoverBottomRightIcon
	}
	return ""
}

// MdlDynApplet 动态列表渲染部分-详情模块-小程序/小游戏
type MdlDynApplet struct {
	// 小程序id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 主标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	// 小程序icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 小程序标题
	Label string `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮文案
	ButtonTitle          string   `protobuf:"bytes,9,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynApplet) Reset()         { *m = MdlDynApplet{} }
func (m *MdlDynApplet) String() string { return proto.CompactTextString(m) }
func (*MdlDynApplet) ProtoMessage()    {}
func (*MdlDynApplet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{42}
}
func (m *MdlDynApplet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynApplet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynApplet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynApplet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynApplet.Merge(m, src)
}
func (m *MdlDynApplet) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynApplet) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynApplet.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynApplet proto.InternalMessageInfo

func (m *MdlDynApplet) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynApplet) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynApplet) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynApplet) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *MdlDynApplet) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynApplet) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *MdlDynApplet) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MdlDynApplet) GetButtonTitle() string {
	if m != nil {
		return m.ButtonTitle
	}
	return ""
}

// MdlDynSubscription 动态列表渲染部分-详情模块-订阅卡
type MdlDynSubscription struct {
	// 卡片物料id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 广告创意id
	AdId int64 `protobuf:"varint,2,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 广告标题
	AdTitle string `protobuf:"bytes,6,opt,name=ad_title,json=adTitle,proto3" json:"ad_title,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
	// 小提示
	Tips                 string   `protobuf:"bytes,8,opt,name=tips,proto3" json:"tips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynSubscription) Reset()         { *m = MdlDynSubscription{} }
func (m *MdlDynSubscription) String() string { return proto.CompactTextString(m) }
func (*MdlDynSubscription) ProtoMessage()    {}
func (*MdlDynSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{43}
}
func (m *MdlDynSubscription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynSubscription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynSubscription.Merge(m, src)
}
func (m *MdlDynSubscription) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynSubscription proto.InternalMessageInfo

func (m *MdlDynSubscription) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynSubscription) GetAdId() int64 {
	if m != nil {
		return m.AdId
	}
	return 0
}

func (m *MdlDynSubscription) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynSubscription) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynSubscription) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynSubscription) GetAdTitle() string {
	if m != nil {
		return m.AdTitle
	}
	return ""
}

func (m *MdlDynSubscription) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynSubscription) GetTips() string {
	if m != nil {
		return m.Tips
	}
	return ""
}

// MdlDynLiveRcmd 动态列表渲染部分-详情模块-直播推荐
type MdlDynLiveRcmd struct {
	// 直播数据
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 是否是预约召回
	ReserveType ReserveType `protobuf:"varint,2,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
	// 直播卡角标
	Pendant              *LivePendant `protobuf:"bytes,3,opt,name=pendant,proto3" json:"pendant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MdlDynLiveRcmd) Reset()         { *m = MdlDynLiveRcmd{} }
func (m *MdlDynLiveRcmd) String() string { return proto.CompactTextString(m) }
func (*MdlDynLiveRcmd) ProtoMessage()    {}
func (*MdlDynLiveRcmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{44}
}
func (m *MdlDynLiveRcmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynLiveRcmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynLiveRcmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynLiveRcmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynLiveRcmd.Merge(m, src)
}
func (m *MdlDynLiveRcmd) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynLiveRcmd) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynLiveRcmd.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynLiveRcmd proto.InternalMessageInfo

func (m *MdlDynLiveRcmd) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MdlDynLiveRcmd) GetReserveType() ReserveType {
	if m != nil {
		return m.ReserveType
	}
	return ReserveType_reserve_none
}

func (m *MdlDynLiveRcmd) GetPendant() *LivePendant {
	if m != nil {
		return m.Pendant
	}
	return nil
}

type LivePendant struct {
	// 挂件文本值
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 挂件图标
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// id
	PendantId            int64    `protobuf:"varint,3,opt,name=pendant_id,json=pendantId,proto3" json:"pendant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivePendant) Reset()         { *m = LivePendant{} }
func (m *LivePendant) String() string { return proto.CompactTextString(m) }
func (*LivePendant) ProtoMessage()    {}
func (*LivePendant) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{45}
}
func (m *LivePendant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LivePendant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LivePendant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LivePendant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivePendant.Merge(m, src)
}
func (m *LivePendant) XXX_Size() int {
	return m.Size()
}
func (m *LivePendant) XXX_DiscardUnknown() {
	xxx_messageInfo_LivePendant.DiscardUnknown(m)
}

var xxx_messageInfo_LivePendant proto.InternalMessageInfo

func (m *LivePendant) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *LivePendant) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *LivePendant) GetPendantId() int64 {
	if m != nil {
		return m.PendantId
	}
	return 0
}

// MdlDynUGCSeason 动态列表渲染部分-UGC合集
type MdlDynUGCSeason struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// 卡片物料id
	Id int64 `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	// inline播放地址
	InlineURL string `protobuf:"bytes,8,opt,name=inlineURL,proto3" json:"inlineURL,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,9,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,10,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,11,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,12,opt,name=cid,proto3" json:"cid,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,13,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,14,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,15,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 角标，多个角标之前有间距
	Badge                []*VideoBadge `protobuf:"bytes,16,rep,name=badge,proto3" json:"badge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MdlDynUGCSeason) Reset()         { *m = MdlDynUGCSeason{} }
func (m *MdlDynUGCSeason) String() string { return proto.CompactTextString(m) }
func (*MdlDynUGCSeason) ProtoMessage()    {}
func (*MdlDynUGCSeason) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{46}
}
func (m *MdlDynUGCSeason) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynUGCSeason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynUGCSeason.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynUGCSeason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynUGCSeason.Merge(m, src)
}
func (m *MdlDynUGCSeason) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynUGCSeason) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynUGCSeason.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynUGCSeason proto.InternalMessageInfo

func (m *MdlDynUGCSeason) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynUGCSeason) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynUGCSeason) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynUGCSeason) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *MdlDynUGCSeason) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *MdlDynUGCSeason) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

func (m *MdlDynUGCSeason) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdlDynUGCSeason) GetInlineURL() string {
	if m != nil {
		return m.InlineURL
	}
	return ""
}

func (m *MdlDynUGCSeason) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynUGCSeason) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynUGCSeason) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *MdlDynUGCSeason) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynUGCSeason) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *MdlDynUGCSeason) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynUGCSeason) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *MdlDynUGCSeason) GetBadge() []*VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

// MdlDynSubscriptionNew 动态新附加卡
type MdlDynSubscriptionNew struct {
	//样式类型
	Style MdlDynSubscriptionNewStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle" json:"style,omitempty"`
	// 新订阅卡数据
	//
	// Types that are valid to be assigned to Item:
	//	*MdlDynSubscriptionNew_DynSubscription
	//	*MdlDynSubscriptionNew_DynLiveRcmd
	Item                 isMdlDynSubscriptionNew_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *MdlDynSubscriptionNew) Reset()         { *m = MdlDynSubscriptionNew{} }
func (m *MdlDynSubscriptionNew) String() string { return proto.CompactTextString(m) }
func (*MdlDynSubscriptionNew) ProtoMessage()    {}
func (*MdlDynSubscriptionNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{47}
}
func (m *MdlDynSubscriptionNew) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynSubscriptionNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynSubscriptionNew.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynSubscriptionNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynSubscriptionNew.Merge(m, src)
}
func (m *MdlDynSubscriptionNew) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynSubscriptionNew) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynSubscriptionNew.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynSubscriptionNew proto.InternalMessageInfo

type isMdlDynSubscriptionNew_Item interface {
	isMdlDynSubscriptionNew_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type MdlDynSubscriptionNew_DynSubscription struct {
	DynSubscription *MdlDynSubscription `protobuf:"bytes,2,opt,name=dyn_subscription,json=dynSubscription,proto3,oneof" json:"dyn_subscription,omitempty"`
}
type MdlDynSubscriptionNew_DynLiveRcmd struct {
	DynLiveRcmd *MdlDynLiveRcmd `protobuf:"bytes,3,opt,name=dyn_live_rcmd,json=dynLiveRcmd,proto3,oneof" json:"dyn_live_rcmd,omitempty"`
}

func (*MdlDynSubscriptionNew_DynSubscription) isMdlDynSubscriptionNew_Item() {}
func (*MdlDynSubscriptionNew_DynLiveRcmd) isMdlDynSubscriptionNew_Item()     {}

func (m *MdlDynSubscriptionNew) GetItem() isMdlDynSubscriptionNew_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *MdlDynSubscriptionNew) GetStyle() MdlDynSubscriptionNewStyle {
	if m != nil {
		return m.Style
	}
	return MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_nont
}

func (m *MdlDynSubscriptionNew) GetDynSubscription() *MdlDynSubscription {
	if x, ok := m.GetItem().(*MdlDynSubscriptionNew_DynSubscription); ok {
		return x.DynSubscription
	}
	return nil
}

func (m *MdlDynSubscriptionNew) GetDynLiveRcmd() *MdlDynLiveRcmd {
	if x, ok := m.GetItem().(*MdlDynSubscriptionNew_DynLiveRcmd); ok {
		return x.DynLiveRcmd
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MdlDynSubscriptionNew) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MdlDynSubscriptionNew_DynSubscription)(nil),
		(*MdlDynSubscriptionNew_DynLiveRcmd)(nil),
	}
}

type MdlDynCourUp struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1（更新信息）
	Text_1 string `protobuf:"bytes,5,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,7,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,8,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,9,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,10,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,11,opt,name=cid,proto3" json:"cid,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,12,opt,name=epid,proto3" json:"epid,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`
	// season_id
	SeasonId             int64    `protobuf:"varint,14,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynCourUp) Reset()         { *m = MdlDynCourUp{} }
func (m *MdlDynCourUp) String() string { return proto.CompactTextString(m) }
func (*MdlDynCourUp) ProtoMessage()    {}
func (*MdlDynCourUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{48}
}
func (m *MdlDynCourUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynCourUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynCourUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynCourUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynCourUp.Merge(m, src)
}
func (m *MdlDynCourUp) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynCourUp) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynCourUp.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynCourUp proto.InternalMessageInfo

func (m *MdlDynCourUp) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MdlDynCourUp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MdlDynCourUp) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MdlDynCourUp) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MdlDynCourUp) GetText_1() string {
	if m != nil {
		return m.Text_1
	}
	return ""
}

func (m *MdlDynCourUp) GetBadge() *VideoBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *MdlDynCourUp) GetPlayIcon() string {
	if m != nil {
		return m.PlayIcon
	}
	return ""
}

func (m *MdlDynCourUp) GetCanPlay() bool {
	if m != nil {
		return m.CanPlay
	}
	return false
}

func (m *MdlDynCourUp) GetIsPreview() bool {
	if m != nil {
		return m.IsPreview
	}
	return false
}

func (m *MdlDynCourUp) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *MdlDynCourUp) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *MdlDynCourUp) GetEpid() int64 {
	if m != nil {
		return m.Epid
	}
	return 0
}

func (m *MdlDynCourUp) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *MdlDynCourUp) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

// 话题集模块
type MdlDynTopicSet struct {
	// 包含的新话题信息
	Topics []*TopicItem `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	// 查看更多按钮
	MoreBtn *IconButton `protobuf:"bytes,2,opt,name=more_btn,json=moreBtn,proto3" json:"more_btn,omitempty"`
	// 所属的话题集id
	TopicSetId int64 `protobuf:"varint,3,opt,name=topic_set_id,json=topicSetId,proto3" json:"topic_set_id,omitempty"`
	// 本次推送所属的唯一push id
	PushId               int64    `protobuf:"varint,4,opt,name=push_id,json=pushId,proto3" json:"push_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdlDynTopicSet) Reset()         { *m = MdlDynTopicSet{} }
func (m *MdlDynTopicSet) String() string { return proto.CompactTextString(m) }
func (*MdlDynTopicSet) ProtoMessage()    {}
func (*MdlDynTopicSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{49}
}
func (m *MdlDynTopicSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MdlDynTopicSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MdlDynTopicSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MdlDynTopicSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdlDynTopicSet.Merge(m, src)
}
func (m *MdlDynTopicSet) XXX_Size() int {
	return m.Size()
}
func (m *MdlDynTopicSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MdlDynTopicSet.DiscardUnknown(m)
}

var xxx_messageInfo_MdlDynTopicSet proto.InternalMessageInfo

func (m *MdlDynTopicSet) GetTopics() []*TopicItem {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *MdlDynTopicSet) GetMoreBtn() *IconButton {
	if m != nil {
		return m.MoreBtn
	}
	return nil
}

func (m *MdlDynTopicSet) GetTopicSetId() int64 {
	if m != nil {
		return m.TopicSetId
	}
	return 0
}

func (m *MdlDynTopicSet) GetPushId() int64 {
	if m != nil {
		return m.PushId
	}
	return 0
}

// ModuleAdditional 动态-附加卡模块
type ModuleAdditional struct {
	Type AdditionalType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.AdditionalType" json:"type,omitempty"`
	// Types that are valid to be assigned to Item:
	//	*ModuleAdditional_Pgc
	//	*ModuleAdditional_Goods
	//	*ModuleAdditional_Vote
	//	*ModuleAdditional_Common
	//	*ModuleAdditional_Esport
	//	*ModuleAdditional_Vote2
	//	*ModuleAdditional_Ugc
	//	*ModuleAdditional_Up
	Item                 isModuleAdditional_Item `protobuf_oneof:"item"`
	Rid                  int64                   `protobuf:"varint,7,opt,name=rid,proto3" json:"rid,omitempty"`
	NeedWriteCalender    bool                    `protobuf:"varint,11,opt,name=need_write_calender,json=needWriteCalender,proto3" json:"need_write_calender,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModuleAdditional) Reset()         { *m = ModuleAdditional{} }
func (m *ModuleAdditional) String() string { return proto.CompactTextString(m) }
func (*ModuleAdditional) ProtoMessage()    {}
func (*ModuleAdditional) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{50}
}
func (m *ModuleAdditional) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAdditional) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAdditional.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAdditional) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAdditional.Merge(m, src)
}
func (m *ModuleAdditional) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAdditional) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAdditional.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAdditional proto.InternalMessageInfo

type isModuleAdditional_Item interface {
	isModuleAdditional_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ModuleAdditional_Pgc struct {
	Pgc *AdditionalPGC `protobuf:"bytes,2,opt,name=pgc,proto3,oneof" json:"pgc,omitempty"`
}
type ModuleAdditional_Goods struct {
	Goods *AdditionGoods `protobuf:"bytes,3,opt,name=goods,proto3,oneof" json:"goods,omitempty"`
}
type ModuleAdditional_Vote struct {
	Vote *AdditionVote `protobuf:"bytes,4,opt,name=vote,proto3,oneof" json:"vote,omitempty"`
}
type ModuleAdditional_Common struct {
	Common *AdditionCommon `protobuf:"bytes,5,opt,name=common,proto3,oneof" json:"common,omitempty"`
}
type ModuleAdditional_Esport struct {
	Esport *AdditionEsport `protobuf:"bytes,6,opt,name=esport,proto3,oneof" json:"esport,omitempty"`
}
type ModuleAdditional_Vote2 struct {
	Vote2 *AdditionVote2 `protobuf:"bytes,8,opt,name=vote2,proto3,oneof" json:"vote2,omitempty"`
}
type ModuleAdditional_Ugc struct {
	Ugc *AdditionUgc `protobuf:"bytes,9,opt,name=ugc,proto3,oneof" json:"ugc,omitempty"`
}
type ModuleAdditional_Up struct {
	Up *AdditionUP `protobuf:"bytes,10,opt,name=up,proto3,oneof" json:"up,omitempty"`
}

func (*ModuleAdditional_Pgc) isModuleAdditional_Item()    {}
func (*ModuleAdditional_Goods) isModuleAdditional_Item()  {}
func (*ModuleAdditional_Vote) isModuleAdditional_Item()   {}
func (*ModuleAdditional_Common) isModuleAdditional_Item() {}
func (*ModuleAdditional_Esport) isModuleAdditional_Item() {}
func (*ModuleAdditional_Vote2) isModuleAdditional_Item()  {}
func (*ModuleAdditional_Ugc) isModuleAdditional_Item()    {}
func (*ModuleAdditional_Up) isModuleAdditional_Item()     {}

func (m *ModuleAdditional) GetItem() isModuleAdditional_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ModuleAdditional) GetType() AdditionalType {
	if m != nil {
		return m.Type
	}
	return AdditionalType_additional_none
}

func (m *ModuleAdditional) GetPgc() *AdditionalPGC {
	if x, ok := m.GetItem().(*ModuleAdditional_Pgc); ok {
		return x.Pgc
	}
	return nil
}

func (m *ModuleAdditional) GetGoods() *AdditionGoods {
	if x, ok := m.GetItem().(*ModuleAdditional_Goods); ok {
		return x.Goods
	}
	return nil
}

func (m *ModuleAdditional) GetVote() *AdditionVote {
	if x, ok := m.GetItem().(*ModuleAdditional_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *ModuleAdditional) GetCommon() *AdditionCommon {
	if x, ok := m.GetItem().(*ModuleAdditional_Common); ok {
		return x.Common
	}
	return nil
}

func (m *ModuleAdditional) GetEsport() *AdditionEsport {
	if x, ok := m.GetItem().(*ModuleAdditional_Esport); ok {
		return x.Esport
	}
	return nil
}

func (m *ModuleAdditional) GetVote2() *AdditionVote2 {
	if x, ok := m.GetItem().(*ModuleAdditional_Vote2); ok {
		return x.Vote2
	}
	return nil
}

func (m *ModuleAdditional) GetUgc() *AdditionUgc {
	if x, ok := m.GetItem().(*ModuleAdditional_Ugc); ok {
		return x.Ugc
	}
	return nil
}

func (m *ModuleAdditional) GetUp() *AdditionUP {
	if x, ok := m.GetItem().(*ModuleAdditional_Up); ok {
		return x.Up
	}
	return nil
}

func (m *ModuleAdditional) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *ModuleAdditional) GetNeedWriteCalender() bool {
	if m != nil {
		return m.NeedWriteCalender
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ModuleAdditional) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ModuleAdditional_Pgc)(nil),
		(*ModuleAdditional_Goods)(nil),
		(*ModuleAdditional_Vote)(nil),
		(*ModuleAdditional_Common)(nil),
		(*ModuleAdditional_Esport)(nil),
		(*ModuleAdditional_Vote2)(nil),
		(*ModuleAdditional_Ugc)(nil),
		(*ModuleAdditional_Up)(nil),
	}
}

// AdditionalPGC 动态-附加卡-番剧卡
type AdditionalPGC struct {
	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示图
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
	// 头部icon
	HeadIcon string `protobuf:"bytes,8,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
	// style
	Style ImageStyle `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.ImageStyle" json:"style,omitempty"`
	// 动态本身的类型 type
	Type                 string   `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalPGC) Reset()         { *m = AdditionalPGC{} }
func (m *AdditionalPGC) String() string { return proto.CompactTextString(m) }
func (*AdditionalPGC) ProtoMessage()    {}
func (*AdditionalPGC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{51}
}
func (m *AdditionalPGC) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalPGC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalPGC.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalPGC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalPGC.Merge(m, src)
}
func (m *AdditionalPGC) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalPGC) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalPGC.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalPGC proto.InternalMessageInfo

func (m *AdditionalPGC) GetHeadText() string {
	if m != nil {
		return m.HeadText
	}
	return ""
}

func (m *AdditionalPGC) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionalPGC) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *AdditionalPGC) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *AdditionalPGC) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *AdditionalPGC) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AdditionalPGC) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AdditionalPGC) GetHeadIcon() string {
	if m != nil {
		return m.HeadIcon
	}
	return ""
}

func (m *AdditionalPGC) GetStyle() ImageStyle {
	if m != nil {
		return m.Style
	}
	return ImageStyle_add_style_vertical
}

func (m *AdditionalPGC) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// AdditionalButton 动态-附加卡-按钮
type AdditionalButton struct {
	// 按钮类型
	Type AddButtonType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.AddButtonType" json:"type,omitempty"`
	// jump-跳转样式
	JumpStyle *AdditionalButtonStyle `protobuf:"bytes,2,opt,name=jump_style,json=jumpStyle,proto3" json:"jump_style,omitempty"`
	// jump-跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// button-未点样式
	Uncheck *AdditionalButtonStyle `protobuf:"bytes,4,opt,name=uncheck,proto3" json:"uncheck,omitempty"`
	// button-已点样式
	Check *AdditionalButtonStyle `protobuf:"bytes,5,opt,name=check,proto3" json:"check,omitempty"`
	// button-当前状态
	Status AdditionalButtonStatus `protobuf:"varint,6,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
	// 按钮点击样式
	ClickType            AdditionalButtonClickType `protobuf:"varint,7,opt,name=click_type,json=clickType,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonClickType" json:"click_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AdditionalButton) Reset()         { *m = AdditionalButton{} }
func (m *AdditionalButton) String() string { return proto.CompactTextString(m) }
func (*AdditionalButton) ProtoMessage()    {}
func (*AdditionalButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{52}
}
func (m *AdditionalButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalButton.Merge(m, src)
}
func (m *AdditionalButton) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalButton) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalButton.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalButton proto.InternalMessageInfo

func (m *AdditionalButton) GetType() AddButtonType {
	if m != nil {
		return m.Type
	}
	return AddButtonType_bt_none
}

func (m *AdditionalButton) GetJumpStyle() *AdditionalButtonStyle {
	if m != nil {
		return m.JumpStyle
	}
	return nil
}

func (m *AdditionalButton) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *AdditionalButton) GetUncheck() *AdditionalButtonStyle {
	if m != nil {
		return m.Uncheck
	}
	return nil
}

func (m *AdditionalButton) GetCheck() *AdditionalButtonStyle {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *AdditionalButton) GetStatus() AdditionalButtonStatus {
	if m != nil {
		return m.Status
	}
	return AdditionalButtonStatus_none
}

func (m *AdditionalButton) GetClickType() AdditionalButtonClickType {
	if m != nil {
		return m.ClickType
	}
	return AdditionalButtonClickType_click_none
}

// AdditionalButtonStyle 动态-附加卡-按钮样式
type AdditionalButtonStyle struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 按钮点击交互
	Interactive *AdditionalButtonInteractive `protobuf:"bytes,3,opt,name=interactive,proto3" json:"interactive,omitempty"`
	// 当前按钮填充样式
	BgStyle AddButtonBgStyle `protobuf:"varint,4,opt,name=bg_style,json=bgStyle,proto3,enum=bilibili.app.dynamic.v2.AddButtonBgStyle" json:"bg_style,omitempty"`
	// toast文案, 当disable=1时有效
	Toast string `protobuf:"bytes,5,opt,name=toast,proto3" json:"toast,omitempty"`
	// 当前按钮样式, 0-高亮 1-置灰(按钮不可点击)
	Disable DisableState `protobuf:"varint,6,opt,name=disable,proto3,enum=bilibili.app.dynamic.v2.DisableState" json:"disable,omitempty"`
	// 分享样式
	Share                *AdditionalButtonShare `protobuf:"bytes,7,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AdditionalButtonStyle) Reset()         { *m = AdditionalButtonStyle{} }
func (m *AdditionalButtonStyle) String() string { return proto.CompactTextString(m) }
func (*AdditionalButtonStyle) ProtoMessage()    {}
func (*AdditionalButtonStyle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{53}
}
func (m *AdditionalButtonStyle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalButtonStyle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalButtonStyle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalButtonStyle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalButtonStyle.Merge(m, src)
}
func (m *AdditionalButtonStyle) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalButtonStyle) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalButtonStyle.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalButtonStyle proto.InternalMessageInfo

func (m *AdditionalButtonStyle) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AdditionalButtonStyle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AdditionalButtonStyle) GetInteractive() *AdditionalButtonInteractive {
	if m != nil {
		return m.Interactive
	}
	return nil
}

func (m *AdditionalButtonStyle) GetBgStyle() AddButtonBgStyle {
	if m != nil {
		return m.BgStyle
	}
	return AddButtonBgStyle_fill
}

func (m *AdditionalButtonStyle) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

func (m *AdditionalButtonStyle) GetDisable() DisableState {
	if m != nil {
		return m.Disable
	}
	return DisableState_highlight
}

func (m *AdditionalButtonStyle) GetShare() *AdditionalButtonShare {
	if m != nil {
		return m.Share
	}
	return nil
}

// 分享样式
type AdditionalButtonShare struct {
	// 是否展示分享，0-不展示 1-展示
	Show AdditionalShareShowType `protobuf:"varint,1,opt,name=show,proto3,enum=bilibili.app.dynamic.v2.AdditionalShareShowType" json:"show,omitempty"`
	// 有分享时，展示的icon
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// 分享的文案
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalButtonShare) Reset()         { *m = AdditionalButtonShare{} }
func (m *AdditionalButtonShare) String() string { return proto.CompactTextString(m) }
func (*AdditionalButtonShare) ProtoMessage()    {}
func (*AdditionalButtonShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{54}
}
func (m *AdditionalButtonShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalButtonShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalButtonShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalButtonShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalButtonShare.Merge(m, src)
}
func (m *AdditionalButtonShare) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalButtonShare) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalButtonShare.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalButtonShare proto.InternalMessageInfo

func (m *AdditionalButtonShare) GetShow() AdditionalShareShowType {
	if m != nil {
		return m.Show
	}
	return AdditionalShareShowType_st_none
}

func (m *AdditionalButtonShare) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AdditionalButtonShare) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AdditionalButtonInteractive struct {
	// 是否弹窗
	Popups string `protobuf:"bytes,1,opt,name=popups,proto3" json:"popups,omitempty"`
	// 弹窗确认文案
	Confirm string `protobuf:"bytes,2,opt,name=confirm,proto3" json:"confirm,omitempty"`
	// 弹窗取消文案
	Cancel string `protobuf:"bytes,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
	// 描述 - 副标题
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalButtonInteractive) Reset()         { *m = AdditionalButtonInteractive{} }
func (m *AdditionalButtonInteractive) String() string { return proto.CompactTextString(m) }
func (*AdditionalButtonInteractive) ProtoMessage()    {}
func (*AdditionalButtonInteractive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{55}
}
func (m *AdditionalButtonInteractive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalButtonInteractive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalButtonInteractive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalButtonInteractive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalButtonInteractive.Merge(m, src)
}
func (m *AdditionalButtonInteractive) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalButtonInteractive) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalButtonInteractive.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalButtonInteractive proto.InternalMessageInfo

func (m *AdditionalButtonInteractive) GetPopups() string {
	if m != nil {
		return m.Popups
	}
	return ""
}

func (m *AdditionalButtonInteractive) GetConfirm() string {
	if m != nil {
		return m.Confirm
	}
	return ""
}

func (m *AdditionalButtonInteractive) GetCancel() string {
	if m != nil {
		return m.Cancel
	}
	return ""
}

func (m *AdditionalButtonInteractive) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

// AdditionGoods 动态-附加卡-商品卡
type AdditionGoods struct {
	// 推荐文案
	RcmdDesc string `protobuf:"bytes,1,opt,name=rcmd_desc,json=rcmdDesc,proto3" json:"rcmd_desc,omitempty"`
	// 商品信息
	GoodsItems []*GoodsItem `protobuf:"bytes,2,rep,name=goods_items,json=goodsItems,proto3" json:"goods_items,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 头部icon
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// 商品附加卡整卡跳转
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 商品类型 1淘宝、2会员购，注：实际是获取的goods_items里面的第一个source_type
	SourceType int32 `protobuf:"varint,6,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 跳转站内还是站外
	JumpType GoodsJumpType `protobuf:"varint,7,opt,name=jump_type,json=jumpType,proto3,enum=bilibili.app.dynamic.v2.GoodsJumpType" json:"jump_type,omitempty"`
	// app name
	AppName string `protobuf:"bytes,8,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	// ad mark icon
	AdMarkIcon           string   `protobuf:"bytes,9,opt,name=ad_mark_icon,json=adMarkIcon,proto3" json:"ad_mark_icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionGoods) Reset()         { *m = AdditionGoods{} }
func (m *AdditionGoods) String() string { return proto.CompactTextString(m) }
func (*AdditionGoods) ProtoMessage()    {}
func (*AdditionGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{56}
}
func (m *AdditionGoods) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionGoods.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionGoods.Merge(m, src)
}
func (m *AdditionGoods) XXX_Size() int {
	return m.Size()
}
func (m *AdditionGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionGoods.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionGoods proto.InternalMessageInfo

func (m *AdditionGoods) GetRcmdDesc() string {
	if m != nil {
		return m.RcmdDesc
	}
	return ""
}

func (m *AdditionGoods) GetGoodsItems() []*GoodsItem {
	if m != nil {
		return m.GoodsItems
	}
	return nil
}

func (m *AdditionGoods) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *AdditionGoods) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AdditionGoods) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AdditionGoods) GetSourceType() int32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *AdditionGoods) GetJumpType() GoodsJumpType {
	if m != nil {
		return m.JumpType
	}
	return GoodsJumpType_goods_none
}

func (m *AdditionGoods) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *AdditionGoods) GetAdMarkIcon() string {
	if m != nil {
		return m.AdMarkIcon
	}
	return ""
}

// GoodsItem 动态-附加卡-商品卡-商品
type GoodsItem struct {
	// 图片
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// schemaPackageName（Android用）
	SchemaPackageName string `protobuf:"bytes,2,opt,name=schema_package_name,json=schemaPackageName,proto3" json:"schema_package_name,omitempty"`
	// 商品类型 1淘宝、2会员购
	SourceType int32 `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,4,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转文案
	JumpDesc string `protobuf:"bytes,5,opt,name=jump_desc,json=jumpDesc,proto3" json:"jump_desc,omitempty"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 摘要
	Brief string `protobuf:"bytes,7,opt,name=brief,proto3" json:"brief,omitempty"`
	// 价格
	Price string `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	// item_id
	ItemId int64 `protobuf:"varint,9,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// schema_url
	SchemaUrl string `protobuf:"bytes,10,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	// open_white_list
	OpenWhiteList []string `protobuf:"bytes,11,rep,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"`
	// use_web_v2
	UserWebV2 bool `protobuf:"varint,12,opt,name=user_web_v2,json=userWebV2,proto3" json:"user_web_v2,omitempty"`
	// ad mark
	AdMark string `protobuf:"bytes,13,opt,name=ad_mark,json=adMark,proto3" json:"ad_mark,omitempty"`
	// app name
	AppName string `protobuf:"bytes,14,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	// 跳转站内还是站外
	JumpType             GoodsJumpType `protobuf:"varint,15,opt,name=jump_type,json=jumpType,proto3,enum=bilibili.app.dynamic.v2.GoodsJumpType" json:"jump_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GoodsItem) Reset()         { *m = GoodsItem{} }
func (m *GoodsItem) String() string { return proto.CompactTextString(m) }
func (*GoodsItem) ProtoMessage()    {}
func (*GoodsItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{57}
}
func (m *GoodsItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GoodsItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GoodsItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GoodsItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsItem.Merge(m, src)
}
func (m *GoodsItem) XXX_Size() int {
	return m.Size()
}
func (m *GoodsItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsItem.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsItem proto.InternalMessageInfo

func (m *GoodsItem) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *GoodsItem) GetSchemaPackageName() string {
	if m != nil {
		return m.SchemaPackageName
	}
	return ""
}

func (m *GoodsItem) GetSourceType() int32 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *GoodsItem) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *GoodsItem) GetJumpDesc() string {
	if m != nil {
		return m.JumpDesc
	}
	return ""
}

func (m *GoodsItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GoodsItem) GetBrief() string {
	if m != nil {
		return m.Brief
	}
	return ""
}

func (m *GoodsItem) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *GoodsItem) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *GoodsItem) GetSchemaUrl() string {
	if m != nil {
		return m.SchemaUrl
	}
	return ""
}

func (m *GoodsItem) GetOpenWhiteList() []string {
	if m != nil {
		return m.OpenWhiteList
	}
	return nil
}

func (m *GoodsItem) GetUserWebV2() bool {
	if m != nil {
		return m.UserWebV2
	}
	return false
}

func (m *GoodsItem) GetAdMark() string {
	if m != nil {
		return m.AdMark
	}
	return ""
}

func (m *GoodsItem) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *GoodsItem) GetJumpType() GoodsJumpType {
	if m != nil {
		return m.JumpType
	}
	return GoodsJumpType_goods_none
}

// AdditionVote 动态-附加卡-投票
type AdditionVote struct {
	// 封面图
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示项1
	Text_1 string `protobuf:"bytes,3,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// button文案
	ButtonText string `protobuf:"bytes,4,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 点击跳转链接
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionVote) Reset()         { *m = AdditionVote{} }
func (m *AdditionVote) String() string { return proto.CompactTextString(m) }
func (*AdditionVote) ProtoMessage()    {}
func (*AdditionVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{58}
}
func (m *AdditionVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVote.Merge(m, src)
}
func (m *AdditionVote) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVote) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVote.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVote proto.InternalMessageInfo

func (m *AdditionVote) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *AdditionVote) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionVote) GetText_1() string {
	if m != nil {
		return m.Text_1
	}
	return ""
}

func (m *AdditionVote) GetButtonText() string {
	if m != nil {
		return m.ButtonText
	}
	return ""
}

func (m *AdditionVote) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// AdditionUgc 动态-附加卡-UGC视频附加卡
type AdditionUgc struct {
	// 说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 接秒开
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	// 时长
	Duration string `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	// 标题支持换行-标题支持单行和双行，本期不支持填充up昵称，支持双行展示，字段默认为true
	LineFeed bool `protobuf:"varint,8,opt,name=line_feed,json=lineFeed,proto3" json:"line_feed,omitempty"`
	// 附加卡类型
	CardType             string   `protobuf:"bytes,9,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionUgc) Reset()         { *m = AdditionUgc{} }
func (m *AdditionUgc) String() string { return proto.CompactTextString(m) }
func (*AdditionUgc) ProtoMessage()    {}
func (*AdditionUgc) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{59}
}
func (m *AdditionUgc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionUgc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionUgc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionUgc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionUgc.Merge(m, src)
}
func (m *AdditionUgc) XXX_Size() int {
	return m.Size()
}
func (m *AdditionUgc) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionUgc.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionUgc proto.InternalMessageInfo

func (m *AdditionUgc) GetHeadText() string {
	if m != nil {
		return m.HeadText
	}
	return ""
}

func (m *AdditionUgc) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionUgc) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *AdditionUgc) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *AdditionUgc) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *AdditionUgc) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AdditionUgc) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *AdditionUgc) GetLineFeed() bool {
	if m != nil {
		return m.LineFeed
	}
	return false
}

func (m *AdditionUgc) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

// AdditionCommon 动态-附加卡-通用卡
type AdditionCommon struct {
	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示图
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
	// 头部icon
	HeadIcon string `protobuf:"bytes,8,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
	// style
	Style ImageStyle `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.ImageStyle" json:"style,omitempty"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType             string   `protobuf:"bytes,11,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionCommon) Reset()         { *m = AdditionCommon{} }
func (m *AdditionCommon) String() string { return proto.CompactTextString(m) }
func (*AdditionCommon) ProtoMessage()    {}
func (*AdditionCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{60}
}
func (m *AdditionCommon) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionCommon.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionCommon.Merge(m, src)
}
func (m *AdditionCommon) XXX_Size() int {
	return m.Size()
}
func (m *AdditionCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionCommon.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionCommon proto.InternalMessageInfo

func (m *AdditionCommon) GetHeadText() string {
	if m != nil {
		return m.HeadText
	}
	return ""
}

func (m *AdditionCommon) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionCommon) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *AdditionCommon) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *AdditionCommon) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *AdditionCommon) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AdditionCommon) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AdditionCommon) GetHeadIcon() string {
	if m != nil {
		return m.HeadIcon
	}
	return ""
}

func (m *AdditionCommon) GetStyle() ImageStyle {
	if m != nil {
		return m.Style
	}
	return ImageStyle_add_style_vertical
}

func (m *AdditionCommon) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AdditionCommon) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

// AdditionEsport 动态-附加卡-电竞卡
type AdditionEsport struct {
	// 电竞类型
	Style EspaceStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.EspaceStyle" json:"style,omitempty"`
	// Types that are valid to be assigned to Item:
	//	*AdditionEsport_AdditionEsportMoba
	Item isAdditionEsport_Item `protobuf_oneof:"item"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType             string   `protobuf:"bytes,4,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionEsport) Reset()         { *m = AdditionEsport{} }
func (m *AdditionEsport) String() string { return proto.CompactTextString(m) }
func (*AdditionEsport) ProtoMessage()    {}
func (*AdditionEsport) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{61}
}
func (m *AdditionEsport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionEsport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionEsport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionEsport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionEsport.Merge(m, src)
}
func (m *AdditionEsport) XXX_Size() int {
	return m.Size()
}
func (m *AdditionEsport) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionEsport.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionEsport proto.InternalMessageInfo

type isAdditionEsport_Item interface {
	isAdditionEsport_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type AdditionEsport_AdditionEsportMoba struct {
	AdditionEsportMoba *AdditionEsportMoba `protobuf:"bytes,2,opt,name=addition_esport_moba,json=additionEsportMoba,proto3,oneof" json:"addition_esport_moba,omitempty"`
}

func (*AdditionEsport_AdditionEsportMoba) isAdditionEsport_Item() {}

func (m *AdditionEsport) GetItem() isAdditionEsport_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *AdditionEsport) GetStyle() EspaceStyle {
	if m != nil {
		return m.Style
	}
	return EspaceStyle_moba
}

func (m *AdditionEsport) GetAdditionEsportMoba() *AdditionEsportMoba {
	if x, ok := m.GetItem().(*AdditionEsport_AdditionEsportMoba); ok {
		return x.AdditionEsportMoba
	}
	return nil
}

func (m *AdditionEsport) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AdditionEsport) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AdditionEsport) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AdditionEsport_AdditionEsportMoba)(nil),
	}
}

// AdditionEsportMoba 动态-附加卡-电竞卡-moba类
type AdditionEsportMoba struct {
	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 战队列表
	MatchTeam []*MatchTeam `protobuf:"bytes,3,rep,name=match_team,json=matchTeam,proto3" json:"match_team,omitempty"`
	// 比赛信息
	AdditionEsportMobaStatus *AdditionEsportMobaStatus `protobuf:"bytes,4,opt,name=addition_esport_moba_status,json=additionEsportMobaStatus,proto3" json:"addition_esport_moba_status,omitempty"`
	// 卡片跳转
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,6,opt,name=button,proto3" json:"button,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,7,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,11,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 附加卡图标
	HeadIcon             string   `protobuf:"bytes,12,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionEsportMoba) Reset()         { *m = AdditionEsportMoba{} }
func (m *AdditionEsportMoba) String() string { return proto.CompactTextString(m) }
func (*AdditionEsportMoba) ProtoMessage()    {}
func (*AdditionEsportMoba) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{62}
}
func (m *AdditionEsportMoba) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionEsportMoba) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionEsportMoba.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionEsportMoba) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionEsportMoba.Merge(m, src)
}
func (m *AdditionEsportMoba) XXX_Size() int {
	return m.Size()
}
func (m *AdditionEsportMoba) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionEsportMoba.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionEsportMoba proto.InternalMessageInfo

func (m *AdditionEsportMoba) GetHeadText() string {
	if m != nil {
		return m.HeadText
	}
	return ""
}

func (m *AdditionEsportMoba) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionEsportMoba) GetMatchTeam() []*MatchTeam {
	if m != nil {
		return m.MatchTeam
	}
	return nil
}

func (m *AdditionEsportMoba) GetAdditionEsportMobaStatus() *AdditionEsportMobaStatus {
	if m != nil {
		return m.AdditionEsportMobaStatus
	}
	return nil
}

func (m *AdditionEsportMoba) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AdditionEsportMoba) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AdditionEsportMoba) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *AdditionEsportMoba) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AdditionEsportMoba) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *AdditionEsportMoba) GetHeadIcon() string {
	if m != nil {
		return m.HeadIcon
	}
	return ""
}

// AdditionEsportMobaStatus 动态-附加卡-电竞卡-moba类-比赛信息
type AdditionEsportMobaStatus struct {
	AdditionEsportMobaStatusDesc []*AdditionEsportMobaStatusDesc `protobuf:"bytes,1,rep,name=addition_esport_moba_status_desc,json=additionEsportMobaStatusDesc,proto3" json:"addition_esport_moba_status_desc,omitempty"`
	// 比赛状态文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 比赛状态状态
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor           string   `protobuf:"bytes,5,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionEsportMobaStatus) Reset()         { *m = AdditionEsportMobaStatus{} }
func (m *AdditionEsportMobaStatus) String() string { return proto.CompactTextString(m) }
func (*AdditionEsportMobaStatus) ProtoMessage()    {}
func (*AdditionEsportMobaStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{63}
}
func (m *AdditionEsportMobaStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionEsportMobaStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionEsportMobaStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionEsportMobaStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionEsportMobaStatus.Merge(m, src)
}
func (m *AdditionEsportMobaStatus) XXX_Size() int {
	return m.Size()
}
func (m *AdditionEsportMobaStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionEsportMobaStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionEsportMobaStatus proto.InternalMessageInfo

func (m *AdditionEsportMobaStatus) GetAdditionEsportMobaStatusDesc() []*AdditionEsportMobaStatusDesc {
	if m != nil {
		return m.AdditionEsportMobaStatusDesc
	}
	return nil
}

func (m *AdditionEsportMobaStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionEsportMobaStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AdditionEsportMobaStatus) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *AdditionEsportMobaStatus) GetNightColor() string {
	if m != nil {
		return m.NightColor
	}
	return ""
}

// AdditionEsportMobaStatus 动态-附加卡-电竞卡-moba类-比赛信息-文案类
type AdditionEsportMobaStatusDesc struct {
	// 文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor           string   `protobuf:"bytes,3,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionEsportMobaStatusDesc) Reset()         { *m = AdditionEsportMobaStatusDesc{} }
func (m *AdditionEsportMobaStatusDesc) String() string { return proto.CompactTextString(m) }
func (*AdditionEsportMobaStatusDesc) ProtoMessage()    {}
func (*AdditionEsportMobaStatusDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{64}
}
func (m *AdditionEsportMobaStatusDesc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionEsportMobaStatusDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionEsportMobaStatusDesc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionEsportMobaStatusDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionEsportMobaStatusDesc.Merge(m, src)
}
func (m *AdditionEsportMobaStatusDesc) XXX_Size() int {
	return m.Size()
}
func (m *AdditionEsportMobaStatusDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionEsportMobaStatusDesc.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionEsportMobaStatusDesc proto.InternalMessageInfo

func (m *AdditionEsportMobaStatusDesc) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionEsportMobaStatusDesc) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *AdditionEsportMobaStatusDesc) GetNightColor() string {
	if m != nil {
		return m.NightColor
	}
	return ""
}

// MatchTeam 动态-附加卡-电竞卡-战队
type MatchTeam struct {
	// 战队ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 战队名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 战队图标
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor           string   `protobuf:"bytes,5,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchTeam) Reset()         { *m = MatchTeam{} }
func (m *MatchTeam) String() string { return proto.CompactTextString(m) }
func (*MatchTeam) ProtoMessage()    {}
func (*MatchTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{65}
}
func (m *MatchTeam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MatchTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MatchTeam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MatchTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchTeam.Merge(m, src)
}
func (m *MatchTeam) XXX_Size() int {
	return m.Size()
}
func (m *MatchTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchTeam.DiscardUnknown(m)
}

var xxx_messageInfo_MatchTeam proto.InternalMessageInfo

func (m *MatchTeam) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MatchTeam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MatchTeam) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *MatchTeam) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *MatchTeam) GetNightColor() string {
	if m != nil {
		return m.NightColor
	}
	return ""
}

type AdditionUP struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 高亮文本，描述文字1
	DescText_1 *HighlightText `protobuf:"bytes,2,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,3,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,5,opt,name=button,proto3" json:"button,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,6,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 预约人数(用于预约人数变化)
	ReserveTotal int64 `protobuf:"varint,7,opt,name=reserve_total,json=reserveTotal,proto3" json:"reserve_total,omitempty"`
	// 活动皮肤
	ActSkin *AdditionalActSkin `protobuf:"bytes,8,opt,name=act_skin,json=actSkin,proto3" json:"act_skin,omitempty"`
	// 预约id
	Rid int64 `protobuf:"varint,9,opt,name=rid,proto3" json:"rid,omitempty"`
	// 抽奖类型
	LotteryType ReserveRelationLotteryType `protobuf:"varint,10,opt,name=lottery_type,json=lotteryType,proto3,enum=bilibili.app.dynamic.v2.ReserveRelationLotteryType" json:"lottery_type,omitempty"`
	// 奖品信息
	DescText_3 *HighlightText `protobuf:"bytes,11,opt,name=desc_text_3,json=descText3,proto3" json:"desc_text_3,omitempty"`
	// up_mid
	UpMid int64 `protobuf:"varint,12,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 预约用户信息
	UserInfo *AdditionUserInfo `protobuf:"bytes,13,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	// 动态id
	DynamicId string `protobuf:"bytes,14,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 是否展示描述2
	ShowText_2 bool `protobuf:"varint,15,opt,name=show_text_2,json=showText2,proto3" json:"show_text_2,omitempty"`
	// 数据源的动态类型
	DynType int64 `protobuf:"varint,16,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 动态业务方id
	BusinessId string `protobuf:"bytes,17,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// 角标
	BadgeText string `protobuf:"bytes,18,opt,name=badge_text,json=badgeText,proto3" json:"badge_text,omitempty"`
	// 是否是首映
	IsPremiere           bool     `protobuf:"varint,19,opt,name=is_premiere,json=isPremiere,proto3" json:"is_premiere,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionUP) Reset()         { *m = AdditionUP{} }
func (m *AdditionUP) String() string { return proto.CompactTextString(m) }
func (*AdditionUP) ProtoMessage()    {}
func (*AdditionUP) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{66}
}
func (m *AdditionUP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionUP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionUP.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionUP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionUP.Merge(m, src)
}
func (m *AdditionUP) XXX_Size() int {
	return m.Size()
}
func (m *AdditionUP) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionUP.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionUP proto.InternalMessageInfo

func (m *AdditionUP) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionUP) GetDescText_1() *HighlightText {
	if m != nil {
		return m.DescText_1
	}
	return nil
}

func (m *AdditionUP) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *AdditionUP) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AdditionUP) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AdditionUP) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *AdditionUP) GetReserveTotal() int64 {
	if m != nil {
		return m.ReserveTotal
	}
	return 0
}

func (m *AdditionUP) GetActSkin() *AdditionalActSkin {
	if m != nil {
		return m.ActSkin
	}
	return nil
}

func (m *AdditionUP) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *AdditionUP) GetLotteryType() ReserveRelationLotteryType {
	if m != nil {
		return m.LotteryType
	}
	return ReserveRelationLotteryType_reserve_relation_lottery_type_default
}

func (m *AdditionUP) GetDescText_3() *HighlightText {
	if m != nil {
		return m.DescText_3
	}
	return nil
}

func (m *AdditionUP) GetUpMid() int64 {
	if m != nil {
		return m.UpMid
	}
	return 0
}

func (m *AdditionUP) GetUserInfo() *AdditionUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *AdditionUP) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *AdditionUP) GetShowText_2() bool {
	if m != nil {
		return m.ShowText_2
	}
	return false
}

func (m *AdditionUP) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *AdditionUP) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *AdditionUP) GetBadgeText() string {
	if m != nil {
		return m.BadgeText
	}
	return ""
}

func (m *AdditionUP) GetIsPremiere() bool {
	if m != nil {
		return m.IsPremiere
	}
	return false
}

type AdditionUserInfo struct {
	// 用户昵称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face                 string   `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionUserInfo) Reset()         { *m = AdditionUserInfo{} }
func (m *AdditionUserInfo) String() string { return proto.CompactTextString(m) }
func (*AdditionUserInfo) ProtoMessage()    {}
func (*AdditionUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{67}
}
func (m *AdditionUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionUserInfo.Merge(m, src)
}
func (m *AdditionUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *AdditionUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionUserInfo proto.InternalMessageInfo

func (m *AdditionUserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AdditionUserInfo) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

type AdditionalActSkin struct {
	// 动画SVGA资源
	Svga string `protobuf:"bytes,1,opt,name=svga,proto3" json:"svga,omitempty"`
	// 动画SVGA最后一帧图片资源
	LastImage string `protobuf:"bytes,2,opt,name=last_image,json=lastImage,proto3" json:"last_image,omitempty"`
	// 动画播放次数
	PlayTimes            int64    `protobuf:"varint,3,opt,name=play_times,json=playTimes,proto3" json:"play_times,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalActSkin) Reset()         { *m = AdditionalActSkin{} }
func (m *AdditionalActSkin) String() string { return proto.CompactTextString(m) }
func (*AdditionalActSkin) ProtoMessage()    {}
func (*AdditionalActSkin) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{68}
}
func (m *AdditionalActSkin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionalActSkin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionalActSkin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionalActSkin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalActSkin.Merge(m, src)
}
func (m *AdditionalActSkin) XXX_Size() int {
	return m.Size()
}
func (m *AdditionalActSkin) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalActSkin.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalActSkin proto.InternalMessageInfo

func (m *AdditionalActSkin) GetSvga() string {
	if m != nil {
		return m.Svga
	}
	return ""
}

func (m *AdditionalActSkin) GetLastImage() string {
	if m != nil {
		return m.LastImage
	}
	return ""
}

func (m *AdditionalActSkin) GetPlayTimes() int64 {
	if m != nil {
		return m.PlayTimes
	}
	return 0
}

type HighlightText struct {
	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 高亮类型
	TextStyle HighlightTextStyle `protobuf:"varint,2,opt,name=text_style,json=textStyle,proto3,enum=bilibili.app.dynamic.v2.HighlightTextStyle" json:"text_style,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// icon
	Icon                 string   `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HighlightText) Reset()         { *m = HighlightText{} }
func (m *HighlightText) String() string { return proto.CompactTextString(m) }
func (*HighlightText) ProtoMessage()    {}
func (*HighlightText) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{69}
}
func (m *HighlightText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HighlightText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HighlightText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HighlightText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HighlightText.Merge(m, src)
}
func (m *HighlightText) XXX_Size() int {
	return m.Size()
}
func (m *HighlightText) XXX_DiscardUnknown() {
	xxx_messageInfo_HighlightText.DiscardUnknown(m)
}

var xxx_messageInfo_HighlightText proto.InternalMessageInfo

func (m *HighlightText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *HighlightText) GetTextStyle() HighlightTextStyle {
	if m != nil {
		return m.TextStyle
	}
	return HighlightTextStyle_style_none
}

func (m *HighlightText) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *HighlightText) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// ModuleExtend 动态-小卡模块
type ModuleExtend struct {
	// 详情
	Extend []*ModuleExtendItem `protobuf:"bytes,1,rep,name=extend,proto3" json:"extend,omitempty"`
	// 模块整体跳转uri
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleExtend) Reset()         { *m = ModuleExtend{} }
func (m *ModuleExtend) String() string { return proto.CompactTextString(m) }
func (*ModuleExtend) ProtoMessage()    {}
func (*ModuleExtend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{70}
}
func (m *ModuleExtend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleExtend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleExtend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleExtend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleExtend.Merge(m, src)
}
func (m *ModuleExtend) XXX_Size() int {
	return m.Size()
}
func (m *ModuleExtend) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleExtend.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleExtend proto.InternalMessageInfo

func (m *ModuleExtend) GetExtend() []*ModuleExtendItem {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (m *ModuleExtend) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// Extend 动态-拓展小卡模块
type ModuleExtendItem struct {
	// 类型
	Type DynExtendType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DynExtendType" json:"type,omitempty"`
	// 卡片详情
	//
	// Types that are valid to be assigned to Extend:
	//	*ModuleExtendItem_ExtInfoTopic
	//	*ModuleExtendItem_ExtInfoLbs
	//	*ModuleExtendItem_ExtInfoHot
	//	*ModuleExtendItem_ExtInfoGame
	//	*ModuleExtendItem_ExtInfoCommon
	//	*ModuleExtendItem_ExtInfoOgv
	Extend               isModuleExtendItem_Extend `protobuf_oneof:"extend"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ModuleExtendItem) Reset()         { *m = ModuleExtendItem{} }
func (m *ModuleExtendItem) String() string { return proto.CompactTextString(m) }
func (*ModuleExtendItem) ProtoMessage()    {}
func (*ModuleExtendItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{71}
}
func (m *ModuleExtendItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleExtendItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleExtendItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleExtendItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleExtendItem.Merge(m, src)
}
func (m *ModuleExtendItem) XXX_Size() int {
	return m.Size()
}
func (m *ModuleExtendItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleExtendItem.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleExtendItem proto.InternalMessageInfo

type isModuleExtendItem_Extend interface {
	isModuleExtendItem_Extend()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ModuleExtendItem_ExtInfoTopic struct {
	ExtInfoTopic *ExtInfoTopic `protobuf:"bytes,2,opt,name=ext_info_topic,json=extInfoTopic,proto3,oneof" json:"ext_info_topic,omitempty"`
}
type ModuleExtendItem_ExtInfoLbs struct {
	ExtInfoLbs *ExtInfoLBS `protobuf:"bytes,3,opt,name=ext_info_lbs,json=extInfoLbs,proto3,oneof" json:"ext_info_lbs,omitempty"`
}
type ModuleExtendItem_ExtInfoHot struct {
	ExtInfoHot *ExtInfoHot `protobuf:"bytes,4,opt,name=ext_info_hot,json=extInfoHot,proto3,oneof" json:"ext_info_hot,omitempty"`
}
type ModuleExtendItem_ExtInfoGame struct {
	ExtInfoGame *ExtInfoGame `protobuf:"bytes,5,opt,name=ext_info_game,json=extInfoGame,proto3,oneof" json:"ext_info_game,omitempty"`
}
type ModuleExtendItem_ExtInfoCommon struct {
	ExtInfoCommon *ExtInfoCommon `protobuf:"bytes,6,opt,name=ext_info_common,json=extInfoCommon,proto3,oneof" json:"ext_info_common,omitempty"`
}
type ModuleExtendItem_ExtInfoOgv struct {
	ExtInfoOgv *ExtInfoOGV `protobuf:"bytes,7,opt,name=ext_info_ogv,json=extInfoOgv,proto3,oneof" json:"ext_info_ogv,omitempty"`
}

func (*ModuleExtendItem_ExtInfoTopic) isModuleExtendItem_Extend()  {}
func (*ModuleExtendItem_ExtInfoLbs) isModuleExtendItem_Extend()    {}
func (*ModuleExtendItem_ExtInfoHot) isModuleExtendItem_Extend()    {}
func (*ModuleExtendItem_ExtInfoGame) isModuleExtendItem_Extend()   {}
func (*ModuleExtendItem_ExtInfoCommon) isModuleExtendItem_Extend() {}
func (*ModuleExtendItem_ExtInfoOgv) isModuleExtendItem_Extend()    {}

func (m *ModuleExtendItem) GetExtend() isModuleExtendItem_Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (m *ModuleExtendItem) GetType() DynExtendType {
	if m != nil {
		return m.Type
	}
	return DynExtendType_dyn_ext_type_none
}

func (m *ModuleExtendItem) GetExtInfoTopic() *ExtInfoTopic {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoTopic); ok {
		return x.ExtInfoTopic
	}
	return nil
}

func (m *ModuleExtendItem) GetExtInfoLbs() *ExtInfoLBS {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoLbs); ok {
		return x.ExtInfoLbs
	}
	return nil
}

func (m *ModuleExtendItem) GetExtInfoHot() *ExtInfoHot {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoHot); ok {
		return x.ExtInfoHot
	}
	return nil
}

func (m *ModuleExtendItem) GetExtInfoGame() *ExtInfoGame {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoGame); ok {
		return x.ExtInfoGame
	}
	return nil
}

func (m *ModuleExtendItem) GetExtInfoCommon() *ExtInfoCommon {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoCommon); ok {
		return x.ExtInfoCommon
	}
	return nil
}

func (m *ModuleExtendItem) GetExtInfoOgv() *ExtInfoOGV {
	if x, ok := m.GetExtend().(*ModuleExtendItem_ExtInfoOgv); ok {
		return x.ExtInfoOgv
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ModuleExtendItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ModuleExtendItem_ExtInfoTopic)(nil),
		(*ModuleExtendItem_ExtInfoLbs)(nil),
		(*ModuleExtendItem_ExtInfoHot)(nil),
		(*ModuleExtendItem_ExtInfoGame)(nil),
		(*ModuleExtendItem_ExtInfoCommon)(nil),
		(*ModuleExtendItem_ExtInfoOgv)(nil),
	}
}

// ExtInfoTopic 动态-拓展小卡模块-话题小卡
type ExtInfoTopic struct {
	// 标题 - 话题名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfoTopic) Reset()         { *m = ExtInfoTopic{} }
func (m *ExtInfoTopic) String() string { return proto.CompactTextString(m) }
func (*ExtInfoTopic) ProtoMessage()    {}
func (*ExtInfoTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{72}
}
func (m *ExtInfoTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoTopic.Merge(m, src)
}
func (m *ExtInfoTopic) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoTopic.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoTopic proto.InternalMessageInfo

func (m *ExtInfoTopic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExtInfoTopic) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtInfoTopic) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// ExtInfoLBS 动态-拓展小卡模块-lbs小卡
type ExtInfoLBS struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType              int32    `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfoLBS) Reset()         { *m = ExtInfoLBS{} }
func (m *ExtInfoLBS) String() string { return proto.CompactTextString(m) }
func (*ExtInfoLBS) ProtoMessage()    {}
func (*ExtInfoLBS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{73}
}
func (m *ExtInfoLBS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoLBS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoLBS.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoLBS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoLBS.Merge(m, src)
}
func (m *ExtInfoLBS) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoLBS) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoLBS.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoLBS proto.InternalMessageInfo

func (m *ExtInfoLBS) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExtInfoLBS) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtInfoLBS) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ExtInfoLBS) GetPoiType() int32 {
	if m != nil {
		return m.PoiType
	}
	return 0
}

// ExtInfoHot 动态-拓展小卡模块-热门小卡
type ExtInfoHot struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfoHot) Reset()         { *m = ExtInfoHot{} }
func (m *ExtInfoHot) String() string { return proto.CompactTextString(m) }
func (*ExtInfoHot) ProtoMessage()    {}
func (*ExtInfoHot) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{74}
}
func (m *ExtInfoHot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoHot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoHot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoHot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoHot.Merge(m, src)
}
func (m *ExtInfoHot) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoHot) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoHot.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoHot proto.InternalMessageInfo

func (m *ExtInfoHot) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExtInfoHot) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtInfoHot) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// ExtInfoGame 动态-拓展小卡模块-游戏小卡
type ExtInfoGame struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfoGame) Reset()         { *m = ExtInfoGame{} }
func (m *ExtInfoGame) String() string { return proto.CompactTextString(m) }
func (*ExtInfoGame) ProtoMessage()    {}
func (*ExtInfoGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{75}
}
func (m *ExtInfoGame) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoGame.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoGame.Merge(m, src)
}
func (m *ExtInfoGame) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoGame) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoGame.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoGame proto.InternalMessageInfo

func (m *ExtInfoGame) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExtInfoGame) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtInfoGame) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// ExtInfoCommon 动态-拓展小卡模块-通用小卡
type ExtInfoCommon struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType int32 `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
	// 类型
	Type DynExtendType `protobuf:"varint,5,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DynExtendType" json:"type,omitempty"`
	// 客户端埋点用
	SubModule string `protobuf:"bytes,6,opt,name=sub_module,json=subModule,proto3" json:"sub_module,omitempty"`
	// 行动点文案
	ActionText string `protobuf:"bytes,7,opt,name=action_text,json=actionText,proto3" json:"action_text,omitempty"`
	// 行动点链接
	ActionUrl string `protobuf:"bytes,8,opt,name=action_url,json=actionUrl,proto3" json:"action_url,omitempty"`
	// 资源rid
	Rid int64 `protobuf:"varint,9,opt,name=rid,proto3" json:"rid,omitempty"`
	// 轻浏览是否展示
	IsShowLight          bool     `protobuf:"varint,10,opt,name=is_show_light,json=isShowLight,proto3" json:"is_show_light,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfoCommon) Reset()         { *m = ExtInfoCommon{} }
func (m *ExtInfoCommon) String() string { return proto.CompactTextString(m) }
func (*ExtInfoCommon) ProtoMessage()    {}
func (*ExtInfoCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{76}
}
func (m *ExtInfoCommon) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoCommon.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoCommon.Merge(m, src)
}
func (m *ExtInfoCommon) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoCommon.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoCommon proto.InternalMessageInfo

func (m *ExtInfoCommon) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExtInfoCommon) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtInfoCommon) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ExtInfoCommon) GetPoiType() int32 {
	if m != nil {
		return m.PoiType
	}
	return 0
}

func (m *ExtInfoCommon) GetType() DynExtendType {
	if m != nil {
		return m.Type
	}
	return DynExtendType_dyn_ext_type_none
}

func (m *ExtInfoCommon) GetSubModule() string {
	if m != nil {
		return m.SubModule
	}
	return ""
}

func (m *ExtInfoCommon) GetActionText() string {
	if m != nil {
		return m.ActionText
	}
	return ""
}

func (m *ExtInfoCommon) GetActionUrl() string {
	if m != nil {
		return m.ActionUrl
	}
	return ""
}

func (m *ExtInfoCommon) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *ExtInfoCommon) GetIsShowLight() bool {
	if m != nil {
		return m.IsShowLight
	}
	return false
}

// ExtInfoOGV 动态-拓展小卡模块-ogv小卡
type ExtInfoOGV struct {
	InfoOgv              []*InfoOGV `protobuf:"bytes,1,rep,name=info_ogv,json=infoOgv,proto3" json:"info_ogv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExtInfoOGV) Reset()         { *m = ExtInfoOGV{} }
func (m *ExtInfoOGV) String() string { return proto.CompactTextString(m) }
func (*ExtInfoOGV) ProtoMessage()    {}
func (*ExtInfoOGV) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{77}
}
func (m *ExtInfoOGV) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtInfoOGV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtInfoOGV.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtInfoOGV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfoOGV.Merge(m, src)
}
func (m *ExtInfoOGV) XXX_Size() int {
	return m.Size()
}
func (m *ExtInfoOGV) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfoOGV.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfoOGV proto.InternalMessageInfo

func (m *ExtInfoOGV) GetInfoOgv() []*InfoOGV {
	if m != nil {
		return m.InfoOgv
	}
	return nil
}

// InfoOGV 动态-拓展小卡模块-ogv小卡-(one of 片单、榜单、分区)
type InfoOGV struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 客户端埋点用
	SubModule            string   `protobuf:"bytes,4,opt,name=sub_module,json=subModule,proto3" json:"sub_module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoOGV) Reset()         { *m = InfoOGV{} }
func (m *InfoOGV) String() string { return proto.CompactTextString(m) }
func (*InfoOGV) ProtoMessage()    {}
func (*InfoOGV) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{78}
}
func (m *InfoOGV) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InfoOGV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InfoOGV.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InfoOGV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoOGV.Merge(m, src)
}
func (m *InfoOGV) XXX_Size() int {
	return m.Size()
}
func (m *InfoOGV) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoOGV.DiscardUnknown(m)
}

var xxx_messageInfo_InfoOGV proto.InternalMessageInfo

func (m *InfoOGV) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InfoOGV) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *InfoOGV) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *InfoOGV) GetSubModule() string {
	if m != nil {
		return m.SubModule
	}
	return ""
}

// ModuleInteraction 外露交互模块
type ModuleInteraction struct {
	InteractionItem      []*InteractionItem `protobuf:"bytes,1,rep,name=interactionItem,proto3" json:"interactionItem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ModuleInteraction) Reset()         { *m = ModuleInteraction{} }
func (m *ModuleInteraction) String() string { return proto.CompactTextString(m) }
func (*ModuleInteraction) ProtoMessage()    {}
func (*ModuleInteraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{79}
}
func (m *ModuleInteraction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleInteraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleInteraction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleInteraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleInteraction.Merge(m, src)
}
func (m *ModuleInteraction) XXX_Size() int {
	return m.Size()
}
func (m *ModuleInteraction) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleInteraction.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleInteraction proto.InternalMessageInfo

func (m *ModuleInteraction) GetInteractionItem() []*InteractionItem {
	if m != nil {
		return m.InteractionItem
	}
	return nil
}

type InteractionItem struct {
	// 外露模块类型
	IconType LocalIconType `protobuf:"varint,1,opt,name=icon_type,json=iconType,proto3,enum=bilibili.app.dynamic.v2.LocalIconType" json:"icon_type,omitempty"`
	// 外露模块文案
	Desc []*Description `protobuf:"bytes,2,rep,name=desc,proto3" json:"desc,omitempty"`
	// 外露模块uri相关 根据type不同用法不同
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 动态id
	DynamicId string `protobuf:"bytes,4,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 评论mid
	CommentMid int64 `protobuf:"varint,6,opt,name=comment_mid,json=commentMid,proto3" json:"comment_mid,omitempty"`
	// 外露头像 最多3个 用于 local_icon_avatar 类型
	Faces []*InteractionFace `protobuf:"bytes,7,rep,name=faces,proto3" json:"faces,omitempty"`
	// 外露模块计数信息 通常用于埋点上报
	Stat *InteractionStat `protobuf:"bytes,8,opt,name=stat,proto3" json:"stat,omitempty"`
	// 外露icon
	Icon                 string   `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteractionItem) Reset()         { *m = InteractionItem{} }
func (m *InteractionItem) String() string { return proto.CompactTextString(m) }
func (*InteractionItem) ProtoMessage()    {}
func (*InteractionItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{80}
}
func (m *InteractionItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InteractionItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InteractionItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InteractionItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionItem.Merge(m, src)
}
func (m *InteractionItem) XXX_Size() int {
	return m.Size()
}
func (m *InteractionItem) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionItem.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionItem proto.InternalMessageInfo

func (m *InteractionItem) GetIconType() LocalIconType {
	if m != nil {
		return m.IconType
	}
	return LocalIconType_local_icon_comment
}

func (m *InteractionItem) GetDesc() []*Description {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *InteractionItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *InteractionItem) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *InteractionItem) GetCommentMid() int64 {
	if m != nil {
		return m.CommentMid
	}
	return 0
}

func (m *InteractionItem) GetFaces() []*InteractionFace {
	if m != nil {
		return m.Faces
	}
	return nil
}

func (m *InteractionItem) GetStat() *InteractionStat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *InteractionItem) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

type InteractionStat struct {
	// 点赞数
	Like                 int64    `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteractionStat) Reset()         { *m = InteractionStat{} }
func (m *InteractionStat) String() string { return proto.CompactTextString(m) }
func (*InteractionStat) ProtoMessage()    {}
func (*InteractionStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{81}
}
func (m *InteractionStat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InteractionStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InteractionStat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InteractionStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionStat.Merge(m, src)
}
func (m *InteractionStat) XXX_Size() int {
	return m.Size()
}
func (m *InteractionStat) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionStat.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionStat proto.InternalMessageInfo

func (m *InteractionStat) GetLike() int64 {
	if m != nil {
		return m.Like
	}
	return 0
}

// 外露的头像信息
type InteractionFace struct {
	// member id
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 头像url
	Face                 string   `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InteractionFace) Reset()         { *m = InteractionFace{} }
func (m *InteractionFace) String() string { return proto.CompactTextString(m) }
func (*InteractionFace) ProtoMessage()    {}
func (*InteractionFace) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{82}
}
func (m *InteractionFace) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InteractionFace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InteractionFace.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InteractionFace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractionFace.Merge(m, src)
}
func (m *InteractionFace) XXX_Size() int {
	return m.Size()
}
func (m *InteractionFace) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractionFace.DiscardUnknown(m)
}

var xxx_messageInfo_InteractionFace proto.InternalMessageInfo

func (m *InteractionFace) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *InteractionFace) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

// ModuleStat 动态-计数模块
type ModuleStat struct {
	// 转发数
	Repost int64 `protobuf:"varint,1,opt,name=repost,proto3" json:"repost,omitempty"`
	// 点赞数
	Like int64 `protobuf:"varint,2,opt,name=like,proto3" json:"like,omitempty"`
	// 评论数
	Reply int64 `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`
	// 点赞拓展信息
	LikeInfo *LikeInfo `protobuf:"bytes,4,opt,name=like_info,json=likeInfo,proto3" json:"like_info,omitempty"`
	// 禁评
	NoComment bool `protobuf:"varint,5,opt,name=no_comment,json=noComment,proto3" json:"no_comment,omitempty"`
	// 禁转
	NoForward bool `protobuf:"varint,6,opt,name=no_forward,json=noForward,proto3" json:"no_forward,omitempty"`
	// 点击评论跳转链接
	ReplyUrl string `protobuf:"bytes,7,opt,name=reply_url,json=replyUrl,proto3" json:"reply_url,omitempty"`
	// 禁评文案
	NoCommentText string `protobuf:"bytes,8,opt,name=no_comment_text,json=noCommentText,proto3" json:"no_comment_text,omitempty"`
	// 禁转文案
	NoForwardText        string   `protobuf:"bytes,9,opt,name=no_forward_text,json=noForwardText,proto3" json:"no_forward_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleStat) Reset()         { *m = ModuleStat{} }
func (m *ModuleStat) String() string { return proto.CompactTextString(m) }
func (*ModuleStat) ProtoMessage()    {}
func (*ModuleStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{83}
}
func (m *ModuleStat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleStat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleStat.Merge(m, src)
}
func (m *ModuleStat) XXX_Size() int {
	return m.Size()
}
func (m *ModuleStat) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleStat.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleStat proto.InternalMessageInfo

func (m *ModuleStat) GetRepost() int64 {
	if m != nil {
		return m.Repost
	}
	return 0
}

func (m *ModuleStat) GetLike() int64 {
	if m != nil {
		return m.Like
	}
	return 0
}

func (m *ModuleStat) GetReply() int64 {
	if m != nil {
		return m.Reply
	}
	return 0
}

func (m *ModuleStat) GetLikeInfo() *LikeInfo {
	if m != nil {
		return m.LikeInfo
	}
	return nil
}

func (m *ModuleStat) GetNoComment() bool {
	if m != nil {
		return m.NoComment
	}
	return false
}

func (m *ModuleStat) GetNoForward() bool {
	if m != nil {
		return m.NoForward
	}
	return false
}

func (m *ModuleStat) GetReplyUrl() string {
	if m != nil {
		return m.ReplyUrl
	}
	return ""
}

func (m *ModuleStat) GetNoCommentText() string {
	if m != nil {
		return m.NoCommentText
	}
	return ""
}

func (m *ModuleStat) GetNoForwardText() string {
	if m != nil {
		return m.NoForwardText
	}
	return ""
}

// ModuleFold 动态-折叠模块
type ModuleFold struct {
	// 折叠分类
	FoldType FoldType `protobuf:"varint,1,opt,name=fold_type,json=foldType,proto3,enum=bilibili.app.dynamic.v2.FoldType" json:"fold_type,omitempty"`
	// 折叠文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 被折叠的动态
	FoldIds string `protobuf:"bytes,3,opt,name=fold_ids,json=foldIds,proto3" json:"fold_ids,omitempty"`
	// 被折叠的用户信息
	FoldUsers []*UserInfo `protobuf:"bytes,4,rep,name=fold_users,json=foldUsers,proto3" json:"fold_users,omitempty"`
	// 收拢话题信息
	TopicMergedResource  *TopicMergedResource `protobuf:"bytes,5,opt,name=topic_merged_resource,json=topicMergedResource,proto3" json:"topic_merged_resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ModuleFold) Reset()         { *m = ModuleFold{} }
func (m *ModuleFold) String() string { return proto.CompactTextString(m) }
func (*ModuleFold) ProtoMessage()    {}
func (*ModuleFold) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{84}
}
func (m *ModuleFold) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleFold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleFold.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleFold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleFold.Merge(m, src)
}
func (m *ModuleFold) XXX_Size() int {
	return m.Size()
}
func (m *ModuleFold) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleFold.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleFold proto.InternalMessageInfo

func (m *ModuleFold) GetFoldType() FoldType {
	if m != nil {
		return m.FoldType
	}
	return FoldType_FoldTypeZore
}

func (m *ModuleFold) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ModuleFold) GetFoldIds() string {
	if m != nil {
		return m.FoldIds
	}
	return ""
}

func (m *ModuleFold) GetFoldUsers() []*UserInfo {
	if m != nil {
		return m.FoldUsers
	}
	return nil
}

func (m *ModuleFold) GetTopicMergedResource() *TopicMergedResource {
	if m != nil {
		return m.TopicMergedResource
	}
	return nil
}

// TopicMergedResource 新话题收拢动态资源
type TopicMergedResource struct {
	//收拢类型：1-联合投稿，2-同源转发，3-超频转发
	MergeType int32 `protobuf:"varint,1,opt,name=merge_type,json=mergeType,proto3" json:"merge_type,omitempty"`
	//收拢资源组中的数量
	MergedResCnt         int32    `protobuf:"varint,2,opt,name=merged_res_cnt,json=mergedResCnt,proto3" json:"merged_res_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicMergedResource) Reset()         { *m = TopicMergedResource{} }
func (m *TopicMergedResource) String() string { return proto.CompactTextString(m) }
func (*TopicMergedResource) ProtoMessage()    {}
func (*TopicMergedResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{85}
}
func (m *TopicMergedResource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicMergedResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicMergedResource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicMergedResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicMergedResource.Merge(m, src)
}
func (m *TopicMergedResource) XXX_Size() int {
	return m.Size()
}
func (m *TopicMergedResource) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicMergedResource.DiscardUnknown(m)
}

var xxx_messageInfo_TopicMergedResource proto.InternalMessageInfo

func (m *TopicMergedResource) GetMergeType() int32 {
	if m != nil {
		return m.MergeType
	}
	return 0
}

func (m *TopicMergedResource) GetMergedResCnt() int32 {
	if m != nil {
		return m.MergedResCnt
	}
	return 0
}

// DynAllReq 动态综合页请求参数
type DynAllReq struct {
	// 透传 update_baseline
	UpdateBaseline string `protobuf:"bytes,1,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 透传 history_offset
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 刷新方式 1向上刷新 2向下翻页
	RefreshType Refresh `protobuf:"varint,4,opt,name=refresh_type,json=refreshType,proto3,enum=bilibili.app.dynamic.v2.Refresh" json:"refresh_type,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 综合页当前更新的最大值
	AssistBaseline string `protobuf:"bytes,6,opt,name=assist_baseline,json=assistBaseline,proto3" json:"assist_baseline,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,7,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 推荐up主入参(new的时候传)
	RcmdUpsParam *RcmdUPsParam `protobuf:"bytes,8,opt,name=rcmd_ups_param,json=rcmdUpsParam,proto3" json:"rcmd_ups_param,omitempty"`
	// 广告参数
	AdParam *AdParam `protobuf:"bytes,9,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
	// 是否冷启
	ColdStart int32 `protobuf:"varint,10,opt,name=cold_start,json=coldStart,proto3" json:"cold_start,omitempty"`
	// 来源
	From string `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,12,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 底tab召回的up主uid
	TabRecallUid int64 `protobuf:"varint,13,opt,name=tab_recall_uid,json=tabRecallUid,proto3" json:"tab_recall_uid,omitempty"`
	// 底tab召回的样式类型
	TabRecallType        StyleType `protobuf:"varint,14,opt,name=tab_recall_type,json=tabRecallType,proto3,enum=bilibili.app.dynamic.v2.StyleType" json:"tab_recall_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DynAllReq) Reset()         { *m = DynAllReq{} }
func (m *DynAllReq) String() string { return proto.CompactTextString(m) }
func (*DynAllReq) ProtoMessage()    {}
func (*DynAllReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{86}
}
func (m *DynAllReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAllReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAllReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAllReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAllReq.Merge(m, src)
}
func (m *DynAllReq) XXX_Size() int {
	return m.Size()
}
func (m *DynAllReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAllReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynAllReq proto.InternalMessageInfo

func (m *DynAllReq) GetUpdateBaseline() string {
	if m != nil {
		return m.UpdateBaseline
	}
	return ""
}

func (m *DynAllReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynAllReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynAllReq) GetRefreshType() Refresh {
	if m != nil {
		return m.RefreshType
	}
	return Refresh_refresh_new
}

func (m *DynAllReq) GetPlayurlParam() *PlayurlParam {
	if m != nil {
		return m.PlayurlParam
	}
	return nil
}

func (m *DynAllReq) GetAssistBaseline() string {
	if m != nil {
		return m.AssistBaseline
	}
	return ""
}

func (m *DynAllReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynAllReq) GetRcmdUpsParam() *RcmdUPsParam {
	if m != nil {
		return m.RcmdUpsParam
	}
	return nil
}

func (m *DynAllReq) GetAdParam() *AdParam {
	if m != nil {
		return m.AdParam
	}
	return nil
}

func (m *DynAllReq) GetColdStart() int32 {
	if m != nil {
		return m.ColdStart
	}
	return 0
}

func (m *DynAllReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynAllReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynAllReq) GetTabRecallUid() int64 {
	if m != nil {
		return m.TabRecallUid
	}
	return 0
}

func (m *DynAllReq) GetTabRecallType() StyleType {
	if m != nil {
		return m.TabRecallType
	}
	return StyleType_STYLE_TYPE_NONE
}

// RcmdUPsParam 推荐up主入参
type RcmdUPsParam struct {
	DislikeTs            int64    `protobuf:"varint,1,opt,name=dislike_ts,json=dislikeTs,proto3" json:"dislike_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdUPsParam) Reset()         { *m = RcmdUPsParam{} }
func (m *RcmdUPsParam) String() string { return proto.CompactTextString(m) }
func (*RcmdUPsParam) ProtoMessage()    {}
func (*RcmdUPsParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{87}
}
func (m *RcmdUPsParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdUPsParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdUPsParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdUPsParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdUPsParam.Merge(m, src)
}
func (m *RcmdUPsParam) XXX_Size() int {
	return m.Size()
}
func (m *RcmdUPsParam) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdUPsParam.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdUPsParam proto.InternalMessageInfo

func (m *RcmdUPsParam) GetDislikeTs() int64 {
	if m != nil {
		return m.DislikeTs
	}
	return 0
}

// AdParam 综合页请求广告所需字段，由客户端-网关透传
type AdParam struct {
	//综合页请求广告所需字段，由客户端-网关透传
	AdExtra string `protobuf:"bytes,1,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	// request_id
	RequestId            string   `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdParam) Reset()         { *m = AdParam{} }
func (m *AdParam) String() string { return proto.CompactTextString(m) }
func (*AdParam) ProtoMessage()    {}
func (*AdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{88}
}
func (m *AdParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdParam.Merge(m, src)
}
func (m *AdParam) XXX_Size() int {
	return m.Size()
}
func (m *AdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_AdParam.DiscardUnknown(m)
}

var xxx_messageInfo_AdParam proto.InternalMessageInfo

func (m *AdParam) GetAdExtra() string {
	if m != nil {
		return m.AdExtra
	}
	return ""
}

func (m *AdParam) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type Config struct {
	// 该实验字段不再使用 改为视频卡字段新增样式控制参数
	// Deprecated: story视频卡封面按照横屏视频卡片展示
	StoryVerticalExp bool `protobuf:"varint,1,opt,name=story_vertical_exp,json=storyVerticalExp,proto3" json:"story_vertical_exp,omitempty"`
	// 动态详情页配置 属性位
	// 目前分配情况：
	// +---|------------------------------+
	// |Bit|          说明信息             |
	// +---+----------------------------- +
	// | 0 | 1-图文卡片使用上图下文样式       |
	// +---|------------------------------+
	DetailViewBits       uint64   `protobuf:"varint,2,opt,name=detail_view_bits,json=detailViewBits,proto3" json:"detail_view_bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{89}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return m.Size()
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetStoryVerticalExp() bool {
	if m != nil {
		return m.StoryVerticalExp
	}
	return false
}

func (m *Config) GetDetailViewBits() uint64 {
	if m != nil {
		return m.DetailViewBits
	}
	return 0
}

// DynAllReply 动态综合页返回值
type DynAllReply struct {
	// 卡片列表
	DynamicList *DynamicList `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	// 顶部up list
	UpList *CardVideoUpList `protobuf:"bytes,2,opt,name=up_list,json=upList,proto3" json:"up_list,omitempty"`
	// 话题广场
	TopicList *TopicList `protobuf:"bytes,3,opt,name=topic_list,json=topicList,proto3" json:"topic_list,omitempty"`
	// 无关注推荐
	Unfollow *Unfollow `protobuf:"bytes,4,opt,name=unfollow,proto3" json:"unfollow,omitempty"`
	// 分区UP推荐
	RegionRcmd *DynRegionRcmd `protobuf:"bytes,5,opt,name=region_rcmd,json=regionRcmd,proto3" json:"region_rcmd,omitempty"`
	// Deprecated: 不再使用
	Config               *Config  `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynAllReply) Reset()         { *m = DynAllReply{} }
func (m *DynAllReply) String() string { return proto.CompactTextString(m) }
func (*DynAllReply) ProtoMessage()    {}
func (*DynAllReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{90}
}
func (m *DynAllReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAllReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAllReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAllReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAllReply.Merge(m, src)
}
func (m *DynAllReply) XXX_Size() int {
	return m.Size()
}
func (m *DynAllReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAllReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynAllReply proto.InternalMessageInfo

func (m *DynAllReply) GetDynamicList() *DynamicList {
	if m != nil {
		return m.DynamicList
	}
	return nil
}

func (m *DynAllReply) GetUpList() *CardVideoUpList {
	if m != nil {
		return m.UpList
	}
	return nil
}

func (m *DynAllReply) GetTopicList() *TopicList {
	if m != nil {
		return m.TopicList
	}
	return nil
}

func (m *DynAllReply) GetUnfollow() *Unfollow {
	if m != nil {
		return m.Unfollow
	}
	return nil
}

func (m *DynAllReply) GetRegionRcmd() *DynRegionRcmd {
	if m != nil {
		return m.RegionRcmd
	}
	return nil
}

func (m *DynAllReply) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// DynamicList 动态卡片列表
type DynamicList struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新的动态数
	UpdateNum int64 `protobuf:"varint,2,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,3,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 更新基础信息
	UpdateBaseline string `protobuf:"bytes,4,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 是否还有更多数据
	HasMore              bool     `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicList) Reset()         { *m = DynamicList{} }
func (m *DynamicList) String() string { return proto.CompactTextString(m) }
func (*DynamicList) ProtoMessage()    {}
func (*DynamicList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{91}
}
func (m *DynamicList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynamicList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynamicList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynamicList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicList.Merge(m, src)
}
func (m *DynamicList) XXX_Size() int {
	return m.Size()
}
func (m *DynamicList) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicList.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicList proto.InternalMessageInfo

func (m *DynamicList) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DynamicList) GetUpdateNum() int64 {
	if m != nil {
		return m.UpdateNum
	}
	return 0
}

func (m *DynamicList) GetHistoryOffset() string {
	if m != nil {
		return m.HistoryOffset
	}
	return ""
}

func (m *DynamicList) GetUpdateBaseline() string {
	if m != nil {
		return m.UpdateBaseline
	}
	return ""
}

func (m *DynamicList) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// TopicList 综合页-话题广场
type TopicList struct {
	// 模块标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 话题列表
	TopicListItem []*TopicListItem `protobuf:"bytes,2,rep,name=topic_list_item,json=topicListItem,proto3" json:"topic_list_item,omitempty"`
	// 发起活动
	ActButton *TopicButton `protobuf:"bytes,3,opt,name=act_button,json=actButton,proto3" json:"act_button,omitempty"`
	// 查看更多
	MoreButton *TopicButton `protobuf:"bytes,4,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	// 透传服务端上报
	ServerInfo string `protobuf:"bytes,5,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,6,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 话题广场实验样式
	// 0 - 线上默认样式不变
	// 1 - 翻页示意点在右上角
	// 2 - 翻页示意点在下方正中间
	ExpStyle             int32    `protobuf:"varint,7,opt,name=exp_style,json=expStyle,proto3" json:"exp_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicList) Reset()         { *m = TopicList{} }
func (m *TopicList) String() string { return proto.CompactTextString(m) }
func (*TopicList) ProtoMessage()    {}
func (*TopicList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{92}
}
func (m *TopicList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicList.Merge(m, src)
}
func (m *TopicList) XXX_Size() int {
	return m.Size()
}
func (m *TopicList) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicList.DiscardUnknown(m)
}

var xxx_messageInfo_TopicList proto.InternalMessageInfo

func (m *TopicList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TopicList) GetTopicListItem() []*TopicListItem {
	if m != nil {
		return m.TopicListItem
	}
	return nil
}

func (m *TopicList) GetActButton() *TopicButton {
	if m != nil {
		return m.ActButton
	}
	return nil
}

func (m *TopicList) GetMoreButton() *TopicButton {
	if m != nil {
		return m.MoreButton
	}
	return nil
}

func (m *TopicList) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

func (m *TopicList) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *TopicList) GetExpStyle() int32 {
	if m != nil {
		return m.ExpStyle
	}
	return 0
}

// TopicListItem 综合页-话题广场-话题
type TopicListItem struct {
	// 前置图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 前置图标文案
	IconTitle string `protobuf:"bytes,2,opt,name=icon_title,json=iconTitle,proto3" json:"icon_title,omitempty"`
	// 话题id
	TopicId int64 `protobuf:"varint,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名
	TopicName string `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// 卡片位次
	Pos int64 `protobuf:"varint,6,opt,name=pos,proto3" json:"pos,omitempty"`
	// 透传服务端上报
	ServerInfo string `protobuf:"bytes,7,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	// 头部标识Icon
	HeadIconUrl string `protobuf:"bytes,8,opt,name=head_icon_url,json=headIconUrl,proto3" json:"head_icon_url,omitempty"`
	// 以下字段为 动态-新话题 使用 只在新版下发
	// 新话题 发起人 mid
	UpMid int64 `protobuf:"varint,9,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 新话题 尾部 icon
	TailIconUrl string `protobuf:"bytes,10,opt,name=tail_icon_url,json=tailIconUrl,proto3" json:"tail_icon_url,omitempty"`
	// 新话题拓展字段，用于可能的埋点
	Extension string `protobuf:"bytes,11,opt,name=extension,proto3" json:"extension,omitempty"`
	// 下发的位置
	Position             int64    `protobuf:"varint,12,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicListItem) Reset()         { *m = TopicListItem{} }
func (m *TopicListItem) String() string { return proto.CompactTextString(m) }
func (*TopicListItem) ProtoMessage()    {}
func (*TopicListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{93}
}
func (m *TopicListItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicListItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicListItem.Merge(m, src)
}
func (m *TopicListItem) XXX_Size() int {
	return m.Size()
}
func (m *TopicListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicListItem.DiscardUnknown(m)
}

var xxx_messageInfo_TopicListItem proto.InternalMessageInfo

func (m *TopicListItem) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *TopicListItem) GetIconTitle() string {
	if m != nil {
		return m.IconTitle
	}
	return ""
}

func (m *TopicListItem) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *TopicListItem) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *TopicListItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TopicListItem) GetPos() int64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *TopicListItem) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

func (m *TopicListItem) GetHeadIconUrl() string {
	if m != nil {
		return m.HeadIconUrl
	}
	return ""
}

func (m *TopicListItem) GetUpMid() int64 {
	if m != nil {
		return m.UpMid
	}
	return 0
}

func (m *TopicListItem) GetTailIconUrl() string {
	if m != nil {
		return m.TailIconUrl
	}
	return ""
}

func (m *TopicListItem) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *TopicListItem) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

// TopicButton 话题广场操作按钮
type TopicButton struct {
	// 按钮图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 按钮文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转
	JumpUri string `protobuf:"bytes,3,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	// 红点
	RedDot               bool     `protobuf:"varint,4,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicButton) Reset()         { *m = TopicButton{} }
func (m *TopicButton) String() string { return proto.CompactTextString(m) }
func (*TopicButton) ProtoMessage()    {}
func (*TopicButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{94}
}
func (m *TopicButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicButton.Merge(m, src)
}
func (m *TopicButton) XXX_Size() int {
	return m.Size()
}
func (m *TopicButton) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicButton.DiscardUnknown(m)
}

var xxx_messageInfo_TopicButton proto.InternalMessageInfo

func (m *TopicButton) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *TopicButton) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TopicButton) GetJumpUri() string {
	if m != nil {
		return m.JumpUri
	}
	return ""
}

func (m *TopicButton) GetRedDot() bool {
	if m != nil {
		return m.RedDot
	}
	return false
}

// Unfollow 综合页-无关注列表
type Unfollow struct {
	// 标题展示文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 无关注列表
	List []*UnfollowUserItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// trackID
	TrackId              string   `protobuf:"bytes,3,opt,name=TrackId,proto3" json:"TrackId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unfollow) Reset()         { *m = Unfollow{} }
func (m *Unfollow) String() string { return proto.CompactTextString(m) }
func (*Unfollow) ProtoMessage()    {}
func (*Unfollow) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{95}
}
func (m *Unfollow) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Unfollow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Unfollow.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Unfollow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unfollow.Merge(m, src)
}
func (m *Unfollow) XXX_Size() int {
	return m.Size()
}
func (m *Unfollow) XXX_DiscardUnknown() {
	xxx_messageInfo_Unfollow.DiscardUnknown(m)
}

var xxx_messageInfo_Unfollow proto.InternalMessageInfo

func (m *Unfollow) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Unfollow) GetList() []*UnfollowUserItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *Unfollow) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

// UnfollowUserItem 综合页-无关注列表
type UnfollowUserItem struct {
	// 是否有更新
	HasUpdate bool `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	// up主头像
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 排序字段 从1开始
	Pos int32 `protobuf:"varint,5,opt,name=pos,proto3" json:"pos,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,6,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// up介绍
	Sign string `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
	// 标签信息
	Label string `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,11,opt,name=button,proto3" json:"button,omitempty"`
	// 跳转地址
	Uri                  string   `protobuf:"bytes,12,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfollowUserItem) Reset()         { *m = UnfollowUserItem{} }
func (m *UnfollowUserItem) String() string { return proto.CompactTextString(m) }
func (*UnfollowUserItem) ProtoMessage()    {}
func (*UnfollowUserItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{96}
}
func (m *UnfollowUserItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnfollowUserItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnfollowUserItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnfollowUserItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowUserItem.Merge(m, src)
}
func (m *UnfollowUserItem) XXX_Size() int {
	return m.Size()
}
func (m *UnfollowUserItem) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowUserItem.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowUserItem proto.InternalMessageInfo

func (m *UnfollowUserItem) GetHasUpdate() bool {
	if m != nil {
		return m.HasUpdate
	}
	return false
}

func (m *UnfollowUserItem) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *UnfollowUserItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UnfollowUserItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UnfollowUserItem) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *UnfollowUserItem) GetLiveState() LiveState {
	if m != nil {
		return m.LiveState
	}
	return LiveState_live_none
}

func (m *UnfollowUserItem) GetOfficial() *OfficialVerify {
	if m != nil {
		return m.Official
	}
	return nil
}

func (m *UnfollowUserItem) GetVip() *VipInfo {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *UnfollowUserItem) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *UnfollowUserItem) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *UnfollowUserItem) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *UnfollowUserItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// 新话题模块
type ModuleTopic struct {
	// 话题ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 话题名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 跳转链接
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleTopic) Reset()         { *m = ModuleTopic{} }
func (m *ModuleTopic) String() string { return proto.CompactTextString(m) }
func (*ModuleTopic) ProtoMessage()    {}
func (*ModuleTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{97}
}
func (m *ModuleTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTopic.Merge(m, src)
}
func (m *ModuleTopic) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTopic.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTopic proto.InternalMessageInfo

func (m *ModuleTopic) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ModuleTopic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModuleTopic) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 新话题详情页补充模块
type ModuleTopicDetailsExt struct {
	// 评论框内提示语
	CommentGuide         string   `protobuf:"bytes,1,opt,name=comment_guide,json=commentGuide,proto3" json:"comment_guide,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleTopicDetailsExt) Reset()         { *m = ModuleTopicDetailsExt{} }
func (m *ModuleTopicDetailsExt) String() string { return proto.CompactTextString(m) }
func (*ModuleTopicDetailsExt) ProtoMessage()    {}
func (*ModuleTopicDetailsExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{98}
}
func (m *ModuleTopicDetailsExt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTopicDetailsExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTopicDetailsExt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTopicDetailsExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTopicDetailsExt.Merge(m, src)
}
func (m *ModuleTopicDetailsExt) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTopicDetailsExt) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTopicDetailsExt.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTopicDetailsExt proto.InternalMessageInfo

func (m *ModuleTopicDetailsExt) GetCommentGuide() string {
	if m != nil {
		return m.CommentGuide
	}
	return ""
}

// 新话题简要信息模块
type ModuleTopicBrief struct {
	Topic                *TopicItem `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ModuleTopicBrief) Reset()         { *m = ModuleTopicBrief{} }
func (m *ModuleTopicBrief) String() string { return proto.CompactTextString(m) }
func (*ModuleTopicBrief) ProtoMessage()    {}
func (*ModuleTopicBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{99}
}
func (m *ModuleTopicBrief) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTopicBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTopicBrief.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTopicBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTopicBrief.Merge(m, src)
}
func (m *ModuleTopicBrief) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTopicBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTopicBrief.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTopicBrief proto.InternalMessageInfo

func (m *ModuleTopicBrief) GetTopic() *TopicItem {
	if m != nil {
		return m.Topic
	}
	return nil
}

// 横插标题模块
type ModuleTitle struct {
	// 标题名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 右侧按钮 可能没有
	RightBtn *IconButton `protobuf:"bytes,2,opt,name=right_btn,json=rightBtn,proto3" json:"right_btn,omitempty"`
	// 标题样式 0 - 默认；1 - 加粗
	TitleStyle           int32    `protobuf:"varint,3,opt,name=title_style,json=titleStyle,proto3" json:"title_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleTitle) Reset()         { *m = ModuleTitle{} }
func (m *ModuleTitle) String() string { return proto.CompactTextString(m) }
func (*ModuleTitle) ProtoMessage()    {}
func (*ModuleTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{100}
}
func (m *ModuleTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTitle.Merge(m, src)
}
func (m *ModuleTitle) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTitle.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTitle proto.InternalMessageInfo

func (m *ModuleTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleTitle) GetRightBtn() *IconButton {
	if m != nil {
		return m.RightBtn
	}
	return nil
}

func (m *ModuleTitle) GetTitleStyle() int32 {
	if m != nil {
		return m.TitleStyle
	}
	return 0
}

// 横插按钮模块
type ModuleButton struct {
	// 按钮信息
	Btn                  *IconButton `protobuf:"bytes,1,opt,name=btn,proto3" json:"btn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ModuleButton) Reset()         { *m = ModuleButton{} }
func (m *ModuleButton) String() string { return proto.CompactTextString(m) }
func (*ModuleButton) ProtoMessage()    {}
func (*ModuleButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{101}
}
func (m *ModuleButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleButton.Merge(m, src)
}
func (m *ModuleButton) XXX_Size() int {
	return m.Size()
}
func (m *ModuleButton) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleButton.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleButton proto.InternalMessageInfo

func (m *ModuleButton) GetBtn() *IconButton {
	if m != nil {
		return m.Btn
	}
	return nil
}

// 小黄条通知模块
type ModuleNotice struct {
	// 通知的唯一标识，可用于点击操作上报时使用
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// 左边的小喇叭图标
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// 显示文案
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 通知类型 用于客户端区分一些埋点逻辑
	// 0- 校园热点更新通知，点击关闭时需要实时上报关闭事件
	NoticeType           int32    `protobuf:"varint,5,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleNotice) Reset()         { *m = ModuleNotice{} }
func (m *ModuleNotice) String() string { return proto.CompactTextString(m) }
func (*ModuleNotice) ProtoMessage()    {}
func (*ModuleNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{102}
}
func (m *ModuleNotice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleNotice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleNotice.Merge(m, src)
}
func (m *ModuleNotice) XXX_Size() int {
	return m.Size()
}
func (m *ModuleNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleNotice.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleNotice proto.InternalMessageInfo

func (m *ModuleNotice) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ModuleNotice) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ModuleNotice) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleNotice) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ModuleNotice) GetNoticeType() int32 {
	if m != nil {
		return m.NoticeType
	}
	return 0
}

// 通用的带icon的button
type IconButton struct {
	// 按钮文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 头部icon
	IconHead string `protobuf:"bytes,2,opt,name=icon_head,json=iconHead,proto3" json:"icon_head,omitempty"`
	// 尾部icon
	IconTail string `protobuf:"bytes,3,opt,name=icon_tail,json=iconTail,proto3" json:"icon_tail,omitempty"`
	// 按钮跳链
	JumpUri              string   `protobuf:"bytes,4,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IconButton) Reset()         { *m = IconButton{} }
func (m *IconButton) String() string { return proto.CompactTextString(m) }
func (*IconButton) ProtoMessage()    {}
func (*IconButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{103}
}
func (m *IconButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IconButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IconButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IconButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconButton.Merge(m, src)
}
func (m *IconButton) XXX_Size() int {
	return m.Size()
}
func (m *IconButton) XXX_DiscardUnknown() {
	xxx_messageInfo_IconButton.DiscardUnknown(m)
}

var xxx_messageInfo_IconButton proto.InternalMessageInfo

func (m *IconButton) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *IconButton) GetIconHead() string {
	if m != nil {
		return m.IconHead
	}
	return ""
}

func (m *IconButton) GetIconTail() string {
	if m != nil {
		return m.IconTail
	}
	return ""
}

func (m *IconButton) GetJumpUri() string {
	if m != nil {
		return m.JumpUri
	}
	return ""
}

// DynDetailsReq 批量动态id获取动态详情请求参数
type DynDetailsReq struct {
	// 动态id
	DynamicIds string `protobuf:"bytes,1,opt,name=dynamic_ids,json=dynamicIds,proto3" json:"dynamic_ids,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,2,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// Deprecated: 不再使用
	Config               *Config  `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynDetailsReq) Reset()         { *m = DynDetailsReq{} }
func (m *DynDetailsReq) String() string { return proto.CompactTextString(m) }
func (*DynDetailsReq) ProtoMessage()    {}
func (*DynDetailsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{104}
}
func (m *DynDetailsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynDetailsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynDetailsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynDetailsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynDetailsReq.Merge(m, src)
}
func (m *DynDetailsReq) XXX_Size() int {
	return m.Size()
}
func (m *DynDetailsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynDetailsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynDetailsReq proto.InternalMessageInfo

func (m *DynDetailsReq) GetDynamicIds() string {
	if m != nil {
		return m.DynamicIds
	}
	return ""
}

func (m *DynDetailsReq) GetPlayurlParam() *PlayurlParam {
	if m != nil {
		return m.PlayurlParam
	}
	return nil
}

func (m *DynDetailsReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynDetailsReq) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// DynDetailsReply 批量动态id获取动态详情返回值
type DynDetailsReply struct {
	// 动态列表
	List                 []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynDetailsReply) Reset()         { *m = DynDetailsReply{} }
func (m *DynDetailsReply) String() string { return proto.CompactTextString(m) }
func (*DynDetailsReply) ProtoMessage()    {}
func (*DynDetailsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{105}
}
func (m *DynDetailsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynDetailsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynDetailsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynDetailsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynDetailsReply.Merge(m, src)
}
func (m *DynDetailsReply) XXX_Size() int {
	return m.Size()
}
func (m *DynDetailsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynDetailsReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynDetailsReply proto.InternalMessageInfo

func (m *DynDetailsReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

// DynVideoPersonalReq 最近访问-个人feed流列表-请求参数
type DynVideoPersonalReq struct {
	// 被访问者的 UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 偏移量 第一页可传空
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 标明下拉几次
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 是否是预加载
	IsPreload int32 `protobuf:"varint,4,opt,name=is_preload,json=isPreload,proto3" json:"is_preload,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,7,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynVideoPersonalReq) Reset()         { *m = DynVideoPersonalReq{} }
func (m *DynVideoPersonalReq) String() string { return proto.CompactTextString(m) }
func (*DynVideoPersonalReq) ProtoMessage()    {}
func (*DynVideoPersonalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{106}
}
func (m *DynVideoPersonalReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVideoPersonalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVideoPersonalReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVideoPersonalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVideoPersonalReq.Merge(m, src)
}
func (m *DynVideoPersonalReq) XXX_Size() int {
	return m.Size()
}
func (m *DynVideoPersonalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVideoPersonalReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynVideoPersonalReq proto.InternalMessageInfo

func (m *DynVideoPersonalReq) GetHostUid() int64 {
	if m != nil {
		return m.HostUid
	}
	return 0
}

func (m *DynVideoPersonalReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynVideoPersonalReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynVideoPersonalReq) GetIsPreload() int32 {
	if m != nil {
		return m.IsPreload
	}
	return 0
}

func (m *DynVideoPersonalReq) GetPlayurlParam() *PlayurlParam {
	if m != nil {
		return m.PlayurlParam
	}
	return nil
}

func (m *DynVideoPersonalReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynVideoPersonalReq) GetFootprint() string {
	if m != nil {
		return m.Footprint
	}
	return ""
}

func (m *DynVideoPersonalReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynVideoPersonalReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

// DynVideoPersonalReply 最近访问-个人feed流列表 返回值
type DynVideoPersonalReply struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移量
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 已读进度
	ReadOffset string `protobuf:"bytes,4,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	// 顶部预约卡
	AdditionUp           *TopAdditionUP `protobuf:"bytes,6,opt,name=addition_up,json=additionUp,proto3" json:"addition_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynVideoPersonalReply) Reset()         { *m = DynVideoPersonalReply{} }
func (m *DynVideoPersonalReply) String() string { return proto.CompactTextString(m) }
func (*DynVideoPersonalReply) ProtoMessage()    {}
func (*DynVideoPersonalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{107}
}
func (m *DynVideoPersonalReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVideoPersonalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVideoPersonalReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVideoPersonalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVideoPersonalReply.Merge(m, src)
}
func (m *DynVideoPersonalReply) XXX_Size() int {
	return m.Size()
}
func (m *DynVideoPersonalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVideoPersonalReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynVideoPersonalReply proto.InternalMessageInfo

func (m *DynVideoPersonalReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DynVideoPersonalReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynVideoPersonalReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *DynVideoPersonalReply) GetReadOffset() string {
	if m != nil {
		return m.ReadOffset
	}
	return ""
}

func (m *DynVideoPersonalReply) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *DynVideoPersonalReply) GetAdditionUp() *TopAdditionUP {
	if m != nil {
		return m.AdditionUp
	}
	return nil
}

// DynVideoUpdOffsetReq 最近访问-标记已读 请求参数
type DynVideoUpdOffsetReq struct {
	// 被访问者的UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 用户已读进度
	ReadOffset string `protobuf:"bytes,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 服务端生成的透传上报字段
	Footprint            string   `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynVideoUpdOffsetReq) Reset()         { *m = DynVideoUpdOffsetReq{} }
func (m *DynVideoUpdOffsetReq) String() string { return proto.CompactTextString(m) }
func (*DynVideoUpdOffsetReq) ProtoMessage()    {}
func (*DynVideoUpdOffsetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{108}
}
func (m *DynVideoUpdOffsetReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVideoUpdOffsetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVideoUpdOffsetReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVideoUpdOffsetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVideoUpdOffsetReq.Merge(m, src)
}
func (m *DynVideoUpdOffsetReq) XXX_Size() int {
	return m.Size()
}
func (m *DynVideoUpdOffsetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVideoUpdOffsetReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynVideoUpdOffsetReq proto.InternalMessageInfo

func (m *DynVideoUpdOffsetReq) GetHostUid() int64 {
	if m != nil {
		return m.HostUid
	}
	return 0
}

func (m *DynVideoUpdOffsetReq) GetReadOffset() string {
	if m != nil {
		return m.ReadOffset
	}
	return ""
}

func (m *DynVideoUpdOffsetReq) GetFootprint() string {
	if m != nil {
		return m.Footprint
	}
	return ""
}

// CardVideoUpList 视频页-最近访问
type CardVideoUpList struct {
	// 标题展示文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// up主列表
	List []*UpListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 直播数
	ShowLiveNum int32 `protobuf:"varint,4,opt,name=show_live_num,json=showLiveNum,proto3" json:"show_live_num,omitempty"`
	// 跳转label
	MoreLabel *UpListMoreLabel `protobuf:"bytes,5,opt,name=more_label,json=moreLabel,proto3" json:"more_label,omitempty"`
	// 标题开关(综合页)
	TitleSwitch int32 `protobuf:"varint,6,opt,name=title_switch,json=titleSwitch,proto3" json:"title_switch,omitempty"`
	// 是否展示右上角查看更多label
	ShowMoreLabel bool `protobuf:"varint,7,opt,name=show_more_label,json=showMoreLabel,proto3" json:"show_more_label,omitempty"`
	// 是否在快速消费页查看更多按钮
	ShowInPersonal bool `protobuf:"varint,8,opt,name=show_in_personal,json=showInPersonal,proto3" json:"show_in_personal,omitempty"`
	// 是否展示右侧查看更多按钮
	ShowMoreButton       bool     `protobuf:"varint,9,opt,name=show_more_button,json=showMoreButton,proto3" json:"show_more_button,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardVideoUpList) Reset()         { *m = CardVideoUpList{} }
func (m *CardVideoUpList) String() string { return proto.CompactTextString(m) }
func (*CardVideoUpList) ProtoMessage()    {}
func (*CardVideoUpList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{109}
}
func (m *CardVideoUpList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CardVideoUpList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CardVideoUpList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CardVideoUpList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardVideoUpList.Merge(m, src)
}
func (m *CardVideoUpList) XXX_Size() int {
	return m.Size()
}
func (m *CardVideoUpList) XXX_DiscardUnknown() {
	xxx_messageInfo_CardVideoUpList.DiscardUnknown(m)
}

var xxx_messageInfo_CardVideoUpList proto.InternalMessageInfo

func (m *CardVideoUpList) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CardVideoUpList) GetList() []*UpListItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CardVideoUpList) GetFootprint() string {
	if m != nil {
		return m.Footprint
	}
	return ""
}

func (m *CardVideoUpList) GetShowLiveNum() int32 {
	if m != nil {
		return m.ShowLiveNum
	}
	return 0
}

func (m *CardVideoUpList) GetMoreLabel() *UpListMoreLabel {
	if m != nil {
		return m.MoreLabel
	}
	return nil
}

func (m *CardVideoUpList) GetTitleSwitch() int32 {
	if m != nil {
		return m.TitleSwitch
	}
	return 0
}

func (m *CardVideoUpList) GetShowMoreLabel() bool {
	if m != nil {
		return m.ShowMoreLabel
	}
	return false
}

func (m *CardVideoUpList) GetShowInPersonal() bool {
	if m != nil {
		return m.ShowInPersonal
	}
	return false
}

func (m *CardVideoUpList) GetShowMoreButton() bool {
	if m != nil {
		return m.ShowMoreButton
	}
	return false
}

// UpListMoreLabel 最常访问-查看更多
type UpListMoreLabel struct {
	// 文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpListMoreLabel) Reset()         { *m = UpListMoreLabel{} }
func (m *UpListMoreLabel) String() string { return proto.CompactTextString(m) }
func (*UpListMoreLabel) ProtoMessage()    {}
func (*UpListMoreLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{110}
}
func (m *UpListMoreLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpListMoreLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpListMoreLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpListMoreLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpListMoreLabel.Merge(m, src)
}
func (m *UpListMoreLabel) XXX_Size() int {
	return m.Size()
}
func (m *UpListMoreLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_UpListMoreLabel.DiscardUnknown(m)
}

var xxx_messageInfo_UpListMoreLabel proto.InternalMessageInfo

func (m *UpListMoreLabel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpListMoreLabel) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// UpListItem 动态顶部up列表-up主信息
type UpListItem struct {
	// 是否有更新
	HasUpdate bool `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	// up主头像
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 排序字段 从1开始
	Pos int64 `protobuf:"varint,5,opt,name=pos,proto3" json:"pos,omitempty"`
	// 用户类型
	UserItemType UserItemType `protobuf:"varint,6,opt,name=user_item_type,json=userItemType,proto3,enum=bilibili.app.dynamic.v2.UserItemType" json:"user_item_type,omitempty"`
	// 直播头像样式-日
	DisplayStyleDay *UserItemStyle `protobuf:"bytes,7,opt,name=display_style_day,json=displayStyleDay,proto3" json:"display_style_day,omitempty"`
	// 直播头像样式-夜
	DisplayStyleNight *UserItemStyle `protobuf:"bytes,8,opt,name=display_style_night,json=displayStyleNight,proto3" json:"display_style_night,omitempty"`
	// 直播埋点
	StyleId int64 `protobuf:"varint,9,opt,name=style_id,json=styleId,proto3" json:"style_id,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,10,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 分割线
	Separator bool `protobuf:"varint,11,opt,name=separator,proto3" json:"separator,omitempty"`
	// 跳转
	Uri string `protobuf:"bytes,12,opt,name=uri,proto3" json:"uri,omitempty"`
	// UP主预约上报使用
	IsRecall             bool     `protobuf:"varint,13,opt,name=is_recall,json=isRecall,proto3" json:"is_recall,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpListItem) Reset()         { *m = UpListItem{} }
func (m *UpListItem) String() string { return proto.CompactTextString(m) }
func (*UpListItem) ProtoMessage()    {}
func (*UpListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{111}
}
func (m *UpListItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpListItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpListItem.Merge(m, src)
}
func (m *UpListItem) XXX_Size() int {
	return m.Size()
}
func (m *UpListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_UpListItem.DiscardUnknown(m)
}

var xxx_messageInfo_UpListItem proto.InternalMessageInfo

func (m *UpListItem) GetHasUpdate() bool {
	if m != nil {
		return m.HasUpdate
	}
	return false
}

func (m *UpListItem) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *UpListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpListItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UpListItem) GetPos() int64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *UpListItem) GetUserItemType() UserItemType {
	if m != nil {
		return m.UserItemType
	}
	return UserItemType_user_item_type_none
}

func (m *UpListItem) GetDisplayStyleDay() *UserItemStyle {
	if m != nil {
		return m.DisplayStyleDay
	}
	return nil
}

func (m *UpListItem) GetDisplayStyleNight() *UserItemStyle {
	if m != nil {
		return m.DisplayStyleNight
	}
	return nil
}

func (m *UpListItem) GetStyleId() int64 {
	if m != nil {
		return m.StyleId
	}
	return 0
}

func (m *UpListItem) GetLiveState() LiveState {
	if m != nil {
		return m.LiveState
	}
	return LiveState_live_none
}

func (m *UpListItem) GetSeparator() bool {
	if m != nil {
		return m.Separator
	}
	return false
}

func (m *UpListItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *UpListItem) GetIsRecall() bool {
	if m != nil {
		return m.IsRecall
	}
	return false
}

type UserItemStyle struct {
	RectText             string   `protobuf:"bytes,1,opt,name=rect_text,json=rectText,proto3" json:"rect_text,omitempty"`
	RectTextColor        string   `protobuf:"bytes,2,opt,name=rect_text_color,json=rectTextColor,proto3" json:"rect_text_color,omitempty"`
	RectIcon             string   `protobuf:"bytes,3,opt,name=rect_icon,json=rectIcon,proto3" json:"rect_icon,omitempty"`
	RectBgColor          string   `protobuf:"bytes,4,opt,name=rect_bg_color,json=rectBgColor,proto3" json:"rect_bg_color,omitempty"`
	OuterAnimation       string   `protobuf:"bytes,5,opt,name=outer_animation,json=outerAnimation,proto3" json:"outer_animation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserItemStyle) Reset()         { *m = UserItemStyle{} }
func (m *UserItemStyle) String() string { return proto.CompactTextString(m) }
func (*UserItemStyle) ProtoMessage()    {}
func (*UserItemStyle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{112}
}
func (m *UserItemStyle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserItemStyle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserItemStyle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserItemStyle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserItemStyle.Merge(m, src)
}
func (m *UserItemStyle) XXX_Size() int {
	return m.Size()
}
func (m *UserItemStyle) XXX_DiscardUnknown() {
	xxx_messageInfo_UserItemStyle.DiscardUnknown(m)
}

var xxx_messageInfo_UserItemStyle proto.InternalMessageInfo

func (m *UserItemStyle) GetRectText() string {
	if m != nil {
		return m.RectText
	}
	return ""
}

func (m *UserItemStyle) GetRectTextColor() string {
	if m != nil {
		return m.RectTextColor
	}
	return ""
}

func (m *UserItemStyle) GetRectIcon() string {
	if m != nil {
		return m.RectIcon
	}
	return ""
}

func (m *UserItemStyle) GetRectBgColor() string {
	if m != nil {
		return m.RectBgColor
	}
	return ""
}

func (m *UserItemStyle) GetOuterAnimation() string {
	if m != nil {
		return m.OuterAnimation
	}
	return ""
}

// CardVideoFollowList 视频页-我的追番
type CardVideoFollowList struct {
	// 查看全部（跳转链接）
	ViewAllLink string `protobuf:"bytes,1,opt,name=view_all_link,json=viewAllLink,proto3" json:"view_all_link,omitempty"`
	// 追番列表
	List                 []*FollowListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CardVideoFollowList) Reset()         { *m = CardVideoFollowList{} }
func (m *CardVideoFollowList) String() string { return proto.CompactTextString(m) }
func (*CardVideoFollowList) ProtoMessage()    {}
func (*CardVideoFollowList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{113}
}
func (m *CardVideoFollowList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CardVideoFollowList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CardVideoFollowList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CardVideoFollowList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardVideoFollowList.Merge(m, src)
}
func (m *CardVideoFollowList) XXX_Size() int {
	return m.Size()
}
func (m *CardVideoFollowList) XXX_DiscardUnknown() {
	xxx_messageInfo_CardVideoFollowList.DiscardUnknown(m)
}

var xxx_messageInfo_CardVideoFollowList proto.InternalMessageInfo

func (m *CardVideoFollowList) GetViewAllLink() string {
	if m != nil {
		return m.ViewAllLink
	}
	return ""
}

func (m *CardVideoFollowList) GetList() []*FollowListItem {
	if m != nil {
		return m.List
	}
	return nil
}

// FollowListItem 视频页-我的追番-番剧信息
type FollowListItem struct {
	// season_id
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// new_ep
	NewEp *NewEP `protobuf:"bytes,5,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
	// 子标题
	SubTitle string `protobuf:"bytes,6,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 卡片位次
	Pos                  int64    `protobuf:"varint,7,opt,name=pos,proto3" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowListItem) Reset()         { *m = FollowListItem{} }
func (m *FollowListItem) String() string { return proto.CompactTextString(m) }
func (*FollowListItem) ProtoMessage()    {}
func (*FollowListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{114}
}
func (m *FollowListItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowListItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowListItem.Merge(m, src)
}
func (m *FollowListItem) XXX_Size() int {
	return m.Size()
}
func (m *FollowListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowListItem.DiscardUnknown(m)
}

var xxx_messageInfo_FollowListItem proto.InternalMessageInfo

func (m *FollowListItem) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *FollowListItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *FollowListItem) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *FollowListItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *FollowListItem) GetNewEp() *NewEP {
	if m != nil {
		return m.NewEp
	}
	return nil
}

func (m *FollowListItem) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *FollowListItem) GetPos() int64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

// NewEP 最新ep
type NewEP struct {
	// 最新话epid
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 更新至XX话
	IndexShow string `protobuf:"bytes,2,opt,name=index_show,json=indexShow,proto3" json:"index_show,omitempty"`
	// 更新剧集的封面
	Cover                string   `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewEP) Reset()         { *m = NewEP{} }
func (m *NewEP) String() string { return proto.CompactTextString(m) }
func (*NewEP) ProtoMessage()    {}
func (*NewEP) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{115}
}
func (m *NewEP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewEP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewEP.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewEP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewEP.Merge(m, src)
}
func (m *NewEP) XXX_Size() int {
	return m.Size()
}
func (m *NewEP) XXX_DiscardUnknown() {
	xxx_messageInfo_NewEP.DiscardUnknown(m)
}

var xxx_messageInfo_NewEP proto.InternalMessageInfo

func (m *NewEP) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NewEP) GetIndexShow() string {
	if m != nil {
		return m.IndexShow
	}
	return ""
}

func (m *NewEP) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

// Extend 扩展字段，用于动态部分操作使用
type Extend struct {
	// 动态id
	DynIdStr string `protobuf:"bytes,1,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
	// 业务方id
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// 源动态id
	OrigDynIdStr string `protobuf:"bytes,3,opt,name=orig_dyn_id_str,json=origDynIdStr,proto3" json:"orig_dyn_id_str,omitempty"`
	// 转发卡：用户名
	OrigName string `protobuf:"bytes,4,opt,name=orig_name,json=origName,proto3" json:"orig_name,omitempty"`
	// 转发卡：图片url
	OrigImgUrl string `protobuf:"bytes,5,opt,name=orig_img_url,json=origImgUrl,proto3" json:"orig_img_url,omitempty"`
	// 转发卡：文字内容
	OrigDesc []*Description `protobuf:"bytes,6,rep,name=orig_desc,json=origDesc,proto3" json:"orig_desc,omitempty"`
	// 填充文字内容
	Desc []*Description `protobuf:"bytes,7,rep,name=desc,proto3" json:"desc,omitempty"`
	// 被转发的源动态类型
	OrigDynType DynamicType `protobuf:"varint,8,opt,name=orig_dyn_type,json=origDynType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"orig_dyn_type,omitempty"`
	// 分享到站外展示类型
	ShareType string `protobuf:"bytes,9,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"`
	// 分享的场景
	ShareScene string `protobuf:"bytes,10,opt,name=share_scene,json=shareScene,proto3" json:"share_scene,omitempty"`
	// 是否快速转发
	IsFastShare bool `protobuf:"varint,11,opt,name=is_fast_share,json=isFastShare,proto3" json:"is_fast_share,omitempty"`
	// r_type 分享和转发
	RType int32 `protobuf:"varint,12,opt,name=r_type,json=rType,proto3" json:"r_type,omitempty"`
	// 数据源的动态类型
	DynType int64 `protobuf:"varint,13,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 用户id
	Uid int64 `protobuf:"varint,14,opt,name=uid,proto3" json:"uid,omitempty"`
	// 卡片跳转
	CardUrl string `protobuf:"bytes,15,opt,name=card_url,json=cardUrl,proto3" json:"card_url,omitempty"`
	// 透传字段
	SourceContent *types.Any `protobuf:"bytes,16,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
	// 转发卡：用户头像
	OrigFace string `protobuf:"bytes,17,opt,name=orig_face,json=origFace,proto3" json:"orig_face,omitempty"`
	// 评论跳转
	Reply *ExtendReply `protobuf:"bytes,18,opt,name=reply,proto3" json:"reply,omitempty"`
	// track_id
	TrackId              string   `protobuf:"bytes,19,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Extend) Reset()         { *m = Extend{} }
func (m *Extend) String() string { return proto.CompactTextString(m) }
func (*Extend) ProtoMessage()    {}
func (*Extend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{116}
}
func (m *Extend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Extend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Extend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Extend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extend.Merge(m, src)
}
func (m *Extend) XXX_Size() int {
	return m.Size()
}
func (m *Extend) XXX_DiscardUnknown() {
	xxx_messageInfo_Extend.DiscardUnknown(m)
}

var xxx_messageInfo_Extend proto.InternalMessageInfo

func (m *Extend) GetDynIdStr() string {
	if m != nil {
		return m.DynIdStr
	}
	return ""
}

func (m *Extend) GetBusinessId() string {
	if m != nil {
		return m.BusinessId
	}
	return ""
}

func (m *Extend) GetOrigDynIdStr() string {
	if m != nil {
		return m.OrigDynIdStr
	}
	return ""
}

func (m *Extend) GetOrigName() string {
	if m != nil {
		return m.OrigName
	}
	return ""
}

func (m *Extend) GetOrigImgUrl() string {
	if m != nil {
		return m.OrigImgUrl
	}
	return ""
}

func (m *Extend) GetOrigDesc() []*Description {
	if m != nil {
		return m.OrigDesc
	}
	return nil
}

func (m *Extend) GetDesc() []*Description {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *Extend) GetOrigDynType() DynamicType {
	if m != nil {
		return m.OrigDynType
	}
	return DynamicType_dyn_none
}

func (m *Extend) GetShareType() string {
	if m != nil {
		return m.ShareType
	}
	return ""
}

func (m *Extend) GetShareScene() string {
	if m != nil {
		return m.ShareScene
	}
	return ""
}

func (m *Extend) GetIsFastShare() bool {
	if m != nil {
		return m.IsFastShare
	}
	return false
}

func (m *Extend) GetRType() int32 {
	if m != nil {
		return m.RType
	}
	return 0
}

func (m *Extend) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *Extend) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Extend) GetCardUrl() string {
	if m != nil {
		return m.CardUrl
	}
	return ""
}

func (m *Extend) GetSourceContent() *types.Any {
	if m != nil {
		return m.SourceContent
	}
	return nil
}

func (m *Extend) GetOrigFace() string {
	if m != nil {
		return m.OrigFace
	}
	return ""
}

func (m *Extend) GetReply() *ExtendReply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *Extend) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

// ExtendReply 评论扩展
type ExtendReply struct {
	// 基础跳转地址
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// 参数部分
	Params               []*ExtendReplyParam `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExtendReply) Reset()         { *m = ExtendReply{} }
func (m *ExtendReply) String() string { return proto.CompactTextString(m) }
func (*ExtendReply) ProtoMessage()    {}
func (*ExtendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{117}
}
func (m *ExtendReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtendReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendReply.Merge(m, src)
}
func (m *ExtendReply) XXX_Size() int {
	return m.Size()
}
func (m *ExtendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendReply.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendReply proto.InternalMessageInfo

func (m *ExtendReply) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ExtendReply) GetParams() []*ExtendReplyParam {
	if m != nil {
		return m.Params
	}
	return nil
}

// ExtendReplyParam 评论扩展参数部分
type ExtendReplyParam struct {
	// 参数名
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 参数值
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtendReplyParam) Reset()         { *m = ExtendReplyParam{} }
func (m *ExtendReplyParam) String() string { return proto.CompactTextString(m) }
func (*ExtendReplyParam) ProtoMessage()    {}
func (*ExtendReplyParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{118}
}
func (m *ExtendReplyParam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtendReplyParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtendReplyParam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtendReplyParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendReplyParam.Merge(m, src)
}
func (m *ExtendReplyParam) XXX_Size() int {
	return m.Size()
}
func (m *ExtendReplyParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendReplyParam.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendReplyParam proto.InternalMessageInfo

func (m *ExtendReplyParam) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ExtendReplyParam) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// ModuleForwardAuthor 动态列表-用户模块-转发模板
type ModuleAuthorForward struct {
	// 展示标题
	Title []*ModuleAuthorForwardTitle `protobuf:"bytes,1,rep,name=title,proto3" json:"title,omitempty"`
	// 源卡片跳转链接
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 时间标签
	PtimeLabelText string `protobuf:"bytes,4,opt,name=ptime_label_text,json=ptimeLabelText,proto3" json:"ptime_label_text,omitempty"`
	// 是否展示关注
	ShowFollow bool `protobuf:"varint,5,opt,name=show_follow,json=showFollow,proto3" json:"show_follow,omitempty"`
	// 源up主头像
	FaceUrl string `protobuf:"bytes,6,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
	// 双向关系
	Relation *Relation `protobuf:"bytes,7,opt,name=relation,proto3" json:"relation,omitempty"`
	// 右侧操作区域 - 三点样式
	TpList               []*ThreePointItem `protobuf:"bytes,8,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ModuleAuthorForward) Reset()         { *m = ModuleAuthorForward{} }
func (m *ModuleAuthorForward) String() string { return proto.CompactTextString(m) }
func (*ModuleAuthorForward) ProtoMessage()    {}
func (*ModuleAuthorForward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{119}
}
func (m *ModuleAuthorForward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAuthorForward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAuthorForward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAuthorForward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAuthorForward.Merge(m, src)
}
func (m *ModuleAuthorForward) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAuthorForward) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAuthorForward.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAuthorForward proto.InternalMessageInfo

func (m *ModuleAuthorForward) GetTitle() []*ModuleAuthorForwardTitle {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *ModuleAuthorForward) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ModuleAuthorForward) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ModuleAuthorForward) GetPtimeLabelText() string {
	if m != nil {
		return m.PtimeLabelText
	}
	return ""
}

func (m *ModuleAuthorForward) GetShowFollow() bool {
	if m != nil {
		return m.ShowFollow
	}
	return false
}

func (m *ModuleAuthorForward) GetFaceUrl() string {
	if m != nil {
		return m.FaceUrl
	}
	return ""
}

func (m *ModuleAuthorForward) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *ModuleAuthorForward) GetTpList() []*ThreePointItem {
	if m != nil {
		return m.TpList
	}
	return nil
}

// ModuleAuthorForwardTitle 动态列表-用户模块-转发模板-title部分
type ModuleAuthorForwardTitle struct {
	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转链接
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleAuthorForwardTitle) Reset()         { *m = ModuleAuthorForwardTitle{} }
func (m *ModuleAuthorForwardTitle) String() string { return proto.CompactTextString(m) }
func (*ModuleAuthorForwardTitle) ProtoMessage()    {}
func (*ModuleAuthorForwardTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{120}
}
func (m *ModuleAuthorForwardTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAuthorForwardTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAuthorForwardTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAuthorForwardTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAuthorForwardTitle.Merge(m, src)
}
func (m *ModuleAuthorForwardTitle) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAuthorForwardTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAuthorForwardTitle.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAuthorForwardTitle proto.InternalMessageInfo

func (m *ModuleAuthorForwardTitle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ModuleAuthorForwardTitle) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// ModuleAd 动态列表-用户模块-广告卡
type ModuleAd struct {
	// 广告透传信息
	SourceContent *types.Any `protobuf:"bytes,1,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
	// 用户模块
	ModuleAuthor *ModuleAuthor `protobuf:"bytes,2,opt,name=module_author,json=moduleAuthor,proto3" json:"module_author,omitempty"`
	// 广告内容类型  1是起飞内容，其他是0
	AdContentType int32 `protobuf:"varint,3,opt,name=ad_content_type,json=adContentType,proto3" json:"ad_content_type,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3      string   `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleAd) Reset()         { *m = ModuleAd{} }
func (m *ModuleAd) String() string { return proto.CompactTextString(m) }
func (*ModuleAd) ProtoMessage()    {}
func (*ModuleAd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{121}
}
func (m *ModuleAd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAd.Merge(m, src)
}
func (m *ModuleAd) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAd) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAd.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAd proto.InternalMessageInfo

func (m *ModuleAd) GetSourceContent() *types.Any {
	if m != nil {
		return m.SourceContent
	}
	return nil
}

func (m *ModuleAd) GetModuleAuthor() *ModuleAuthor {
	if m != nil {
		return m.ModuleAuthor
	}
	return nil
}

func (m *ModuleAd) GetAdContentType() int32 {
	if m != nil {
		return m.AdContentType
	}
	return 0
}

func (m *ModuleAd) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *ModuleAd) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *ModuleAd) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

// ModuleBanner 动态列表-通栏
type ModuleBanner struct {
	// 模块标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 卡片类型
	Type ModuleBannerType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ModuleBannerType" json:"type,omitempty"`
	// 卡片
	//
	// Types that are valid to be assigned to Item:
	//	*ModuleBanner_User
	Item isModuleBanner_Item `protobuf_oneof:"item"`
	// 不感兴趣文案
	DislikeText string `protobuf:"bytes,4,opt,name=dislike_text,json=dislikeText,proto3" json:"dislike_text,omitempty"`
	// 不感兴趣图标
	DislikeIcon          string   `protobuf:"bytes,5,opt,name=dislike_icon,json=dislikeIcon,proto3" json:"dislike_icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleBanner) Reset()         { *m = ModuleBanner{} }
func (m *ModuleBanner) String() string { return proto.CompactTextString(m) }
func (*ModuleBanner) ProtoMessage()    {}
func (*ModuleBanner) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{122}
}
func (m *ModuleBanner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleBanner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleBanner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleBanner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleBanner.Merge(m, src)
}
func (m *ModuleBanner) XXX_Size() int {
	return m.Size()
}
func (m *ModuleBanner) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleBanner.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleBanner proto.InternalMessageInfo

type isModuleBanner_Item interface {
	isModuleBanner_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ModuleBanner_User struct {
	User *ModuleBannerUser `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
}

func (*ModuleBanner_User) isModuleBanner_Item() {}

func (m *ModuleBanner) GetItem() isModuleBanner_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ModuleBanner) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleBanner) GetType() ModuleBannerType {
	if m != nil {
		return m.Type
	}
	return ModuleBannerType_module_banner_type_none
}

func (m *ModuleBanner) GetUser() *ModuleBannerUser {
	if x, ok := m.GetItem().(*ModuleBanner_User); ok {
		return x.User
	}
	return nil
}

func (m *ModuleBanner) GetDislikeText() string {
	if m != nil {
		return m.DislikeText
	}
	return ""
}

func (m *ModuleBanner) GetDislikeIcon() string {
	if m != nil {
		return m.DislikeIcon
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ModuleBanner) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ModuleBanner_User)(nil),
	}
}

// AdditionVote2 动态模块-投票
type AdditionVote2 struct {
	// 投票类型
	AdditionVoteType AdditionVoteType `protobuf:"varint,1,opt,name=addition_vote_type,json=additionVoteType,proto3,enum=bilibili.app.dynamic.v2.AdditionVoteType" json:"addition_vote_type,omitempty"`
	// 投票ID
	VoteId int64 `protobuf:"varint,2,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 已过期： xxx人参与· 投票已过期。button 展示去查看
	// 未过期： xxx人参与· 剩xx天xx时xx分。button展示去投票
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// 剩余时间
	Deadline int64 `protobuf:"varint,5,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// 生效文案
	OpenText string `protobuf:"bytes,6,opt,name=open_text,json=openText,proto3" json:"open_text,omitempty"`
	// 过期文案
	CloseText string `protobuf:"bytes,7,opt,name=close_text,json=closeText,proto3" json:"close_text,omitempty"`
	// 已投票
	VotedText string `protobuf:"bytes,8,opt,name=voted_text,json=votedText,proto3" json:"voted_text,omitempty"`
	// 投票状态
	State AdditionVoteState `protobuf:"varint,9,opt,name=state,proto3,enum=bilibili.app.dynamic.v2.AdditionVoteState" json:"state,omitempty"`
	// 投票信息
	//
	// Types that are valid to be assigned to Item:
	//	*AdditionVote2_AdditionVoteWord
	//	*AdditionVote2_AdditionVotePic
	//	*AdditionVote2_AdditionVoteDefaule
	Item isAdditionVote2_Item `protobuf_oneof:"item"`
	// 业务类型 0:动态投票 1:话题h5组件
	BizType int32 `protobuf:"varint,13,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	// 投票总人数
	Total int64 `protobuf:"varint,14,opt,name=total,proto3" json:"total,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,15,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 异常提示
	Tips string `protobuf:"bytes,16,opt,name=tips,proto3" json:"tips,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,17,opt,name=uri,proto3" json:"uri,omitempty"`
	// 是否投票
	IsVoted bool `protobuf:"varint,18,opt,name=is_voted,json=isVoted,proto3" json:"is_voted,omitempty"`
	// 投票最多多选个数，单选为1
	ChoiceCnt int32 `protobuf:"varint,19,opt,name=choice_cnt,json=choiceCnt,proto3" json:"choice_cnt,omitempty"`
	// 是否默认选中分享到动态
	DefauleSelectShare   bool     `protobuf:"varint,20,opt,name=defaule_select_share,json=defauleSelectShare,proto3" json:"defaule_select_share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionVote2) Reset()         { *m = AdditionVote2{} }
func (m *AdditionVote2) String() string { return proto.CompactTextString(m) }
func (*AdditionVote2) ProtoMessage()    {}
func (*AdditionVote2) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{123}
}
func (m *AdditionVote2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVote2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVote2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVote2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVote2.Merge(m, src)
}
func (m *AdditionVote2) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVote2) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVote2.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVote2 proto.InternalMessageInfo

type isAdditionVote2_Item interface {
	isAdditionVote2_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type AdditionVote2_AdditionVoteWord struct {
	AdditionVoteWord *AdditionVoteWord `protobuf:"bytes,10,opt,name=addition_vote_word,json=additionVoteWord,proto3,oneof" json:"addition_vote_word,omitempty"`
}
type AdditionVote2_AdditionVotePic struct {
	AdditionVotePic *AdditionVotePic `protobuf:"bytes,11,opt,name=addition_vote_pic,json=additionVotePic,proto3,oneof" json:"addition_vote_pic,omitempty"`
}
type AdditionVote2_AdditionVoteDefaule struct {
	AdditionVoteDefaule *AdditionVoteDefaule `protobuf:"bytes,12,opt,name=addition_vote_defaule,json=additionVoteDefaule,proto3,oneof" json:"addition_vote_defaule,omitempty"`
}

func (*AdditionVote2_AdditionVoteWord) isAdditionVote2_Item()    {}
func (*AdditionVote2_AdditionVotePic) isAdditionVote2_Item()     {}
func (*AdditionVote2_AdditionVoteDefaule) isAdditionVote2_Item() {}

func (m *AdditionVote2) GetItem() isAdditionVote2_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *AdditionVote2) GetAdditionVoteType() AdditionVoteType {
	if m != nil {
		return m.AdditionVoteType
	}
	return AdditionVoteType_addition_vote_type_none
}

func (m *AdditionVote2) GetVoteId() int64 {
	if m != nil {
		return m.VoteId
	}
	return 0
}

func (m *AdditionVote2) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionVote2) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *AdditionVote2) GetDeadline() int64 {
	if m != nil {
		return m.Deadline
	}
	return 0
}

func (m *AdditionVote2) GetOpenText() string {
	if m != nil {
		return m.OpenText
	}
	return ""
}

func (m *AdditionVote2) GetCloseText() string {
	if m != nil {
		return m.CloseText
	}
	return ""
}

func (m *AdditionVote2) GetVotedText() string {
	if m != nil {
		return m.VotedText
	}
	return ""
}

func (m *AdditionVote2) GetState() AdditionVoteState {
	if m != nil {
		return m.State
	}
	return AdditionVoteState_addition_vote_state_none
}

func (m *AdditionVote2) GetAdditionVoteWord() *AdditionVoteWord {
	if x, ok := m.GetItem().(*AdditionVote2_AdditionVoteWord); ok {
		return x.AdditionVoteWord
	}
	return nil
}

func (m *AdditionVote2) GetAdditionVotePic() *AdditionVotePic {
	if x, ok := m.GetItem().(*AdditionVote2_AdditionVotePic); ok {
		return x.AdditionVotePic
	}
	return nil
}

func (m *AdditionVote2) GetAdditionVoteDefaule() *AdditionVoteDefaule {
	if x, ok := m.GetItem().(*AdditionVote2_AdditionVoteDefaule); ok {
		return x.AdditionVoteDefaule
	}
	return nil
}

func (m *AdditionVote2) GetBizType() int32 {
	if m != nil {
		return m.BizType
	}
	return 0
}

func (m *AdditionVote2) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AdditionVote2) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *AdditionVote2) GetTips() string {
	if m != nil {
		return m.Tips
	}
	return ""
}

func (m *AdditionVote2) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *AdditionVote2) GetIsVoted() bool {
	if m != nil {
		return m.IsVoted
	}
	return false
}

func (m *AdditionVote2) GetChoiceCnt() int32 {
	if m != nil {
		return m.ChoiceCnt
	}
	return 0
}

func (m *AdditionVote2) GetDefauleSelectShare() bool {
	if m != nil {
		return m.DefauleSelectShare
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AdditionVote2) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AdditionVote2_AdditionVoteWord)(nil),
		(*AdditionVote2_AdditionVotePic)(nil),
		(*AdditionVote2_AdditionVoteDefaule)(nil),
	}
}

// AdditionVoteWord 外露文字类型
type AdditionVoteWord struct {
	Item                 []*AdditionVoteWordItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AdditionVoteWord) Reset()         { *m = AdditionVoteWord{} }
func (m *AdditionVoteWord) String() string { return proto.CompactTextString(m) }
func (*AdditionVoteWord) ProtoMessage()    {}
func (*AdditionVoteWord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{124}
}
func (m *AdditionVoteWord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVoteWord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVoteWord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVoteWord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVoteWord.Merge(m, src)
}
func (m *AdditionVoteWord) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVoteWord) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVoteWord.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVoteWord proto.InternalMessageInfo

func (m *AdditionVoteWord) GetItem() []*AdditionVoteWordItem {
	if m != nil {
		return m.Item
	}
	return nil
}

// AdditionVoteWordItem 外露文字投票详情
type AdditionVoteWordItem struct {
	// 选项索引，从1开始
	OptIdx int32 `protobuf:"varint,1,opt,name=opt_idx,json=optIdx,proto3" json:"opt_idx,omitempty"`
	// 文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 选中状态
	IsVote bool `protobuf:"varint,3,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	// 人数
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// 占比
	Persent float64 `protobuf:"fixed64,5,opt,name=persent,proto3" json:"persent,omitempty"`
	// 是否投票人数最多的选项
	IsMaxOption          bool     `protobuf:"varint,6,opt,name=is_max_option,json=isMaxOption,proto3" json:"is_max_option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionVoteWordItem) Reset()         { *m = AdditionVoteWordItem{} }
func (m *AdditionVoteWordItem) String() string { return proto.CompactTextString(m) }
func (*AdditionVoteWordItem) ProtoMessage()    {}
func (*AdditionVoteWordItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{125}
}
func (m *AdditionVoteWordItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVoteWordItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVoteWordItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVoteWordItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVoteWordItem.Merge(m, src)
}
func (m *AdditionVoteWordItem) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVoteWordItem) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVoteWordItem.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVoteWordItem proto.InternalMessageInfo

func (m *AdditionVoteWordItem) GetOptIdx() int32 {
	if m != nil {
		return m.OptIdx
	}
	return 0
}

func (m *AdditionVoteWordItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionVoteWordItem) GetIsVote() bool {
	if m != nil {
		return m.IsVote
	}
	return false
}

func (m *AdditionVoteWordItem) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AdditionVoteWordItem) GetPersent() float64 {
	if m != nil {
		return m.Persent
	}
	return 0
}

func (m *AdditionVoteWordItem) GetIsMaxOption() bool {
	if m != nil {
		return m.IsMaxOption
	}
	return false
}

// AdditionVotePic 外露图片类型
type AdditionVotePic struct {
	Item                 []*AdditionVotePicItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AdditionVotePic) Reset()         { *m = AdditionVotePic{} }
func (m *AdditionVotePic) String() string { return proto.CompactTextString(m) }
func (*AdditionVotePic) ProtoMessage()    {}
func (*AdditionVotePic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{126}
}
func (m *AdditionVotePic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVotePic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVotePic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVotePic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVotePic.Merge(m, src)
}
func (m *AdditionVotePic) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVotePic) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVotePic.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVotePic proto.InternalMessageInfo

func (m *AdditionVotePic) GetItem() []*AdditionVotePicItem {
	if m != nil {
		return m.Item
	}
	return nil
}

// AdditionVotePicItem 图片投票详情
type AdditionVotePicItem struct {
	// 选项索引，从1开始
	OptIdx int32 `protobuf:"varint,1,opt,name=opt_idx,json=optIdx,proto3" json:"opt_idx,omitempty"`
	// 图片
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 选中状态
	IsVote bool `protobuf:"varint,3,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	// 人数
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// 占比
	Persent float64 `protobuf:"fixed64,5,opt,name=persent,proto3" json:"persent,omitempty"`
	// 标题文案
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 是否投票人数最多的选项
	IsMaxOption          bool     `protobuf:"varint,7,opt,name=is_max_option,json=isMaxOption,proto3" json:"is_max_option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionVotePicItem) Reset()         { *m = AdditionVotePicItem{} }
func (m *AdditionVotePicItem) String() string { return proto.CompactTextString(m) }
func (*AdditionVotePicItem) ProtoMessage()    {}
func (*AdditionVotePicItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{127}
}
func (m *AdditionVotePicItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVotePicItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVotePicItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVotePicItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVotePicItem.Merge(m, src)
}
func (m *AdditionVotePicItem) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVotePicItem) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVotePicItem.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVotePicItem proto.InternalMessageInfo

func (m *AdditionVotePicItem) GetOptIdx() int32 {
	if m != nil {
		return m.OptIdx
	}
	return 0
}

func (m *AdditionVotePicItem) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *AdditionVotePicItem) GetIsVote() bool {
	if m != nil {
		return m.IsVote
	}
	return false
}

func (m *AdditionVotePicItem) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AdditionVotePicItem) GetPersent() float64 {
	if m != nil {
		return m.Persent
	}
	return 0
}

func (m *AdditionVotePicItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdditionVotePicItem) GetIsMaxOption() bool {
	if m != nil {
		return m.IsMaxOption
	}
	return false
}

// AdditionVoteDefaule 外露投票
type AdditionVoteDefaule struct {
	// 图片 多张
	Cover                []string `protobuf:"bytes,1,rep,name=cover,proto3" json:"cover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionVoteDefaule) Reset()         { *m = AdditionVoteDefaule{} }
func (m *AdditionVoteDefaule) String() string { return proto.CompactTextString(m) }
func (*AdditionVoteDefaule) ProtoMessage()    {}
func (*AdditionVoteDefaule) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{128}
}
func (m *AdditionVoteDefaule) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdditionVoteDefaule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdditionVoteDefaule.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdditionVoteDefaule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionVoteDefaule.Merge(m, src)
}
func (m *AdditionVoteDefaule) XXX_Size() int {
	return m.Size()
}
func (m *AdditionVoteDefaule) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionVoteDefaule.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionVoteDefaule proto.InternalMessageInfo

func (m *AdditionVoteDefaule) GetCover() []string {
	if m != nil {
		return m.Cover
	}
	return nil
}

// ModuleItemNull 获取物料失败模块
type ModuleItemNull struct {
	// 图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleItemNull) Reset()         { *m = ModuleItemNull{} }
func (m *ModuleItemNull) String() string { return proto.CompactTextString(m) }
func (*ModuleItemNull) ProtoMessage()    {}
func (*ModuleItemNull) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{129}
}
func (m *ModuleItemNull) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleItemNull) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleItemNull.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleItemNull) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleItemNull.Merge(m, src)
}
func (m *ModuleItemNull) XXX_Size() int {
	return m.Size()
}
func (m *ModuleItemNull) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleItemNull.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleItemNull proto.InternalMessageInfo

func (m *ModuleItemNull) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ModuleItemNull) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// 动态通栏-用户
type ModuleBannerUser struct {
	// 卡片列表
	List                 []*ModuleBannerUserItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ModuleBannerUser) Reset()         { *m = ModuleBannerUser{} }
func (m *ModuleBannerUser) String() string { return proto.CompactTextString(m) }
func (*ModuleBannerUser) ProtoMessage()    {}
func (*ModuleBannerUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{130}
}
func (m *ModuleBannerUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleBannerUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleBannerUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleBannerUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleBannerUser.Merge(m, src)
}
func (m *ModuleBannerUser) XXX_Size() int {
	return m.Size()
}
func (m *ModuleBannerUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleBannerUser.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleBannerUser proto.InternalMessageInfo

func (m *ModuleBannerUser) GetList() []*ModuleBannerUserItem {
	if m != nil {
		return m.List
	}
	return nil
}

// 动态通栏-推荐用户卡
type ModuleBannerUserItem struct {
	// up主头像
	Face string `protobuf:"bytes,1,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,4,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,5,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,6,opt,name=vip,proto3" json:"vip,omitempty"`
	// 标签信息
	Label string `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,8,opt,name=button,proto3" json:"button,omitempty"`
	// 跳转地址
	Uri                  string   `protobuf:"bytes,9,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleBannerUserItem) Reset()         { *m = ModuleBannerUserItem{} }
func (m *ModuleBannerUserItem) String() string { return proto.CompactTextString(m) }
func (*ModuleBannerUserItem) ProtoMessage()    {}
func (*ModuleBannerUserItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{131}
}
func (m *ModuleBannerUserItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleBannerUserItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleBannerUserItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleBannerUserItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleBannerUserItem.Merge(m, src)
}
func (m *ModuleBannerUserItem) XXX_Size() int {
	return m.Size()
}
func (m *ModuleBannerUserItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleBannerUserItem.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleBannerUserItem proto.InternalMessageInfo

func (m *ModuleBannerUserItem) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *ModuleBannerUserItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModuleBannerUserItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ModuleBannerUserItem) GetLiveState() LiveState {
	if m != nil {
		return m.LiveState
	}
	return LiveState_live_none
}

func (m *ModuleBannerUserItem) GetOfficial() *OfficialVerify {
	if m != nil {
		return m.Official
	}
	return nil
}

func (m *ModuleBannerUserItem) GetVip() *VipInfo {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *ModuleBannerUserItem) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ModuleBannerUserItem) GetButton() *AdditionalButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *ModuleBannerUserItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// ModuleLikeUser 动态-点赞用户模块
type ModuleLikeUser struct {
	// 点赞用户
	LikeUsers []*LikeUser `protobuf:"bytes,1,rep,name=like_users,json=likeUsers,proto3" json:"like_users,omitempty"`
	// 文案
	DisplayText          string   `protobuf:"bytes,2,opt,name=display_text,json=displayText,proto3" json:"display_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleLikeUser) Reset()         { *m = ModuleLikeUser{} }
func (m *ModuleLikeUser) String() string { return proto.CompactTextString(m) }
func (*ModuleLikeUser) ProtoMessage()    {}
func (*ModuleLikeUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{132}
}
func (m *ModuleLikeUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleLikeUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleLikeUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleLikeUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleLikeUser.Merge(m, src)
}
func (m *ModuleLikeUser) XXX_Size() int {
	return m.Size()
}
func (m *ModuleLikeUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleLikeUser.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleLikeUser proto.InternalMessageInfo

func (m *ModuleLikeUser) GetLikeUsers() []*LikeUser {
	if m != nil {
		return m.LikeUsers
	}
	return nil
}

func (m *ModuleLikeUser) GetDisplayText() string {
	if m != nil {
		return m.DisplayText
	}
	return ""
}

// LikeUser 点赞用户
type LikeUser struct {
	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// 点击跳转链接
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeUser) Reset()         { *m = LikeUser{} }
func (m *LikeUser) String() string { return proto.CompactTextString(m) }
func (*LikeUser) ProtoMessage()    {}
func (*LikeUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{133}
}
func (m *LikeUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeUser.Merge(m, src)
}
func (m *LikeUser) XXX_Size() int {
	return m.Size()
}
func (m *LikeUser) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeUser.DiscardUnknown(m)
}

var xxx_messageInfo_LikeUser proto.InternalMessageInfo

func (m *LikeUser) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LikeUser) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *LikeUser) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// LikeInfo 点赞拓展信息
type LikeInfo struct {
	// 点赞动画
	Animation *LikeAnimation `protobuf:"bytes,1,opt,name=animation,proto3" json:"animation,omitempty"`
	// 是否点赞
	IsLike               bool     `protobuf:"varint,2,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeInfo) Reset()         { *m = LikeInfo{} }
func (m *LikeInfo) String() string { return proto.CompactTextString(m) }
func (*LikeInfo) ProtoMessage()    {}
func (*LikeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{134}
}
func (m *LikeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeInfo.Merge(m, src)
}
func (m *LikeInfo) XXX_Size() int {
	return m.Size()
}
func (m *LikeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LikeInfo proto.InternalMessageInfo

func (m *LikeInfo) GetAnimation() *LikeAnimation {
	if m != nil {
		return m.Animation
	}
	return nil
}

func (m *LikeInfo) GetIsLike() bool {
	if m != nil {
		return m.IsLike
	}
	return false
}

// LikeAnimation 点赞动画
type LikeAnimation struct {
	// 开始动画
	Begin string `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// 过程动画
	Proc string `protobuf:"bytes,2,opt,name=proc,proto3" json:"proc,omitempty"`
	// 结束动画
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// id
	LikeIconId           int64    `protobuf:"varint,4,opt,name=like_icon_id,json=likeIconId,proto3" json:"like_icon_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeAnimation) Reset()         { *m = LikeAnimation{} }
func (m *LikeAnimation) String() string { return proto.CompactTextString(m) }
func (*LikeAnimation) ProtoMessage()    {}
func (*LikeAnimation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{135}
}
func (m *LikeAnimation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeAnimation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeAnimation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeAnimation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeAnimation.Merge(m, src)
}
func (m *LikeAnimation) XXX_Size() int {
	return m.Size()
}
func (m *LikeAnimation) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeAnimation.DiscardUnknown(m)
}

var xxx_messageInfo_LikeAnimation proto.InternalMessageInfo

func (m *LikeAnimation) GetBegin() string {
	if m != nil {
		return m.Begin
	}
	return ""
}

func (m *LikeAnimation) GetProc() string {
	if m != nil {
		return m.Proc
	}
	return ""
}

func (m *LikeAnimation) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *LikeAnimation) GetLikeIconId() int64 {
	if m != nil {
		return m.LikeIconId
	}
	return 0
}

// ThreePointItem 三点Item
type ThreePointItem struct {
	//类型
	Type ThreePointType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ThreePointType" json:"type,omitempty"`
	// Types that are valid to be assigned to Item:
	//	*ThreePointItem_Default
	//	*ThreePointItem_AutoPlayer
	//	*ThreePointItem_Share
	//	*ThreePointItem_Attention
	//	*ThreePointItem_Wait
	//	*ThreePointItem_Dislike
	//	*ThreePointItem_Favorite
	//	*ThreePointItem_Top
	//	*ThreePointItem_Comment
	//	*ThreePointItem_Hide
	//	*ThreePointItem_TopicIrrelevant
	//	*ThreePointItem_DynEdit
	Item                 isThreePointItem_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ThreePointItem) Reset()         { *m = ThreePointItem{} }
func (m *ThreePointItem) String() string { return proto.CompactTextString(m) }
func (*ThreePointItem) ProtoMessage()    {}
func (*ThreePointItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{136}
}
func (m *ThreePointItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointItem.Merge(m, src)
}
func (m *ThreePointItem) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointItem.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointItem proto.InternalMessageInfo

type isThreePointItem_Item interface {
	isThreePointItem_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ThreePointItem_Default struct {
	Default *ThreePointDefault `protobuf:"bytes,2,opt,name=default,proto3,oneof" json:"default,omitempty"`
}
type ThreePointItem_AutoPlayer struct {
	AutoPlayer *ThreePointAutoPlay `protobuf:"bytes,3,opt,name=auto_player,json=autoPlayer,proto3,oneof" json:"auto_player,omitempty"`
}
type ThreePointItem_Share struct {
	Share *ThreePointShare `protobuf:"bytes,4,opt,name=share,proto3,oneof" json:"share,omitempty"`
}
type ThreePointItem_Attention struct {
	Attention *ThreePointAttention `protobuf:"bytes,5,opt,name=attention,proto3,oneof" json:"attention,omitempty"`
}
type ThreePointItem_Wait struct {
	Wait *ThreePointWait `protobuf:"bytes,6,opt,name=wait,proto3,oneof" json:"wait,omitempty"`
}
type ThreePointItem_Dislike struct {
	Dislike *ThreePointDislike `protobuf:"bytes,7,opt,name=dislike,proto3,oneof" json:"dislike,omitempty"`
}
type ThreePointItem_Favorite struct {
	Favorite *ThreePointFavorite `protobuf:"bytes,8,opt,name=favorite,proto3,oneof" json:"favorite,omitempty"`
}
type ThreePointItem_Top struct {
	Top *ThreePointTop `protobuf:"bytes,9,opt,name=top,proto3,oneof" json:"top,omitempty"`
}
type ThreePointItem_Comment struct {
	Comment *ThreePointComment `protobuf:"bytes,10,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
}
type ThreePointItem_Hide struct {
	Hide *ThreePointHide `protobuf:"bytes,11,opt,name=hide,proto3,oneof" json:"hide,omitempty"`
}
type ThreePointItem_TopicIrrelevant struct {
	TopicIrrelevant *ThreePointTopicIrrelevant `protobuf:"bytes,12,opt,name=topic_irrelevant,json=topicIrrelevant,proto3,oneof" json:"topic_irrelevant,omitempty"`
}
type ThreePointItem_DynEdit struct {
	DynEdit *ThreePointDynEdit `protobuf:"bytes,13,opt,name=dyn_edit,json=dynEdit,proto3,oneof" json:"dyn_edit,omitempty"`
}

func (*ThreePointItem_Default) isThreePointItem_Item()         {}
func (*ThreePointItem_AutoPlayer) isThreePointItem_Item()      {}
func (*ThreePointItem_Share) isThreePointItem_Item()           {}
func (*ThreePointItem_Attention) isThreePointItem_Item()       {}
func (*ThreePointItem_Wait) isThreePointItem_Item()            {}
func (*ThreePointItem_Dislike) isThreePointItem_Item()         {}
func (*ThreePointItem_Favorite) isThreePointItem_Item()        {}
func (*ThreePointItem_Top) isThreePointItem_Item()             {}
func (*ThreePointItem_Comment) isThreePointItem_Item()         {}
func (*ThreePointItem_Hide) isThreePointItem_Item()            {}
func (*ThreePointItem_TopicIrrelevant) isThreePointItem_Item() {}
func (*ThreePointItem_DynEdit) isThreePointItem_Item()         {}

func (m *ThreePointItem) GetItem() isThreePointItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ThreePointItem) GetType() ThreePointType {
	if m != nil {
		return m.Type
	}
	return ThreePointType_tp_none
}

func (m *ThreePointItem) GetDefault() *ThreePointDefault {
	if x, ok := m.GetItem().(*ThreePointItem_Default); ok {
		return x.Default
	}
	return nil
}

func (m *ThreePointItem) GetAutoPlayer() *ThreePointAutoPlay {
	if x, ok := m.GetItem().(*ThreePointItem_AutoPlayer); ok {
		return x.AutoPlayer
	}
	return nil
}

func (m *ThreePointItem) GetShare() *ThreePointShare {
	if x, ok := m.GetItem().(*ThreePointItem_Share); ok {
		return x.Share
	}
	return nil
}

func (m *ThreePointItem) GetAttention() *ThreePointAttention {
	if x, ok := m.GetItem().(*ThreePointItem_Attention); ok {
		return x.Attention
	}
	return nil
}

func (m *ThreePointItem) GetWait() *ThreePointWait {
	if x, ok := m.GetItem().(*ThreePointItem_Wait); ok {
		return x.Wait
	}
	return nil
}

func (m *ThreePointItem) GetDislike() *ThreePointDislike {
	if x, ok := m.GetItem().(*ThreePointItem_Dislike); ok {
		return x.Dislike
	}
	return nil
}

func (m *ThreePointItem) GetFavorite() *ThreePointFavorite {
	if x, ok := m.GetItem().(*ThreePointItem_Favorite); ok {
		return x.Favorite
	}
	return nil
}

func (m *ThreePointItem) GetTop() *ThreePointTop {
	if x, ok := m.GetItem().(*ThreePointItem_Top); ok {
		return x.Top
	}
	return nil
}

func (m *ThreePointItem) GetComment() *ThreePointComment {
	if x, ok := m.GetItem().(*ThreePointItem_Comment); ok {
		return x.Comment
	}
	return nil
}

func (m *ThreePointItem) GetHide() *ThreePointHide {
	if x, ok := m.GetItem().(*ThreePointItem_Hide); ok {
		return x.Hide
	}
	return nil
}

func (m *ThreePointItem) GetTopicIrrelevant() *ThreePointTopicIrrelevant {
	if x, ok := m.GetItem().(*ThreePointItem_TopicIrrelevant); ok {
		return x.TopicIrrelevant
	}
	return nil
}

func (m *ThreePointItem) GetDynEdit() *ThreePointDynEdit {
	if x, ok := m.GetItem().(*ThreePointItem_DynEdit); ok {
		return x.DynEdit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ThreePointItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ThreePointItem_Default)(nil),
		(*ThreePointItem_AutoPlayer)(nil),
		(*ThreePointItem_Share)(nil),
		(*ThreePointItem_Attention)(nil),
		(*ThreePointItem_Wait)(nil),
		(*ThreePointItem_Dislike)(nil),
		(*ThreePointItem_Favorite)(nil),
		(*ThreePointItem_Top)(nil),
		(*ThreePointItem_Comment)(nil),
		(*ThreePointItem_Hide)(nil),
		(*ThreePointItem_TopicIrrelevant)(nil),
		(*ThreePointItem_DynEdit)(nil),
	}
}

// ModuleAuthorBadgeButton 动态列表渲染部分-用户模块-按钮
type ModuleAuthorBadgeButton struct {
	// 图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 状态
	State int32 `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	// 物料ID
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleAuthorBadgeButton) Reset()         { *m = ModuleAuthorBadgeButton{} }
func (m *ModuleAuthorBadgeButton) String() string { return proto.CompactTextString(m) }
func (*ModuleAuthorBadgeButton) ProtoMessage()    {}
func (*ModuleAuthorBadgeButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{137}
}
func (m *ModuleAuthorBadgeButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleAuthorBadgeButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleAuthorBadgeButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleAuthorBadgeButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAuthorBadgeButton.Merge(m, src)
}
func (m *ModuleAuthorBadgeButton) XXX_Size() int {
	return m.Size()
}
func (m *ModuleAuthorBadgeButton) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAuthorBadgeButton.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAuthorBadgeButton proto.InternalMessageInfo

func (m *ModuleAuthorBadgeButton) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ModuleAuthorBadgeButton) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleAuthorBadgeButton) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ModuleAuthorBadgeButton) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ThreePointDefault 三点-默认结构（使用此背景、举报、删除）
type ThreePointDefault struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// id
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// 弹窗提示
	Toast                *ThreePointDefaultToast `protobuf:"bytes,5,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ThreePointDefault) Reset()         { *m = ThreePointDefault{} }
func (m *ThreePointDefault) String() string { return proto.CompactTextString(m) }
func (*ThreePointDefault) ProtoMessage()    {}
func (*ThreePointDefault) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{138}
}
func (m *ThreePointDefault) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointDefault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointDefault.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointDefault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointDefault.Merge(m, src)
}
func (m *ThreePointDefault) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointDefault) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointDefault.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointDefault proto.InternalMessageInfo

func (m *ThreePointDefault) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointDefault) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointDefault) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ThreePointDefault) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ThreePointDefault) GetToast() *ThreePointDefaultToast {
	if m != nil {
		return m.Toast
	}
	return nil
}

// ThreePointDefaultToast 弹窗提示
type ThreePointDefaultToast struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointDefaultToast) Reset()         { *m = ThreePointDefaultToast{} }
func (m *ThreePointDefaultToast) String() string { return proto.CompactTextString(m) }
func (*ThreePointDefaultToast) ProtoMessage()    {}
func (*ThreePointDefaultToast) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{139}
}
func (m *ThreePointDefaultToast) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointDefaultToast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointDefaultToast.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointDefaultToast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointDefaultToast.Merge(m, src)
}
func (m *ThreePointDefaultToast) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointDefaultToast) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointDefaultToast.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointDefaultToast proto.InternalMessageInfo

func (m *ThreePointDefaultToast) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointDefaultToast) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

// ThreePointAutoPlay 三点-自动播放 旧版不维护
type ThreePointAutoPlay struct {
	// open icon
	OpenIcon string `protobuf:"bytes,1,opt,name=open_icon,json=openIcon,proto3" json:"open_icon,omitempty"`
	// 开启时显示文案
	OpenText string `protobuf:"bytes,2,opt,name=open_text,json=openText,proto3" json:"open_text,omitempty"`
	// close icon
	CloseIcon string `protobuf:"bytes,3,opt,name=close_icon,json=closeIcon,proto3" json:"close_icon,omitempty"`
	// 关闭时显示文案
	CloseText string `protobuf:"bytes,4,opt,name=close_text,json=closeText,proto3" json:"close_text,omitempty"`
	// 开启时显示文案v2
	OpenTextV2 string `protobuf:"bytes,5,opt,name=open_text_v2,json=openTextV2,proto3" json:"open_text_v2,omitempty"`
	// 关闭时显示文案v2
	CloseTextV2 string `protobuf:"bytes,6,opt,name=close_text_v2,json=closeTextV2,proto3" json:"close_text_v2,omitempty"`
	// 仅wifi/免流 icon
	OnlyIcon string `protobuf:"bytes,7,opt,name=only_icon,json=onlyIcon,proto3" json:"only_icon,omitempty"`
	// 仅wifi/免流 文案
	OnlyText string `protobuf:"bytes,8,opt,name=only_text,json=onlyText,proto3" json:"only_text,omitempty"`
	// open icon v2
	OpenIconV2 string `protobuf:"bytes,9,opt,name=open_icon_v2,json=openIconV2,proto3" json:"open_icon_v2,omitempty"`
	// close icon v2
	CloseIconV2          string   `protobuf:"bytes,10,opt,name=close_icon_v2,json=closeIconV2,proto3" json:"close_icon_v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointAutoPlay) Reset()         { *m = ThreePointAutoPlay{} }
func (m *ThreePointAutoPlay) String() string { return proto.CompactTextString(m) }
func (*ThreePointAutoPlay) ProtoMessage()    {}
func (*ThreePointAutoPlay) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{140}
}
func (m *ThreePointAutoPlay) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointAutoPlay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointAutoPlay.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointAutoPlay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointAutoPlay.Merge(m, src)
}
func (m *ThreePointAutoPlay) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointAutoPlay) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointAutoPlay.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointAutoPlay proto.InternalMessageInfo

func (m *ThreePointAutoPlay) GetOpenIcon() string {
	if m != nil {
		return m.OpenIcon
	}
	return ""
}

func (m *ThreePointAutoPlay) GetOpenText() string {
	if m != nil {
		return m.OpenText
	}
	return ""
}

func (m *ThreePointAutoPlay) GetCloseIcon() string {
	if m != nil {
		return m.CloseIcon
	}
	return ""
}

func (m *ThreePointAutoPlay) GetCloseText() string {
	if m != nil {
		return m.CloseText
	}
	return ""
}

func (m *ThreePointAutoPlay) GetOpenTextV2() string {
	if m != nil {
		return m.OpenTextV2
	}
	return ""
}

func (m *ThreePointAutoPlay) GetCloseTextV2() string {
	if m != nil {
		return m.CloseTextV2
	}
	return ""
}

func (m *ThreePointAutoPlay) GetOnlyIcon() string {
	if m != nil {
		return m.OnlyIcon
	}
	return ""
}

func (m *ThreePointAutoPlay) GetOnlyText() string {
	if m != nil {
		return m.OnlyText
	}
	return ""
}

func (m *ThreePointAutoPlay) GetOpenIconV2() string {
	if m != nil {
		return m.OpenIconV2
	}
	return ""
}

func (m *ThreePointAutoPlay) GetCloseIconV2() string {
	if m != nil {
		return m.CloseIconV2
	}
	return ""
}

// ThreePointShare 三点-分享
type ThreePointShare struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 分享渠道
	Channel []*ThreePointShareChannel `protobuf:"bytes,3,rep,name=channel,proto3" json:"channel,omitempty"`
	// 分享渠道名
	ChannelName string `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	// 预约卡分享图信息，仅分享有预约信息的动态时存在
	Reserve              *ShareReserve `protobuf:"bytes,5,opt,name=reserve,proto3" json:"reserve,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ThreePointShare) Reset()         { *m = ThreePointShare{} }
func (m *ThreePointShare) String() string { return proto.CompactTextString(m) }
func (*ThreePointShare) ProtoMessage()    {}
func (*ThreePointShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{141}
}
func (m *ThreePointShare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointShare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointShare.Merge(m, src)
}
func (m *ThreePointShare) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointShare) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointShare.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointShare proto.InternalMessageInfo

func (m *ThreePointShare) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointShare) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointShare) GetChannel() []*ThreePointShareChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *ThreePointShare) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ThreePointShare) GetReserve() *ShareReserve {
	if m != nil {
		return m.Reserve
	}
	return nil
}

// ThreePointShareChannel 三点-分享渠道
type ThreePointShareChannel struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 名称
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointShareChannel) Reset()         { *m = ThreePointShareChannel{} }
func (m *ThreePointShareChannel) String() string { return proto.CompactTextString(m) }
func (*ThreePointShareChannel) ProtoMessage()    {}
func (*ThreePointShareChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{142}
}
func (m *ThreePointShareChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointShareChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointShareChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointShareChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointShareChannel.Merge(m, src)
}
func (m *ThreePointShareChannel) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointShareChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointShareChannel.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointShareChannel proto.InternalMessageInfo

func (m *ThreePointShareChannel) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointShareChannel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// ThreePointAttention 三点-关注
type ThreePointAttention struct {
	// attention icon
	AttentionIcon string `protobuf:"bytes,1,opt,name=attention_icon,json=attentionIcon,proto3" json:"attention_icon,omitempty"`
	// 关注时显示的文案
	AttentionText string `protobuf:"bytes,2,opt,name=attention_text,json=attentionText,proto3" json:"attention_text,omitempty"`
	// not attention icon
	NotAttentionIcon string `protobuf:"bytes,3,opt,name=not_attention_icon,json=notAttentionIcon,proto3" json:"not_attention_icon,omitempty"`
	// 未关注时显示的文案
	NotAttentionText string `protobuf:"bytes,4,opt,name=not_attention_text,json=notAttentionText,proto3" json:"not_attention_text,omitempty"`
	// 当前关注状态
	Status               ThreePointAttentionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.ThreePointAttentionStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ThreePointAttention) Reset()         { *m = ThreePointAttention{} }
func (m *ThreePointAttention) String() string { return proto.CompactTextString(m) }
func (*ThreePointAttention) ProtoMessage()    {}
func (*ThreePointAttention) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{143}
}
func (m *ThreePointAttention) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointAttention) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointAttention.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointAttention) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointAttention.Merge(m, src)
}
func (m *ThreePointAttention) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointAttention) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointAttention.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointAttention proto.InternalMessageInfo

func (m *ThreePointAttention) GetAttentionIcon() string {
	if m != nil {
		return m.AttentionIcon
	}
	return ""
}

func (m *ThreePointAttention) GetAttentionText() string {
	if m != nil {
		return m.AttentionText
	}
	return ""
}

func (m *ThreePointAttention) GetNotAttentionIcon() string {
	if m != nil {
		return m.NotAttentionIcon
	}
	return ""
}

func (m *ThreePointAttention) GetNotAttentionText() string {
	if m != nil {
		return m.NotAttentionText
	}
	return ""
}

func (m *ThreePointAttention) GetStatus() ThreePointAttentionStatus {
	if m != nil {
		return m.Status
	}
	return ThreePointAttentionStatus_tp_not_attention
}

// ThreePointWait 三点-稍后在看
type ThreePointWait struct {
	// addition icon
	AdditionIcon string `protobuf:"bytes,1,opt,name=addition_icon,json=additionIcon,proto3" json:"addition_icon,omitempty"`
	// 已添加时的文案
	AdditionText string `protobuf:"bytes,2,opt,name=addition_text,json=additionText,proto3" json:"addition_text,omitempty"`
	// no addition icon
	NoAdditionIcon string `protobuf:"bytes,3,opt,name=no_addition_icon,json=noAdditionIcon,proto3" json:"no_addition_icon,omitempty"`
	// 未添加时的文案
	NoAdditionText string `protobuf:"bytes,4,opt,name=no_addition_text,json=noAdditionText,proto3" json:"no_addition_text,omitempty"`
	// avid
	Id                   int64    `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointWait) Reset()         { *m = ThreePointWait{} }
func (m *ThreePointWait) String() string { return proto.CompactTextString(m) }
func (*ThreePointWait) ProtoMessage()    {}
func (*ThreePointWait) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{144}
}
func (m *ThreePointWait) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointWait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointWait.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointWait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointWait.Merge(m, src)
}
func (m *ThreePointWait) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointWait) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointWait.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointWait proto.InternalMessageInfo

func (m *ThreePointWait) GetAdditionIcon() string {
	if m != nil {
		return m.AdditionIcon
	}
	return ""
}

func (m *ThreePointWait) GetAdditionText() string {
	if m != nil {
		return m.AdditionText
	}
	return ""
}

func (m *ThreePointWait) GetNoAdditionIcon() string {
	if m != nil {
		return m.NoAdditionIcon
	}
	return ""
}

func (m *ThreePointWait) GetNoAdditionText() string {
	if m != nil {
		return m.NoAdditionText
	}
	return ""
}

func (m *ThreePointWait) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ThreePointDislike 三点-不感兴趣
type ThreePointDislike struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointDislike) Reset()         { *m = ThreePointDislike{} }
func (m *ThreePointDislike) String() string { return proto.CompactTextString(m) }
func (*ThreePointDislike) ProtoMessage()    {}
func (*ThreePointDislike) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{145}
}
func (m *ThreePointDislike) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointDislike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointDislike.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointDislike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointDislike.Merge(m, src)
}
func (m *ThreePointDislike) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointDislike) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointDislike.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointDislike proto.InternalMessageInfo

func (m *ThreePointDislike) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointDislike) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// ThreePointFavorite 三点-收藏
type ThreePointFavorite struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 物料ID
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	// 是否订阅
	IsFavourite bool `protobuf:"varint,4,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
	// 取消收藏图标
	CancelIcon string `protobuf:"bytes,5,opt,name=cancel_icon,json=cancelIcon,proto3" json:"cancel_icon,omitempty"`
	// 取消收藏文案
	CancelTitle          string   `protobuf:"bytes,6,opt,name=cancel_title,json=cancelTitle,proto3" json:"cancel_title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointFavorite) Reset()         { *m = ThreePointFavorite{} }
func (m *ThreePointFavorite) String() string { return proto.CompactTextString(m) }
func (*ThreePointFavorite) ProtoMessage()    {}
func (*ThreePointFavorite) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{146}
}
func (m *ThreePointFavorite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointFavorite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointFavorite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointFavorite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointFavorite.Merge(m, src)
}
func (m *ThreePointFavorite) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointFavorite) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointFavorite.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointFavorite proto.InternalMessageInfo

func (m *ThreePointFavorite) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointFavorite) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointFavorite) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ThreePointFavorite) GetIsFavourite() bool {
	if m != nil {
		return m.IsFavourite
	}
	return false
}

func (m *ThreePointFavorite) GetCancelIcon() string {
	if m != nil {
		return m.CancelIcon
	}
	return ""
}

func (m *ThreePointFavorite) GetCancelTitle() string {
	if m != nil {
		return m.CancelTitle
	}
	return ""
}

// ThreePointFavorite 三点-置顶
type ThreePointTop struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 状态
	Type                 TopType  `protobuf:"varint,3,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.TopType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointTop) Reset()         { *m = ThreePointTop{} }
func (m *ThreePointTop) String() string { return proto.CompactTextString(m) }
func (*ThreePointTop) ProtoMessage()    {}
func (*ThreePointTop) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{147}
}
func (m *ThreePointTop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointTop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointTop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointTop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointTop.Merge(m, src)
}
func (m *ThreePointTop) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointTop) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointTop.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointTop proto.InternalMessageInfo

func (m *ThreePointTop) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointTop) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointTop) GetType() TopType {
	if m != nil {
		return m.Type
	}
	return TopType_top_none
}

// ThreePointTopicIrrelevant 三点-与话题无关
type ThreePointTopicIrrelevant struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 点击后toast
	Toast string `protobuf:"bytes,3,opt,name=toast,proto3" json:"toast,omitempty"`
	// 举报话题id
	TopicId int64 `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 举报资源id
	ResId int64 `protobuf:"varint,5,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`
	// 举报资源类型
	ResType int64 `protobuf:"varint,6,opt,name=res_type,json=resType,proto3" json:"res_type,omitempty"`
	// 举报理由
	Reason               string   `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointTopicIrrelevant) Reset()         { *m = ThreePointTopicIrrelevant{} }
func (m *ThreePointTopicIrrelevant) String() string { return proto.CompactTextString(m) }
func (*ThreePointTopicIrrelevant) ProtoMessage()    {}
func (*ThreePointTopicIrrelevant) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{148}
}
func (m *ThreePointTopicIrrelevant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointTopicIrrelevant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointTopicIrrelevant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointTopicIrrelevant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointTopicIrrelevant.Merge(m, src)
}
func (m *ThreePointTopicIrrelevant) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointTopicIrrelevant) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointTopicIrrelevant.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointTopicIrrelevant proto.InternalMessageInfo

func (m *ThreePointTopicIrrelevant) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointTopicIrrelevant) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointTopicIrrelevant) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

func (m *ThreePointTopicIrrelevant) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *ThreePointTopicIrrelevant) GetResId() int64 {
	if m != nil {
		return m.ResId
	}
	return 0
}

func (m *ThreePointTopicIrrelevant) GetResType() int64 {
	if m != nil {
		return m.ResType
	}
	return 0
}

func (m *ThreePointTopicIrrelevant) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ThreePointDynEdit struct {
	// 编辑的动态id
	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 动态转发的原卡id
	OriginId int64 `protobuf:"varint,2,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	// 原卡是否被删除
	IsOriginDeleted      bool     `protobuf:"varint,3,opt,name=is_origin_deleted,json=isOriginDeleted,proto3" json:"is_origin_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointDynEdit) Reset()         { *m = ThreePointDynEdit{} }
func (m *ThreePointDynEdit) String() string { return proto.CompactTextString(m) }
func (*ThreePointDynEdit) ProtoMessage()    {}
func (*ThreePointDynEdit) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{149}
}
func (m *ThreePointDynEdit) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointDynEdit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointDynEdit.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointDynEdit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointDynEdit.Merge(m, src)
}
func (m *ThreePointDynEdit) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointDynEdit) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointDynEdit.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointDynEdit proto.InternalMessageInfo

func (m *ThreePointDynEdit) GetDynId() int64 {
	if m != nil {
		return m.DynId
	}
	return 0
}

func (m *ThreePointDynEdit) GetOriginId() int64 {
	if m != nil {
		return m.OriginId
	}
	return 0
}

func (m *ThreePointDynEdit) GetIsOriginDeleted() bool {
	if m != nil {
		return m.IsOriginDeleted
	}
	return false
}

type ThreePointComment struct {
	// 精选评论区功能
	UpSelection *CommentDetail `protobuf:"bytes,1,opt,name=up_selection,json=upSelection,proto3" json:"up_selection,omitempty"`
	// up关闭评论区功能
	UpClose *CommentDetail `protobuf:"bytes,2,opt,name=up_close,json=upClose,proto3" json:"up_close,omitempty"`
	// icon
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointComment) Reset()         { *m = ThreePointComment{} }
func (m *ThreePointComment) String() string { return proto.CompactTextString(m) }
func (*ThreePointComment) ProtoMessage()    {}
func (*ThreePointComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{150}
}
func (m *ThreePointComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointComment.Merge(m, src)
}
func (m *ThreePointComment) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointComment) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointComment.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointComment proto.InternalMessageInfo

func (m *ThreePointComment) GetUpSelection() *CommentDetail {
	if m != nil {
		return m.UpSelection
	}
	return nil
}

func (m *ThreePointComment) GetUpClose() *CommentDetail {
	if m != nil {
		return m.UpClose
	}
	return nil
}

func (m *ThreePointComment) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointComment) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ThreePointHide struct {
	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 弹窗交互
	Interactive *ThreePointHideInteractive `protobuf:"bytes,3,opt,name=interactive,proto3" json:"interactive,omitempty"`
	// 屏蔽接口请求参数 fid
	BlookFid int64 `protobuf:"varint,4,opt,name=blook_fid,json=blookFid,proto3" json:"blook_fid,omitempty"`
	// 屏蔽接口请求参数 type
	BlookType            string   `protobuf:"bytes,5,opt,name=blook_type,json=blookType,proto3" json:"blook_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointHide) Reset()         { *m = ThreePointHide{} }
func (m *ThreePointHide) String() string { return proto.CompactTextString(m) }
func (*ThreePointHide) ProtoMessage()    {}
func (*ThreePointHide) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{151}
}
func (m *ThreePointHide) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointHide) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointHide.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointHide) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointHide.Merge(m, src)
}
func (m *ThreePointHide) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointHide) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointHide.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointHide proto.InternalMessageInfo

func (m *ThreePointHide) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ThreePointHide) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointHide) GetInteractive() *ThreePointHideInteractive {
	if m != nil {
		return m.Interactive
	}
	return nil
}

func (m *ThreePointHide) GetBlookFid() int64 {
	if m != nil {
		return m.BlookFid
	}
	return 0
}

func (m *ThreePointHide) GetBlookType() string {
	if m != nil {
		return m.BlookType
	}
	return ""
}

type ThreePointHideInteractive struct {
	// 弹窗标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 弹窗确认文案
	Confirm string `protobuf:"bytes,2,opt,name=confirm,proto3" json:"confirm,omitempty"`
	// 弹窗取消文案
	Cancel string `protobuf:"bytes,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
	// toast提示文案
	Toast                string   `protobuf:"bytes,4,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThreePointHideInteractive) Reset()         { *m = ThreePointHideInteractive{} }
func (m *ThreePointHideInteractive) String() string { return proto.CompactTextString(m) }
func (*ThreePointHideInteractive) ProtoMessage()    {}
func (*ThreePointHideInteractive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{152}
}
func (m *ThreePointHideInteractive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThreePointHideInteractive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThreePointHideInteractive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThreePointHideInteractive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreePointHideInteractive.Merge(m, src)
}
func (m *ThreePointHideInteractive) XXX_Size() int {
	return m.Size()
}
func (m *ThreePointHideInteractive) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreePointHideInteractive.DiscardUnknown(m)
}

var xxx_messageInfo_ThreePointHideInteractive proto.InternalMessageInfo

func (m *ThreePointHideInteractive) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ThreePointHideInteractive) GetConfirm() string {
	if m != nil {
		return m.Confirm
	}
	return ""
}

func (m *ThreePointHideInteractive) GetCancel() string {
	if m != nil {
		return m.Cancel
	}
	return ""
}

func (m *ThreePointHideInteractive) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

type CommentDetail struct {
	// 该功能能不能用
	CanModify bool `protobuf:"varint,1,opt,name=can_modify,json=canModify,proto3" json:"can_modify,omitempty"`
	// up关闭评论区功能 1允许关闭 0允许开放
	// 精选评论区功能 1允许停止评论精选 0允许评论精选
	Status               int64    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommentDetail) Reset()         { *m = CommentDetail{} }
func (m *CommentDetail) String() string { return proto.CompactTextString(m) }
func (*CommentDetail) ProtoMessage()    {}
func (*CommentDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{153}
}
func (m *CommentDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommentDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommentDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommentDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentDetail.Merge(m, src)
}
func (m *CommentDetail) XXX_Size() int {
	return m.Size()
}
func (m *CommentDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CommentDetail proto.InternalMessageInfo

func (m *CommentDetail) GetCanModify() bool {
	if m != nil {
		return m.CanModify
	}
	return false
}

func (m *CommentDetail) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

// Weight 提权样式
type Weight struct {
	// 提权展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 下拉框内容
	Items []*WeightItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// icon
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Weight) Reset()         { *m = Weight{} }
func (m *Weight) String() string { return proto.CompactTextString(m) }
func (*Weight) ProtoMessage()    {}
func (*Weight) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{154}
}
func (m *Weight) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Weight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Weight.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Weight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weight.Merge(m, src)
}
func (m *Weight) XXX_Size() int {
	return m.Size()
}
func (m *Weight) XXX_DiscardUnknown() {
	xxx_messageInfo_Weight.DiscardUnknown(m)
}

var xxx_messageInfo_Weight proto.InternalMessageInfo

func (m *Weight) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Weight) GetItems() []*WeightItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Weight) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// Weight 提权样式
type WeightItem struct {
	// 类型
	Type WeightType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.WeightType" json:"type,omitempty"`
	// Types that are valid to be assigned to Item:
	//	*WeightItem_Button
	//	*WeightItem_Dislike
	Item                 isWeightItem_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WeightItem) Reset()         { *m = WeightItem{} }
func (m *WeightItem) String() string { return proto.CompactTextString(m) }
func (*WeightItem) ProtoMessage()    {}
func (*WeightItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{155}
}
func (m *WeightItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeightItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeightItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WeightItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightItem.Merge(m, src)
}
func (m *WeightItem) XXX_Size() int {
	return m.Size()
}
func (m *WeightItem) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightItem.DiscardUnknown(m)
}

var xxx_messageInfo_WeightItem proto.InternalMessageInfo

type isWeightItem_Item interface {
	isWeightItem_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type WeightItem_Button struct {
	Button *WeightButton `protobuf:"bytes,2,opt,name=button,proto3,oneof" json:"button,omitempty"`
}
type WeightItem_Dislike struct {
	Dislike *WeightDislike `protobuf:"bytes,3,opt,name=dislike,proto3,oneof" json:"dislike,omitempty"`
}

func (*WeightItem_Button) isWeightItem_Item()  {}
func (*WeightItem_Dislike) isWeightItem_Item() {}

func (m *WeightItem) GetItem() isWeightItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *WeightItem) GetType() WeightType {
	if m != nil {
		return m.Type
	}
	return WeightType_weight_none
}

func (m *WeightItem) GetButton() *WeightButton {
	if x, ok := m.GetItem().(*WeightItem_Button); ok {
		return x.Button
	}
	return nil
}

func (m *WeightItem) GetDislike() *WeightDislike {
	if x, ok := m.GetItem().(*WeightItem_Dislike); ok {
		return x.Dislike
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WeightItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WeightItem_Button)(nil),
		(*WeightItem_Dislike)(nil),
	}
}

// WeightDislike 提权不感兴趣
type WeightDislike struct {
	// 负反馈业务类型 作为客户端调用负反馈接口的参数
	FeedBackType string `protobuf:"bytes,1,opt,name=feed_back_type,json=feedBackType,proto3" json:"feed_back_type,omitempty"`
	// 展示文案
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeightDislike) Reset()         { *m = WeightDislike{} }
func (m *WeightDislike) String() string { return proto.CompactTextString(m) }
func (*WeightDislike) ProtoMessage()    {}
func (*WeightDislike) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{156}
}
func (m *WeightDislike) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeightDislike) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeightDislike.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WeightDislike) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightDislike.Merge(m, src)
}
func (m *WeightDislike) XXX_Size() int {
	return m.Size()
}
func (m *WeightDislike) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightDislike.DiscardUnknown(m)
}

var xxx_messageInfo_WeightDislike proto.InternalMessageInfo

func (m *WeightDislike) GetFeedBackType() string {
	if m != nil {
		return m.FeedBackType
	}
	return ""
}

func (m *WeightDislike) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// WeightDefault 热门默认跳转按钮
type WeightButton struct {
	JumpUrl string `protobuf:"bytes,1,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 展示文案
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeightButton) Reset()         { *m = WeightButton{} }
func (m *WeightButton) String() string { return proto.CompactTextString(m) }
func (*WeightButton) ProtoMessage()    {}
func (*WeightButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{157}
}
func (m *WeightButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeightButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeightButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WeightButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightButton.Merge(m, src)
}
func (m *WeightButton) XXX_Size() int {
	return m.Size()
}
func (m *WeightButton) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightButton.DiscardUnknown(m)
}

var xxx_messageInfo_WeightButton proto.InternalMessageInfo

func (m *WeightButton) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *WeightButton) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// ModuleComment 评论外露模块
type ModuleComment struct {
	CmtShowItem          []*CmtShowItem `protobuf:"bytes,1,rep,name=cmtShowItem,proto3" json:"cmtShowItem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ModuleComment) Reset()         { *m = ModuleComment{} }
func (m *ModuleComment) String() string { return proto.CompactTextString(m) }
func (*ModuleComment) ProtoMessage()    {}
func (*ModuleComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{158}
}
func (m *ModuleComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleComment.Merge(m, src)
}
func (m *ModuleComment) XXX_Size() int {
	return m.Size()
}
func (m *ModuleComment) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleComment.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleComment proto.InternalMessageInfo

func (m *ModuleComment) GetCmtShowItem() []*CmtShowItem {
	if m != nil {
		return m.CmtShowItem
	}
	return nil
}

// CmtShowItem 评论外露展示项
type CmtShowItem struct {
	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 评论内容
	Comment              string   `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmtShowItem) Reset()         { *m = CmtShowItem{} }
func (m *CmtShowItem) String() string { return proto.CompactTextString(m) }
func (*CmtShowItem) ProtoMessage()    {}
func (*CmtShowItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{159}
}
func (m *CmtShowItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CmtShowItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CmtShowItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CmtShowItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmtShowItem.Merge(m, src)
}
func (m *CmtShowItem) XXX_Size() int {
	return m.Size()
}
func (m *CmtShowItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CmtShowItem.DiscardUnknown(m)
}

var xxx_messageInfo_CmtShowItem proto.InternalMessageInfo

func (m *CmtShowItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CmtShowItem) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

func (m *CmtShowItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *CmtShowItem) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type DynAdditionCommonFollowReq struct {
	Status               AdditionalButtonStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
	DynId                string                 `protobuf:"bytes,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	CardType             string                 `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DynAdditionCommonFollowReq) Reset()         { *m = DynAdditionCommonFollowReq{} }
func (m *DynAdditionCommonFollowReq) String() string { return proto.CompactTextString(m) }
func (*DynAdditionCommonFollowReq) ProtoMessage()    {}
func (*DynAdditionCommonFollowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{160}
}
func (m *DynAdditionCommonFollowReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAdditionCommonFollowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAdditionCommonFollowReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAdditionCommonFollowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAdditionCommonFollowReq.Merge(m, src)
}
func (m *DynAdditionCommonFollowReq) XXX_Size() int {
	return m.Size()
}
func (m *DynAdditionCommonFollowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAdditionCommonFollowReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynAdditionCommonFollowReq proto.InternalMessageInfo

func (m *DynAdditionCommonFollowReq) GetStatus() AdditionalButtonStatus {
	if m != nil {
		return m.Status
	}
	return AdditionalButtonStatus_none
}

func (m *DynAdditionCommonFollowReq) GetDynId() string {
	if m != nil {
		return m.DynId
	}
	return ""
}

func (m *DynAdditionCommonFollowReq) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

type DynAdditionCommonFollowReply struct {
	Status               AdditionalButtonStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DynAdditionCommonFollowReply) Reset()         { *m = DynAdditionCommonFollowReply{} }
func (m *DynAdditionCommonFollowReply) String() string { return proto.CompactTextString(m) }
func (*DynAdditionCommonFollowReply) ProtoMessage()    {}
func (*DynAdditionCommonFollowReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{161}
}
func (m *DynAdditionCommonFollowReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAdditionCommonFollowReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAdditionCommonFollowReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAdditionCommonFollowReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAdditionCommonFollowReply.Merge(m, src)
}
func (m *DynAdditionCommonFollowReply) XXX_Size() int {
	return m.Size()
}
func (m *DynAdditionCommonFollowReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAdditionCommonFollowReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynAdditionCommonFollowReply proto.InternalMessageInfo

func (m *DynAdditionCommonFollowReply) GetStatus() AdditionalButtonStatus {
	if m != nil {
		return m.Status
	}
	return AdditionalButtonStatus_none
}

type DynThumbReq struct {
	// 用户uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 动态id
	DynId string `protobuf:"bytes,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 动态类型（透传extend中的dyn_type）
	DynType int64 `protobuf:"varint,3,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid string `protobuf:"bytes,4,opt,name=rid,proto3" json:"rid,omitempty"`
	// 点赞类型
	Type                 ThumbType `protobuf:"varint,5,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ThumbType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DynThumbReq) Reset()         { *m = DynThumbReq{} }
func (m *DynThumbReq) String() string { return proto.CompactTextString(m) }
func (*DynThumbReq) ProtoMessage()    {}
func (*DynThumbReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{162}
}
func (m *DynThumbReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynThumbReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynThumbReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynThumbReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynThumbReq.Merge(m, src)
}
func (m *DynThumbReq) XXX_Size() int {
	return m.Size()
}
func (m *DynThumbReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynThumbReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynThumbReq proto.InternalMessageInfo

func (m *DynThumbReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DynThumbReq) GetDynId() string {
	if m != nil {
		return m.DynId
	}
	return ""
}

func (m *DynThumbReq) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *DynThumbReq) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *DynThumbReq) GetType() ThumbType {
	if m != nil {
		return m.Type
	}
	return ThumbType_cancel
}

type DynFakeCardReq struct {
	//卡片内容json string
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynFakeCardReq) Reset()         { *m = DynFakeCardReq{} }
func (m *DynFakeCardReq) String() string { return proto.CompactTextString(m) }
func (*DynFakeCardReq) ProtoMessage()    {}
func (*DynFakeCardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{163}
}
func (m *DynFakeCardReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynFakeCardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynFakeCardReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynFakeCardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynFakeCardReq.Merge(m, src)
}
func (m *DynFakeCardReq) XXX_Size() int {
	return m.Size()
}
func (m *DynFakeCardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynFakeCardReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynFakeCardReq proto.InternalMessageInfo

func (m *DynFakeCardReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type DynFakeCardReply struct {
	// 动态卡片
	Item                 *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynFakeCardReply) Reset()         { *m = DynFakeCardReply{} }
func (m *DynFakeCardReply) String() string { return proto.CompactTextString(m) }
func (*DynFakeCardReply) ProtoMessage()    {}
func (*DynFakeCardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{164}
}
func (m *DynFakeCardReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynFakeCardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynFakeCardReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynFakeCardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynFakeCardReply.Merge(m, src)
}
func (m *DynFakeCardReply) XXX_Size() int {
	return m.Size()
}
func (m *DynFakeCardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynFakeCardReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynFakeCardReply proto.InternalMessageInfo

func (m *DynFakeCardReply) GetItem() *DynamicItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type DynRcmdUpExchangeReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DislikeTs            int64    `protobuf:"varint,2,opt,name=dislikeTs,proto3" json:"dislikeTs,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynRcmdUpExchangeReq) Reset()         { *m = DynRcmdUpExchangeReq{} }
func (m *DynRcmdUpExchangeReq) String() string { return proto.CompactTextString(m) }
func (*DynRcmdUpExchangeReq) ProtoMessage()    {}
func (*DynRcmdUpExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{165}
}
func (m *DynRcmdUpExchangeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRcmdUpExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRcmdUpExchangeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRcmdUpExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRcmdUpExchangeReq.Merge(m, src)
}
func (m *DynRcmdUpExchangeReq) XXX_Size() int {
	return m.Size()
}
func (m *DynRcmdUpExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRcmdUpExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynRcmdUpExchangeReq proto.InternalMessageInfo

func (m *DynRcmdUpExchangeReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DynRcmdUpExchangeReq) GetDislikeTs() int64 {
	if m != nil {
		return m.DislikeTs
	}
	return 0
}

func (m *DynRcmdUpExchangeReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type DynRcmdUpExchangeReply struct {
	// 无关注推荐
	Unfollow             *Unfollow `protobuf:"bytes,1,opt,name=unfollow,proto3" json:"unfollow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DynRcmdUpExchangeReply) Reset()         { *m = DynRcmdUpExchangeReply{} }
func (m *DynRcmdUpExchangeReply) String() string { return proto.CompactTextString(m) }
func (*DynRcmdUpExchangeReply) ProtoMessage()    {}
func (*DynRcmdUpExchangeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{166}
}
func (m *DynRcmdUpExchangeReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRcmdUpExchangeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRcmdUpExchangeReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRcmdUpExchangeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRcmdUpExchangeReply.Merge(m, src)
}
func (m *DynRcmdUpExchangeReply) XXX_Size() int {
	return m.Size()
}
func (m *DynRcmdUpExchangeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRcmdUpExchangeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynRcmdUpExchangeReply proto.InternalMessageInfo

func (m *DynRcmdUpExchangeReply) GetUnfollow() *Unfollow {
	if m != nil {
		return m.Unfollow
	}
	return nil
}

// DynAllPersonalReq 最近访问-个人feed流列表-请求参数
type DynAllPersonalReq struct {
	// 被访问者的 UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 偏移量 第一页可传空
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 标明下拉几次
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 是否是预加载 默认是1；客户端预加载。1：是预加载，不更新已读进度，不会影响小红点；0：非预加载，更新已读进度
	IsPreload int32 `protobuf:"varint,4,opt,name=is_preload,json=isPreload,proto3" json:"is_preload,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,7,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynAllPersonalReq) Reset()         { *m = DynAllPersonalReq{} }
func (m *DynAllPersonalReq) String() string { return proto.CompactTextString(m) }
func (*DynAllPersonalReq) ProtoMessage()    {}
func (*DynAllPersonalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{167}
}
func (m *DynAllPersonalReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAllPersonalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAllPersonalReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAllPersonalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAllPersonalReq.Merge(m, src)
}
func (m *DynAllPersonalReq) XXX_Size() int {
	return m.Size()
}
func (m *DynAllPersonalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAllPersonalReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynAllPersonalReq proto.InternalMessageInfo

func (m *DynAllPersonalReq) GetHostUid() int64 {
	if m != nil {
		return m.HostUid
	}
	return 0
}

func (m *DynAllPersonalReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynAllPersonalReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynAllPersonalReq) GetIsPreload() int32 {
	if m != nil {
		return m.IsPreload
	}
	return 0
}

func (m *DynAllPersonalReq) GetPlayurlParam() *PlayurlParam {
	if m != nil {
		return m.PlayurlParam
	}
	return nil
}

func (m *DynAllPersonalReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynAllPersonalReq) GetFootprint() string {
	if m != nil {
		return m.Footprint
	}
	return ""
}

func (m *DynAllPersonalReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynAllPersonalReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

// DynAllPersonalReply 最近访问-个人feed流列表 返回值
type DynAllPersonalReply struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移量
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 已读进度
	ReadOffset string `protobuf:"bytes,4,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	// 顶部预约卡
	AdditionUp           *TopAdditionUP `protobuf:"bytes,6,opt,name=addition_up,json=additionUp,proto3" json:"addition_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynAllPersonalReply) Reset()         { *m = DynAllPersonalReply{} }
func (m *DynAllPersonalReply) String() string { return proto.CompactTextString(m) }
func (*DynAllPersonalReply) ProtoMessage()    {}
func (*DynAllPersonalReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{168}
}
func (m *DynAllPersonalReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAllPersonalReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAllPersonalReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAllPersonalReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAllPersonalReply.Merge(m, src)
}
func (m *DynAllPersonalReply) XXX_Size() int {
	return m.Size()
}
func (m *DynAllPersonalReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAllPersonalReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynAllPersonalReply proto.InternalMessageInfo

func (m *DynAllPersonalReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DynAllPersonalReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *DynAllPersonalReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *DynAllPersonalReply) GetReadOffset() string {
	if m != nil {
		return m.ReadOffset
	}
	return ""
}

func (m *DynAllPersonalReply) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *DynAllPersonalReply) GetAdditionUp() *TopAdditionUP {
	if m != nil {
		return m.AdditionUp
	}
	return nil
}

// 顶部预约卡
type TopAdditionUP struct {
	// 预约卡
	Up []*AdditionUP `protobuf:"bytes,1,rep,name=up,proto3" json:"up,omitempty"`
	// 折叠数量，大于多少个进行折叠
	HasFold              int32    `protobuf:"varint,2,opt,name=has_fold,json=hasFold,proto3" json:"has_fold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopAdditionUP) Reset()         { *m = TopAdditionUP{} }
func (m *TopAdditionUP) String() string { return proto.CompactTextString(m) }
func (*TopAdditionUP) ProtoMessage()    {}
func (*TopAdditionUP) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{169}
}
func (m *TopAdditionUP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopAdditionUP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopAdditionUP.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopAdditionUP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopAdditionUP.Merge(m, src)
}
func (m *TopAdditionUP) XXX_Size() int {
	return m.Size()
}
func (m *TopAdditionUP) XXX_DiscardUnknown() {
	xxx_messageInfo_TopAdditionUP.DiscardUnknown(m)
}

var xxx_messageInfo_TopAdditionUP proto.InternalMessageInfo

func (m *TopAdditionUP) GetUp() []*AdditionUP {
	if m != nil {
		return m.Up
	}
	return nil
}

func (m *TopAdditionUP) GetHasFold() int32 {
	if m != nil {
		return m.HasFold
	}
	return 0
}

// DynAllUpdOffsetReq 最近访问-标记已读 请求参数
type DynAllUpdOffsetReq struct {
	// 被访问者的UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 用户已读进度
	ReadOffset string `protobuf:"bytes,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 服务端生成的透传上报字段
	Footprint            string   `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynAllUpdOffsetReq) Reset()         { *m = DynAllUpdOffsetReq{} }
func (m *DynAllUpdOffsetReq) String() string { return proto.CompactTextString(m) }
func (*DynAllUpdOffsetReq) ProtoMessage()    {}
func (*DynAllUpdOffsetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{170}
}
func (m *DynAllUpdOffsetReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynAllUpdOffsetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynAllUpdOffsetReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynAllUpdOffsetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynAllUpdOffsetReq.Merge(m, src)
}
func (m *DynAllUpdOffsetReq) XXX_Size() int {
	return m.Size()
}
func (m *DynAllUpdOffsetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynAllUpdOffsetReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynAllUpdOffsetReq proto.InternalMessageInfo

func (m *DynAllUpdOffsetReq) GetHostUid() int64 {
	if m != nil {
		return m.HostUid
	}
	return 0
}

func (m *DynAllUpdOffsetReq) GetReadOffset() string {
	if m != nil {
		return m.ReadOffset
	}
	return ""
}

func (m *DynAllUpdOffsetReq) GetFootprint() string {
	if m != nil {
		return m.Footprint
	}
	return ""
}

type DynVoteReq struct {
	// 投票ID
	VoteId int64 `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	// 选项索引数组
	Votes []int64 `protobuf:"varint,2,rep,packed,name=votes,proto3" json:"votes,omitempty"`
	// 状态
	Status VoteStatus `protobuf:"varint,3,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.VoteStatus" json:"status,omitempty"`
	// 动态ID
	DynamicId string `protobuf:"bytes,4,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 是否分享
	Share                bool     `protobuf:"varint,5,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynVoteReq) Reset()         { *m = DynVoteReq{} }
func (m *DynVoteReq) String() string { return proto.CompactTextString(m) }
func (*DynVoteReq) ProtoMessage()    {}
func (*DynVoteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{171}
}
func (m *DynVoteReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVoteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVoteReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVoteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVoteReq.Merge(m, src)
}
func (m *DynVoteReq) XXX_Size() int {
	return m.Size()
}
func (m *DynVoteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVoteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynVoteReq proto.InternalMessageInfo

func (m *DynVoteReq) GetVoteId() int64 {
	if m != nil {
		return m.VoteId
	}
	return 0
}

func (m *DynVoteReq) GetVotes() []int64 {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *DynVoteReq) GetStatus() VoteStatus {
	if m != nil {
		return m.Status
	}
	return VoteStatus_normal
}

func (m *DynVoteReq) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *DynVoteReq) GetShare() bool {
	if m != nil {
		return m.Share
	}
	return false
}

type DynVoteReply struct {
	// 投票详情
	Item *AdditionVote2 `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// 投票操作返回状态
	Toast                string   `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynVoteReply) Reset()         { *m = DynVoteReply{} }
func (m *DynVoteReply) String() string { return proto.CompactTextString(m) }
func (*DynVoteReply) ProtoMessage()    {}
func (*DynVoteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{172}
}
func (m *DynVoteReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynVoteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynVoteReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynVoteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynVoteReply.Merge(m, src)
}
func (m *DynVoteReply) XXX_Size() int {
	return m.Size()
}
func (m *DynVoteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynVoteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynVoteReply proto.InternalMessageInfo

func (m *DynVoteReply) GetItem() *AdditionVote2 {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *DynVoteReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

// 关注关系
type Relation struct {
	// 关注状态
	Status RelationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.RelationStatus" json:"status,omitempty"`
	// 关注
	IsFollow int32 `protobuf:"varint,2,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	// 被关注
	IsFollowed int32 `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	// 文案
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Relation) Reset()         { *m = Relation{} }
func (m *Relation) String() string { return proto.CompactTextString(m) }
func (*Relation) ProtoMessage()    {}
func (*Relation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{173}
}
func (m *Relation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Relation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Relation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Relation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Relation.Merge(m, src)
}
func (m *Relation) XXX_Size() int {
	return m.Size()
}
func (m *Relation) XXX_DiscardUnknown() {
	xxx_messageInfo_Relation.DiscardUnknown(m)
}

var xxx_messageInfo_Relation proto.InternalMessageInfo

func (m *Relation) GetStatus() RelationStatus {
	if m != nil {
		return m.Status
	}
	return RelationStatus_relation_status_none
}

func (m *Relation) GetIsFollow() int32 {
	if m != nil {
		return m.IsFollow
	}
	return 0
}

func (m *Relation) GetIsFollowed() int32 {
	if m != nil {
		return m.IsFollowed
	}
	return 0
}

func (m *Relation) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type MixUpListLiveItem struct {
	// 直播状态，0未直播 1直播中
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 房间号
	RoomId int64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 跳转地址
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MixUpListLiveItem) Reset()         { *m = MixUpListLiveItem{} }
func (m *MixUpListLiveItem) String() string { return proto.CompactTextString(m) }
func (*MixUpListLiveItem) ProtoMessage()    {}
func (*MixUpListLiveItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{174}
}
func (m *MixUpListLiveItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MixUpListLiveItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MixUpListLiveItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MixUpListLiveItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixUpListLiveItem.Merge(m, src)
}
func (m *MixUpListLiveItem) XXX_Size() int {
	return m.Size()
}
func (m *MixUpListLiveItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MixUpListLiveItem.DiscardUnknown(m)
}

var xxx_messageInfo_MixUpListLiveItem proto.InternalMessageInfo

func (m *MixUpListLiveItem) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *MixUpListLiveItem) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *MixUpListLiveItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// 查看更多-列表单条数据
type MixUpListItem struct {
	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 特别关注，0否 1是
	SpecialAttention int32 `protobuf:"varint,2,opt,name=special_attention,json=specialAttention,proto3" json:"special_attention,omitempty"`
	// 小红点状态，0没有 1有
	ReddotState int32 `protobuf:"varint,3,opt,name=reddot_state,json=reddotState,proto3" json:"reddot_state,omitempty"`
	// 直播信息
	LiveInfo *MixUpListLiveItem `protobuf:"bytes,4,opt,name=live_info,json=liveInfo,proto3" json:"live_info,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,6,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,9,opt,name=relation,proto3" json:"relation,omitempty"`
	// 是否是首映中，0非首映 1首映
	PremiereState int32 `protobuf:"varint,10,opt,name=premiere_state,json=premiereState,proto3" json:"premiere_state,omitempty"`
	// url跳转地址（目前只有首映类型会返回）
	Uri                  string   `protobuf:"bytes,11,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MixUpListItem) Reset()         { *m = MixUpListItem{} }
func (m *MixUpListItem) String() string { return proto.CompactTextString(m) }
func (*MixUpListItem) ProtoMessage()    {}
func (*MixUpListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{175}
}
func (m *MixUpListItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MixUpListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MixUpListItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MixUpListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MixUpListItem.Merge(m, src)
}
func (m *MixUpListItem) XXX_Size() int {
	return m.Size()
}
func (m *MixUpListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MixUpListItem.DiscardUnknown(m)
}

var xxx_messageInfo_MixUpListItem proto.InternalMessageInfo

func (m *MixUpListItem) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MixUpListItem) GetSpecialAttention() int32 {
	if m != nil {
		return m.SpecialAttention
	}
	return 0
}

func (m *MixUpListItem) GetReddotState() int32 {
	if m != nil {
		return m.ReddotState
	}
	return 0
}

func (m *MixUpListItem) GetLiveInfo() *MixUpListLiveItem {
	if m != nil {
		return m.LiveInfo
	}
	return nil
}

func (m *MixUpListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MixUpListItem) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *MixUpListItem) GetOfficial() *OfficialVerify {
	if m != nil {
		return m.Official
	}
	return nil
}

func (m *MixUpListItem) GetVip() *VipInfo {
	if m != nil {
		return m.Vip
	}
	return nil
}

func (m *MixUpListItem) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *MixUpListItem) GetPremiereState() int32 {
	if m != nil {
		return m.PremiereState
	}
	return 0
}

func (m *MixUpListItem) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// 查看更多-请求
type DynMixUpListViewMoreReq struct {
	SortType             int32    `protobuf:"varint,1,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynMixUpListViewMoreReq) Reset()         { *m = DynMixUpListViewMoreReq{} }
func (m *DynMixUpListViewMoreReq) String() string { return proto.CompactTextString(m) }
func (*DynMixUpListViewMoreReq) ProtoMessage()    {}
func (*DynMixUpListViewMoreReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{176}
}
func (m *DynMixUpListViewMoreReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynMixUpListViewMoreReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynMixUpListViewMoreReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynMixUpListViewMoreReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynMixUpListViewMoreReq.Merge(m, src)
}
func (m *DynMixUpListViewMoreReq) XXX_Size() int {
	return m.Size()
}
func (m *DynMixUpListViewMoreReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynMixUpListViewMoreReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynMixUpListViewMoreReq proto.InternalMessageInfo

func (m *DynMixUpListViewMoreReq) GetSortType() int32 {
	if m != nil {
		return m.SortType
	}
	return 0
}

// 排序类型
type SortType struct {
	SortType             int32    `protobuf:"varint,1,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	SortTypeName         string   `protobuf:"bytes,2,opt,name=sort_type_name,json=sortTypeName,proto3" json:"sort_type_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortType) Reset()         { *m = SortType{} }
func (m *SortType) String() string { return proto.CompactTextString(m) }
func (*SortType) ProtoMessage()    {}
func (*SortType) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{177}
}
func (m *SortType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SortType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SortType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SortType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortType.Merge(m, src)
}
func (m *SortType) XXX_Size() int {
	return m.Size()
}
func (m *SortType) XXX_DiscardUnknown() {
	xxx_messageInfo_SortType.DiscardUnknown(m)
}

var xxx_messageInfo_SortType proto.InternalMessageInfo

func (m *SortType) GetSortType() int32 {
	if m != nil {
		return m.SortType
	}
	return 0
}

func (m *SortType) GetSortTypeName() string {
	if m != nil {
		return m.SortTypeName
	}
	return ""
}

// 查看更多-列表返回
type DynMixUpListViewMoreReply struct {
	Items             []*MixUpListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	SearchDefaultText string           `protobuf:"bytes,2,opt,name=search_default_text,json=searchDefaultText,proto3" json:"search_default_text,omitempty"`
	// 排序类型列表
	SortTypes []*SortType `protobuf:"bytes,3,rep,name=sort_types,json=sortTypes,proto3" json:"sort_types,omitempty"`
	// 是否展示更多的排序策略
	ShowMoreSortTypes bool `protobuf:"varint,4,opt,name=show_more_sort_types,json=showMoreSortTypes,proto3" json:"show_more_sort_types,omitempty"`
	// 默认排序策略
	DefaultSortType      int32    `protobuf:"varint,5,opt,name=default_sort_type,json=defaultSortType,proto3" json:"default_sort_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynMixUpListViewMoreReply) Reset()         { *m = DynMixUpListViewMoreReply{} }
func (m *DynMixUpListViewMoreReply) String() string { return proto.CompactTextString(m) }
func (*DynMixUpListViewMoreReply) ProtoMessage()    {}
func (*DynMixUpListViewMoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{178}
}
func (m *DynMixUpListViewMoreReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynMixUpListViewMoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynMixUpListViewMoreReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynMixUpListViewMoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynMixUpListViewMoreReply.Merge(m, src)
}
func (m *DynMixUpListViewMoreReply) XXX_Size() int {
	return m.Size()
}
func (m *DynMixUpListViewMoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynMixUpListViewMoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynMixUpListViewMoreReply proto.InternalMessageInfo

func (m *DynMixUpListViewMoreReply) GetItems() []*MixUpListItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DynMixUpListViewMoreReply) GetSearchDefaultText() string {
	if m != nil {
		return m.SearchDefaultText
	}
	return ""
}

func (m *DynMixUpListViewMoreReply) GetSortTypes() []*SortType {
	if m != nil {
		return m.SortTypes
	}
	return nil
}

func (m *DynMixUpListViewMoreReply) GetShowMoreSortTypes() bool {
	if m != nil {
		return m.ShowMoreSortTypes
	}
	return false
}

func (m *DynMixUpListViewMoreReply) GetDefaultSortType() int32 {
	if m != nil {
		return m.DefaultSortType
	}
	return 0
}

// DynLightReq轻浏览请求参数
type DynLightReq struct {
	// 透传 history_offset
	HistoryOffset string `protobuf:"bytes,1,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 来源
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 轻浏览来源，根据来源请求不同的接口
	FromType LightFromType `protobuf:"varint,6,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.LightFromType" json:"from_type,omitempty"`
	// 前端构造的假uid
	FakeUid              int64    `protobuf:"varint,7,opt,name=fake_uid,json=fakeUid,proto3" json:"fake_uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynLightReq) Reset()         { *m = DynLightReq{} }
func (m *DynLightReq) String() string { return proto.CompactTextString(m) }
func (*DynLightReq) ProtoMessage()    {}
func (*DynLightReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{179}
}
func (m *DynLightReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynLightReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynLightReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynLightReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynLightReq.Merge(m, src)
}
func (m *DynLightReq) XXX_Size() int {
	return m.Size()
}
func (m *DynLightReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynLightReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynLightReq proto.InternalMessageInfo

func (m *DynLightReq) GetHistoryOffset() string {
	if m != nil {
		return m.HistoryOffset
	}
	return ""
}

func (m *DynLightReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynLightReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynLightReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynLightReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynLightReq) GetFromType() LightFromType {
	if m != nil {
		return m.FromType
	}
	return LightFromType_from_login
}

func (m *DynLightReq) GetFakeUid() int64 {
	if m != nil {
		return m.FakeUid
	}
	return 0
}

// DynLightReply 轻浏览返回参数
type DynLightReply struct {
	// 卡片列表
	DynamicList          *DynamicList `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynLightReply) Reset()         { *m = DynLightReply{} }
func (m *DynLightReply) String() string { return proto.CompactTextString(m) }
func (*DynLightReply) ProtoMessage()    {}
func (*DynLightReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{180}
}
func (m *DynLightReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynLightReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynLightReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynLightReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynLightReply.Merge(m, src)
}
func (m *DynLightReply) XXX_Size() int {
	return m.Size()
}
func (m *DynLightReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynLightReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynLightReply proto.InternalMessageInfo

func (m *DynLightReply) GetDynamicList() *DynamicList {
	if m != nil {
		return m.DynamicList
	}
	return nil
}

// 动态详情页-请求
type DynDetailReq struct {
	// up主uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 动态ID
	DynamicId string `protobuf:"bytes,2,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,3,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	// 广告参数
	AdParam *AdParam `protobuf:"bytes,5,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
	// From来源
	From string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,7,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 分享id
	ShareId string `protobuf:"bytes,8,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	// 分享类型 1:文字，2:图片，3:链接，4:视频，5:音频
	ShareMode int32 `protobuf:"varint,9,opt,name=share_mode,json=shareMode,proto3" json:"share_mode,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,10,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// pattern
	Pattern string `protobuf:"bytes,11,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// 传递一些公共配置信息
	Config               *Config  `protobuf:"bytes,12,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynDetailReq) Reset()         { *m = DynDetailReq{} }
func (m *DynDetailReq) String() string { return proto.CompactTextString(m) }
func (*DynDetailReq) ProtoMessage()    {}
func (*DynDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{181}
}
func (m *DynDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynDetailReq.Merge(m, src)
}
func (m *DynDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *DynDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynDetailReq proto.InternalMessageInfo

func (m *DynDetailReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DynDetailReq) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *DynDetailReq) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *DynDetailReq) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DynDetailReq) GetAdParam() *AdParam {
	if m != nil {
		return m.AdParam
	}
	return nil
}

func (m *DynDetailReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DynDetailReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynDetailReq) GetShareId() string {
	if m != nil {
		return m.ShareId
	}
	return ""
}

func (m *DynDetailReq) GetShareMode() int32 {
	if m != nil {
		return m.ShareMode
	}
	return 0
}

func (m *DynDetailReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynDetailReq) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *DynDetailReq) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// 动态详情页
type DynDetailReply struct {
	// 动态详情
	Item                 *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynDetailReply) Reset()         { *m = DynDetailReply{} }
func (m *DynDetailReply) String() string { return proto.CompactTextString(m) }
func (*DynDetailReply) ProtoMessage()    {}
func (*DynDetailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{182}
}
func (m *DynDetailReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynDetailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynDetailReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynDetailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynDetailReply.Merge(m, src)
}
func (m *DynDetailReply) XXX_Size() int {
	return m.Size()
}
func (m *DynDetailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynDetailReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynDetailReply proto.InternalMessageInfo

func (m *DynDetailReply) GetItem() *DynamicItem {
	if m != nil {
		return m.Item
	}
	return nil
}

// 点赞列表-请求
type LikeListReq struct {
	// 动态ID
	DynamicId string `protobuf:"bytes,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	//上一页最后一个uid
	UidOffset int64 `protobuf:"varint,4,opt,name=uid_offset,json=uidOffset,proto3" json:"uid_offset,omitempty"`
	// 下拉页数
	Page                 int32    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeListReq) Reset()         { *m = LikeListReq{} }
func (m *LikeListReq) String() string { return proto.CompactTextString(m) }
func (*LikeListReq) ProtoMessage()    {}
func (*LikeListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{183}
}
func (m *LikeListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeListReq.Merge(m, src)
}
func (m *LikeListReq) XXX_Size() int {
	return m.Size()
}
func (m *LikeListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeListReq.DiscardUnknown(m)
}

var xxx_messageInfo_LikeListReq proto.InternalMessageInfo

func (m *LikeListReq) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *LikeListReq) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *LikeListReq) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *LikeListReq) GetUidOffset() int64 {
	if m != nil {
		return m.UidOffset
	}
	return 0
}

func (m *LikeListReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

// 点赞列表
type LikeListReply struct {
	// 用户模块列表
	List []*ModuleAuthor `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 点赞总数
	TotalCount           int64    `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeListReply) Reset()         { *m = LikeListReply{} }
func (m *LikeListReply) String() string { return proto.CompactTextString(m) }
func (*LikeListReply) ProtoMessage()    {}
func (*LikeListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{184}
}
func (m *LikeListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeListReply.Merge(m, src)
}
func (m *LikeListReply) XXX_Size() int {
	return m.Size()
}
func (m *LikeListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeListReply.DiscardUnknown(m)
}

var xxx_messageInfo_LikeListReply proto.InternalMessageInfo

func (m *LikeListReply) GetList() []*ModuleAuthor {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *LikeListReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *LikeListReply) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

// 转发列表-请求
type RepostListReq struct {
	// 动态ID
	DynamicId string `protobuf:"bytes,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	// 偏移,使用上一页回包中的offset字段；第一页不传。
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// 来源
	From string `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	// 评论类型
	RepostType           RepostType `protobuf:"varint,6,opt,name=repost_type,json=repostType,proto3,enum=bilibili.app.dynamic.v2.RepostType" json:"repost_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RepostListReq) Reset()         { *m = RepostListReq{} }
func (m *RepostListReq) String() string { return proto.CompactTextString(m) }
func (*RepostListReq) ProtoMessage()    {}
func (*RepostListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{185}
}
func (m *RepostListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RepostListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RepostListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RepostListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepostListReq.Merge(m, src)
}
func (m *RepostListReq) XXX_Size() int {
	return m.Size()
}
func (m *RepostListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RepostListReq.DiscardUnknown(m)
}

var xxx_messageInfo_RepostListReq proto.InternalMessageInfo

func (m *RepostListReq) GetDynamicId() string {
	if m != nil {
		return m.DynamicId
	}
	return ""
}

func (m *RepostListReq) GetDynType() int64 {
	if m != nil {
		return m.DynType
	}
	return 0
}

func (m *RepostListReq) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *RepostListReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *RepostListReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RepostListReq) GetRepostType() RepostType {
	if m != nil {
		return m.RepostType
	}
	return RepostType_repost_hot
}

// 转发列表
type RepostListRsp struct {
	// 列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 转发总数
	TotalCount int64 `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 评论类型
	RepostType           RepostType `protobuf:"varint,5,opt,name=repost_type,json=repostType,proto3,enum=bilibili.app.dynamic.v2.RepostType" json:"repost_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RepostListRsp) Reset()         { *m = RepostListRsp{} }
func (m *RepostListRsp) String() string { return proto.CompactTextString(m) }
func (*RepostListRsp) ProtoMessage()    {}
func (*RepostListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{186}
}
func (m *RepostListRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RepostListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RepostListRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RepostListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepostListRsp.Merge(m, src)
}
func (m *RepostListRsp) XXX_Size() int {
	return m.Size()
}
func (m *RepostListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RepostListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RepostListRsp proto.InternalMessageInfo

func (m *RepostListRsp) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *RepostListRsp) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *RepostListRsp) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *RepostListRsp) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *RepostListRsp) GetRepostType() RepostType {
	if m != nil {
		return m.RepostType
	}
	return RepostType_repost_hot
}

// 分享模块
type ModuleShareInfo struct {
	// 展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 分享组件列表
	ShareChannels []*ShareChannel `protobuf:"bytes,2,rep,name=share_channels,json=shareChannels,proto3" json:"share_channels,omitempty"`
	// share_origin
	ShareOrigin string `protobuf:"bytes,3,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	// 业务id
	Oid string `protobuf:"bytes,4,opt,name=oid,proto3" json:"oid,omitempty"`
	// sid
	Sid                  string   `protobuf:"bytes,5,opt,name=sid,proto3" json:"sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleShareInfo) Reset()         { *m = ModuleShareInfo{} }
func (m *ModuleShareInfo) String() string { return proto.CompactTextString(m) }
func (*ModuleShareInfo) ProtoMessage()    {}
func (*ModuleShareInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{187}
}
func (m *ModuleShareInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleShareInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleShareInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleShareInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleShareInfo.Merge(m, src)
}
func (m *ModuleShareInfo) XXX_Size() int {
	return m.Size()
}
func (m *ModuleShareInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleShareInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleShareInfo proto.InternalMessageInfo

func (m *ModuleShareInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleShareInfo) GetShareChannels() []*ShareChannel {
	if m != nil {
		return m.ShareChannels
	}
	return nil
}

func (m *ModuleShareInfo) GetShareOrigin() string {
	if m != nil {
		return m.ShareOrigin
	}
	return ""
}

func (m *ModuleShareInfo) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *ModuleShareInfo) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

// 分享渠道组件
type ShareChannel struct {
	// 分享名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 分享按钮图片
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// 分享渠道
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	// 预约卡分享图信息，仅分享有预约信息的动态时存在
	Reserve              *ShareReserve `protobuf:"bytes,4,opt,name=reserve,proto3" json:"reserve,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ShareChannel) Reset()         { *m = ShareChannel{} }
func (m *ShareChannel) String() string { return proto.CompactTextString(m) }
func (*ShareChannel) ProtoMessage()    {}
func (*ShareChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{188}
}
func (m *ShareChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShareChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShareChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShareChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareChannel.Merge(m, src)
}
func (m *ShareChannel) XXX_Size() int {
	return m.Size()
}
func (m *ShareChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareChannel.DiscardUnknown(m)
}

var xxx_messageInfo_ShareChannel proto.InternalMessageInfo

func (m *ShareChannel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShareChannel) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ShareChannel) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ShareChannel) GetReserve() *ShareReserve {
	if m != nil {
		return m.Reserve
	}
	return nil
}

// 预约卡分享图信息
type ShareReserve struct {
	// 展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述（时间+类型）
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 二维码附带icon
	QrCodeIcon string `protobuf:"bytes,3,opt,name=qr_code_icon,json=qrCodeIcon,proto3" json:"qr_code_icon,omitempty"`
	// 二维码附带文本
	QrCodeText string `protobuf:"bytes,4,opt,name=qr_code_text,json=qrCodeText,proto3" json:"qr_code_text,omitempty"`
	// 二维码url
	QrCodeUrl string `protobuf:"bytes,5,opt,name=qr_code_url,json=qrCodeUrl,proto3" json:"qr_code_url,omitempty"`
	// 预约用户信息
	UserInfo             *AdditionUserInfo `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShareReserve) Reset()         { *m = ShareReserve{} }
func (m *ShareReserve) String() string { return proto.CompactTextString(m) }
func (*ShareReserve) ProtoMessage()    {}
func (*ShareReserve) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{189}
}
func (m *ShareReserve) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShareReserve) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShareReserve.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ShareReserve) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareReserve.Merge(m, src)
}
func (m *ShareReserve) XXX_Size() int {
	return m.Size()
}
func (m *ShareReserve) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareReserve.DiscardUnknown(m)
}

var xxx_messageInfo_ShareReserve proto.InternalMessageInfo

func (m *ShareReserve) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShareReserve) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ShareReserve) GetQrCodeIcon() string {
	if m != nil {
		return m.QrCodeIcon
	}
	return ""
}

func (m *ShareReserve) GetQrCodeText() string {
	if m != nil {
		return m.QrCodeText
	}
	return ""
}

func (m *ShareReserve) GetQrCodeUrl() string {
	if m != nil {
		return m.QrCodeUrl
	}
	return ""
}

func (m *ShareReserve) GetUserInfo() *AdditionUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type ModuleRecommend struct {
	// 模块标题
	ModuleTitle string `protobuf:"bytes,1,opt,name=module_title,json=moduleTitle,proto3" json:"module_title,omitempty"`
	// 图片
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// 标签
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 序列化的广告信息
	Ad                   []*types.Any `protobuf:"bytes,6,rep,name=ad,proto3" json:"ad,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ModuleRecommend) Reset()         { *m = ModuleRecommend{} }
func (m *ModuleRecommend) String() string { return proto.CompactTextString(m) }
func (*ModuleRecommend) ProtoMessage()    {}
func (*ModuleRecommend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{190}
}
func (m *ModuleRecommend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleRecommend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleRecommend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleRecommend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleRecommend.Merge(m, src)
}
func (m *ModuleRecommend) XXX_Size() int {
	return m.Size()
}
func (m *ModuleRecommend) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleRecommend.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleRecommend proto.InternalMessageInfo

func (m *ModuleRecommend) GetModuleTitle() string {
	if m != nil {
		return m.ModuleTitle
	}
	return ""
}

func (m *ModuleRecommend) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ModuleRecommend) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ModuleRecommend) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleRecommend) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *ModuleRecommend) GetAd() []*types.Any {
	if m != nil {
		return m.Ad
	}
	return nil
}

type ModuleStory struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// story推荐卡
	Items []*StoryItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// story横插卡中是否需要出现发布入口
	ShowPublishEntrance bool `protobuf:"varint,3,opt,name=show_publish_entrance,json=showPublishEntrance,proto3" json:"show_publish_entrance,omitempty"`
	// 折叠状态，0-展开，1-折叠
	FoldState int64 `protobuf:"varint,4,opt,name=fold_state,json=foldState,proto3" json:"fold_state,omitempty"`
	// 发布链接
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 发布入口封面
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	// 发布入口文案
	PublishText          string   `protobuf:"bytes,7,opt,name=publish_text,json=publishText,proto3" json:"publish_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleStory) Reset()         { *m = ModuleStory{} }
func (m *ModuleStory) String() string { return proto.CompactTextString(m) }
func (*ModuleStory) ProtoMessage()    {}
func (*ModuleStory) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{191}
}
func (m *ModuleStory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleStory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleStory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleStory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleStory.Merge(m, src)
}
func (m *ModuleStory) XXX_Size() int {
	return m.Size()
}
func (m *ModuleStory) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleStory.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleStory proto.InternalMessageInfo

func (m *ModuleStory) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ModuleStory) GetItems() []*StoryItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ModuleStory) GetShowPublishEntrance() bool {
	if m != nil {
		return m.ShowPublishEntrance
	}
	return false
}

func (m *ModuleStory) GetFoldState() int64 {
	if m != nil {
		return m.FoldState
	}
	return 0
}

func (m *ModuleStory) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ModuleStory) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ModuleStory) GetPublishText() string {
	if m != nil {
		return m.PublishText
	}
	return ""
}

type StoryItem struct {
	// 用户头像
	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 描述 用户昵称
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 已读=1，未读=0
	Status int64 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// 卡片类型
	Type RcmdType `protobuf:"varint,4,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.RcmdType" json:"type,omitempty"`
	// 卡片列表
	//
	// Types that are valid to be assigned to RcmdItem:
	//	*StoryItem_StoryArchive
	RcmdItem             isStoryItem_RcmdItem `protobuf_oneof:"rcmd_item"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StoryItem) Reset()         { *m = StoryItem{} }
func (m *StoryItem) String() string { return proto.CompactTextString(m) }
func (*StoryItem) ProtoMessage()    {}
func (*StoryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{192}
}
func (m *StoryItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoryItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoryItem.Merge(m, src)
}
func (m *StoryItem) XXX_Size() int {
	return m.Size()
}
func (m *StoryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_StoryItem.DiscardUnknown(m)
}

var xxx_messageInfo_StoryItem proto.InternalMessageInfo

type isStoryItem_RcmdItem interface {
	isStoryItem_RcmdItem()
	MarshalTo([]byte) (int, error)
	Size() int
}

type StoryItem_StoryArchive struct {
	StoryArchive *StoryArchive `protobuf:"bytes,5,opt,name=story_archive,json=storyArchive,proto3,oneof" json:"story_archive,omitempty"`
}

func (*StoryItem_StoryArchive) isStoryItem_RcmdItem() {}

func (m *StoryItem) GetRcmdItem() isStoryItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (m *StoryItem) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *StoryItem) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *StoryItem) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StoryItem) GetType() RcmdType {
	if m != nil {
		return m.Type
	}
	return RcmdType_rcmd_archive
}

func (m *StoryItem) GetStoryArchive() *StoryArchive {
	if x, ok := m.GetRcmdItem().(*StoryItem_StoryArchive); ok {
		return x.StoryArchive
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StoryItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StoryItem_StoryArchive)(nil),
	}
}

type StoryArchive struct {
	// 封面图
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	// 跳转地址+秒开信息
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 尺寸信息
	Dimension            *Dimension `protobuf:"bytes,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StoryArchive) Reset()         { *m = StoryArchive{} }
func (m *StoryArchive) String() string { return proto.CompactTextString(m) }
func (*StoryArchive) ProtoMessage()    {}
func (*StoryArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{193}
}
func (m *StoryArchive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoryArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoryArchive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoryArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoryArchive.Merge(m, src)
}
func (m *StoryArchive) XXX_Size() int {
	return m.Size()
}
func (m *StoryArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_StoryArchive.DiscardUnknown(m)
}

var xxx_messageInfo_StoryArchive proto.InternalMessageInfo

func (m *StoryArchive) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *StoryArchive) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *StoryArchive) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *StoryArchive) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

// 空间页动态-请求
type DynSpaceReq struct {
	// 被访问者，也就是空间主人的uid
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 动态偏移history_offset
	HistoryOffset string `protobuf:"bytes,2,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 向下翻页数，默认从1开始
	Page int64 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// 来源，空间页：space，直播tab：live
	From                 string   `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynSpaceReq) Reset()         { *m = DynSpaceReq{} }
func (m *DynSpaceReq) String() string { return proto.CompactTextString(m) }
func (*DynSpaceReq) ProtoMessage()    {}
func (*DynSpaceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{194}
}
func (m *DynSpaceReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSpaceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSpaceReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSpaceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSpaceReq.Merge(m, src)
}
func (m *DynSpaceReq) XXX_Size() int {
	return m.Size()
}
func (m *DynSpaceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSpaceReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynSpaceReq proto.InternalMessageInfo

func (m *DynSpaceReq) GetHostUid() int64 {
	if m != nil {
		return m.HostUid
	}
	return 0
}

func (m *DynSpaceReq) GetHistoryOffset() string {
	if m != nil {
		return m.HistoryOffset
	}
	return ""
}

func (m *DynSpaceReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynSpaceReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynSpaceReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynSpaceReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

// 空间页动态
type DynSpaceRsp struct {
	// 卡片列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,2,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 是否还有更多数据
	HasMore              bool     `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynSpaceRsp) Reset()         { *m = DynSpaceRsp{} }
func (m *DynSpaceRsp) String() string { return proto.CompactTextString(m) }
func (*DynSpaceRsp) ProtoMessage()    {}
func (*DynSpaceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{195}
}
func (m *DynSpaceRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSpaceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSpaceRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSpaceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSpaceRsp.Merge(m, src)
}
func (m *DynSpaceRsp) XXX_Size() int {
	return m.Size()
}
func (m *DynSpaceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSpaceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DynSpaceRsp proto.InternalMessageInfo

func (m *DynSpaceRsp) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DynSpaceRsp) GetHistoryOffset() string {
	if m != nil {
		return m.HistoryOffset
	}
	return ""
}

func (m *DynSpaceRsp) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type ModuleTop struct {
	// 三点模块
	TpList               []*ThreePointItem `protobuf:"bytes,1,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ModuleTop) Reset()         { *m = ModuleTop{} }
func (m *ModuleTop) String() string { return proto.CompactTextString(m) }
func (*ModuleTop) ProtoMessage()    {}
func (*ModuleTop) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{196}
}
func (m *ModuleTop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleTop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleTop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleTop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleTop.Merge(m, src)
}
func (m *ModuleTop) XXX_Size() int {
	return m.Size()
}
func (m *ModuleTop) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleTop.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleTop proto.InternalMessageInfo

func (m *ModuleTop) GetTpList() []*ThreePointItem {
	if m != nil {
		return m.TpList
	}
	return nil
}

type ModuleButtom struct {
	ModuleStat *ModuleStat `protobuf:"bytes,1,opt,name=module_stat,json=moduleStat,proto3" json:"module_stat,omitempty"`
	// 是否展示评论框 如果展示 则使用底栏升级的新样式
	CommentBox bool `protobuf:"varint,2,opt,name=comment_box,json=commentBox,proto3" json:"comment_box,omitempty"`
	// 评论框内提示语
	CommentBoxMsg        string   `protobuf:"bytes,3,opt,name=comment_box_msg,json=commentBoxMsg,proto3" json:"comment_box_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleButtom) Reset()         { *m = ModuleButtom{} }
func (m *ModuleButtom) String() string { return proto.CompactTextString(m) }
func (*ModuleButtom) ProtoMessage()    {}
func (*ModuleButtom) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{197}
}
func (m *ModuleButtom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleButtom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleButtom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleButtom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleButtom.Merge(m, src)
}
func (m *ModuleButtom) XXX_Size() int {
	return m.Size()
}
func (m *ModuleButtom) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleButtom.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleButtom proto.InternalMessageInfo

func (m *ModuleButtom) GetModuleStat() *ModuleStat {
	if m != nil {
		return m.ModuleStat
	}
	return nil
}

func (m *ModuleButtom) GetCommentBox() bool {
	if m != nil {
		return m.CommentBox
	}
	return false
}

func (m *ModuleButtom) GetCommentBoxMsg() string {
	if m != nil {
		return m.CommentBoxMsg
	}
	return ""
}

// 推荐页请求参数
type DynRcmdReq struct {
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,1,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,2,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 前端构造的假uid
	FakeUid int64 `protobuf:"varint,3,opt,name=fake_uid,json=fakeUid,proto3" json:"fake_uid,omitempty"`
	// 是否刷新
	IsRefresh            bool     `protobuf:"varint,4,opt,name=is_refresh,json=isRefresh,proto3" json:"is_refresh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynRcmdReq) Reset()         { *m = DynRcmdReq{} }
func (m *DynRcmdReq) String() string { return proto.CompactTextString(m) }
func (*DynRcmdReq) ProtoMessage()    {}
func (*DynRcmdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{198}
}
func (m *DynRcmdReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRcmdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRcmdReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRcmdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRcmdReq.Merge(m, src)
}
func (m *DynRcmdReq) XXX_Size() int {
	return m.Size()
}
func (m *DynRcmdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRcmdReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynRcmdReq proto.InternalMessageInfo

func (m *DynRcmdReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynRcmdReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynRcmdReq) GetFakeUid() int64 {
	if m != nil {
		return m.FakeUid
	}
	return 0
}

func (m *DynRcmdReq) GetIsRefresh() bool {
	if m != nil {
		return m.IsRefresh
	}
	return false
}

// 推荐页返回参数
type DynRcmdReply struct {
	// 分区推荐
	RegionRcmd *DynRegionRcmd `protobuf:"bytes,1,opt,name=region_rcmd,json=regionRcmd,proto3" json:"region_rcmd,omitempty"`
	// 卡片列表
	DynamicList          *DynamicList `protobuf:"bytes,2,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DynRcmdReply) Reset()         { *m = DynRcmdReply{} }
func (m *DynRcmdReply) String() string { return proto.CompactTextString(m) }
func (*DynRcmdReply) ProtoMessage()    {}
func (*DynRcmdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{199}
}
func (m *DynRcmdReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRcmdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRcmdReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRcmdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRcmdReply.Merge(m, src)
}
func (m *DynRcmdReply) XXX_Size() int {
	return m.Size()
}
func (m *DynRcmdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRcmdReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynRcmdReply proto.InternalMessageInfo

func (m *DynRcmdReply) GetRegionRcmd() *DynRegionRcmd {
	if m != nil {
		return m.RegionRcmd
	}
	return nil
}

func (m *DynRcmdReply) GetDynamicList() *DynamicList {
	if m != nil {
		return m.DynamicList
	}
	return nil
}

// 推荐页返回参数
type DynRegionRcmd struct {
	Items []*DynRegionRcmdItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 分区聚类推荐选项
	Opts                 *RcmdOption `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DynRegionRcmd) Reset()         { *m = DynRegionRcmd{} }
func (m *DynRegionRcmd) String() string { return proto.CompactTextString(m) }
func (*DynRegionRcmd) ProtoMessage()    {}
func (*DynRegionRcmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{200}
}
func (m *DynRegionRcmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRegionRcmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRegionRcmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRegionRcmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRegionRcmd.Merge(m, src)
}
func (m *DynRegionRcmd) XXX_Size() int {
	return m.Size()
}
func (m *DynRegionRcmd) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRegionRcmd.DiscardUnknown(m)
}

var xxx_messageInfo_DynRegionRcmd proto.InternalMessageInfo

func (m *DynRegionRcmd) GetItems() []*DynRegionRcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *DynRegionRcmd) GetOpts() *RcmdOption {
	if m != nil {
		return m.Opts
	}
	return nil
}

type RcmdOption struct {
	// 视频是否展示标题
	ShowTitle            bool     `protobuf:"varint,1,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdOption) Reset()         { *m = RcmdOption{} }
func (m *RcmdOption) String() string { return proto.CompactTextString(m) }
func (*RcmdOption) ProtoMessage()    {}
func (*RcmdOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{201}
}
func (m *RcmdOption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdOption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOption.Merge(m, src)
}
func (m *RcmdOption) XXX_Size() int {
	return m.Size()
}
func (m *RcmdOption) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOption.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOption proto.InternalMessageInfo

func (m *RcmdOption) GetShowTitle() bool {
	if m != nil {
		return m.ShowTitle
	}
	return false
}

type DynRegionRcmdItem struct {
	// 分区id
	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 推荐模块
	Items                []*ModuleRcmd `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DynRegionRcmdItem) Reset()         { *m = DynRegionRcmdItem{} }
func (m *DynRegionRcmdItem) String() string { return proto.CompactTextString(m) }
func (*DynRegionRcmdItem) ProtoMessage()    {}
func (*DynRegionRcmdItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{202}
}
func (m *DynRegionRcmdItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynRegionRcmdItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynRegionRcmdItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynRegionRcmdItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynRegionRcmdItem.Merge(m, src)
}
func (m *DynRegionRcmdItem) XXX_Size() int {
	return m.Size()
}
func (m *DynRegionRcmdItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DynRegionRcmdItem.DiscardUnknown(m)
}

var xxx_messageInfo_DynRegionRcmdItem proto.InternalMessageInfo

func (m *DynRegionRcmdItem) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *DynRegionRcmdItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DynRegionRcmdItem) GetItems() []*ModuleRcmd {
	if m != nil {
		return m.Items
	}
	return nil
}

type ModuleRcmd struct {
	// 用户头像
	Author *RcmdAuthor `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 推荐卡片列表
	Items []*RcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// 透传到客户端的埋点字段
	ServerInfo           string   `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModuleRcmd) Reset()         { *m = ModuleRcmd{} }
func (m *ModuleRcmd) String() string { return proto.CompactTextString(m) }
func (*ModuleRcmd) ProtoMessage()    {}
func (*ModuleRcmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{203}
}
func (m *ModuleRcmd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModuleRcmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ModuleRcmd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ModuleRcmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleRcmd.Merge(m, src)
}
func (m *ModuleRcmd) XXX_Size() int {
	return m.Size()
}
func (m *ModuleRcmd) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleRcmd.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleRcmd proto.InternalMessageInfo

func (m *ModuleRcmd) GetAuthor() *RcmdAuthor {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ModuleRcmd) GetItems() []*RcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ModuleRcmd) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

// 推荐UP主用户模块
type RcmdAuthor struct {
	// 用户详情
	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 描述：粉丝数、推荐理由
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 关注状态
	Relation             *Relation `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RcmdAuthor) Reset()         { *m = RcmdAuthor{} }
func (m *RcmdAuthor) String() string { return proto.CompactTextString(m) }
func (*RcmdAuthor) ProtoMessage()    {}
func (*RcmdAuthor) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{204}
}
func (m *RcmdAuthor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdAuthor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdAuthor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdAuthor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdAuthor.Merge(m, src)
}
func (m *RcmdAuthor) XXX_Size() int {
	return m.Size()
}
func (m *RcmdAuthor) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdAuthor.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdAuthor proto.InternalMessageInfo

func (m *RcmdAuthor) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *RcmdAuthor) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *RcmdAuthor) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

type RcmdItem struct {
	// 卡片类型
	Type RcmdType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.RcmdType" json:"type,omitempty"`
	// 卡片列表
	//
	// Types that are valid to be assigned to RcmdItem:
	//	*RcmdItem_RcmdArchive
	RcmdItem             isRcmdItem_RcmdItem `protobuf_oneof:"rcmd_item"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RcmdItem) Reset()         { *m = RcmdItem{} }
func (m *RcmdItem) String() string { return proto.CompactTextString(m) }
func (*RcmdItem) ProtoMessage()    {}
func (*RcmdItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{205}
}
func (m *RcmdItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdItem.Merge(m, src)
}
func (m *RcmdItem) XXX_Size() int {
	return m.Size()
}
func (m *RcmdItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdItem.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdItem proto.InternalMessageInfo

type isRcmdItem_RcmdItem interface {
	isRcmdItem_RcmdItem()
	MarshalTo([]byte) (int, error)
	Size() int
}

type RcmdItem_RcmdArchive struct {
	RcmdArchive *RcmdArchive `protobuf:"bytes,2,opt,name=rcmd_archive,json=rcmdArchive,proto3,oneof" json:"rcmd_archive,omitempty"`
}

func (*RcmdItem_RcmdArchive) isRcmdItem_RcmdItem() {}

func (m *RcmdItem) GetRcmdItem() isRcmdItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (m *RcmdItem) GetType() RcmdType {
	if m != nil {
		return m.Type
	}
	return RcmdType_rcmd_archive
}

func (m *RcmdItem) GetRcmdArchive() *RcmdArchive {
	if x, ok := m.GetRcmdItem().(*RcmdItem_RcmdArchive); ok {
		return x.RcmdArchive
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RcmdItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RcmdItem_RcmdArchive)(nil),
	}
}

type RcmdArchive struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 视频封面展示项 1
	CoverLeftIcon_1 CoverIcon `protobuf:"varint,3,opt,name=cover_left_icon_1,json=coverLeftIcon1,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"cover_left_icon_1,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 是否PGC
	IsPgc bool `protobuf:"varint,6,opt,name=is_pgc,json=isPgc,proto3" json:"is_pgc,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,7,opt,name=aid,proto3" json:"aid,omitempty"`
	// 带背景图片的角标
	Badge *IconBadge `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`
	// 视频封面展示项
	CoverLeftIcon_2 CoverIcon `protobuf:"varint,9,opt,name=cover_left_icon_2,json=coverLeftIcon2,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"cover_left_icon_2,omitempty"`
	// 视频封面展示项
	CoverLeftText_2 string `protobuf:"bytes,10,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 视频封面展示项
	CoverLeftIcon_3 CoverIcon `protobuf:"varint,11,opt,name=cover_left_icon_3,json=coverLeftIcon3,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"cover_left_icon_3,omitempty"`
	// 封面右侧文案
	CoverLeftText_3 string `protobuf:"bytes,12,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// Deprecated: 校园名称 只在旧版本使用
	Desc string `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	// 埋点用
	TrackId string `protobuf:"bytes,14,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	// 推荐原因
	RcmdReason           *RcmdReason `protobuf:"bytes,15,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RcmdArchive) Reset()         { *m = RcmdArchive{} }
func (m *RcmdArchive) String() string { return proto.CompactTextString(m) }
func (*RcmdArchive) ProtoMessage()    {}
func (*RcmdArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{206}
}
func (m *RcmdArchive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdArchive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdArchive.Merge(m, src)
}
func (m *RcmdArchive) XXX_Size() int {
	return m.Size()
}
func (m *RcmdArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdArchive.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdArchive proto.InternalMessageInfo

func (m *RcmdArchive) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RcmdArchive) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *RcmdArchive) GetCoverLeftIcon_1() CoverIcon {
	if m != nil {
		return m.CoverLeftIcon_1
	}
	return CoverIcon_cover_icon_none
}

func (m *RcmdArchive) GetCoverLeftText_1() string {
	if m != nil {
		return m.CoverLeftText_1
	}
	return ""
}

func (m *RcmdArchive) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *RcmdArchive) GetIsPgc() bool {
	if m != nil {
		return m.IsPgc
	}
	return false
}

func (m *RcmdArchive) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *RcmdArchive) GetBadge() *IconBadge {
	if m != nil {
		return m.Badge
	}
	return nil
}

func (m *RcmdArchive) GetCoverLeftIcon_2() CoverIcon {
	if m != nil {
		return m.CoverLeftIcon_2
	}
	return CoverIcon_cover_icon_none
}

func (m *RcmdArchive) GetCoverLeftText_2() string {
	if m != nil {
		return m.CoverLeftText_2
	}
	return ""
}

func (m *RcmdArchive) GetCoverLeftIcon_3() CoverIcon {
	if m != nil {
		return m.CoverLeftIcon_3
	}
	return CoverIcon_cover_icon_none
}

func (m *RcmdArchive) GetCoverLeftText_3() string {
	if m != nil {
		return m.CoverLeftText_3
	}
	return ""
}

func (m *RcmdArchive) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *RcmdArchive) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *RcmdArchive) GetRcmdReason() *RcmdReason {
	if m != nil {
		return m.RcmdReason
	}
	return nil
}

// 视频卡片推荐原因标签
type RcmdReason struct {
	// 兜底的校园名称 样式为none时兜底使用
	CampusName string `protobuf:"bytes,1,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 推荐原因样式 端上预设
	Style RcmdReasonStyle `protobuf:"varint,2,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.RcmdReasonStyle" json:"style,omitempty"`
	// 推荐理由
	RcmdReason string `protobuf:"bytes,3,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
	// UP 名字
	UpName               string   `protobuf:"bytes,4,opt,name=up_name,json=upName,proto3" json:"up_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdReason) Reset()         { *m = RcmdReason{} }
func (m *RcmdReason) String() string { return proto.CompactTextString(m) }
func (*RcmdReason) ProtoMessage()    {}
func (*RcmdReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{207}
}
func (m *RcmdReason) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdReason.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdReason.Merge(m, src)
}
func (m *RcmdReason) XXX_Size() int {
	return m.Size()
}
func (m *RcmdReason) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdReason.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdReason proto.InternalMessageInfo

func (m *RcmdReason) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *RcmdReason) GetStyle() RcmdReasonStyle {
	if m != nil {
		return m.Style
	}
	return RcmdReasonStyle_rcmd_reason_style_none
}

func (m *RcmdReason) GetRcmdReason() string {
	if m != nil {
		return m.RcmdReason
	}
	return ""
}

func (m *RcmdReason) GetUpName() string {
	if m != nil {
		return m.UpName
	}
	return ""
}

// 带背景图片的角标
type IconBadge struct {
	// 带背景图片的角标地址
	IconBgUrl string `protobuf:"bytes,1,opt,name=icon_bg_url,json=iconBgUrl,proto3" json:"icon_bg_url,omitempty"`
	// 文案
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IconBadge) Reset()         { *m = IconBadge{} }
func (m *IconBadge) String() string { return proto.CompactTextString(m) }
func (*IconBadge) ProtoMessage()    {}
func (*IconBadge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{208}
}
func (m *IconBadge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IconBadge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IconBadge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IconBadge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IconBadge.Merge(m, src)
}
func (m *IconBadge) XXX_Size() int {
	return m.Size()
}
func (m *IconBadge) XXX_DiscardUnknown() {
	xxx_messageInfo_IconBadge.DiscardUnknown(m)
}

var xxx_messageInfo_IconBadge proto.InternalMessageInfo

func (m *IconBadge) GetIconBgUrl() string {
	if m != nil {
		return m.IconBgUrl
	}
	return ""
}

func (m *IconBadge) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type CoverIconWithText struct {
	// 封面图标类型
	Icon CoverIcon `protobuf:"varint,1,opt,name=icon,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"icon,omitempty"`
	// 图标旁的文案
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoverIconWithText) Reset()         { *m = CoverIconWithText{} }
func (m *CoverIconWithText) String() string { return proto.CompactTextString(m) }
func (*CoverIconWithText) ProtoMessage()    {}
func (*CoverIconWithText) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{209}
}
func (m *CoverIconWithText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CoverIconWithText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CoverIconWithText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CoverIconWithText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoverIconWithText.Merge(m, src)
}
func (m *CoverIconWithText) XXX_Size() int {
	return m.Size()
}
func (m *CoverIconWithText) XXX_DiscardUnknown() {
	xxx_messageInfo_CoverIconWithText.DiscardUnknown(m)
}

var xxx_messageInfo_CoverIconWithText proto.InternalMessageInfo

func (m *CoverIconWithText) GetIcon() CoverIcon {
	if m != nil {
		return m.Icon
	}
	return CoverIcon_cover_icon_none
}

func (m *CoverIconWithText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// DynServerDetailsReq 批量动态id获取动态详情请求参数，服务端使用的接口
type DynServerDetailsReq struct {
	// 动态id
	DynamicIds []int64 `protobuf:"varint,1,rep,packed,name=dynamic_ids,json=dynamicIds,proto3" json:"dynamic_ids,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,2,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// mobi_app
	MobiApp string `protobuf:"bytes,4,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	// device
	Device string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
	// buvid
	Buvid string `protobuf:"bytes,6,opt,name=buvid,proto3" json:"buvid,omitempty"`
	// build
	Build int64 `protobuf:"varint,7,opt,name=build,proto3" json:"build,omitempty"`
	// mid
	Mid int64 `protobuf:"varint,8,opt,name=mid,proto3" json:"mid,omitempty"`
	// platform
	Platform string `protobuf:"bytes,9,opt,name=platform,proto3" json:"platform,omitempty"`
	// 是否是主态
	IsMaster bool `protobuf:"varint,10,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	// 置顶动态id
	TopDynamicIds        []int64  `protobuf:"varint,11,rep,packed,name=top_dynamic_ids,json=topDynamicIds,proto3" json:"top_dynamic_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynServerDetailsReq) Reset()         { *m = DynServerDetailsReq{} }
func (m *DynServerDetailsReq) String() string { return proto.CompactTextString(m) }
func (*DynServerDetailsReq) ProtoMessage()    {}
func (*DynServerDetailsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{210}
}
func (m *DynServerDetailsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynServerDetailsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynServerDetailsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynServerDetailsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynServerDetailsReq.Merge(m, src)
}
func (m *DynServerDetailsReq) XXX_Size() int {
	return m.Size()
}
func (m *DynServerDetailsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynServerDetailsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynServerDetailsReq proto.InternalMessageInfo

func (m *DynServerDetailsReq) GetDynamicIds() []int64 {
	if m != nil {
		return m.DynamicIds
	}
	return nil
}

func (m *DynServerDetailsReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynServerDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynServerDetailsReq) GetMobiApp() string {
	if m != nil {
		return m.MobiApp
	}
	return ""
}

func (m *DynServerDetailsReq) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *DynServerDetailsReq) GetBuvid() string {
	if m != nil {
		return m.Buvid
	}
	return ""
}

func (m *DynServerDetailsReq) GetBuild() int64 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *DynServerDetailsReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *DynServerDetailsReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *DynServerDetailsReq) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *DynServerDetailsReq) GetTopDynamicIds() []int64 {
	if m != nil {
		return m.TopDynamicIds
	}
	return nil
}

type DynServerDetailsReply struct {
	// 动态列表
	Items                map[int64]*DynamicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DynServerDetailsReply) Reset()         { *m = DynServerDetailsReply{} }
func (m *DynServerDetailsReply) String() string { return proto.CompactTextString(m) }
func (*DynServerDetailsReply) ProtoMessage()    {}
func (*DynServerDetailsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{211}
}
func (m *DynServerDetailsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynServerDetailsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynServerDetailsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynServerDetailsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynServerDetailsReply.Merge(m, src)
}
func (m *DynServerDetailsReply) XXX_Size() int {
	return m.Size()
}
func (m *DynServerDetailsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynServerDetailsReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynServerDetailsReply proto.InternalMessageInfo

func (m *DynServerDetailsReply) GetItems() map[int64]*DynamicItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// DynSearchReq 垂搜请求参数
type DynSearchReq struct {
	// 搜索关键词
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DynSearchReq) Reset()         { *m = DynSearchReq{} }
func (m *DynSearchReq) String() string { return proto.CompactTextString(m) }
func (*DynSearchReq) ProtoMessage()    {}
func (*DynSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{212}
}
func (m *DynSearchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSearchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSearchReq.Merge(m, src)
}
func (m *DynSearchReq) XXX_Size() int {
	return m.Size()
}
func (m *DynSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynSearchReq proto.InternalMessageInfo

func (m *DynSearchReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *DynSearchReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DynSearchReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynSearchReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

// DynSearchReq 垂搜返回值
type DynSearchReply struct {
	// 频道
	ChannelInfo *SearchChannel `protobuf:"bytes,1,opt,name=channel_info,json=channelInfo,proto3" json:"channel_info,omitempty"`
	// 关联的话题
	SearchTopic *SearchTopic `protobuf:"bytes,2,opt,name=search_topic,json=searchTopic,proto3" json:"search_topic,omitempty"`
	// 搜索卡片列表
	SearchInfo           *SearchInfo `protobuf:"bytes,3,opt,name=search_info,json=searchInfo,proto3" json:"search_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DynSearchReply) Reset()         { *m = DynSearchReply{} }
func (m *DynSearchReply) String() string { return proto.CompactTextString(m) }
func (*DynSearchReply) ProtoMessage()    {}
func (*DynSearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{213}
}
func (m *DynSearchReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSearchReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSearchReply.Merge(m, src)
}
func (m *DynSearchReply) XXX_Size() int {
	return m.Size()
}
func (m *DynSearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynSearchReply proto.InternalMessageInfo

func (m *DynSearchReply) GetChannelInfo() *SearchChannel {
	if m != nil {
		return m.ChannelInfo
	}
	return nil
}

func (m *DynSearchReply) GetSearchTopic() *SearchTopic {
	if m != nil {
		return m.SearchTopic
	}
	return nil
}

func (m *DynSearchReply) GetSearchInfo() *SearchInfo {
	if m != nil {
		return m.SearchInfo
	}
	return nil
}

// SearchInfo 垂搜卡片列表
type SearchInfo struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// trackID
	TrackId string `protobuf:"bytes,3,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 动态服务端版本
	Version              string   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchInfo) Reset()         { *m = SearchInfo{} }
func (m *SearchInfo) String() string { return proto.CompactTextString(m) }
func (*SearchInfo) ProtoMessage()    {}
func (*SearchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{214}
}
func (m *SearchInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchInfo.Merge(m, src)
}
func (m *SearchInfo) XXX_Size() int {
	return m.Size()
}
func (m *SearchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SearchInfo proto.InternalMessageInfo

func (m *SearchInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchInfo) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SearchInfo) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *SearchInfo) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SearchInfo) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *SearchInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// SearchTopic 垂搜话题模块
type SearchTopic struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 查看更多按钮
	MoreButton *SearchTopicButton `protobuf:"bytes,2,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	// 话题列表
	Items                []*SearchTopicItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SearchTopic) Reset()         { *m = SearchTopic{} }
func (m *SearchTopic) String() string { return proto.CompactTextString(m) }
func (*SearchTopic) ProtoMessage()    {}
func (*SearchTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{215}
}
func (m *SearchTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTopic.Merge(m, src)
}
func (m *SearchTopic) XXX_Size() int {
	return m.Size()
}
func (m *SearchTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTopic.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTopic proto.InternalMessageInfo

func (m *SearchTopic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchTopic) GetMoreButton() *SearchTopicButton {
	if m != nil {
		return m.MoreButton
	}
	return nil
}

func (m *SearchTopic) GetItems() []*SearchTopicItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// SearchTopicButton 垂搜话题查看更多按钮
type SearchTopicButton struct {
	// 按钮文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转
	JumpUri              string   `protobuf:"bytes,2,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTopicButton) Reset()         { *m = SearchTopicButton{} }
func (m *SearchTopicButton) String() string { return proto.CompactTextString(m) }
func (*SearchTopicButton) ProtoMessage()    {}
func (*SearchTopicButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{216}
}
func (m *SearchTopicButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchTopicButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchTopicButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchTopicButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTopicButton.Merge(m, src)
}
func (m *SearchTopicButton) XXX_Size() int {
	return m.Size()
}
func (m *SearchTopicButton) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTopicButton.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTopicButton proto.InternalMessageInfo

func (m *SearchTopicButton) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchTopicButton) GetJumpUri() string {
	if m != nil {
		return m.JumpUri
	}
	return ""
}

// SearchTopicItem 垂搜话题列表
type SearchTopicItem struct {
	// 话题id
	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// 描述（例如：xxx浏览·xxx讨论）
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 该话题是否为活动
	// Deprecated: 新话题不再使用
	IsActivity bool `protobuf:"varint,5,opt,name=is_activity,json=isActivity,proto3" json:"is_activity,omitempty"`
	// 话题标签图（热议/编辑推荐等）
	TagIcon string `protobuf:"bytes,6,opt,name=tag_icon,json=tagIcon,proto3" json:"tag_icon,omitempty"`
	// 长描述信息（一般是话题简介信息）
	DescLong string `protobuf:"bytes,7,opt,name=desc_long,json=descLong,proto3" json:"desc_long,omitempty"`
	// 外露封面（可能没有）
	Cover string `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`
	// 话题标签文案（就是标签图上的文字）用于客户端计算布局
	TagText              string   `protobuf:"bytes,9,opt,name=tag_text,json=tagText,proto3" json:"tag_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTopicItem) Reset()         { *m = SearchTopicItem{} }
func (m *SearchTopicItem) String() string { return proto.CompactTextString(m) }
func (*SearchTopicItem) ProtoMessage()    {}
func (*SearchTopicItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{217}
}
func (m *SearchTopicItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchTopicItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchTopicItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchTopicItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTopicItem.Merge(m, src)
}
func (m *SearchTopicItem) XXX_Size() int {
	return m.Size()
}
func (m *SearchTopicItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTopicItem.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTopicItem proto.InternalMessageInfo

func (m *SearchTopicItem) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *SearchTopicItem) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *SearchTopicItem) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *SearchTopicItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SearchTopicItem) GetIsActivity() bool {
	if m != nil {
		return m.IsActivity
	}
	return false
}

func (m *SearchTopicItem) GetTagIcon() string {
	if m != nil {
		return m.TagIcon
	}
	return ""
}

func (m *SearchTopicItem) GetDescLong() string {
	if m != nil {
		return m.DescLong
	}
	return ""
}

func (m *SearchTopicItem) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *SearchTopicItem) GetTagText() string {
	if m != nil {
		return m.TagText
	}
	return ""
}

// SearchChannel 垂搜频道
type SearchChannel struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 查看更多按钮
	MoreButton *SearchTopicButton `protobuf:"bytes,2,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	// 频道信息
	Channels             []*ChannelInfo `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchChannel) Reset()         { *m = SearchChannel{} }
func (m *SearchChannel) String() string { return proto.CompactTextString(m) }
func (*SearchChannel) ProtoMessage()    {}
func (*SearchChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{218}
}
func (m *SearchChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchChannel.Merge(m, src)
}
func (m *SearchChannel) XXX_Size() int {
	return m.Size()
}
func (m *SearchChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchChannel.DiscardUnknown(m)
}

var xxx_messageInfo_SearchChannel proto.InternalMessageInfo

func (m *SearchChannel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchChannel) GetMoreButton() *SearchTopicButton {
	if m != nil {
		return m.MoreButton
	}
	return nil
}

func (m *SearchChannel) GetChannels() []*ChannelInfo {
	if m != nil {
		return m.Channels
	}
	return nil
}

type ChannelInfo struct {
	// 频道ID
	ChannelId int64 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// 频道名
	ChannelName string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	// 描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 是否订阅
	IsAtten bool `protobuf:"varint,4,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
	// 频道类型标志图(粉色闪电标)
	TypeIcon string `protobuf:"bytes,5,opt,name=type_icon,json=typeIcon,proto3" json:"type_icon,omitempty"`
	// 推荐卡片列表
	Items []*RcmdItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	// 频道icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 跳转
	JumpUri              string   `protobuf:"bytes,8,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelInfo) Reset()         { *m = ChannelInfo{} }
func (m *ChannelInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelInfo) ProtoMessage()    {}
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{219}
}
func (m *ChannelInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChannelInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelInfo.Merge(m, src)
}
func (m *ChannelInfo) XXX_Size() int {
	return m.Size()
}
func (m *ChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelInfo proto.InternalMessageInfo

func (m *ChannelInfo) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ChannelInfo) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ChannelInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ChannelInfo) GetIsAtten() bool {
	if m != nil {
		return m.IsAtten
	}
	return false
}

func (m *ChannelInfo) GetTypeIcon() string {
	if m != nil {
		return m.TypeIcon
	}
	return ""
}

func (m *ChannelInfo) GetItems() []*RcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ChannelInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ChannelInfo) GetJumpUri() string {
	if m != nil {
		return m.JumpUri
	}
	return ""
}

// 设置同城校园二选一结果
type SetDecisionReq struct {
	// 	1：同意来校园  2：回到同城
	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetDecisionReq) Reset()         { *m = SetDecisionReq{} }
func (m *SetDecisionReq) String() string { return proto.CompactTextString(m) }
func (*SetDecisionReq) ProtoMessage()    {}
func (*SetDecisionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{220}
}
func (m *SetDecisionReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetDecisionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetDecisionReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetDecisionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDecisionReq.Merge(m, src)
}
func (m *SetDecisionReq) XXX_Size() int {
	return m.Size()
}
func (m *SetDecisionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDecisionReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetDecisionReq proto.InternalMessageInfo

func (m *SetDecisionReq) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *SetDecisionReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusTop struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 主推荐页的tab列表
	Tabs []*CampusShowTabInfo `protobuf:"bytes,3,rep,name=tabs,proto3" json:"tabs,omitempty"`
	//【切换】label
	SwitchLabel *CampusLabel `protobuf:"bytes,4,opt,name=switch_label,json=switchLabel,proto3" json:"switch_label,omitempty"`
	// 标题
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// banner
	Banner []*CampusBannerInfo `protobuf:"bytes,6,rep,name=banner,proto3" json:"banner,omitempty"`
	// 邀请校友按钮
	InviteLabel *CampusLabel `protobuf:"bytes,7,opt,name=invite_label,json=inviteLabel,proto3" json:"invite_label,omitempty"`
	// 校园信息绑定提醒
	Notice *CampusNoticeInfo `protobuf:"bytes,8,opt,name=notice,proto3" json:"notice,omitempty"`
	// 话题广场信息
	TopicSquare *TopicSquareInfo `protobuf:"bytes,9,opt,name=topic_square,json=topicSquare,proto3" json:"topic_square,omitempty"`
	// 校徽
	CampusBadge string `protobuf:"bytes,10,opt,name=campus_badge,json=campusBadge,proto3" json:"campus_badge,omitempty"`
	// 学校背景图
	CampusBackground string `protobuf:"bytes,11,opt,name=campus_background,json=campusBackground,proto3" json:"campus_background,omitempty"`
	// 校训
	CampusMotto string `protobuf:"bytes,12,opt,name=campus_motto,json=campusMotto,proto3" json:"campus_motto,omitempty"`
	// 官号管理入口
	MngEntry *CampusLabel `protobuf:"bytes,13,opt,name=mng_entry,json=mngEntry,proto3" json:"mng_entry,omitempty"`
	// 校园详细介绍
	CampusIntro string `protobuf:"bytes,14,opt,name=campus_intro,json=campusIntro,proto3" json:"campus_intro,omitempty"`
	// 点击校园名的跳链 一般是跳进带tab的学校二级页
	CampusNameLink string `protobuf:"bytes,15,opt,name=campus_name_link,json=campusNameLink,proto3" json:"campus_name_link,omitempty"`
	// 校园头部左下角的文案
	// 例如：2233位校友已加入
	BottomLeftText       string   `protobuf:"bytes,16,opt,name=bottom_left_text,json=bottomLeftText,proto3" json:"bottom_left_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusTop) Reset()         { *m = CampusTop{} }
func (m *CampusTop) String() string { return proto.CompactTextString(m) }
func (*CampusTop) ProtoMessage()    {}
func (*CampusTop) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{221}
}
func (m *CampusTop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusTop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusTop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusTop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusTop.Merge(m, src)
}
func (m *CampusTop) XXX_Size() int {
	return m.Size()
}
func (m *CampusTop) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusTop.DiscardUnknown(m)
}

var xxx_messageInfo_CampusTop proto.InternalMessageInfo

func (m *CampusTop) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusTop) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusTop) GetTabs() []*CampusShowTabInfo {
	if m != nil {
		return m.Tabs
	}
	return nil
}

func (m *CampusTop) GetSwitchLabel() *CampusLabel {
	if m != nil {
		return m.SwitchLabel
	}
	return nil
}

func (m *CampusTop) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusTop) GetBanner() []*CampusBannerInfo {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *CampusTop) GetInviteLabel() *CampusLabel {
	if m != nil {
		return m.InviteLabel
	}
	return nil
}

func (m *CampusTop) GetNotice() *CampusNoticeInfo {
	if m != nil {
		return m.Notice
	}
	return nil
}

func (m *CampusTop) GetTopicSquare() *TopicSquareInfo {
	if m != nil {
		return m.TopicSquare
	}
	return nil
}

func (m *CampusTop) GetCampusBadge() string {
	if m != nil {
		return m.CampusBadge
	}
	return ""
}

func (m *CampusTop) GetCampusBackground() string {
	if m != nil {
		return m.CampusBackground
	}
	return ""
}

func (m *CampusTop) GetCampusMotto() string {
	if m != nil {
		return m.CampusMotto
	}
	return ""
}

func (m *CampusTop) GetMngEntry() *CampusLabel {
	if m != nil {
		return m.MngEntry
	}
	return nil
}

func (m *CampusTop) GetCampusIntro() string {
	if m != nil {
		return m.CampusIntro
	}
	return ""
}

func (m *CampusTop) GetCampusNameLink() string {
	if m != nil {
		return m.CampusNameLink
	}
	return ""
}

func (m *CampusTop) GetBottomLeftText() string {
	if m != nil {
		return m.BottomLeftText
	}
	return ""
}

type CampusShowTabInfo struct {
	// 名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// url
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// tab入口类型
	Type CampusTabType `protobuf:"varint,3,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.CampusTabType" json:"type,omitempty"`
	// tab是否出红点 0:无  1:有
	RedDot int32 `protobuf:"varint,4,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
	// icon链接
	IconUrl              string   `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusShowTabInfo) Reset()         { *m = CampusShowTabInfo{} }
func (m *CampusShowTabInfo) String() string { return proto.CompactTextString(m) }
func (*CampusShowTabInfo) ProtoMessage()    {}
func (*CampusShowTabInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{222}
}
func (m *CampusShowTabInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusShowTabInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusShowTabInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusShowTabInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusShowTabInfo.Merge(m, src)
}
func (m *CampusShowTabInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusShowTabInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusShowTabInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusShowTabInfo proto.InternalMessageInfo

func (m *CampusShowTabInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CampusShowTabInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CampusShowTabInfo) GetType() CampusTabType {
	if m != nil {
		return m.Type
	}
	return CampusTabType_campus_none
}

func (m *CampusShowTabInfo) GetRedDot() int32 {
	if m != nil {
		return m.RedDot
	}
	return 0
}

func (m *CampusShowTabInfo) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

type CampusBannerInfo struct {
	// 图片
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// 跳转url
	JumpUrl              string   `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusBannerInfo) Reset()         { *m = CampusBannerInfo{} }
func (m *CampusBannerInfo) String() string { return proto.CompactTextString(m) }
func (*CampusBannerInfo) ProtoMessage()    {}
func (*CampusBannerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{223}
}
func (m *CampusBannerInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusBannerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusBannerInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusBannerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusBannerInfo.Merge(m, src)
}
func (m *CampusBannerInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusBannerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusBannerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusBannerInfo proto.InternalMessageInfo

func (m *CampusBannerInfo) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CampusBannerInfo) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

type CampusNoticeInfo struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 文案
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 按钮
	Button               *CampusLabel `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CampusNoticeInfo) Reset()         { *m = CampusNoticeInfo{} }
func (m *CampusNoticeInfo) String() string { return proto.CompactTextString(m) }
func (*CampusNoticeInfo) ProtoMessage()    {}
func (*CampusNoticeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{224}
}
func (m *CampusNoticeInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusNoticeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusNoticeInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusNoticeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusNoticeInfo.Merge(m, src)
}
func (m *CampusNoticeInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusNoticeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusNoticeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusNoticeInfo proto.InternalMessageInfo

func (m *CampusNoticeInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusNoticeInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CampusNoticeInfo) GetButton() *CampusLabel {
	if m != nil {
		return m.Button
	}
	return nil
}

// 校内主推荐FEED流
type AlumniDynamicsReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 是否是首次进入（0：否，1：是）
	FirstTime int32 `protobuf:"varint,2,opt,name=first_time,json=firstTime,proto3" json:"first_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,6,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AlumniDynamicsReq) Reset()         { *m = AlumniDynamicsReq{} }
func (m *AlumniDynamicsReq) String() string { return proto.CompactTextString(m) }
func (*AlumniDynamicsReq) ProtoMessage()    {}
func (*AlumniDynamicsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{225}
}
func (m *AlumniDynamicsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlumniDynamicsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AlumniDynamicsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AlumniDynamicsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlumniDynamicsReq.Merge(m, src)
}
func (m *AlumniDynamicsReq) XXX_Size() int {
	return m.Size()
}
func (m *AlumniDynamicsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AlumniDynamicsReq.DiscardUnknown(m)
}

var xxx_messageInfo_AlumniDynamicsReq proto.InternalMessageInfo

func (m *AlumniDynamicsReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *AlumniDynamicsReq) GetFirstTime() int32 {
	if m != nil {
		return m.FirstTime
	}
	return 0
}

func (m *AlumniDynamicsReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *AlumniDynamicsReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *AlumniDynamicsReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *AlumniDynamicsReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type AlumniDynamicsReply struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新提示
	Toast                string   `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlumniDynamicsReply) Reset()         { *m = AlumniDynamicsReply{} }
func (m *AlumniDynamicsReply) String() string { return proto.CompactTextString(m) }
func (*AlumniDynamicsReply) ProtoMessage()    {}
func (*AlumniDynamicsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{226}
}
func (m *AlumniDynamicsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlumniDynamicsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AlumniDynamicsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AlumniDynamicsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlumniDynamicsReply.Merge(m, src)
}
func (m *AlumniDynamicsReply) XXX_Size() int {
	return m.Size()
}
func (m *AlumniDynamicsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AlumniDynamicsReply.DiscardUnknown(m)
}

var xxx_messageInfo_AlumniDynamicsReply proto.InternalMessageInfo

func (m *AlumniDynamicsReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *AlumniDynamicsReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

type CampusRcmdReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 学校请求来源
	FromType CampusReqFromType `protobuf:"varint,6,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	// 页面类型
	PageType             CampusHomePageType `protobuf:"varint,7,opt,name=page_type,json=pageType,proto3,enum=bilibili.app.dynamic.v2.CampusHomePageType" json:"page_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CampusRcmdReq) Reset()         { *m = CampusRcmdReq{} }
func (m *CampusRcmdReq) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdReq) ProtoMessage()    {}
func (*CampusRcmdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{227}
}
func (m *CampusRcmdReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdReq.Merge(m, src)
}
func (m *CampusRcmdReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdReq proto.InternalMessageInfo

func (m *CampusRcmdReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRcmdReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusRcmdReq) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CampusRcmdReq) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *CampusRcmdReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusRcmdReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

func (m *CampusRcmdReq) GetPageType() CampusHomePageType {
	if m != nil {
		return m.PageType
	}
	return CampusHomePageType_PAGE_MAJOR
}

type CampusRcmdReply struct {
	// 顶部展示信息
	Top *CampusRcmdTop `protobuf:"bytes,1,opt,name=top,proto3" json:"top,omitempty"`
	// 推荐校园列表
	Rcmd *CampusRcmdInfo `protobuf:"bytes,2,opt,name=rcmd,proto3" json:"rcmd,omitempty"`
	// 顶部展示信息（包括tab/banner/学校）
	CampusTop *CampusTop `protobuf:"bytes,3,opt,name=campus_top,json=campusTop,proto3" json:"campus_top,omitempty"`
	// 页面类型（1:已开通学校的主推荐页  2:学校未开通或者未选择学校的次推荐页 )
	PageType int32 `protobuf:"varint,4,opt,name=page_type,json=pageType,proto3" json:"page_type,omitempty"`
	// 是否跳转到首页校园的弹窗（0: 否 1: 是）
	JumpHomePop          int32    `protobuf:"varint,5,opt,name=jump_home_pop,json=jumpHomePop,proto3" json:"jump_home_pop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusRcmdReply) Reset()         { *m = CampusRcmdReply{} }
func (m *CampusRcmdReply) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdReply) ProtoMessage()    {}
func (*CampusRcmdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{228}
}
func (m *CampusRcmdReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdReply.Merge(m, src)
}
func (m *CampusRcmdReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdReply proto.InternalMessageInfo

func (m *CampusRcmdReply) GetTop() *CampusRcmdTop {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *CampusRcmdReply) GetRcmd() *CampusRcmdInfo {
	if m != nil {
		return m.Rcmd
	}
	return nil
}

func (m *CampusRcmdReply) GetCampusTop() *CampusTop {
	if m != nil {
		return m.CampusTop
	}
	return nil
}

func (m *CampusRcmdReply) GetPageType() int32 {
	if m != nil {
		return m.PageType
	}
	return 0
}

func (m *CampusRcmdReply) GetJumpHomePop() int32 {
	if m != nil {
		return m.JumpHomePop
	}
	return 0
}

type CampusRcmdTop struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 第一行文案
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 展示类型（0：未选择学校 1：选了学校已预约 2：选了学校未预约）
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	// 按钮
	Button *RcmdTopButton `protobuf:"bytes,6,opt,name=button,proto3" json:"button,omitempty"`
	//【切换】label
	SwitchLabel *CampusLabel `protobuf:"bytes,7,opt,name=switch_label,json=switchLabel,proto3" json:"switch_label,omitempty"`
	//【开启通知】label
	NoticeLabel *CampusLabel `protobuf:"bytes,8,opt,name=notice_label,json=noticeLabel,proto3" json:"notice_label,omitempty"`
	// 第二行文案
	Desc_2 string `protobuf:"bytes,9,opt,name=desc_2,json=desc2,proto3" json:"desc_2,omitempty"`
	// 有按钮的时候备选文案
	Desc_3 string `protobuf:"bytes,10,opt,name=desc_3,json=desc3,proto3" json:"desc_3,omitempty"`
	// 邀请校友按钮
	InviteLabel *CampusLabel `protobuf:"bytes,11,opt,name=invite_label,json=inviteLabel,proto3" json:"invite_label,omitempty"`
	// 预约 label
	ReserveLabel *CampusLabel `protobuf:"bytes,12,opt,name=reserve_label,json=reserveLabel,proto3" json:"reserve_label,omitempty"`
	// 预约人数
	ReserveNumber int64 `protobuf:"varint,13,opt,name=reserve_number,json=reserveNumber,proto3" json:"reserve_number,omitempty"`
	// 预约开校的人数上限
	MaxReserve int64 `protobuf:"varint,14,opt,name=max_reserve,json=maxReserve,proto3" json:"max_reserve,omitempty"`
	// 如何开校按钮
	SchoolLabel *CampusLabel `protobuf:"bytes,15,opt,name=school_label,json=schoolLabel,proto3" json:"school_label,omitempty"`
	// 校园管理按钮
	MngLabel *CampusLabel `protobuf:"bytes,16,opt,name=mng_label,json=mngLabel,proto3" json:"mng_label,omitempty"`
	// 校园热议卡
	RcmdTopic *CampusHomeRcmdTopic `protobuf:"bytes,17,opt,name=rcmd_topic,json=rcmdTopic,proto3" json:"rcmd_topic,omitempty"`
	// 是否待审核后才能开校
	// 只有在人数满足自动开校的要求后，如果学校需要先审后开，才会设置这个值
	// 客户端只需要看这个值为true的情况下，直接把预约/邀请按钮换成下面的文案就行
	AuditBeforeOpen bool `protobuf:"varint,18,opt,name=audit_before_open,json=auditBeforeOpen,proto3" json:"audit_before_open,omitempty"`
	// 先审后开提示信息
	AuditMessage         string   `protobuf:"bytes,19,opt,name=audit_message,json=auditMessage,proto3" json:"audit_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusRcmdTop) Reset()         { *m = CampusRcmdTop{} }
func (m *CampusRcmdTop) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdTop) ProtoMessage()    {}
func (*CampusRcmdTop) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{229}
}
func (m *CampusRcmdTop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdTop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdTop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdTop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdTop.Merge(m, src)
}
func (m *CampusRcmdTop) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdTop) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdTop.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdTop proto.InternalMessageInfo

func (m *CampusRcmdTop) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRcmdTop) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusRcmdTop) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusRcmdTop) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CampusRcmdTop) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CampusRcmdTop) GetButton() *RcmdTopButton {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *CampusRcmdTop) GetSwitchLabel() *CampusLabel {
	if m != nil {
		return m.SwitchLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetNoticeLabel() *CampusLabel {
	if m != nil {
		return m.NoticeLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetDesc_2() string {
	if m != nil {
		return m.Desc_2
	}
	return ""
}

func (m *CampusRcmdTop) GetDesc_3() string {
	if m != nil {
		return m.Desc_3
	}
	return ""
}

func (m *CampusRcmdTop) GetInviteLabel() *CampusLabel {
	if m != nil {
		return m.InviteLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetReserveLabel() *CampusLabel {
	if m != nil {
		return m.ReserveLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetReserveNumber() int64 {
	if m != nil {
		return m.ReserveNumber
	}
	return 0
}

func (m *CampusRcmdTop) GetMaxReserve() int64 {
	if m != nil {
		return m.MaxReserve
	}
	return 0
}

func (m *CampusRcmdTop) GetSchoolLabel() *CampusLabel {
	if m != nil {
		return m.SchoolLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetMngLabel() *CampusLabel {
	if m != nil {
		return m.MngLabel
	}
	return nil
}

func (m *CampusRcmdTop) GetRcmdTopic() *CampusHomeRcmdTopic {
	if m != nil {
		return m.RcmdTopic
	}
	return nil
}

func (m *CampusRcmdTop) GetAuditBeforeOpen() bool {
	if m != nil {
		return m.AuditBeforeOpen
	}
	return false
}

func (m *CampusRcmdTop) GetAuditMessage() string {
	if m != nil {
		return m.AuditMessage
	}
	return ""
}

type RcmdTopButton struct {
	// 按钮文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// url
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdTopButton) Reset()         { *m = RcmdTopButton{} }
func (m *RcmdTopButton) String() string { return proto.CompactTextString(m) }
func (*RcmdTopButton) ProtoMessage()    {}
func (*RcmdTopButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{230}
}
func (m *RcmdTopButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdTopButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdTopButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdTopButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdTopButton.Merge(m, src)
}
func (m *RcmdTopButton) XXX_Size() int {
	return m.Size()
}
func (m *RcmdTopButton) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdTopButton.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdTopButton proto.InternalMessageInfo

func (m *RcmdTopButton) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RcmdTopButton) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CampusRcmdInfo struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 推荐学校
	Items                []*CampusRcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusRcmdInfo) Reset()         { *m = CampusRcmdInfo{} }
func (m *CampusRcmdInfo) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdInfo) ProtoMessage()    {}
func (*CampusRcmdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{231}
}
func (m *CampusRcmdInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdInfo.Merge(m, src)
}
func (m *CampusRcmdInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdInfo proto.InternalMessageInfo

func (m *CampusRcmdInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusRcmdInfo) GetItems() []*CampusRcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type CampusRcmdItem struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 推荐卡片列表
	Items []*RcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// 学校ID
	CampusId int64 `protobuf:"varint,3,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	//【进入】label
	EntryLabel           *CampusLabel `protobuf:"bytes,4,opt,name=entry_label,json=entryLabel,proto3" json:"entry_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CampusRcmdItem) Reset()         { *m = CampusRcmdItem{} }
func (m *CampusRcmdItem) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdItem) ProtoMessage()    {}
func (*CampusRcmdItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{232}
}
func (m *CampusRcmdItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdItem.Merge(m, src)
}
func (m *CampusRcmdItem) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdItem.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdItem proto.InternalMessageInfo

func (m *CampusRcmdItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusRcmdItem) GetItems() []*RcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CampusRcmdItem) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRcmdItem) GetEntryLabel() *CampusLabel {
	if m != nil {
		return m.EntryLabel
	}
	return nil
}

// CampusLabel 推荐校园-可点击label
type CampusLabel struct {
	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// url
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 描述
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusLabel) Reset()         { *m = CampusLabel{} }
func (m *CampusLabel) String() string { return proto.CompactTextString(m) }
func (*CampusLabel) ProtoMessage()    {}
func (*CampusLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{233}
}
func (m *CampusLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusLabel.Merge(m, src)
}
func (m *CampusLabel) XXX_Size() int {
	return m.Size()
}
func (m *CampusLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusLabel.DiscardUnknown(m)
}

var xxx_messageInfo_CampusLabel proto.InternalMessageInfo

func (m *CampusLabel) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CampusLabel) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CampusLabel) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

// 设置预约校园开放通知
type SubscribeCampusReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,3,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscribeCampusReq) Reset()         { *m = SubscribeCampusReq{} }
func (m *SubscribeCampusReq) String() string { return proto.CompactTextString(m) }
func (*SubscribeCampusReq) ProtoMessage()    {}
func (*SubscribeCampusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{234}
}
func (m *SubscribeCampusReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubscribeCampusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubscribeCampusReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubscribeCampusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCampusReq.Merge(m, src)
}
func (m *SubscribeCampusReq) XXX_Size() int {
	return m.Size()
}
func (m *SubscribeCampusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCampusReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCampusReq proto.InternalMessageInfo

func (m *SubscribeCampusReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *SubscribeCampusReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *SubscribeCampusReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// 设置校园
type SetRecentCampusReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,3,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetRecentCampusReq) Reset()         { *m = SetRecentCampusReq{} }
func (m *SetRecentCampusReq) String() string { return proto.CompactTextString(m) }
func (*SetRecentCampusReq) ProtoMessage()    {}
func (*SetRecentCampusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{235}
}
func (m *SetRecentCampusReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetRecentCampusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetRecentCampusReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetRecentCampusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRecentCampusReq.Merge(m, src)
}
func (m *SetRecentCampusReq) XXX_Size() int {
	return m.Size()
}
func (m *SetRecentCampusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRecentCampusReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetRecentCampusReq proto.InternalMessageInfo

func (m *SetRecentCampusReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *SetRecentCampusReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *SetRecentCampusReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// DynTabReq 动态tab请求参数
type DynTabReq struct {
	// 青少年模式 teenagers_mode=1 开启青少年模式
	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DynTabReq) Reset()         { *m = DynTabReq{} }
func (m *DynTabReq) String() string { return proto.CompactTextString(m) }
func (*DynTabReq) ProtoMessage()    {}
func (*DynTabReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{236}
}
func (m *DynTabReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynTabReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynTabReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynTabReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynTabReq.Merge(m, src)
}
func (m *DynTabReq) XXX_Size() int {
	return m.Size()
}
func (m *DynTabReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynTabReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynTabReq proto.InternalMessageInfo

func (m *DynTabReq) GetTeenagersMode() int32 {
	if m != nil {
		return m.TeenagersMode
	}
	return 0
}

func (m *DynTabReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// DynTabReply 动态tab返回
type DynTabReply struct {
	DynTab []*DynTab `protobuf:"bytes,1,rep,name=dyn_tab,json=dynTab,proto3" json:"dyn_tab,omitempty"`
	// 筛选器 all-综合 video-视频，其余的都透传给FeedFilter接口
	ScreenTab            []*DynScreenTab `protobuf:"bytes,2,rep,name=screen_tab,json=screenTab,proto3" json:"screen_tab,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DynTabReply) Reset()         { *m = DynTabReply{} }
func (m *DynTabReply) String() string { return proto.CompactTextString(m) }
func (*DynTabReply) ProtoMessage()    {}
func (*DynTabReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{237}
}
func (m *DynTabReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynTabReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynTabReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynTabReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynTabReply.Merge(m, src)
}
func (m *DynTabReply) XXX_Size() int {
	return m.Size()
}
func (m *DynTabReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynTabReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynTabReply proto.InternalMessageInfo

func (m *DynTabReply) GetDynTab() []*DynTab {
	if m != nil {
		return m.DynTab
	}
	return nil
}

func (m *DynTabReply) GetScreenTab() []*DynScreenTab {
	if m != nil {
		return m.ScreenTab
	}
	return nil
}

type DynScreenTab struct {
	// 展示文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 传参值
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynScreenTab) Reset()         { *m = DynScreenTab{} }
func (m *DynScreenTab) String() string { return proto.CompactTextString(m) }
func (*DynScreenTab) ProtoMessage()    {}
func (*DynScreenTab) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{238}
}
func (m *DynScreenTab) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynScreenTab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynScreenTab.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynScreenTab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynScreenTab.Merge(m, src)
}
func (m *DynScreenTab) XXX_Size() int {
	return m.Size()
}
func (m *DynScreenTab) XXX_DiscardUnknown() {
	xxx_messageInfo_DynScreenTab.DiscardUnknown(m)
}

var xxx_messageInfo_DynScreenTab proto.InternalMessageInfo

func (m *DynScreenTab) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DynScreenTab) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// DynTab 动态tab详情
type DynTab struct {
	// tab标题 优先展示用,未开启状态第一次请求返回同城,后续请求返回对应城市名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 气泡内容
	Bubble string `protobuf:"bytes,3,opt,name=bubble,proto3" json:"bubble,omitempty"`
	// 是否推红点
	RedPoint int32 `protobuf:"varint,4,opt,name=red_point,json=redPoint,proto3" json:"red_point,omitempty"`
	// 城市ID
	CityId int64 `protobuf:"varint,5,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 是否弹窗
	IsPopup int32 `protobuf:"varint,6,opt,name=is_popup,json=isPopup,proto3" json:"is_popup,omitempty"`
	// 弹窗内容
	Popup *Popup `protobuf:"bytes,7,opt,name=popup,proto3" json:"popup,omitempty"`
	// 是否默认tab
	DefaultTab bool `protobuf:"varint,8,opt,name=defaultTab,proto3" json:"defaultTab,omitempty"`
	// 副标题 对应城市名
	SubTitle string `protobuf:"bytes,9,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 锚点字段
	Anchor string `protobuf:"bytes,10,opt,name=anchor,proto3" json:"anchor,omitempty"`
	// 内测文案
	InternalTest string `protobuf:"bytes,11,opt,name=internal_test,json=internalTest,proto3" json:"internal_test,omitempty"`
	// 是否展示备选
	Type ShowType `protobuf:"varint,12,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ShowType" json:"type,omitempty"`
	// 备选
	BackUp *DynTab `protobuf:"bytes,13,opt,name=back_up,json=backUp,proto3" json:"back_up,omitempty"`
	// 是否跳转到首页校园的弹窗（0: 否 1: 是）
	JumpHomePop          string   `protobuf:"bytes,14,opt,name=jump_home_pop,json=jumpHomePop,proto3" json:"jump_home_pop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynTab) Reset()         { *m = DynTab{} }
func (m *DynTab) String() string { return proto.CompactTextString(m) }
func (*DynTab) ProtoMessage()    {}
func (*DynTab) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{239}
}
func (m *DynTab) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynTab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynTab.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynTab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynTab.Merge(m, src)
}
func (m *DynTab) XXX_Size() int {
	return m.Size()
}
func (m *DynTab) XXX_DiscardUnknown() {
	xxx_messageInfo_DynTab.DiscardUnknown(m)
}

var xxx_messageInfo_DynTab proto.InternalMessageInfo

func (m *DynTab) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DynTab) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *DynTab) GetBubble() string {
	if m != nil {
		return m.Bubble
	}
	return ""
}

func (m *DynTab) GetRedPoint() int32 {
	if m != nil {
		return m.RedPoint
	}
	return 0
}

func (m *DynTab) GetCityId() int64 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *DynTab) GetIsPopup() int32 {
	if m != nil {
		return m.IsPopup
	}
	return 0
}

func (m *DynTab) GetPopup() *Popup {
	if m != nil {
		return m.Popup
	}
	return nil
}

func (m *DynTab) GetDefaultTab() bool {
	if m != nil {
		return m.DefaultTab
	}
	return false
}

func (m *DynTab) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *DynTab) GetAnchor() string {
	if m != nil {
		return m.Anchor
	}
	return ""
}

func (m *DynTab) GetInternalTest() string {
	if m != nil {
		return m.InternalTest
	}
	return ""
}

func (m *DynTab) GetType() ShowType {
	if m != nil {
		return m.Type
	}
	return ShowType_show_type_none
}

func (m *DynTab) GetBackUp() *DynTab {
	if m != nil {
		return m.BackUp
	}
	return nil
}

func (m *DynTab) GetJumpHomePop() string {
	if m != nil {
		return m.JumpHomePop
	}
	return ""
}

// 动态tab弹窗详情
type Popup struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 文案
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 文案附加跳转地址
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Popup) Reset()         { *m = Popup{} }
func (m *Popup) String() string { return proto.CompactTextString(m) }
func (*Popup) ProtoMessage()    {}
func (*Popup) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{240}
}
func (m *Popup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Popup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Popup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Popup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Popup.Merge(m, src)
}
func (m *Popup) XXX_Size() int {
	return m.Size()
}
func (m *Popup) XXX_DiscardUnknown() {
	xxx_messageInfo_Popup.DiscardUnknown(m)
}

var xxx_messageInfo_Popup proto.InternalMessageInfo

func (m *Popup) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Popup) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Popup) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// 学校搜索请求
type SchoolSearchReq struct {
	// 搜索关键词
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SchoolSearchReq) Reset()         { *m = SchoolSearchReq{} }
func (m *SchoolSearchReq) String() string { return proto.CompactTextString(m) }
func (*SchoolSearchReq) ProtoMessage()    {}
func (*SchoolSearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{241}
}
func (m *SchoolSearchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SchoolSearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SchoolSearchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SchoolSearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchoolSearchReq.Merge(m, src)
}
func (m *SchoolSearchReq) XXX_Size() int {
	return m.Size()
}
func (m *SchoolSearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SchoolSearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SchoolSearchReq proto.InternalMessageInfo

func (m *SchoolSearchReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SchoolSearchReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// 学校搜索返回
type SchoolSearchReply struct {
	// 搜索列表
	Items []*CampusInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 提示文案
	Toast                *SearchToast `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SchoolSearchReply) Reset()         { *m = SchoolSearchReply{} }
func (m *SchoolSearchReply) String() string { return proto.CompactTextString(m) }
func (*SchoolSearchReply) ProtoMessage()    {}
func (*SchoolSearchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{242}
}
func (m *SchoolSearchReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SchoolSearchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SchoolSearchReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SchoolSearchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchoolSearchReply.Merge(m, src)
}
func (m *SchoolSearchReply) XXX_Size() int {
	return m.Size()
}
func (m *SchoolSearchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SchoolSearchReply.DiscardUnknown(m)
}

var xxx_messageInfo_SchoolSearchReply proto.InternalMessageInfo

func (m *SchoolSearchReply) GetItems() []*CampusInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SchoolSearchReply) GetToast() *SearchToast {
	if m != nil {
		return m.Toast
	}
	return nil
}

// 提示文案
type SearchToast struct {
	// 描述文字1
	DescText_1 string `protobuf:"bytes,1,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2           string   `protobuf:"bytes,2,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchToast) Reset()         { *m = SearchToast{} }
func (m *SearchToast) String() string { return proto.CompactTextString(m) }
func (*SearchToast) ProtoMessage()    {}
func (*SearchToast) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{243}
}
func (m *SearchToast) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchToast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchToast.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchToast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchToast.Merge(m, src)
}
func (m *SearchToast) XXX_Size() int {
	return m.Size()
}
func (m *SearchToast) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchToast.DiscardUnknown(m)
}

var xxx_messageInfo_SearchToast proto.InternalMessageInfo

func (m *SearchToast) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *SearchToast) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

type CampusInfo struct {
	// 校园ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 所在城市名+办学层次，例如：上海/大学
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 是否开通
	Online int64 `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`
	// 跳转链接
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusInfo) Reset()         { *m = CampusInfo{} }
func (m *CampusInfo) String() string { return proto.CompactTextString(m) }
func (*CampusInfo) ProtoMessage()    {}
func (*CampusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{244}
}
func (m *CampusInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusInfo.Merge(m, src)
}
func (m *CampusInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusInfo proto.InternalMessageInfo

func (m *CampusInfo) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusInfo) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CampusInfo) GetOnline() int64 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *CampusInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 学校推荐请求
type SchoolRecommendReq struct {
	// 纬度
	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float32 `protobuf:"fixed32,2,opt,name=lng,proto3" json:"lng,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,3,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SchoolRecommendReq) Reset()         { *m = SchoolRecommendReq{} }
func (m *SchoolRecommendReq) String() string { return proto.CompactTextString(m) }
func (*SchoolRecommendReq) ProtoMessage()    {}
func (*SchoolRecommendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{245}
}
func (m *SchoolRecommendReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SchoolRecommendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SchoolRecommendReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SchoolRecommendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchoolRecommendReq.Merge(m, src)
}
func (m *SchoolRecommendReq) XXX_Size() int {
	return m.Size()
}
func (m *SchoolRecommendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SchoolRecommendReq.DiscardUnknown(m)
}

var xxx_messageInfo_SchoolRecommendReq proto.InternalMessageInfo

func (m *SchoolRecommendReq) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *SchoolRecommendReq) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *SchoolRecommendReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// 学校推荐返回
type SchoolRecommendReply struct {
	// 推荐学校
	Items                []*CampusInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SchoolRecommendReply) Reset()         { *m = SchoolRecommendReply{} }
func (m *SchoolRecommendReply) String() string { return proto.CompactTextString(m) }
func (*SchoolRecommendReply) ProtoMessage()    {}
func (*SchoolRecommendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{246}
}
func (m *SchoolRecommendReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SchoolRecommendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SchoolRecommendReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SchoolRecommendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchoolRecommendReply.Merge(m, src)
}
func (m *SchoolRecommendReply) XXX_Size() int {
	return m.Size()
}
func (m *SchoolRecommendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SchoolRecommendReply.DiscardUnknown(m)
}

var xxx_messageInfo_SchoolRecommendReply proto.InternalMessageInfo

func (m *SchoolRecommendReply) GetItems() []*CampusInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// DynSpaceSearchDetailsReq 动态空间搜索页请求参数
type DynSpaceSearchDetailsReq struct {
	// 动态id
	DynamicIds []int64 `protobuf:"varint,1,rep,packed,name=dynamic_ids,json=dynamicIds,proto3" json:"dynamic_ids,omitempty"`
	// 搜索词
	SearchWords []string `protobuf:"bytes,2,rep,name=search_words,json=searchWords,proto3" json:"search_words,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// mobi_app
	MobiApp string `protobuf:"bytes,5,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	// device
	Device string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	// buvid
	Buvid string `protobuf:"bytes,7,opt,name=buvid,proto3" json:"buvid,omitempty"`
	// build
	Build int64 `protobuf:"varint,8,opt,name=build,proto3" json:"build,omitempty"`
	// mid
	Mid int64 `protobuf:"varint,9,opt,name=mid,proto3" json:"mid,omitempty"`
	// platform
	Platform string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	// 用户ip
	Ip string `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
	// 网络类型
	NetType NetworkType `protobuf:"varint,12,opt,name=net_type,json=netType,proto3,enum=bilibili.app.dynamic.v2.NetworkType" json:"net_type,omitempty"`
	// 免流类型
	TfType               TFType   `protobuf:"varint,13,opt,name=tf_type,json=tfType,proto3,enum=bilibili.app.dynamic.v2.TFType" json:"tf_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynSpaceSearchDetailsReq) Reset()         { *m = DynSpaceSearchDetailsReq{} }
func (m *DynSpaceSearchDetailsReq) String() string { return proto.CompactTextString(m) }
func (*DynSpaceSearchDetailsReq) ProtoMessage()    {}
func (*DynSpaceSearchDetailsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{247}
}
func (m *DynSpaceSearchDetailsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSpaceSearchDetailsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSpaceSearchDetailsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSpaceSearchDetailsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSpaceSearchDetailsReq.Merge(m, src)
}
func (m *DynSpaceSearchDetailsReq) XXX_Size() int {
	return m.Size()
}
func (m *DynSpaceSearchDetailsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSpaceSearchDetailsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DynSpaceSearchDetailsReq proto.InternalMessageInfo

func (m *DynSpaceSearchDetailsReq) GetDynamicIds() []int64 {
	if m != nil {
		return m.DynamicIds
	}
	return nil
}

func (m *DynSpaceSearchDetailsReq) GetSearchWords() []string {
	if m != nil {
		return m.SearchWords
	}
	return nil
}

func (m *DynSpaceSearchDetailsReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *DynSpaceSearchDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *DynSpaceSearchDetailsReq) GetMobiApp() string {
	if m != nil {
		return m.MobiApp
	}
	return ""
}

func (m *DynSpaceSearchDetailsReq) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *DynSpaceSearchDetailsReq) GetBuvid() string {
	if m != nil {
		return m.Buvid
	}
	return ""
}

func (m *DynSpaceSearchDetailsReq) GetBuild() int64 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *DynSpaceSearchDetailsReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *DynSpaceSearchDetailsReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *DynSpaceSearchDetailsReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DynSpaceSearchDetailsReq) GetNetType() NetworkType {
	if m != nil {
		return m.NetType
	}
	return NetworkType_NT_UNKNOWN
}

func (m *DynSpaceSearchDetailsReq) GetTfType() TFType {
	if m != nil {
		return m.TfType
	}
	return TFType_TF_UNKNOWN
}

type DynSpaceSearchDetailsReply struct {
	// 动态列表
	Items                map[int64]*DynamicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DynSpaceSearchDetailsReply) Reset()         { *m = DynSpaceSearchDetailsReply{} }
func (m *DynSpaceSearchDetailsReply) String() string { return proto.CompactTextString(m) }
func (*DynSpaceSearchDetailsReply) ProtoMessage()    {}
func (*DynSpaceSearchDetailsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{248}
}
func (m *DynSpaceSearchDetailsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DynSpaceSearchDetailsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DynSpaceSearchDetailsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DynSpaceSearchDetailsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynSpaceSearchDetailsReply.Merge(m, src)
}
func (m *DynSpaceSearchDetailsReply) XXX_Size() int {
	return m.Size()
}
func (m *DynSpaceSearchDetailsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DynSpaceSearchDetailsReply.DiscardUnknown(m)
}

var xxx_messageInfo_DynSpaceSearchDetailsReply proto.InternalMessageInfo

func (m *DynSpaceSearchDetailsReply) GetItems() map[int64]*DynamicItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type OfficialAccountsReq struct {
	// 校园ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 首页刷新0，之后每次刷新用上一次的offset
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,4,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OfficialAccountsReq) Reset()         { *m = OfficialAccountsReq{} }
func (m *OfficialAccountsReq) String() string { return proto.CompactTextString(m) }
func (*OfficialAccountsReq) ProtoMessage()    {}
func (*OfficialAccountsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{249}
}
func (m *OfficialAccountsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialAccountsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialAccountsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialAccountsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialAccountsReq.Merge(m, src)
}
func (m *OfficialAccountsReq) XXX_Size() int {
	return m.Size()
}
func (m *OfficialAccountsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialAccountsReq.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialAccountsReq proto.InternalMessageInfo

func (m *OfficialAccountsReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *OfficialAccountsReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *OfficialAccountsReq) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *OfficialAccountsReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type OfficialAccountsReply struct {
	// 官方账号列表
	Items []*OfficialAccountInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 是否更多
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 翻页用
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialAccountsReply) Reset()         { *m = OfficialAccountsReply{} }
func (m *OfficialAccountsReply) String() string { return proto.CompactTextString(m) }
func (*OfficialAccountsReply) ProtoMessage()    {}
func (*OfficialAccountsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{250}
}
func (m *OfficialAccountsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialAccountsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialAccountsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialAccountsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialAccountsReply.Merge(m, src)
}
func (m *OfficialAccountsReply) XXX_Size() int {
	return m.Size()
}
func (m *OfficialAccountsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialAccountsReply.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialAccountsReply proto.InternalMessageInfo

func (m *OfficialAccountsReply) GetItems() []*OfficialAccountInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OfficialAccountsReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *OfficialAccountsReply) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type OfficialAccountInfo struct {
	// 用户详情
	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	// 副标题1
	DescText_1 string `protobuf:"bytes,5,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 副标题2
	DescText_2           string   `protobuf:"bytes,6,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialAccountInfo) Reset()         { *m = OfficialAccountInfo{} }
func (m *OfficialAccountInfo) String() string { return proto.CompactTextString(m) }
func (*OfficialAccountInfo) ProtoMessage()    {}
func (*OfficialAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{251}
}
func (m *OfficialAccountInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialAccountInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialAccountInfo.Merge(m, src)
}
func (m *OfficialAccountInfo) XXX_Size() int {
	return m.Size()
}
func (m *OfficialAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialAccountInfo proto.InternalMessageInfo

func (m *OfficialAccountInfo) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *OfficialAccountInfo) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *OfficialAccountInfo) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *OfficialAccountInfo) GetRelation() *Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (m *OfficialAccountInfo) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *OfficialAccountInfo) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

type OfficialDynamicsReq struct {
	// 校园ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 首页刷新0，之后每次刷新用上一次的offset
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,4,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OfficialDynamicsReq) Reset()         { *m = OfficialDynamicsReq{} }
func (m *OfficialDynamicsReq) String() string { return proto.CompactTextString(m) }
func (*OfficialDynamicsReq) ProtoMessage()    {}
func (*OfficialDynamicsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{252}
}
func (m *OfficialDynamicsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialDynamicsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialDynamicsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialDynamicsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialDynamicsReq.Merge(m, src)
}
func (m *OfficialDynamicsReq) XXX_Size() int {
	return m.Size()
}
func (m *OfficialDynamicsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialDynamicsReq.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialDynamicsReq proto.InternalMessageInfo

func (m *OfficialDynamicsReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *OfficialDynamicsReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *OfficialDynamicsReq) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *OfficialDynamicsReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type OfficialDynamicsReply struct {
	// 推荐列表
	Items []*OfficialItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 翻页用
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否更多
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OfficialDynamicsReply) Reset()         { *m = OfficialDynamicsReply{} }
func (m *OfficialDynamicsReply) String() string { return proto.CompactTextString(m) }
func (*OfficialDynamicsReply) ProtoMessage()    {}
func (*OfficialDynamicsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{253}
}
func (m *OfficialDynamicsReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialDynamicsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialDynamicsReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialDynamicsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialDynamicsReply.Merge(m, src)
}
func (m *OfficialDynamicsReply) XXX_Size() int {
	return m.Size()
}
func (m *OfficialDynamicsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialDynamicsReply.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialDynamicsReply proto.InternalMessageInfo

func (m *OfficialDynamicsReply) GetItems() []*OfficialItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OfficialDynamicsReply) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *OfficialDynamicsReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *OfficialDynamicsReply) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

type OfficialItem struct {
	// 卡片类型
	Type RcmdType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.RcmdType" json:"type,omitempty"`
	// 卡片列表
	//
	// Types that are valid to be assigned to RcmdItem:
	//	*OfficialItem_RcmdArchive
	//	*OfficialItem_RcmdDynamic
	RcmdItem             isOfficialItem_RcmdItem `protobuf_oneof:"rcmd_item"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *OfficialItem) Reset()         { *m = OfficialItem{} }
func (m *OfficialItem) String() string { return proto.CompactTextString(m) }
func (*OfficialItem) ProtoMessage()    {}
func (*OfficialItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{254}
}
func (m *OfficialItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialItem.Merge(m, src)
}
func (m *OfficialItem) XXX_Size() int {
	return m.Size()
}
func (m *OfficialItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialItem.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialItem proto.InternalMessageInfo

type isOfficialItem_RcmdItem interface {
	isOfficialItem_RcmdItem()
	MarshalTo([]byte) (int, error)
	Size() int
}

type OfficialItem_RcmdArchive struct {
	RcmdArchive *OfficialRcmdArchive `protobuf:"bytes,2,opt,name=rcmd_archive,json=rcmdArchive,proto3,oneof" json:"rcmd_archive,omitempty"`
}
type OfficialItem_RcmdDynamic struct {
	RcmdDynamic *OfficialRcmdDynamic `protobuf:"bytes,3,opt,name=rcmd_dynamic,json=rcmdDynamic,proto3,oneof" json:"rcmd_dynamic,omitempty"`
}

func (*OfficialItem_RcmdArchive) isOfficialItem_RcmdItem() {}
func (*OfficialItem_RcmdDynamic) isOfficialItem_RcmdItem() {}

func (m *OfficialItem) GetRcmdItem() isOfficialItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (m *OfficialItem) GetType() RcmdType {
	if m != nil {
		return m.Type
	}
	return RcmdType_rcmd_archive
}

func (m *OfficialItem) GetRcmdArchive() *OfficialRcmdArchive {
	if x, ok := m.GetRcmdItem().(*OfficialItem_RcmdArchive); ok {
		return x.RcmdArchive
	}
	return nil
}

func (m *OfficialItem) GetRcmdDynamic() *OfficialRcmdDynamic {
	if x, ok := m.GetRcmdItem().(*OfficialItem_RcmdDynamic); ok {
		return x.RcmdDynamic
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OfficialItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OfficialItem_RcmdArchive)(nil),
		(*OfficialItem_RcmdDynamic)(nil),
	}
}

type OfficialRcmdArchive struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 封面右侧文案
	CoverRightText string `protobuf:"bytes,3,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	// 副文本 icon 1
	DescIcon_1 CoverIcon `protobuf:"varint,4,opt,name=desc_icon_1,json=descIcon1,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"desc_icon_1,omitempty"`
	// 副文本 文案 1
	DescText_1 string `protobuf:"bytes,5,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 副文本 icon 2
	DescIcon_2 CoverIcon `protobuf:"varint,6,opt,name=desc_icon_2,json=descIcon2,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"desc_icon_2,omitempty"`
	// 副文本 文案 2
	DescText_2 string `protobuf:"bytes,7,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 推荐理由
	Reason string `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	// 是否展示三点
	ShowThreePoint bool `protobuf:"varint,9,opt,name=show_three_point,json=showThreePoint,proto3" json:"show_three_point,omitempty"`
	// 跳转url
	Uri string `protobuf:"bytes,10,opt,name=uri,proto3" json:"uri,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,11,opt,name=aid,proto3" json:"aid,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,12,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// 关联的动态id
	DynamicId int64 `protobuf:"varint,14,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 对应稿件的cid  一般是第一p的cid
	Cid                  int64    `protobuf:"varint,15,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialRcmdArchive) Reset()         { *m = OfficialRcmdArchive{} }
func (m *OfficialRcmdArchive) String() string { return proto.CompactTextString(m) }
func (*OfficialRcmdArchive) ProtoMessage()    {}
func (*OfficialRcmdArchive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{255}
}
func (m *OfficialRcmdArchive) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialRcmdArchive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialRcmdArchive.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialRcmdArchive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialRcmdArchive.Merge(m, src)
}
func (m *OfficialRcmdArchive) XXX_Size() int {
	return m.Size()
}
func (m *OfficialRcmdArchive) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialRcmdArchive.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialRcmdArchive proto.InternalMessageInfo

func (m *OfficialRcmdArchive) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OfficialRcmdArchive) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *OfficialRcmdArchive) GetCoverRightText() string {
	if m != nil {
		return m.CoverRightText
	}
	return ""
}

func (m *OfficialRcmdArchive) GetDescIcon_1() CoverIcon {
	if m != nil {
		return m.DescIcon_1
	}
	return CoverIcon_cover_icon_none
}

func (m *OfficialRcmdArchive) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *OfficialRcmdArchive) GetDescIcon_2() CoverIcon {
	if m != nil {
		return m.DescIcon_2
	}
	return CoverIcon_cover_icon_none
}

func (m *OfficialRcmdArchive) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *OfficialRcmdArchive) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *OfficialRcmdArchive) GetShowThreePoint() bool {
	if m != nil {
		return m.ShowThreePoint
	}
	return false
}

func (m *OfficialRcmdArchive) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *OfficialRcmdArchive) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *OfficialRcmdArchive) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *OfficialRcmdArchive) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OfficialRcmdArchive) GetDynamicId() int64 {
	if m != nil {
		return m.DynamicId
	}
	return 0
}

func (m *OfficialRcmdArchive) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

type OfficialRcmdDynamic struct {
	// 动态文字部分 用作标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 封面右上角的文案
	CoverRightTopText string `protobuf:"bytes,3,opt,name=cover_right_top_text,json=coverRightTopText,proto3" json:"cover_right_top_text,omitempty"`
	// 副文本 icon 1
	DescIcon_1 CoverIcon `protobuf:"varint,4,opt,name=desc_icon_1,json=descIcon1,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"desc_icon_1,omitempty"`
	// 副文本 文案 1
	DescText_1 string `protobuf:"bytes,5,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 副文本 icon 2
	DescIcon_2 CoverIcon `protobuf:"varint,6,opt,name=desc_icon_2,json=descIcon2,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"desc_icon_2,omitempty"`
	// 副文本 文案 2
	DescText_2 string `protobuf:"bytes,7,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 上榜理由
	Reason string `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,9,opt,name=uri,proto3" json:"uri,omitempty"`
	// 动态id
	DynamicId int64 `protobuf:"varint,10,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态作者mid
	Mid int64 `protobuf:"varint,11,opt,name=mid,proto3" json:"mid,omitempty"`
	// 动态作者名称
	UserName string `protobuf:"bytes,12,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 动态内嵌的资源id
	Rid                  int64    `protobuf:"varint,13,opt,name=rid,proto3" json:"rid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfficialRcmdDynamic) Reset()         { *m = OfficialRcmdDynamic{} }
func (m *OfficialRcmdDynamic) String() string { return proto.CompactTextString(m) }
func (*OfficialRcmdDynamic) ProtoMessage()    {}
func (*OfficialRcmdDynamic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{256}
}
func (m *OfficialRcmdDynamic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OfficialRcmdDynamic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OfficialRcmdDynamic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OfficialRcmdDynamic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfficialRcmdDynamic.Merge(m, src)
}
func (m *OfficialRcmdDynamic) XXX_Size() int {
	return m.Size()
}
func (m *OfficialRcmdDynamic) XXX_DiscardUnknown() {
	xxx_messageInfo_OfficialRcmdDynamic.DiscardUnknown(m)
}

var xxx_messageInfo_OfficialRcmdDynamic proto.InternalMessageInfo

func (m *OfficialRcmdDynamic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetCoverRightTopText() string {
	if m != nil {
		return m.CoverRightTopText
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetDescIcon_1() CoverIcon {
	if m != nil {
		return m.DescIcon_1
	}
	return CoverIcon_cover_icon_none
}

func (m *OfficialRcmdDynamic) GetDescText_1() string {
	if m != nil {
		return m.DescText_1
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetDescIcon_2() CoverIcon {
	if m != nil {
		return m.DescIcon_2
	}
	return CoverIcon_cover_icon_none
}

func (m *OfficialRcmdDynamic) GetDescText_2() string {
	if m != nil {
		return m.DescText_2
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetDynamicId() int64 {
	if m != nil {
		return m.DynamicId
	}
	return 0
}

func (m *OfficialRcmdDynamic) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *OfficialRcmdDynamic) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *OfficialRcmdDynamic) GetRid() int64 {
	if m != nil {
		return m.Rid
	}
	return 0
}

type CampusRedDotReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusRedDotReq) Reset()         { *m = CampusRedDotReq{} }
func (m *CampusRedDotReq) String() string { return proto.CompactTextString(m) }
func (*CampusRedDotReq) ProtoMessage()    {}
func (*CampusRedDotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{257}
}
func (m *CampusRedDotReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRedDotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRedDotReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRedDotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRedDotReq.Merge(m, src)
}
func (m *CampusRedDotReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusRedDotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRedDotReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRedDotReq proto.InternalMessageInfo

func (m *CampusRedDotReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRedDotReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusRedDotReply struct {
	// 红点 0：无、1：有
	RedDot               int32    `protobuf:"varint,1,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusRedDotReply) Reset()         { *m = CampusRedDotReply{} }
func (m *CampusRedDotReply) String() string { return proto.CompactTextString(m) }
func (*CampusRedDotReply) ProtoMessage()    {}
func (*CampusRedDotReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{258}
}
func (m *CampusRedDotReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRedDotReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRedDotReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRedDotReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRedDotReply.Merge(m, src)
}
func (m *CampusRedDotReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusRedDotReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRedDotReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRedDotReply proto.InternalMessageInfo

func (m *CampusRedDotReply) GetRedDot() int32 {
	if m != nil {
		return m.RedDot
	}
	return 0
}

// 校内主推荐FEED流
type CampusRcmdFeedReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 是否是首次进入（0：否，1：是）
	FirstTime int32 `protobuf:"varint,2,opt,name=first_time,json=firstTime,proto3" json:"first_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// 滚动方向 0：（默认）来自于向下浏览，即上滑加载更多，对于第一页数据就相当于顶部下拉刷新（从第0页过来看第1页），639版本前没有该字段就以此为默认
	//1：来自于向上浏览，到了第一页也不会触发重建用户的榜单
	Scroll int32 `protobuf:"varint,6,opt,name=scroll,proto3" json:"scroll,omitempty"`
	// 上次用户已读的最深动态ID
	ViewDynId string `protobuf:"bytes,7,opt,name=view_dyn_id,json=viewDynId,proto3" json:"view_dyn_id,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,8,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusRcmdFeedReq) Reset()         { *m = CampusRcmdFeedReq{} }
func (m *CampusRcmdFeedReq) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdFeedReq) ProtoMessage()    {}
func (*CampusRcmdFeedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{259}
}
func (m *CampusRcmdFeedReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdFeedReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdFeedReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdFeedReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdFeedReq.Merge(m, src)
}
func (m *CampusRcmdFeedReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdFeedReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdFeedReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdFeedReq proto.InternalMessageInfo

func (m *CampusRcmdFeedReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRcmdFeedReq) GetFirstTime() int32 {
	if m != nil {
		return m.FirstTime
	}
	return 0
}

func (m *CampusRcmdFeedReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusRcmdFeedReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *CampusRcmdFeedReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *CampusRcmdFeedReq) GetScroll() int32 {
	if m != nil {
		return m.Scroll
	}
	return 0
}

func (m *CampusRcmdFeedReq) GetViewDynId() string {
	if m != nil {
		return m.ViewDynId
	}
	return ""
}

func (m *CampusRcmdFeedReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusRcmdFeedReply struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新提示
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	// 引导栏信息
	GuideBar *GuideBarInfo `protobuf:"bytes,3,opt,name=guide_bar,json=guideBar,proto3" json:"guide_bar,omitempty"`
	// 是否有更多
	HasMore bool `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 是否有更新。仅在第一页有含义
	Update               bool     `protobuf:"varint,5,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusRcmdFeedReply) Reset()         { *m = CampusRcmdFeedReply{} }
func (m *CampusRcmdFeedReply) String() string { return proto.CompactTextString(m) }
func (*CampusRcmdFeedReply) ProtoMessage()    {}
func (*CampusRcmdFeedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{260}
}
func (m *CampusRcmdFeedReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRcmdFeedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRcmdFeedReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRcmdFeedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRcmdFeedReply.Merge(m, src)
}
func (m *CampusRcmdFeedReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusRcmdFeedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRcmdFeedReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRcmdFeedReply proto.InternalMessageInfo

func (m *CampusRcmdFeedReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CampusRcmdFeedReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

func (m *CampusRcmdFeedReply) GetGuideBar() *GuideBarInfo {
	if m != nil {
		return m.GuideBar
	}
	return nil
}

func (m *CampusRcmdFeedReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *CampusRcmdFeedReply) GetUpdate() bool {
	if m != nil {
		return m.Update
	}
	return false
}

type GuideBarInfo struct {
	// 红条引导栏是否展示 0：不展示 1：展示
	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	// 红条引导栏出现的页码
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 红条引导栏出现位置（举例：2表示第二张卡片后出现）
	Position int32 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	// 红条引导栏文案
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 红条引导栏点击跳转到的页码
	JumpPage int32 `protobuf:"varint,5,opt,name=jump_page,json=jumpPage,proto3" json:"jump_page,omitempty"`
	// 红条引导栏点击跳转到的页码中的跳转位置
	JumpPosition         int32    `protobuf:"varint,6,opt,name=jump_position,json=jumpPosition,proto3" json:"jump_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuideBarInfo) Reset()         { *m = GuideBarInfo{} }
func (m *GuideBarInfo) String() string { return proto.CompactTextString(m) }
func (*GuideBarInfo) ProtoMessage()    {}
func (*GuideBarInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{261}
}
func (m *GuideBarInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GuideBarInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GuideBarInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GuideBarInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuideBarInfo.Merge(m, src)
}
func (m *GuideBarInfo) XXX_Size() int {
	return m.Size()
}
func (m *GuideBarInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GuideBarInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GuideBarInfo proto.InternalMessageInfo

func (m *GuideBarInfo) GetShow() int32 {
	if m != nil {
		return m.Show
	}
	return 0
}

func (m *GuideBarInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GuideBarInfo) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *GuideBarInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *GuideBarInfo) GetJumpPage() int32 {
	if m != nil {
		return m.JumpPage
	}
	return 0
}

func (m *GuideBarInfo) GetJumpPosition() int32 {
	if m != nil {
		return m.JumpPosition
	}
	return 0
}

type TopicSquareReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TopicSquareReq) Reset()         { *m = TopicSquareReq{} }
func (m *TopicSquareReq) String() string { return proto.CompactTextString(m) }
func (*TopicSquareReq) ProtoMessage()    {}
func (*TopicSquareReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{262}
}
func (m *TopicSquareReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicSquareReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicSquareReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicSquareReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSquareReq.Merge(m, src)
}
func (m *TopicSquareReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicSquareReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSquareReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSquareReq proto.InternalMessageInfo

func (m *TopicSquareReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *TopicSquareReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type TopicSquareReply struct {
	// 话题广场
	Info                 *TopicSquareInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TopicSquareReply) Reset()         { *m = TopicSquareReply{} }
func (m *TopicSquareReply) String() string { return proto.CompactTextString(m) }
func (*TopicSquareReply) ProtoMessage()    {}
func (*TopicSquareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{263}
}
func (m *TopicSquareReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicSquareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicSquareReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicSquareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSquareReply.Merge(m, src)
}
func (m *TopicSquareReply) XXX_Size() int {
	return m.Size()
}
func (m *TopicSquareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSquareReply.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSquareReply proto.InternalMessageInfo

func (m *TopicSquareReply) GetInfo() *TopicSquareInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type TopicSquareInfo struct {
	// 广场标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 按钮
	Button *CampusLabel `protobuf:"bytes,2,opt,name=button,proto3" json:"button,omitempty"`
	// 校园话题推荐大卡
	Rcmd                 *TopicRcmdCard `protobuf:"bytes,3,opt,name=rcmd,proto3" json:"rcmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TopicSquareInfo) Reset()         { *m = TopicSquareInfo{} }
func (m *TopicSquareInfo) String() string { return proto.CompactTextString(m) }
func (*TopicSquareInfo) ProtoMessage()    {}
func (*TopicSquareInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{264}
}
func (m *TopicSquareInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicSquareInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicSquareInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicSquareInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicSquareInfo.Merge(m, src)
}
func (m *TopicSquareInfo) XXX_Size() int {
	return m.Size()
}
func (m *TopicSquareInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicSquareInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicSquareInfo proto.InternalMessageInfo

func (m *TopicSquareInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TopicSquareInfo) GetButton() *CampusLabel {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *TopicSquareInfo) GetRcmd() *TopicRcmdCard {
	if m != nil {
		return m.Rcmd
	}
	return nil
}

type TopicRcmdCard struct {
	// 话题ID
	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// 卡片url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *CampusLabel `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
	// 正文描述1
	Desc_1 string `protobuf:"bytes,5,opt,name=desc_1,json=desc1,proto3" json:"desc_1,omitempty"`
	// 正文描述2
	Desc_2 string `protobuf:"bytes,6,opt,name=desc_2,json=desc2,proto3" json:"desc_2,omitempty"`
	// 更新数
	UpdateDesc           string   `protobuf:"bytes,7,opt,name=update_desc,json=updateDesc,proto3" json:"update_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicRcmdCard) Reset()         { *m = TopicRcmdCard{} }
func (m *TopicRcmdCard) String() string { return proto.CompactTextString(m) }
func (*TopicRcmdCard) ProtoMessage()    {}
func (*TopicRcmdCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{265}
}
func (m *TopicRcmdCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicRcmdCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicRcmdCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicRcmdCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicRcmdCard.Merge(m, src)
}
func (m *TopicRcmdCard) XXX_Size() int {
	return m.Size()
}
func (m *TopicRcmdCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicRcmdCard.DiscardUnknown(m)
}

var xxx_messageInfo_TopicRcmdCard proto.InternalMessageInfo

func (m *TopicRcmdCard) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *TopicRcmdCard) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *TopicRcmdCard) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TopicRcmdCard) GetButton() *CampusLabel {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *TopicRcmdCard) GetDesc_1() string {
	if m != nil {
		return m.Desc_1
	}
	return ""
}

func (m *TopicRcmdCard) GetDesc_2() string {
	if m != nil {
		return m.Desc_2
	}
	return ""
}

func (m *TopicRcmdCard) GetUpdateDesc() string {
	if m != nil {
		return m.UpdateDesc
	}
	return ""
}

type TopicListReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 上次回包的偏移值
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,3,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TopicListReq) Reset()         { *m = TopicListReq{} }
func (m *TopicListReq) String() string { return proto.CompactTextString(m) }
func (*TopicListReq) ProtoMessage()    {}
func (*TopicListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{266}
}
func (m *TopicListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicListReq.Merge(m, src)
}
func (m *TopicListReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicListReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicListReq proto.InternalMessageInfo

func (m *TopicListReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *TopicListReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *TopicListReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type TopicListReply struct {
	// 列表
	Items []*TopicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 是否有更多
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 偏移值
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 创建话题的按钮
	CreateTopicBtn       *IconButton `protobuf:"bytes,4,opt,name=create_topic_btn,json=createTopicBtn,proto3" json:"create_topic_btn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TopicListReply) Reset()         { *m = TopicListReply{} }
func (m *TopicListReply) String() string { return proto.CompactTextString(m) }
func (*TopicListReply) ProtoMessage()    {}
func (*TopicListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{267}
}
func (m *TopicListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicListReply.Merge(m, src)
}
func (m *TopicListReply) XXX_Size() int {
	return m.Size()
}
func (m *TopicListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicListReply.DiscardUnknown(m)
}

var xxx_messageInfo_TopicListReply proto.InternalMessageInfo

func (m *TopicListReply) GetItems() []*TopicItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TopicListReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *TopicListReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *TopicListReply) GetCreateTopicBtn() *IconButton {
	if m != nil {
		return m.CreateTopicBtn
	}
	return nil
}

type TopicItem struct {
	// 话题ID
	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// 描述 账号昵称
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 描述2 浏览信息+投稿信息
	Desc_2 string `protobuf:"bytes,5,opt,name=desc_2,json=desc2,proto3" json:"desc_2,omitempty"`
	// 推荐描述
	RcmdDesc string `protobuf:"bytes,6,opt,name=rcmd_desc,json=rcmdDesc,proto3" json:"rcmd_desc,omitempty"`
	// 动作按钮
	Button               *IconButton `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TopicItem) Reset()         { *m = TopicItem{} }
func (m *TopicItem) String() string { return proto.CompactTextString(m) }
func (*TopicItem) ProtoMessage()    {}
func (*TopicItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{268}
}
func (m *TopicItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicItem.Merge(m, src)
}
func (m *TopicItem) XXX_Size() int {
	return m.Size()
}
func (m *TopicItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicItem.DiscardUnknown(m)
}

var xxx_messageInfo_TopicItem proto.InternalMessageInfo

func (m *TopicItem) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *TopicItem) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *TopicItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TopicItem) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *TopicItem) GetDesc_2() string {
	if m != nil {
		return m.Desc_2
	}
	return ""
}

func (m *TopicItem) GetRcmdDesc() string {
	if m != nil {
		return m.RcmdDesc
	}
	return ""
}

func (m *TopicItem) GetButton() *IconButton {
	if m != nil {
		return m.Button
	}
	return nil
}

// 校园动态同学点赞列表
type CampusMateLikeListReq struct {
	DynamicId int64 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,2,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusMateLikeListReq) Reset()         { *m = CampusMateLikeListReq{} }
func (m *CampusMateLikeListReq) String() string { return proto.CompactTextString(m) }
func (*CampusMateLikeListReq) ProtoMessage()    {}
func (*CampusMateLikeListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{269}
}
func (m *CampusMateLikeListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMateLikeListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMateLikeListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMateLikeListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMateLikeListReq.Merge(m, src)
}
func (m *CampusMateLikeListReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusMateLikeListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMateLikeListReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMateLikeListReq proto.InternalMessageInfo

func (m *CampusMateLikeListReq) GetDynamicId() int64 {
	if m != nil {
		return m.DynamicId
	}
	return 0
}

func (m *CampusMateLikeListReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusMateLikeListReply struct {
	// 用户模块列表 最多100个
	List                 []*ModuleAuthor `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CampusMateLikeListReply) Reset()         { *m = CampusMateLikeListReply{} }
func (m *CampusMateLikeListReply) String() string { return proto.CompactTextString(m) }
func (*CampusMateLikeListReply) ProtoMessage()    {}
func (*CampusMateLikeListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{270}
}
func (m *CampusMateLikeListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMateLikeListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMateLikeListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMateLikeListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMateLikeListReply.Merge(m, src)
}
func (m *CampusMateLikeListReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusMateLikeListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMateLikeListReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMateLikeListReply proto.InternalMessageInfo

func (m *CampusMateLikeListReply) GetList() []*ModuleAuthor {
	if m != nil {
		return m.List
	}
	return nil
}

type CampusFeedbackReq struct {
	// 包含多种反馈信息
	Infos []*CampusFeedbackInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	// 反馈来源 0:校友圈 1:校园十大榜单 2:校园话题讨论
	From int32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,3,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusFeedbackReq) Reset()         { *m = CampusFeedbackReq{} }
func (m *CampusFeedbackReq) String() string { return proto.CompactTextString(m) }
func (*CampusFeedbackReq) ProtoMessage()    {}
func (*CampusFeedbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{271}
}
func (m *CampusFeedbackReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusFeedbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusFeedbackReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusFeedbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusFeedbackReq.Merge(m, src)
}
func (m *CampusFeedbackReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusFeedbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusFeedbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusFeedbackReq proto.InternalMessageInfo

func (m *CampusFeedbackReq) GetInfos() []*CampusFeedbackInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CampusFeedbackReq) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *CampusFeedbackReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusFeedbackInfo struct {
	// 0: 无效
	// 1: 移除该内容，配合ThreePointType_campus_delete使用
	// 2: 不看该up主
	// 3: 认为该内容不应该被校友圈推荐
	// 4: 认为up主可能不是本校学生
	BizType int32 `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	// 当 biz_type 为
	// 1/3: 传 动态id
	// 2/4: 传 动态up主mid
	BizId int64 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 当前上下文环境所在的校园id
	CampusId int64 `protobuf:"varint,3,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 反馈理由
	Reason               string   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusFeedbackInfo) Reset()         { *m = CampusFeedbackInfo{} }
func (m *CampusFeedbackInfo) String() string { return proto.CompactTextString(m) }
func (*CampusFeedbackInfo) ProtoMessage()    {}
func (*CampusFeedbackInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{272}
}
func (m *CampusFeedbackInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusFeedbackInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusFeedbackInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusFeedbackInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusFeedbackInfo.Merge(m, src)
}
func (m *CampusFeedbackInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusFeedbackInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusFeedbackInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusFeedbackInfo proto.InternalMessageInfo

func (m *CampusFeedbackInfo) GetBizType() int32 {
	if m != nil {
		return m.BizType
	}
	return 0
}

func (m *CampusFeedbackInfo) GetBizId() int64 {
	if m != nil {
		return m.BizId
	}
	return 0
}

func (m *CampusFeedbackInfo) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusFeedbackInfo) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CampusFeedbackReply struct {
	// 反馈成功后 服务端下发toast message
	// 为空则不展示
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusFeedbackReply) Reset()         { *m = CampusFeedbackReply{} }
func (m *CampusFeedbackReply) String() string { return proto.CompactTextString(m) }
func (*CampusFeedbackReply) ProtoMessage()    {}
func (*CampusFeedbackReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{273}
}
func (m *CampusFeedbackReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusFeedbackReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusFeedbackReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusFeedbackReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusFeedbackReply.Merge(m, src)
}
func (m *CampusFeedbackReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusFeedbackReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusFeedbackReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusFeedbackReply proto.InternalMessageInfo

func (m *CampusFeedbackReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CampusBillBoardReq struct {
	// 校园id
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// （可选）获取指定版本的榜单
	// 不传就是最新版本
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,4,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusBillBoardReq) Reset()         { *m = CampusBillBoardReq{} }
func (m *CampusBillBoardReq) String() string { return proto.CompactTextString(m) }
func (*CampusBillBoardReq) ProtoMessage()    {}
func (*CampusBillBoardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{274}
}
func (m *CampusBillBoardReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusBillBoardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusBillBoardReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusBillBoardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusBillBoardReq.Merge(m, src)
}
func (m *CampusBillBoardReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusBillBoardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusBillBoardReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusBillBoardReq proto.InternalMessageInfo

func (m *CampusBillBoardReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusBillBoardReq) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

func (m *CampusBillBoardReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusBillBoardReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

// 内部使用
type CampusBillboardInternalReq struct {
	// member id
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 校园id
	CampusId int64 `protobuf:"varint,2,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 获取指定版本的榜单
	VersionCode          string   `protobuf:"bytes,3,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusBillboardInternalReq) Reset()         { *m = CampusBillboardInternalReq{} }
func (m *CampusBillboardInternalReq) String() string { return proto.CompactTextString(m) }
func (*CampusBillboardInternalReq) ProtoMessage()    {}
func (*CampusBillboardInternalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{275}
}
func (m *CampusBillboardInternalReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusBillboardInternalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusBillboardInternalReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusBillboardInternalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusBillboardInternalReq.Merge(m, src)
}
func (m *CampusBillboardInternalReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusBillboardInternalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusBillboardInternalReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusBillboardInternalReq proto.InternalMessageInfo

func (m *CampusBillboardInternalReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *CampusBillboardInternalReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusBillboardInternalReq) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

type CampusBillBoardReply struct {
	// 榜单标题文案（例如：bilibili校园热点）
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 榜单标题右侧的问号icon 点击打开介绍校园热点的专栏
	HelpUri string `protobuf:"bytes,2,opt,name=help_uri,json=helpUri,proto3" json:"help_uri,omitempty"`
	// 校园名称
	CampusName string `protobuf:"bytes,3,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 榜单生成时间 时间戳
	BuildTime int64 `protobuf:"varint,4,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	// 当前榜单的版本标识 用于h5分享
	VersionCode string `protobuf:"bytes,5,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	// 榜单信息列表 榜单次序就是数组的顺序
	List []*OfficialItem `protobuf:"bytes,6,rep,name=list,proto3" json:"list,omitempty"`
	// 已经拼接好的榜单h5分享URL
	ShareUri string `protobuf:"bytes,7,opt,name=share_uri,json=shareUri,proto3" json:"share_uri,omitempty"`
	// 用于h5的学校绑定提醒banner 0:不显示 1:显示
	BindNotice int32 `protobuf:"varint,8,opt,name=bind_notice,json=bindNotice,proto3" json:"bind_notice,omitempty"`
	// 用于端上的榜单更新toast
	UpdateToast string `protobuf:"bytes,9,opt,name=update_toast,json=updateToast,proto3" json:"update_toast,omitempty"`
	// 透传回去校园id 主要用于h5通过version code获取相关信息
	CampusId int64 `protobuf:"varint,10,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 开放进度 用于还未开放时显示进度信息
	// 有该字段的时候上面的内容都没有
	OpenProgress         *CampusFeatureProgress `protobuf:"bytes,11,opt,name=open_progress,json=openProgress,proto3" json:"open_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CampusBillBoardReply) Reset()         { *m = CampusBillBoardReply{} }
func (m *CampusBillBoardReply) String() string { return proto.CompactTextString(m) }
func (*CampusBillBoardReply) ProtoMessage()    {}
func (*CampusBillBoardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{276}
}
func (m *CampusBillBoardReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusBillBoardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusBillBoardReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusBillBoardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusBillBoardReply.Merge(m, src)
}
func (m *CampusBillBoardReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusBillBoardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusBillBoardReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusBillBoardReply proto.InternalMessageInfo

func (m *CampusBillBoardReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusBillBoardReply) GetHelpUri() string {
	if m != nil {
		return m.HelpUri
	}
	return ""
}

func (m *CampusBillBoardReply) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusBillBoardReply) GetBuildTime() int64 {
	if m != nil {
		return m.BuildTime
	}
	return 0
}

func (m *CampusBillBoardReply) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

func (m *CampusBillBoardReply) GetList() []*OfficialItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CampusBillBoardReply) GetShareUri() string {
	if m != nil {
		return m.ShareUri
	}
	return ""
}

func (m *CampusBillBoardReply) GetBindNotice() int32 {
	if m != nil {
		return m.BindNotice
	}
	return 0
}

func (m *CampusBillBoardReply) GetUpdateToast() string {
	if m != nil {
		return m.UpdateToast
	}
	return ""
}

func (m *CampusBillBoardReply) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusBillBoardReply) GetOpenProgress() *CampusFeatureProgress {
	if m != nil {
		return m.OpenProgress
	}
	return nil
}

type CampusFeatureProgress struct {
	// 进度总数
	ProgressFull int64 `protobuf:"varint,1,opt,name=progress_full,json=progressFull,proto3" json:"progress_full,omitempty"`
	// 已经达成的进度
	ProgressAchieved int64 `protobuf:"varint,2,opt,name=progress_achieved,json=progressAchieved,proto3" json:"progress_achieved,omitempty"`
	// 主要的描述信息
	DescTitle string `protobuf:"bytes,3,opt,name=desc_title,json=descTitle,proto3" json:"desc_title,omitempty"`
	// 次要的描述信息
	Desc_1 string `protobuf:"bytes,4,opt,name=desc_1,json=desc1,proto3" json:"desc_1,omitempty"`
	// 可点击的按钮 可能没有
	Btn                  *CampusLabel `protobuf:"bytes,5,opt,name=btn,proto3" json:"btn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CampusFeatureProgress) Reset()         { *m = CampusFeatureProgress{} }
func (m *CampusFeatureProgress) String() string { return proto.CompactTextString(m) }
func (*CampusFeatureProgress) ProtoMessage()    {}
func (*CampusFeatureProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{277}
}
func (m *CampusFeatureProgress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusFeatureProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusFeatureProgress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusFeatureProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusFeatureProgress.Merge(m, src)
}
func (m *CampusFeatureProgress) XXX_Size() int {
	return m.Size()
}
func (m *CampusFeatureProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusFeatureProgress.DiscardUnknown(m)
}

var xxx_messageInfo_CampusFeatureProgress proto.InternalMessageInfo

func (m *CampusFeatureProgress) GetProgressFull() int64 {
	if m != nil {
		return m.ProgressFull
	}
	return 0
}

func (m *CampusFeatureProgress) GetProgressAchieved() int64 {
	if m != nil {
		return m.ProgressAchieved
	}
	return 0
}

func (m *CampusFeatureProgress) GetDescTitle() string {
	if m != nil {
		return m.DescTitle
	}
	return ""
}

func (m *CampusFeatureProgress) GetDesc_1() string {
	if m != nil {
		return m.Desc_1
	}
	return ""
}

func (m *CampusFeatureProgress) GetBtn() *CampusLabel {
	if m != nil {
		return m.Btn
	}
	return nil
}

type CampusTopicRcmdFeedReq struct {
	// 当前校园id
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 翻页参数 首页传空
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端本地时区 北京时间是+8
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 学校请求来源
	FromType             CampusReqFromType `protobuf:"varint,5,opt,name=from_type,json=fromType,proto3,enum=bilibili.app.dynamic.v2.CampusReqFromType" json:"from_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusTopicRcmdFeedReq) Reset()         { *m = CampusTopicRcmdFeedReq{} }
func (m *CampusTopicRcmdFeedReq) String() string { return proto.CompactTextString(m) }
func (*CampusTopicRcmdFeedReq) ProtoMessage()    {}
func (*CampusTopicRcmdFeedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{278}
}
func (m *CampusTopicRcmdFeedReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusTopicRcmdFeedReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusTopicRcmdFeedReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusTopicRcmdFeedReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusTopicRcmdFeedReq.Merge(m, src)
}
func (m *CampusTopicRcmdFeedReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusTopicRcmdFeedReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusTopicRcmdFeedReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusTopicRcmdFeedReq proto.InternalMessageInfo

func (m *CampusTopicRcmdFeedReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusTopicRcmdFeedReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *CampusTopicRcmdFeedReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusTopicRcmdFeedReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *CampusTopicRcmdFeedReq) GetFromType() CampusReqFromType {
	if m != nil {
		return m.FromType
	}
	return CampusReqFromType_DYNAMIC
}

type CampusTopicRcmdFeedReply struct {
	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新提示
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	// 是否有下一页
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 下一页的翻页参数
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// 参与话题讨论的按钮 悬浮在页面右下角的那个
	// 没有的话就不展示
	JoinDiscuss          *IconButton `protobuf:"bytes,5,opt,name=join_discuss,json=joinDiscuss,proto3" json:"join_discuss,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CampusTopicRcmdFeedReply) Reset()         { *m = CampusTopicRcmdFeedReply{} }
func (m *CampusTopicRcmdFeedReply) String() string { return proto.CompactTextString(m) }
func (*CampusTopicRcmdFeedReply) ProtoMessage()    {}
func (*CampusTopicRcmdFeedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{279}
}
func (m *CampusTopicRcmdFeedReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusTopicRcmdFeedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusTopicRcmdFeedReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusTopicRcmdFeedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusTopicRcmdFeedReply.Merge(m, src)
}
func (m *CampusTopicRcmdFeedReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusTopicRcmdFeedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusTopicRcmdFeedReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusTopicRcmdFeedReply proto.InternalMessageInfo

func (m *CampusTopicRcmdFeedReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CampusTopicRcmdFeedReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

func (m *CampusTopicRcmdFeedReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *CampusTopicRcmdFeedReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *CampusTopicRcmdFeedReply) GetJoinDiscuss() *IconButton {
	if m != nil {
		return m.JoinDiscuss
	}
	return nil
}

type UnfollowMatchReq struct {
	Cid                  int64    `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnfollowMatchReq) Reset()         { *m = UnfollowMatchReq{} }
func (m *UnfollowMatchReq) String() string { return proto.CompactTextString(m) }
func (*UnfollowMatchReq) ProtoMessage()    {}
func (*UnfollowMatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{280}
}
func (m *UnfollowMatchReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnfollowMatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnfollowMatchReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnfollowMatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowMatchReq.Merge(m, src)
}
func (m *UnfollowMatchReq) XXX_Size() int {
	return m.Size()
}
func (m *UnfollowMatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowMatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowMatchReq proto.InternalMessageInfo

func (m *UnfollowMatchReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

type FetchTabSettingReply struct {
	// 用户首页校园tab设置项状态
	Status               HomePageTabSttingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.HomePageTabSttingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FetchTabSettingReply) Reset()         { *m = FetchTabSettingReply{} }
func (m *FetchTabSettingReply) String() string { return proto.CompactTextString(m) }
func (*FetchTabSettingReply) ProtoMessage()    {}
func (*FetchTabSettingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{281}
}
func (m *FetchTabSettingReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FetchTabSettingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FetchTabSettingReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FetchTabSettingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchTabSettingReply.Merge(m, src)
}
func (m *FetchTabSettingReply) XXX_Size() int {
	return m.Size()
}
func (m *FetchTabSettingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchTabSettingReply.DiscardUnknown(m)
}

var xxx_messageInfo_FetchTabSettingReply proto.InternalMessageInfo

func (m *FetchTabSettingReply) GetStatus() HomePageTabSttingStatus {
	if m != nil {
		return m.Status
	}
	return HomePageTabSttingStatus_SETTING_INVALID
}

type UpdateTabSettingReq struct {
	Status               HomePageTabSttingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.HomePageTabSttingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UpdateTabSettingReq) Reset()         { *m = UpdateTabSettingReq{} }
func (m *UpdateTabSettingReq) String() string { return proto.CompactTextString(m) }
func (*UpdateTabSettingReq) ProtoMessage()    {}
func (*UpdateTabSettingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{282}
}
func (m *UpdateTabSettingReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateTabSettingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateTabSettingReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateTabSettingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTabSettingReq.Merge(m, src)
}
func (m *UpdateTabSettingReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateTabSettingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTabSettingReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTabSettingReq proto.InternalMessageInfo

func (m *UpdateTabSettingReq) GetStatus() HomePageTabSttingStatus {
	if m != nil {
		return m.Status
	}
	return HomePageTabSttingStatus_SETTING_INVALID
}

type CampusSquareReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng                  float64  `protobuf:"fixed64,3,opt,name=lng,proto3" json:"lng,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusSquareReq) Reset()         { *m = CampusSquareReq{} }
func (m *CampusSquareReq) String() string { return proto.CompactTextString(m) }
func (*CampusSquareReq) ProtoMessage()    {}
func (*CampusSquareReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{283}
}
func (m *CampusSquareReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusSquareReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusSquareReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusSquareReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusSquareReq.Merge(m, src)
}
func (m *CampusSquareReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusSquareReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusSquareReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusSquareReq proto.InternalMessageInfo

func (m *CampusSquareReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusSquareReq) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CampusSquareReq) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

type CampusSquareReply struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 推荐学校的简要信息列表
	List []*RcmdCampusBrief `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// 按钮
	Button               *CampusLabel `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CampusSquareReply) Reset()         { *m = CampusSquareReply{} }
func (m *CampusSquareReply) String() string { return proto.CompactTextString(m) }
func (*CampusSquareReply) ProtoMessage()    {}
func (*CampusSquareReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{284}
}
func (m *CampusSquareReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusSquareReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusSquareReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusSquareReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusSquareReply.Merge(m, src)
}
func (m *CampusSquareReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusSquareReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusSquareReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusSquareReply proto.InternalMessageInfo

func (m *CampusSquareReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusSquareReply) GetList() []*RcmdCampusBrief {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *CampusSquareReply) GetButton() *CampusLabel {
	if m != nil {
		return m.Button
	}
	return nil
}

type RcmdCampusBrief struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 校徽
	CampusBadge string `protobuf:"bytes,4,opt,name=campus_badge,json=campusBadge,proto3" json:"campus_badge,omitempty"`
	// 跳转链接
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdCampusBrief) Reset()         { *m = RcmdCampusBrief{} }
func (m *RcmdCampusBrief) String() string { return proto.CompactTextString(m) }
func (*RcmdCampusBrief) ProtoMessage()    {}
func (*RcmdCampusBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{285}
}
func (m *RcmdCampusBrief) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RcmdCampusBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RcmdCampusBrief.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RcmdCampusBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdCampusBrief.Merge(m, src)
}
func (m *RcmdCampusBrief) XXX_Size() int {
	return m.Size()
}
func (m *RcmdCampusBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdCampusBrief.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdCampusBrief proto.InternalMessageInfo

func (m *RcmdCampusBrief) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *RcmdCampusBrief) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *RcmdCampusBrief) GetCampusBadge() string {
	if m != nil {
		return m.CampusBadge
	}
	return ""
}

func (m *RcmdCampusBrief) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CampusRecommendReq struct {
	// 上个页面的学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 从0开始计数，表示当前请求到第几页的校园tab结果
	PageNo int64 `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 页面请求来源
	From                 CampusRcmdReqFrom `protobuf:"varint,4,opt,name=from,proto3,enum=bilibili.app.dynamic.v2.CampusRcmdReqFrom" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CampusRecommendReq) Reset()         { *m = CampusRecommendReq{} }
func (m *CampusRecommendReq) String() string { return proto.CompactTextString(m) }
func (*CampusRecommendReq) ProtoMessage()    {}
func (*CampusRecommendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{286}
}
func (m *CampusRecommendReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRecommendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRecommendReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRecommendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRecommendReq.Merge(m, src)
}
func (m *CampusRecommendReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusRecommendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRecommendReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRecommendReq proto.InternalMessageInfo

func (m *CampusRecommendReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusRecommendReq) GetPageNo() int64 {
	if m != nil {
		return m.PageNo
	}
	return 0
}

func (m *CampusRecommendReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusRecommendReq) GetFrom() CampusRcmdReqFrom {
	if m != nil {
		return m.From
	}
	return CampusRcmdReqFrom_CAMPUS_RCMD_FROM_UNKNOWN
}

type CampusRecommendReply struct {
	// 推荐卡片列表
	Items []*RcmdItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 是否有更多 （false：没有 true：有）
	HasMore              bool     `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusRecommendReply) Reset()         { *m = CampusRecommendReply{} }
func (m *CampusRecommendReply) String() string { return proto.CompactTextString(m) }
func (*CampusRecommendReply) ProtoMessage()    {}
func (*CampusRecommendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{287}
}
func (m *CampusRecommendReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusRecommendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusRecommendReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusRecommendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusRecommendReply.Merge(m, src)
}
func (m *CampusRecommendReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusRecommendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusRecommendReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusRecommendReply proto.InternalMessageInfo

func (m *CampusRecommendReply) GetItems() []*RcmdItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CampusRecommendReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type CampusHomePagesReply struct {
	// 顶部展示信息
	Top *CampusRcmdTop `protobuf:"bytes,1,opt,name=top,proto3" json:"top,omitempty"`
	// 顶部展示信息（包括tab/banner/学校）
	CampusTop *CampusTop `protobuf:"bytes,2,opt,name=campus_top,json=campusTop,proto3" json:"campus_top,omitempty"`
	// 页面类型（1:已开通学校的主推荐页  2:学校未开通或者未选择学校的次推荐页 )
	PageType             int32    `protobuf:"varint,3,opt,name=page_type,json=pageType,proto3" json:"page_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusHomePagesReply) Reset()         { *m = CampusHomePagesReply{} }
func (m *CampusHomePagesReply) String() string { return proto.CompactTextString(m) }
func (*CampusHomePagesReply) ProtoMessage()    {}
func (*CampusHomePagesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{288}
}
func (m *CampusHomePagesReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusHomePagesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusHomePagesReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusHomePagesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusHomePagesReply.Merge(m, src)
}
func (m *CampusHomePagesReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusHomePagesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusHomePagesReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusHomePagesReply proto.InternalMessageInfo

func (m *CampusHomePagesReply) GetTop() *CampusRcmdTop {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *CampusHomePagesReply) GetCampusTop() *CampusTop {
	if m != nil {
		return m.CampusTop
	}
	return nil
}

func (m *CampusHomePagesReply) GetPageType() int32 {
	if m != nil {
		return m.PageType
	}
	return 0
}

type CampusHomePagesReq struct {
	// 学校ID
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 学校名
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 请求页面类型
	PageType             CampusHomePageType `protobuf:"varint,6,opt,name=page_type,json=pageType,proto3,enum=bilibili.app.dynamic.v2.CampusHomePageType" json:"page_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CampusHomePagesReq) Reset()         { *m = CampusHomePagesReq{} }
func (m *CampusHomePagesReq) String() string { return proto.CompactTextString(m) }
func (*CampusHomePagesReq) ProtoMessage()    {}
func (*CampusHomePagesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{289}
}
func (m *CampusHomePagesReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusHomePagesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusHomePagesReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusHomePagesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusHomePagesReq.Merge(m, src)
}
func (m *CampusHomePagesReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusHomePagesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusHomePagesReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusHomePagesReq proto.InternalMessageInfo

func (m *CampusHomePagesReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusHomePagesReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusHomePagesReq) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CampusHomePagesReq) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *CampusHomePagesReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *CampusHomePagesReq) GetPageType() CampusHomePageType {
	if m != nil {
		return m.PageType
	}
	return CampusHomePageType_PAGE_MAJOR
}

type CampusEntryTabReq struct {
	// 学校ID
	CampusId             int64    `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusEntryTabReq) Reset()         { *m = CampusEntryTabReq{} }
func (m *CampusEntryTabReq) String() string { return proto.CompactTextString(m) }
func (*CampusEntryTabReq) ProtoMessage()    {}
func (*CampusEntryTabReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{290}
}
func (m *CampusEntryTabReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusEntryTabReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusEntryTabReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusEntryTabReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusEntryTabReq.Merge(m, src)
}
func (m *CampusEntryTabReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusEntryTabReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusEntryTabReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusEntryTabReq proto.InternalMessageInfo

func (m *CampusEntryTabReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

type CampusEntryTabResp struct {
	// 校园入口类型
	EntryType            CampusEntryType `protobuf:"varint,1,opt,name=entry_type,json=entryType,proto3,enum=bilibili.app.dynamic.v2.CampusEntryType" json:"entry_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CampusEntryTabResp) Reset()         { *m = CampusEntryTabResp{} }
func (m *CampusEntryTabResp) String() string { return proto.CompactTextString(m) }
func (*CampusEntryTabResp) ProtoMessage()    {}
func (*CampusEntryTabResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{291}
}
func (m *CampusEntryTabResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusEntryTabResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusEntryTabResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusEntryTabResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusEntryTabResp.Merge(m, src)
}
func (m *CampusEntryTabResp) XXX_Size() int {
	return m.Size()
}
func (m *CampusEntryTabResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusEntryTabResp.DiscardUnknown(m)
}

var xxx_messageInfo_CampusEntryTabResp proto.InternalMessageInfo

func (m *CampusEntryTabResp) GetEntryType() CampusEntryType {
	if m != nil {
		return m.EntryType
	}
	return CampusEntryType_NONE
}

// 校园未开放页使用的“校园热议”话题卡
type CampusHomeRcmdTopic struct {
	Title                *ModuleTitle `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Topic                []*TopicItem `protobuf:"bytes,2,rep,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CampusHomeRcmdTopic) Reset()         { *m = CampusHomeRcmdTopic{} }
func (m *CampusHomeRcmdTopic) String() string { return proto.CompactTextString(m) }
func (*CampusHomeRcmdTopic) ProtoMessage()    {}
func (*CampusHomeRcmdTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{292}
}
func (m *CampusHomeRcmdTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusHomeRcmdTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusHomeRcmdTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusHomeRcmdTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusHomeRcmdTopic.Merge(m, src)
}
func (m *CampusHomeRcmdTopic) XXX_Size() int {
	return m.Size()
}
func (m *CampusHomeRcmdTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusHomeRcmdTopic.DiscardUnknown(m)
}

var xxx_messageInfo_CampusHomeRcmdTopic proto.InternalMessageInfo

func (m *CampusHomeRcmdTopic) GetTitle() *ModuleTitle {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CampusHomeRcmdTopic) GetTopic() []*TopicItem {
	if m != nil {
		return m.Topic
	}
	return nil
}

type HomeSubscribeReq struct {
	CampusId             int64    `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName           string   `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeSubscribeReq) Reset()         { *m = HomeSubscribeReq{} }
func (m *HomeSubscribeReq) String() string { return proto.CompactTextString(m) }
func (*HomeSubscribeReq) ProtoMessage()    {}
func (*HomeSubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{293}
}
func (m *HomeSubscribeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HomeSubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HomeSubscribeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HomeSubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeSubscribeReq.Merge(m, src)
}
func (m *HomeSubscribeReq) XXX_Size() int {
	return m.Size()
}
func (m *HomeSubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeSubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_HomeSubscribeReq proto.InternalMessageInfo

func (m *HomeSubscribeReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *HomeSubscribeReq) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

type HomeSubscribeReply struct {
	Online               CampusOnlineStatus `protobuf:"varint,1,opt,name=online,proto3,enum=bilibili.app.dynamic.v2.CampusOnlineStatus" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HomeSubscribeReply) Reset()         { *m = HomeSubscribeReply{} }
func (m *HomeSubscribeReply) String() string { return proto.CompactTextString(m) }
func (*HomeSubscribeReply) ProtoMessage()    {}
func (*HomeSubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{294}
}
func (m *HomeSubscribeReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HomeSubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HomeSubscribeReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HomeSubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeSubscribeReply.Merge(m, src)
}
func (m *HomeSubscribeReply) XXX_Size() int {
	return m.Size()
}
func (m *HomeSubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeSubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_HomeSubscribeReply proto.InternalMessageInfo

func (m *HomeSubscribeReply) GetOnline() CampusOnlineStatus {
	if m != nil {
		return m.Online
	}
	return CampusOnlineStatus_campus_online_offline
}

type LbsPoiReq struct {
	// 地址唯一索引
	Poi string `protobuf:"bytes,1,opt,name=poi,proto3" json:"poi,omitempty"`
	// poi类型 0:TC 1:self define
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 访问偏移
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 刷新方式 1向上刷新 2向下翻页
	RefreshType Refresh `protobuf:"varint,4,opt,name=refresh_type,json=refreshType,proto3,enum=bilibili.app.dynamic.v2.Refresh" json:"refresh_type,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs           *v1.PlayerArgs `protobuf:"bytes,6,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LbsPoiReq) Reset()         { *m = LbsPoiReq{} }
func (m *LbsPoiReq) String() string { return proto.CompactTextString(m) }
func (*LbsPoiReq) ProtoMessage()    {}
func (*LbsPoiReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{295}
}
func (m *LbsPoiReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LbsPoiReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LbsPoiReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LbsPoiReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LbsPoiReq.Merge(m, src)
}
func (m *LbsPoiReq) XXX_Size() int {
	return m.Size()
}
func (m *LbsPoiReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LbsPoiReq.DiscardUnknown(m)
}

var xxx_messageInfo_LbsPoiReq proto.InternalMessageInfo

func (m *LbsPoiReq) GetPoi() string {
	if m != nil {
		return m.Poi
	}
	return ""
}

func (m *LbsPoiReq) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LbsPoiReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *LbsPoiReq) GetRefreshType() Refresh {
	if m != nil {
		return m.RefreshType
	}
	return Refresh_refresh_new
}

func (m *LbsPoiReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *LbsPoiReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

type LbsPoiDetail struct {
	// 地址唯一索引
	Poi string `protobuf:"bytes,1,opt,name=poi,proto3" json:"poi,omitempty"`
	// poi类型 0:TC 1:self define
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 基础图片
	BasePic []string `protobuf:"bytes,3,rep,name=base_pic,json=basePic,proto3" json:"base_pic,omitempty"`
	// 封面图
	Cover []string `protobuf:"bytes,4,rep,name=cover,proto3" json:"cover,omitempty"`
	// 地址
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// 位置标题
	Title                string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LbsPoiDetail) Reset()         { *m = LbsPoiDetail{} }
func (m *LbsPoiDetail) String() string { return proto.CompactTextString(m) }
func (*LbsPoiDetail) ProtoMessage()    {}
func (*LbsPoiDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{296}
}
func (m *LbsPoiDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LbsPoiDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LbsPoiDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LbsPoiDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LbsPoiDetail.Merge(m, src)
}
func (m *LbsPoiDetail) XXX_Size() int {
	return m.Size()
}
func (m *LbsPoiDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LbsPoiDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LbsPoiDetail proto.InternalMessageInfo

func (m *LbsPoiDetail) GetPoi() string {
	if m != nil {
		return m.Poi
	}
	return ""
}

func (m *LbsPoiDetail) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LbsPoiDetail) GetBasePic() []string {
	if m != nil {
		return m.BasePic
	}
	return nil
}

func (m *LbsPoiDetail) GetCover() []string {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *LbsPoiDetail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *LbsPoiDetail) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type LbsPoiReply struct {
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,1,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 偏移
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// LBS地址详情 refresh_type = refresh_new的时候才会返回
	Detail *LbsPoiDetail `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	// 动态列表
	List                 []*DynamicItem `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LbsPoiReply) Reset()         { *m = LbsPoiReply{} }
func (m *LbsPoiReply) String() string { return proto.CompactTextString(m) }
func (*LbsPoiReply) ProtoMessage()    {}
func (*LbsPoiReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{297}
}
func (m *LbsPoiReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LbsPoiReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LbsPoiReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LbsPoiReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LbsPoiReply.Merge(m, src)
}
func (m *LbsPoiReply) XXX_Size() int {
	return m.Size()
}
func (m *LbsPoiReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LbsPoiReply.DiscardUnknown(m)
}

var xxx_messageInfo_LbsPoiReply proto.InternalMessageInfo

func (m *LbsPoiReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *LbsPoiReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *LbsPoiReply) GetDetail() *LbsPoiDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *LbsPoiReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

type FeedFilterReq struct {
	// 动态id 翻页偏移
	Offset string `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 用户选择的tab
	Tab string `protobuf:"bytes,2,opt,name=tab,proto3" json:"tab,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 广告参数
	AdParam *AdParam `protobuf:"bytes,5,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
	// 是否冷启
	ColdStart int32 `protobuf:"varint,6,opt,name=cold_start,json=coldStart,proto3" json:"cold_start,omitempty"`
	// 向下翻页数
	Page                 int64    `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedFilterReq) Reset()         { *m = FeedFilterReq{} }
func (m *FeedFilterReq) String() string { return proto.CompactTextString(m) }
func (*FeedFilterReq) ProtoMessage()    {}
func (*FeedFilterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{298}
}
func (m *FeedFilterReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedFilterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedFilterReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedFilterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedFilterReq.Merge(m, src)
}
func (m *FeedFilterReq) XXX_Size() int {
	return m.Size()
}
func (m *FeedFilterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedFilterReq.DiscardUnknown(m)
}

var xxx_messageInfo_FeedFilterReq proto.InternalMessageInfo

func (m *FeedFilterReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *FeedFilterReq) GetTab() string {
	if m != nil {
		return m.Tab
	}
	return ""
}

func (m *FeedFilterReq) GetLocalTime() int32 {
	if m != nil {
		return m.LocalTime
	}
	return 0
}

func (m *FeedFilterReq) GetPlayerArgs() *v1.PlayerArgs {
	if m != nil {
		return m.PlayerArgs
	}
	return nil
}

func (m *FeedFilterReq) GetAdParam() *AdParam {
	if m != nil {
		return m.AdParam
	}
	return nil
}

func (m *FeedFilterReq) GetColdStart() int32 {
	if m != nil {
		return m.ColdStart
	}
	return 0
}

func (m *FeedFilterReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type FeedFilterReply struct {
	// 下一页的动态偏移
	Offset string `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 动态列表
	List                 []*DynamicItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FeedFilterReply) Reset()         { *m = FeedFilterReply{} }
func (m *FeedFilterReply) String() string { return proto.CompactTextString(m) }
func (*FeedFilterReply) ProtoMessage()    {}
func (*FeedFilterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{299}
}
func (m *FeedFilterReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedFilterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedFilterReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedFilterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedFilterReply.Merge(m, src)
}
func (m *FeedFilterReply) XXX_Size() int {
	return m.Size()
}
func (m *FeedFilterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedFilterReply.DiscardUnknown(m)
}

var xxx_messageInfo_FeedFilterReply proto.InternalMessageInfo

func (m *FeedFilterReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *FeedFilterReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *FeedFilterReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

type CampusMngDetailReq struct {
	// 要管理的校园id
	CampusId             int64    `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngDetailReq) Reset()         { *m = CampusMngDetailReq{} }
func (m *CampusMngDetailReq) String() string { return proto.CompactTextString(m) }
func (*CampusMngDetailReq) ProtoMessage()    {}
func (*CampusMngDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{300}
}
func (m *CampusMngDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngDetailReq.Merge(m, src)
}
func (m *CampusMngDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngDetailReq proto.InternalMessageInfo

func (m *CampusMngDetailReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

// 无管理权限时 GRPC报错并返回错误码 4410405
type CampusMngDetailReply struct {
	// 校园管理可配置项
	Items []*CampusMngItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 顶部小黄条升级提示
	// 客户端遇到不认识的配置项时 丢弃并展示该提示信息
	TopHintBarMsg string `protobuf:"bytes,2,opt,name=top_hint_bar_msg,json=topHintBarMsg,proto3" json:"top_hint_bar_msg,omitempty"`
	// 底部提交按钮下的提示信息
	BottomSubmitHintMsg string `protobuf:"bytes,3,opt,name=bottom_submit_hint_msg,json=bottomSubmitHintMsg,proto3" json:"bottom_submit_hint_msg,omitempty"`
	// 校园id
	CampusId int64 `protobuf:"varint,4,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 校园名称
	CampusName           string   `protobuf:"bytes,5,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngDetailReply) Reset()         { *m = CampusMngDetailReply{} }
func (m *CampusMngDetailReply) String() string { return proto.CompactTextString(m) }
func (*CampusMngDetailReply) ProtoMessage()    {}
func (*CampusMngDetailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{301}
}
func (m *CampusMngDetailReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngDetailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngDetailReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngDetailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngDetailReply.Merge(m, src)
}
func (m *CampusMngDetailReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngDetailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngDetailReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngDetailReply proto.InternalMessageInfo

func (m *CampusMngDetailReply) GetItems() []*CampusMngItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CampusMngDetailReply) GetTopHintBarMsg() string {
	if m != nil {
		return m.TopHintBarMsg
	}
	return ""
}

func (m *CampusMngDetailReply) GetBottomSubmitHintMsg() string {
	if m != nil {
		return m.BottomSubmitHintMsg
	}
	return ""
}

func (m *CampusMngDetailReply) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusMngDetailReply) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

type CampusMngItem struct {
	AuditStatus CampusMngAuditStatus `protobuf:"varint,1,opt,name=audit_status,json=auditStatus,proto3,enum=bilibili.app.dynamic.v2.CampusMngAuditStatus" json:"audit_status,omitempty"`
	// 审核状态解释信息
	AuditMessage string `protobuf:"bytes,2,opt,name=audit_message,json=auditMessage,proto3" json:"audit_message,omitempty"`
	// 模块类型
	ItemType CampusMngItemType `protobuf:"varint,3,opt,name=item_type,json=itemType,proto3,enum=bilibili.app.dynamic.v2.CampusMngItemType" json:"item_type,omitempty"`
	// 模块唯一id  要求客户端提交修改时必须回传该模块的id（包括删除）
	MngItemId string `protobuf:"bytes,4,opt,name=mng_item_id,json=mngItemId,proto3" json:"mng_item_id,omitempty"`
	// 标识是否删除（清空）该模块数据
	// 注意：该项仅由客户端设置
	IsDel bool `protobuf:"varint,5,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`
	// 可配置项
	//
	// Types that are valid to be assigned to Item:
	//	*CampusMngItem_BasicInfo
	//	*CampusMngItem_Badge
	//	*CampusMngItem_Slogan
	//	*CampusMngItem_Quiz
	Item                 isCampusMngItem_Item `protobuf_oneof:"item"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CampusMngItem) Reset()         { *m = CampusMngItem{} }
func (m *CampusMngItem) String() string { return proto.CompactTextString(m) }
func (*CampusMngItem) ProtoMessage()    {}
func (*CampusMngItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{302}
}
func (m *CampusMngItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngItem.Merge(m, src)
}
func (m *CampusMngItem) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngItem.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngItem proto.InternalMessageInfo

type isCampusMngItem_Item interface {
	isCampusMngItem_Item()
	MarshalTo([]byte) (int, error)
	Size() int
}

type CampusMngItem_BasicInfo struct {
	BasicInfo *CampusMngBasicInfo `protobuf:"bytes,6,opt,name=basic_info,json=basicInfo,proto3,oneof" json:"basic_info,omitempty"`
}
type CampusMngItem_Badge struct {
	Badge *CampusMngBadge `protobuf:"bytes,7,opt,name=badge,proto3,oneof" json:"badge,omitempty"`
}
type CampusMngItem_Slogan struct {
	Slogan *CampusMngSlogan `protobuf:"bytes,8,opt,name=slogan,proto3,oneof" json:"slogan,omitempty"`
}
type CampusMngItem_Quiz struct {
	Quiz *CampusMngQuiz `protobuf:"bytes,9,opt,name=quiz,proto3,oneof" json:"quiz,omitempty"`
}

func (*CampusMngItem_BasicInfo) isCampusMngItem_Item() {}
func (*CampusMngItem_Badge) isCampusMngItem_Item()     {}
func (*CampusMngItem_Slogan) isCampusMngItem_Item()    {}
func (*CampusMngItem_Quiz) isCampusMngItem_Item()      {}

func (m *CampusMngItem) GetItem() isCampusMngItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *CampusMngItem) GetAuditStatus() CampusMngAuditStatus {
	if m != nil {
		return m.AuditStatus
	}
	return CampusMngAuditStatus_campus_mng_audit_none
}

func (m *CampusMngItem) GetAuditMessage() string {
	if m != nil {
		return m.AuditMessage
	}
	return ""
}

func (m *CampusMngItem) GetItemType() CampusMngItemType {
	if m != nil {
		return m.ItemType
	}
	return CampusMngItemType_campus_mng_none
}

func (m *CampusMngItem) GetMngItemId() string {
	if m != nil {
		return m.MngItemId
	}
	return ""
}

func (m *CampusMngItem) GetIsDel() bool {
	if m != nil {
		return m.IsDel
	}
	return false
}

func (m *CampusMngItem) GetBasicInfo() *CampusMngBasicInfo {
	if x, ok := m.GetItem().(*CampusMngItem_BasicInfo); ok {
		return x.BasicInfo
	}
	return nil
}

func (m *CampusMngItem) GetBadge() *CampusMngBadge {
	if x, ok := m.GetItem().(*CampusMngItem_Badge); ok {
		return x.Badge
	}
	return nil
}

func (m *CampusMngItem) GetSlogan() *CampusMngSlogan {
	if x, ok := m.GetItem().(*CampusMngItem_Slogan); ok {
		return x.Slogan
	}
	return nil
}

func (m *CampusMngItem) GetQuiz() *CampusMngQuiz {
	if x, ok := m.GetItem().(*CampusMngItem_Quiz); ok {
		return x.Quiz
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CampusMngItem) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CampusMngItem_BasicInfo)(nil),
		(*CampusMngItem_Badge)(nil),
		(*CampusMngItem_Slogan)(nil),
		(*CampusMngItem_Quiz)(nil),
	}
}

type CampusMngBasicInfo struct {
	// 校园id
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 校园名称
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	// 提示信息
	HintMsg              string   `protobuf:"bytes,3,opt,name=hint_msg,json=hintMsg,proto3" json:"hint_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngBasicInfo) Reset()         { *m = CampusMngBasicInfo{} }
func (m *CampusMngBasicInfo) String() string { return proto.CompactTextString(m) }
func (*CampusMngBasicInfo) ProtoMessage()    {}
func (*CampusMngBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{303}
}
func (m *CampusMngBasicInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngBasicInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngBasicInfo.Merge(m, src)
}
func (m *CampusMngBasicInfo) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngBasicInfo proto.InternalMessageInfo

func (m *CampusMngBasicInfo) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusMngBasicInfo) GetCampusName() string {
	if m != nil {
		return m.CampusName
	}
	return ""
}

func (m *CampusMngBasicInfo) GetHintMsg() string {
	if m != nil {
		return m.HintMsg
	}
	return ""
}

type CampusMngBadge struct {
	// 模块名称（例如：校徽）
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 校徽icon url
	BadgeUrl string `protobuf:"bytes,2,opt,name=badge_url,json=badgeUrl,proto3" json:"badge_url,omitempty"`
	// 上传时图片框下方的图片格式提示信息
	UploadHintMsg        string   `protobuf:"bytes,3,opt,name=upload_hint_msg,json=uploadHintMsg,proto3" json:"upload_hint_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngBadge) Reset()         { *m = CampusMngBadge{} }
func (m *CampusMngBadge) String() string { return proto.CompactTextString(m) }
func (*CampusMngBadge) ProtoMessage()    {}
func (*CampusMngBadge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{304}
}
func (m *CampusMngBadge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngBadge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngBadge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngBadge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngBadge.Merge(m, src)
}
func (m *CampusMngBadge) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngBadge) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngBadge.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngBadge proto.InternalMessageInfo

func (m *CampusMngBadge) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusMngBadge) GetBadgeUrl() string {
	if m != nil {
		return m.BadgeUrl
	}
	return ""
}

func (m *CampusMngBadge) GetUploadHintMsg() string {
	if m != nil {
		return m.UploadHintMsg
	}
	return ""
}

type CampusMngSlogan struct {
	// 模块名称（例如：校训）
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 校训
	Slogan string `protobuf:"bytes,2,opt,name=slogan,proto3" json:"slogan,omitempty"`
	// 输入框提示信息
	InputHintMsg         string   `protobuf:"bytes,3,opt,name=input_hint_msg,json=inputHintMsg,proto3" json:"input_hint_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngSlogan) Reset()         { *m = CampusMngSlogan{} }
func (m *CampusMngSlogan) String() string { return proto.CompactTextString(m) }
func (*CampusMngSlogan) ProtoMessage()    {}
func (*CampusMngSlogan) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{305}
}
func (m *CampusMngSlogan) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngSlogan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngSlogan.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngSlogan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngSlogan.Merge(m, src)
}
func (m *CampusMngSlogan) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngSlogan) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngSlogan.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngSlogan proto.InternalMessageInfo

func (m *CampusMngSlogan) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusMngSlogan) GetSlogan() string {
	if m != nil {
		return m.Slogan
	}
	return ""
}

func (m *CampusMngSlogan) GetInputHintMsg() string {
	if m != nil {
		return m.InputHintMsg
	}
	return ""
}

type CampusMngQuiz struct {
	// 模块名称（例如：入园题目）
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 查看更多
	MoreLabel *CampusLabel `protobuf:"bytes,2,opt,name=more_label,json=moreLabel,proto3" json:"more_label,omitempty"`
	// 新建题目按钮
	AddLabel string `protobuf:"bytes,3,opt,name=add_label,json=addLabel,proto3" json:"add_label,omitempty"`
	// 提交题目按钮
	SubmitLabel string `protobuf:"bytes,4,opt,name=submit_label,json=submitLabel,proto3" json:"submit_label,omitempty"`
	// 总的题目数量
	QuizCount            int64    `protobuf:"varint,5,opt,name=quiz_count,json=quizCount,proto3" json:"quiz_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngQuiz) Reset()         { *m = CampusMngQuiz{} }
func (m *CampusMngQuiz) String() string { return proto.CompactTextString(m) }
func (*CampusMngQuiz) ProtoMessage()    {}
func (*CampusMngQuiz) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{306}
}
func (m *CampusMngQuiz) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngQuiz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngQuiz.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngQuiz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngQuiz.Merge(m, src)
}
func (m *CampusMngQuiz) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngQuiz) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngQuiz.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngQuiz proto.InternalMessageInfo

func (m *CampusMngQuiz) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CampusMngQuiz) GetMoreLabel() *CampusLabel {
	if m != nil {
		return m.MoreLabel
	}
	return nil
}

func (m *CampusMngQuiz) GetAddLabel() string {
	if m != nil {
		return m.AddLabel
	}
	return ""
}

func (m *CampusMngQuiz) GetSubmitLabel() string {
	if m != nil {
		return m.SubmitLabel
	}
	return ""
}

func (m *CampusMngQuiz) GetQuizCount() int64 {
	if m != nil {
		return m.QuizCount
	}
	return 0
}

type CampusMngSubmitReq struct {
	// 校园id
	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 要修改的item 客户端计算出需要修改的配置项然后回传
	ModifiedItems        []*CampusMngItem `protobuf:"bytes,2,rep,name=modified_items,json=modifiedItems,proto3" json:"modified_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CampusMngSubmitReq) Reset()         { *m = CampusMngSubmitReq{} }
func (m *CampusMngSubmitReq) String() string { return proto.CompactTextString(m) }
func (*CampusMngSubmitReq) ProtoMessage()    {}
func (*CampusMngSubmitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{307}
}
func (m *CampusMngSubmitReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngSubmitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngSubmitReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngSubmitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngSubmitReq.Merge(m, src)
}
func (m *CampusMngSubmitReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngSubmitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngSubmitReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngSubmitReq proto.InternalMessageInfo

func (m *CampusMngSubmitReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusMngSubmitReq) GetModifiedItems() []*CampusMngItem {
	if m != nil {
		return m.ModifiedItems
	}
	return nil
}

// 无管理权限时 GRPC报错并返回错误码 4410405
type CampusMngSubmitReply struct {
	// 请求成功后的提示信息
	Toast                string   `protobuf:"bytes,1,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngSubmitReply) Reset()         { *m = CampusMngSubmitReply{} }
func (m *CampusMngSubmitReply) String() string { return proto.CompactTextString(m) }
func (*CampusMngSubmitReply) ProtoMessage()    {}
func (*CampusMngSubmitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{308}
}
func (m *CampusMngSubmitReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngSubmitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngSubmitReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngSubmitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngSubmitReply.Merge(m, src)
}
func (m *CampusMngSubmitReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngSubmitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngSubmitReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngSubmitReply proto.InternalMessageInfo

func (m *CampusMngSubmitReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

// 单条入园答题的题目详情
type CampusMngQuizDetail struct {
	// 题目唯一id
	QuizId int64 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	// 题目名
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	// 正确答案
	CorrectAnswer string `protobuf:"bytes,3,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	// 错误答案，保证个数为3
	WrongAnswerList []string `protobuf:"bytes,4,rep,name=wrong_answer_list,json=wrongAnswerList,proto3" json:"wrong_answer_list,omitempty"`
	// 题目审核状态
	AuditStatus CampusMngAuditStatus `protobuf:"varint,5,opt,name=audit_status,json=auditStatus,proto3,enum=bilibili.app.dynamic.v2.CampusMngAuditStatus" json:"audit_status,omitempty"`
	// 审核提示信息
	AuditMessage         string   `protobuf:"bytes,6,opt,name=audit_message,json=auditMessage,proto3" json:"audit_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngQuizDetail) Reset()         { *m = CampusMngQuizDetail{} }
func (m *CampusMngQuizDetail) String() string { return proto.CompactTextString(m) }
func (*CampusMngQuizDetail) ProtoMessage()    {}
func (*CampusMngQuizDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{309}
}
func (m *CampusMngQuizDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngQuizDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngQuizDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngQuizDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngQuizDetail.Merge(m, src)
}
func (m *CampusMngQuizDetail) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngQuizDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngQuizDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngQuizDetail proto.InternalMessageInfo

func (m *CampusMngQuizDetail) GetQuizId() int64 {
	if m != nil {
		return m.QuizId
	}
	return 0
}

func (m *CampusMngQuizDetail) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *CampusMngQuizDetail) GetCorrectAnswer() string {
	if m != nil {
		return m.CorrectAnswer
	}
	return ""
}

func (m *CampusMngQuizDetail) GetWrongAnswerList() []string {
	if m != nil {
		return m.WrongAnswerList
	}
	return nil
}

func (m *CampusMngQuizDetail) GetAuditStatus() CampusMngAuditStatus {
	if m != nil {
		return m.AuditStatus
	}
	return CampusMngAuditStatus_campus_mng_audit_none
}

func (m *CampusMngQuizDetail) GetAuditMessage() string {
	if m != nil {
		return m.AuditMessage
	}
	return ""
}

type CampusMngQuizOperateReq struct {
	// 题目管理操作
	// 目前支持 获取题目列表/添加/删除题目
	Action CampusMngQuizAction `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.dynamic.v2.CampusMngQuizAction" json:"action,omitempty"`
	// 校园id
	CampusId int64 `protobuf:"varint,2,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	// 要操作的题目 按需传入
	Quiz                 []*CampusMngQuizDetail `protobuf:"bytes,3,rep,name=quiz,proto3" json:"quiz,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CampusMngQuizOperateReq) Reset()         { *m = CampusMngQuizOperateReq{} }
func (m *CampusMngQuizOperateReq) String() string { return proto.CompactTextString(m) }
func (*CampusMngQuizOperateReq) ProtoMessage()    {}
func (*CampusMngQuizOperateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{310}
}
func (m *CampusMngQuizOperateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngQuizOperateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngQuizOperateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngQuizOperateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngQuizOperateReq.Merge(m, src)
}
func (m *CampusMngQuizOperateReq) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngQuizOperateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngQuizOperateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngQuizOperateReq proto.InternalMessageInfo

func (m *CampusMngQuizOperateReq) GetAction() CampusMngQuizAction {
	if m != nil {
		return m.Action
	}
	return CampusMngQuizAction_campus_mng_quiz_act_list
}

func (m *CampusMngQuizOperateReq) GetCampusId() int64 {
	if m != nil {
		return m.CampusId
	}
	return 0
}

func (m *CampusMngQuizOperateReq) GetQuiz() []*CampusMngQuizDetail {
	if m != nil {
		return m.Quiz
	}
	return nil
}

type CampusMngQuizOperateReply struct {
	// 操作后返回的提示信息
	Toast string `protobuf:"bytes,1,opt,name=toast,proto3" json:"toast,omitempty"`
	// 根据不同操作 按需返回的题目信息
	Quiz []*CampusMngQuizDetail `protobuf:"bytes,2,rep,name=quiz,proto3" json:"quiz,omitempty"`
	// 题目总数 获取题目列表时才用到
	QuizTotal            int64    `protobuf:"varint,3,opt,name=quiz_total,json=quizTotal,proto3" json:"quiz_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CampusMngQuizOperateReply) Reset()         { *m = CampusMngQuizOperateReply{} }
func (m *CampusMngQuizOperateReply) String() string { return proto.CompactTextString(m) }
func (*CampusMngQuizOperateReply) ProtoMessage()    {}
func (*CampusMngQuizOperateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{311}
}
func (m *CampusMngQuizOperateReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CampusMngQuizOperateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CampusMngQuizOperateReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CampusMngQuizOperateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CampusMngQuizOperateReply.Merge(m, src)
}
func (m *CampusMngQuizOperateReply) XXX_Size() int {
	return m.Size()
}
func (m *CampusMngQuizOperateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CampusMngQuizOperateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CampusMngQuizOperateReply proto.InternalMessageInfo

func (m *CampusMngQuizOperateReply) GetToast() string {
	if m != nil {
		return m.Toast
	}
	return ""
}

func (m *CampusMngQuizOperateReply) GetQuiz() []*CampusMngQuizDetail {
	if m != nil {
		return m.Quiz
	}
	return nil
}

func (m *CampusMngQuizOperateReply) GetQuizTotal() int64 {
	if m != nil {
		return m.QuizTotal
	}
	return 0
}

type LegacyTopicFeedReq struct {
	// 话题id
	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名 可不传 话题名称和id二选一
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// 翻页的offset 首页传空
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 排序方式 可不传
	SortType *SortType `protobuf:"bytes,4,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	// feed流卡片过滤选项 可不传
	CardFilter           *SortType `protobuf:"bytes,5,opt,name=card_filter,json=cardFilter,proto3" json:"card_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LegacyTopicFeedReq) Reset()         { *m = LegacyTopicFeedReq{} }
func (m *LegacyTopicFeedReq) String() string { return proto.CompactTextString(m) }
func (*LegacyTopicFeedReq) ProtoMessage()    {}
func (*LegacyTopicFeedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{312}
}
func (m *LegacyTopicFeedReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LegacyTopicFeedReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LegacyTopicFeedReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LegacyTopicFeedReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacyTopicFeedReq.Merge(m, src)
}
func (m *LegacyTopicFeedReq) XXX_Size() int {
	return m.Size()
}
func (m *LegacyTopicFeedReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacyTopicFeedReq.DiscardUnknown(m)
}

var xxx_messageInfo_LegacyTopicFeedReq proto.InternalMessageInfo

func (m *LegacyTopicFeedReq) GetTopicId() int64 {
	if m != nil {
		return m.TopicId
	}
	return 0
}

func (m *LegacyTopicFeedReq) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *LegacyTopicFeedReq) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *LegacyTopicFeedReq) GetSortType() *SortType {
	if m != nil {
		return m.SortType
	}
	return nil
}

func (m *LegacyTopicFeedReq) GetCardFilter() *SortType {
	if m != nil {
		return m.CardFilter
	}
	return nil
}

type LegacyTopicFeedReply struct {
	// 动态卡列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 是否有下一页
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 下一页请求用的offset
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 支持的排序方式
	// 服务端保证数组中首个元素是默认的排序方式
	SupportedSortTypes []*SortType `protobuf:"bytes,4,rep,name=supported_sort_types,json=supportedSortTypes,proto3" json:"supported_sort_types,omitempty"`
	// feed流卡片过滤选项
	// 不下发就不展示过滤选项
	// 服务端保证数组中首个元素是默认的过滤选项
	FeedCardFilters      []*SortType `protobuf:"bytes,5,rep,name=feed_card_filters,json=feedCardFilters,proto3" json:"feed_card_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LegacyTopicFeedReply) Reset()         { *m = LegacyTopicFeedReply{} }
func (m *LegacyTopicFeedReply) String() string { return proto.CompactTextString(m) }
func (*LegacyTopicFeedReply) ProtoMessage()    {}
func (*LegacyTopicFeedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca405303911d8c6, []int{313}
}
func (m *LegacyTopicFeedReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LegacyTopicFeedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LegacyTopicFeedReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LegacyTopicFeedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LegacyTopicFeedReply.Merge(m, src)
}
func (m *LegacyTopicFeedReply) XXX_Size() int {
	return m.Size()
}
func (m *LegacyTopicFeedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LegacyTopicFeedReply.DiscardUnknown(m)
}

var xxx_messageInfo_LegacyTopicFeedReply proto.InternalMessageInfo

func (m *LegacyTopicFeedReply) GetList() []*DynamicItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *LegacyTopicFeedReply) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *LegacyTopicFeedReply) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *LegacyTopicFeedReply) GetSupportedSortTypes() []*SortType {
	if m != nil {
		return m.SupportedSortTypes
	}
	return nil
}

func (m *LegacyTopicFeedReply) GetFeedCardFilters() []*SortType {
	if m != nil {
		return m.FeedCardFilters
	}
	return nil
}

func init() {
	proto.RegisterEnum("bilibili.app.dynamic.v2.Refresh", Refresh_name, Refresh_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DynamicType", DynamicType_name, DynamicType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.NFTRegionType", NFTRegionType_name, NFTRegionType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.NFTShowStatus", NFTShowStatus_name, NFTShowStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.LiveState", LiveState_name, LiveState_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DescType", DescType_name, DescType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.EmojiType", EmojiType_name, EmojiType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ModuleDynamicType", ModuleDynamicType_name, ModuleDynamicType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.MediaType", MediaType_name, MediaType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ReserveType", ReserveType_name, ReserveType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.VideoType", VideoType_name, VideoType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.VideoSubType", VideoSubType_name, VideoSubType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.MdlDynDrawTagType", MdlDynDrawTagType_name, MdlDynDrawTagType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.MdlDynCommonType", MdlDynCommonType_name, MdlDynCommonType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle", MdlDynSubscriptionNewStyle_name, MdlDynSubscriptionNewStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionalType", AdditionalType_name, AdditionalType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ImageStyle", ImageStyle_name, ImageStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AddButtonType", AddButtonType_name, AddButtonType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionalButtonStatus", AdditionalButtonStatus_name, AdditionalButtonStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionalButtonClickType", AdditionalButtonClickType_name, AdditionalButtonClickType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionalShareShowType", AdditionalShareShowType_name, AdditionalShareShowType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DisableState", DisableState_name, DisableState_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AddButtonBgStyle", AddButtonBgStyle_name, AddButtonBgStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.GoodsJumpType", GoodsJumpType_name, GoodsJumpType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.EspaceStyle", EspaceStyle_name, EspaceStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.HighlightTextStyle", HighlightTextStyle_name, HighlightTextStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ReserveRelationLotteryType", ReserveRelationLotteryType_name, ReserveRelationLotteryType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DynExtendType", DynExtendType_name, DynExtendType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.LocalIconType", LocalIconType_name, LocalIconType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DynUriType", DynUriType_name, DynUriType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.FoldType", FoldType_name, FoldType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.StyleType", StyleType_name, StyleType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.UserItemType", UserItemType_name, UserItemType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.DynModuleType", DynModuleType_name, DynModuleType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionVoteType", AdditionVoteType_name, AdditionVoteType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.AdditionVoteState", AdditionVoteState_name, AdditionVoteState_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ModuleBannerType", ModuleBannerType_name, ModuleBannerType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ModuleAuthorBadgeType", ModuleAuthorBadgeType_name, ModuleAuthorBadgeType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ThreePointType", ThreePointType_name, ThreePointType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ThreePointAttentionStatus", ThreePointAttentionStatus_name, ThreePointAttentionStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.TopType", TopType_name, TopType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.WeightType", WeightType_name, WeightType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.FollowType", FollowType_name, FollowType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ThumbType", ThumbType_name, ThumbType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.VoteStatus", VoteStatus_name, VoteStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.RelationStatus", RelationStatus_name, RelationStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.LightFromType", LightFromType_name, LightFromType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.RepostType", RepostType_name, RepostType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.RcmdType", RcmdType_name, RcmdType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.RcmdReasonStyle", RcmdReasonStyle_name, RcmdReasonStyle_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CoverIcon", CoverIcon_name, CoverIcon_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusTabType", CampusTabType_name, CampusTabType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.ShowType", ShowType_name, ShowType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.NetworkType", NetworkType_name, NetworkType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.TFType", TFType_name, TFType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.HomePageTabSttingStatus", HomePageTabSttingStatus_name, HomePageTabSttingStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusHomePageType", CampusHomePageType_name, CampusHomePageType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusReqFromType", CampusReqFromType_name, CampusReqFromType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusRcmdReqFrom", CampusRcmdReqFrom_name, CampusRcmdReqFrom_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusEntryType", CampusEntryType_name, CampusEntryType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusOnlineStatus", CampusOnlineStatus_name, CampusOnlineStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusMngAuditStatus", CampusMngAuditStatus_name, CampusMngAuditStatus_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusMngItemType", CampusMngItemType_name, CampusMngItemType_value)
	proto.RegisterEnum("bilibili.app.dynamic.v2.CampusMngQuizAction", CampusMngQuizAction_name, CampusMngQuizAction_value)
	proto.RegisterType((*NoReq)(nil), "bilibili.app.dynamic.v2.NoReq")
	proto.RegisterType((*NoReply)(nil), "bilibili.app.dynamic.v2.NoReply")
	proto.RegisterType((*DynVideoReq)(nil), "bilibili.app.dynamic.v2.DynVideoReq")
	proto.RegisterType((*PlayurlParam)(nil), "bilibili.app.dynamic.v2.PlayurlParam")
	proto.RegisterType((*DynVideoReply)(nil), "bilibili.app.dynamic.v2.DynVideoReply")
	proto.RegisterType((*CardVideoDynList)(nil), "bilibili.app.dynamic.v2.CardVideoDynList")
	proto.RegisterType((*DynamicItem)(nil), "bilibili.app.dynamic.v2.DynamicItem")
	proto.RegisterType((*Module)(nil), "bilibili.app.dynamic.v2.Module")
	proto.RegisterType((*ModuleTopTag)(nil), "bilibili.app.dynamic.v2.ModuleTopTag")
	proto.RegisterType((*ModuleAuthor)(nil), "bilibili.app.dynamic.v2.ModuleAuthor")
	proto.RegisterType((*UserInfo)(nil), "bilibili.app.dynamic.v2.UserInfo")
	proto.RegisterType((*NFTInfo)(nil), "bilibili.app.dynamic.v2.NFTInfo")
	proto.RegisterType((*OfficialVerify)(nil), "bilibili.app.dynamic.v2.OfficialVerify")
	proto.RegisterType((*VipInfo)(nil), "bilibili.app.dynamic.v2.VipInfo")
	proto.RegisterType((*VipLabel)(nil), "bilibili.app.dynamic.v2.VipLabel")
	proto.RegisterType((*LiveInfo)(nil), "bilibili.app.dynamic.v2.LiveInfo")
	proto.RegisterType((*UserPendant)(nil), "bilibili.app.dynamic.v2.UserPendant")
	proto.RegisterType((*Nameplate)(nil), "bilibili.app.dynamic.v2.Nameplate")
	proto.RegisterType((*DecorateCard)(nil), "bilibili.app.dynamic.v2.DecorateCard")
	proto.RegisterType((*DecoCardFan)(nil), "bilibili.app.dynamic.v2.DecoCardFan")
	proto.RegisterType((*ModuleDispute)(nil), "bilibili.app.dynamic.v2.ModuleDispute")
	proto.RegisterType((*ModuleDesc)(nil), "bilibili.app.dynamic.v2.ModuleDesc")
	proto.RegisterType((*Description)(nil), "bilibili.app.dynamic.v2.Description")
	proto.RegisterType((*ModuleDescGoods)(nil), "bilibili.app.dynamic.v2.ModuleDescGoods")
	proto.RegisterType((*ModuleDynamic)(nil), "bilibili.app.dynamic.v2.ModuleDynamic")
	proto.RegisterType((*MdlDynArchive)(nil), "bilibili.app.dynamic.v2.MdlDynArchive")
	proto.RegisterType((*Dimension)(nil), "bilibili.app.dynamic.v2.Dimension")
	proto.RegisterType((*VideoBadge)(nil), "bilibili.app.dynamic.v2.VideoBadge")
	proto.RegisterType((*MdlDynPGC)(nil), "bilibili.app.dynamic.v2.MdlDynPGC")
	proto.RegisterType((*PGCSeason)(nil), "bilibili.app.dynamic.v2.PGCSeason")
	proto.RegisterType((*MdlDynCourSeason)(nil), "bilibili.app.dynamic.v2.MdlDynCourSeason")
	proto.RegisterType((*MdlDynCourBatch)(nil), "bilibili.app.dynamic.v2.MdlDynCourBatch")
	proto.RegisterType((*MdlDynForward)(nil), "bilibili.app.dynamic.v2.MdlDynForward")
	proto.RegisterType((*MdlDynDraw)(nil), "bilibili.app.dynamic.v2.MdlDynDraw")
	proto.RegisterType((*MdlDynDrawItem)(nil), "bilibili.app.dynamic.v2.MdlDynDrawItem")
	proto.RegisterType((*MdlDynDrawTag)(nil), "bilibili.app.dynamic.v2.MdlDynDrawTag")
	proto.RegisterType((*MdlDynDrawTagItem)(nil), "bilibili.app.dynamic.v2.MdlDynDrawTagItem")
	proto.RegisterType((*MdlDynArticle)(nil), "bilibili.app.dynamic.v2.MdlDynArticle")
	proto.RegisterType((*MdlDynMusic)(nil), "bilibili.app.dynamic.v2.MdlDynMusic")
	proto.RegisterType((*MdlDynCommon)(nil), "bilibili.app.dynamic.v2.MdlDynCommon")
	proto.RegisterType((*MdlDynLive)(nil), "bilibili.app.dynamic.v2.MdlDynLive")
	proto.RegisterType((*MdlDynMedialist)(nil), "bilibili.app.dynamic.v2.MdlDynMedialist")
	proto.RegisterType((*MdlDynApplet)(nil), "bilibili.app.dynamic.v2.MdlDynApplet")
	proto.RegisterType((*MdlDynSubscription)(nil), "bilibili.app.dynamic.v2.MdlDynSubscription")
	proto.RegisterType((*MdlDynLiveRcmd)(nil), "bilibili.app.dynamic.v2.MdlDynLiveRcmd")
	proto.RegisterType((*LivePendant)(nil), "bilibili.app.dynamic.v2.LivePendant")
	proto.RegisterType((*MdlDynUGCSeason)(nil), "bilibili.app.dynamic.v2.MdlDynUGCSeason")
	proto.RegisterType((*MdlDynSubscriptionNew)(nil), "bilibili.app.dynamic.v2.MdlDynSubscriptionNew")
	proto.RegisterType((*MdlDynCourUp)(nil), "bilibili.app.dynamic.v2.MdlDynCourUp")
	proto.RegisterType((*MdlDynTopicSet)(nil), "bilibili.app.dynamic.v2.MdlDynTopicSet")
	proto.RegisterType((*ModuleAdditional)(nil), "bilibili.app.dynamic.v2.ModuleAdditional")
	proto.RegisterType((*AdditionalPGC)(nil), "bilibili.app.dynamic.v2.AdditionalPGC")
	proto.RegisterType((*AdditionalButton)(nil), "bilibili.app.dynamic.v2.AdditionalButton")
	proto.RegisterType((*AdditionalButtonStyle)(nil), "bilibili.app.dynamic.v2.AdditionalButtonStyle")
	proto.RegisterType((*AdditionalButtonShare)(nil), "bilibili.app.dynamic.v2.AdditionalButtonShare")
	proto.RegisterType((*AdditionalButtonInteractive)(nil), "bilibili.app.dynamic.v2.AdditionalButtonInteractive")
	proto.RegisterType((*AdditionGoods)(nil), "bilibili.app.dynamic.v2.AdditionGoods")
	proto.RegisterType((*GoodsItem)(nil), "bilibili.app.dynamic.v2.GoodsItem")
	proto.RegisterType((*AdditionVote)(nil), "bilibili.app.dynamic.v2.AdditionVote")
	proto.RegisterType((*AdditionUgc)(nil), "bilibili.app.dynamic.v2.AdditionUgc")
	proto.RegisterType((*AdditionCommon)(nil), "bilibili.app.dynamic.v2.AdditionCommon")
	proto.RegisterType((*AdditionEsport)(nil), "bilibili.app.dynamic.v2.AdditionEsport")
	proto.RegisterType((*AdditionEsportMoba)(nil), "bilibili.app.dynamic.v2.AdditionEsportMoba")
	proto.RegisterType((*AdditionEsportMobaStatus)(nil), "bilibili.app.dynamic.v2.AdditionEsportMobaStatus")
	proto.RegisterType((*AdditionEsportMobaStatusDesc)(nil), "bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc")
	proto.RegisterType((*MatchTeam)(nil), "bilibili.app.dynamic.v2.MatchTeam")
	proto.RegisterType((*AdditionUP)(nil), "bilibili.app.dynamic.v2.AdditionUP")
	proto.RegisterType((*AdditionUserInfo)(nil), "bilibili.app.dynamic.v2.AdditionUserInfo")
	proto.RegisterType((*AdditionalActSkin)(nil), "bilibili.app.dynamic.v2.AdditionalActSkin")
	proto.RegisterType((*HighlightText)(nil), "bilibili.app.dynamic.v2.HighlightText")
	proto.RegisterType((*ModuleExtend)(nil), "bilibili.app.dynamic.v2.ModuleExtend")
	proto.RegisterType((*ModuleExtendItem)(nil), "bilibili.app.dynamic.v2.ModuleExtendItem")
	proto.RegisterType((*ExtInfoTopic)(nil), "bilibili.app.dynamic.v2.ExtInfoTopic")
	proto.RegisterType((*ExtInfoLBS)(nil), "bilibili.app.dynamic.v2.ExtInfoLBS")
	proto.RegisterType((*ExtInfoHot)(nil), "bilibili.app.dynamic.v2.ExtInfoHot")
	proto.RegisterType((*ExtInfoGame)(nil), "bilibili.app.dynamic.v2.ExtInfoGame")
	proto.RegisterType((*ExtInfoCommon)(nil), "bilibili.app.dynamic.v2.ExtInfoCommon")
	proto.RegisterType((*ExtInfoOGV)(nil), "bilibili.app.dynamic.v2.ExtInfoOGV")
	proto.RegisterType((*InfoOGV)(nil), "bilibili.app.dynamic.v2.InfoOGV")
	proto.RegisterType((*ModuleInteraction)(nil), "bilibili.app.dynamic.v2.ModuleInteraction")
	proto.RegisterType((*InteractionItem)(nil), "bilibili.app.dynamic.v2.InteractionItem")
	proto.RegisterType((*InteractionStat)(nil), "bilibili.app.dynamic.v2.InteractionStat")
	proto.RegisterType((*InteractionFace)(nil), "bilibili.app.dynamic.v2.InteractionFace")
	proto.RegisterType((*ModuleStat)(nil), "bilibili.app.dynamic.v2.ModuleStat")
	proto.RegisterType((*ModuleFold)(nil), "bilibili.app.dynamic.v2.ModuleFold")
	proto.RegisterType((*TopicMergedResource)(nil), "bilibili.app.dynamic.v2.TopicMergedResource")
	proto.RegisterType((*DynAllReq)(nil), "bilibili.app.dynamic.v2.DynAllReq")
	proto.RegisterType((*RcmdUPsParam)(nil), "bilibili.app.dynamic.v2.RcmdUPsParam")
	proto.RegisterType((*AdParam)(nil), "bilibili.app.dynamic.v2.AdParam")
	proto.RegisterType((*Config)(nil), "bilibili.app.dynamic.v2.Config")
	proto.RegisterType((*DynAllReply)(nil), "bilibili.app.dynamic.v2.DynAllReply")
	proto.RegisterType((*DynamicList)(nil), "bilibili.app.dynamic.v2.DynamicList")
	proto.RegisterType((*TopicList)(nil), "bilibili.app.dynamic.v2.TopicList")
	proto.RegisterType((*TopicListItem)(nil), "bilibili.app.dynamic.v2.TopicListItem")
	proto.RegisterType((*TopicButton)(nil), "bilibili.app.dynamic.v2.TopicButton")
	proto.RegisterType((*Unfollow)(nil), "bilibili.app.dynamic.v2.Unfollow")
	proto.RegisterType((*UnfollowUserItem)(nil), "bilibili.app.dynamic.v2.UnfollowUserItem")
	proto.RegisterType((*ModuleTopic)(nil), "bilibili.app.dynamic.v2.ModuleTopic")
	proto.RegisterType((*ModuleTopicDetailsExt)(nil), "bilibili.app.dynamic.v2.ModuleTopicDetailsExt")
	proto.RegisterType((*ModuleTopicBrief)(nil), "bilibili.app.dynamic.v2.ModuleTopicBrief")
	proto.RegisterType((*ModuleTitle)(nil), "bilibili.app.dynamic.v2.ModuleTitle")
	proto.RegisterType((*ModuleButton)(nil), "bilibili.app.dynamic.v2.ModuleButton")
	proto.RegisterType((*ModuleNotice)(nil), "bilibili.app.dynamic.v2.ModuleNotice")
	proto.RegisterType((*IconButton)(nil), "bilibili.app.dynamic.v2.IconButton")
	proto.RegisterType((*DynDetailsReq)(nil), "bilibili.app.dynamic.v2.DynDetailsReq")
	proto.RegisterType((*DynDetailsReply)(nil), "bilibili.app.dynamic.v2.DynDetailsReply")
	proto.RegisterType((*DynVideoPersonalReq)(nil), "bilibili.app.dynamic.v2.DynVideoPersonalReq")
	proto.RegisterType((*DynVideoPersonalReply)(nil), "bilibili.app.dynamic.v2.DynVideoPersonalReply")
	proto.RegisterType((*DynVideoUpdOffsetReq)(nil), "bilibili.app.dynamic.v2.DynVideoUpdOffsetReq")
	proto.RegisterType((*CardVideoUpList)(nil), "bilibili.app.dynamic.v2.CardVideoUpList")
	proto.RegisterType((*UpListMoreLabel)(nil), "bilibili.app.dynamic.v2.UpListMoreLabel")
	proto.RegisterType((*UpListItem)(nil), "bilibili.app.dynamic.v2.UpListItem")
	proto.RegisterType((*UserItemStyle)(nil), "bilibili.app.dynamic.v2.UserItemStyle")
	proto.RegisterType((*CardVideoFollowList)(nil), "bilibili.app.dynamic.v2.CardVideoFollowList")
	proto.RegisterType((*FollowListItem)(nil), "bilibili.app.dynamic.v2.FollowListItem")
	proto.RegisterType((*NewEP)(nil), "bilibili.app.dynamic.v2.NewEP")
	proto.RegisterType((*Extend)(nil), "bilibili.app.dynamic.v2.Extend")
	proto.RegisterType((*ExtendReply)(nil), "bilibili.app.dynamic.v2.ExtendReply")
	proto.RegisterType((*ExtendReplyParam)(nil), "bilibili.app.dynamic.v2.ExtendReplyParam")
	proto.RegisterType((*ModuleAuthorForward)(nil), "bilibili.app.dynamic.v2.ModuleAuthorForward")
	proto.RegisterType((*ModuleAuthorForwardTitle)(nil), "bilibili.app.dynamic.v2.ModuleAuthorForwardTitle")
	proto.RegisterType((*ModuleAd)(nil), "bilibili.app.dynamic.v2.ModuleAd")
	proto.RegisterType((*ModuleBanner)(nil), "bilibili.app.dynamic.v2.ModuleBanner")
	proto.RegisterType((*AdditionVote2)(nil), "bilibili.app.dynamic.v2.AdditionVote2")
	proto.RegisterType((*AdditionVoteWord)(nil), "bilibili.app.dynamic.v2.AdditionVoteWord")
	proto.RegisterType((*AdditionVoteWordItem)(nil), "bilibili.app.dynamic.v2.AdditionVoteWordItem")
	proto.RegisterType((*AdditionVotePic)(nil), "bilibili.app.dynamic.v2.AdditionVotePic")
	proto.RegisterType((*AdditionVotePicItem)(nil), "bilibili.app.dynamic.v2.AdditionVotePicItem")
	proto.RegisterType((*AdditionVoteDefaule)(nil), "bilibili.app.dynamic.v2.AdditionVoteDefaule")
	proto.RegisterType((*ModuleItemNull)(nil), "bilibili.app.dynamic.v2.ModuleItemNull")
	proto.RegisterType((*ModuleBannerUser)(nil), "bilibili.app.dynamic.v2.ModuleBannerUser")
	proto.RegisterType((*ModuleBannerUserItem)(nil), "bilibili.app.dynamic.v2.ModuleBannerUserItem")
	proto.RegisterType((*ModuleLikeUser)(nil), "bilibili.app.dynamic.v2.ModuleLikeUser")
	proto.RegisterType((*LikeUser)(nil), "bilibili.app.dynamic.v2.LikeUser")
	proto.RegisterType((*LikeInfo)(nil), "bilibili.app.dynamic.v2.LikeInfo")
	proto.RegisterType((*LikeAnimation)(nil), "bilibili.app.dynamic.v2.LikeAnimation")
	proto.RegisterType((*ThreePointItem)(nil), "bilibili.app.dynamic.v2.ThreePointItem")
	proto.RegisterType((*ModuleAuthorBadgeButton)(nil), "bilibili.app.dynamic.v2.ModuleAuthorBadgeButton")
	proto.RegisterType((*ThreePointDefault)(nil), "bilibili.app.dynamic.v2.ThreePointDefault")
	proto.RegisterType((*ThreePointDefaultToast)(nil), "bilibili.app.dynamic.v2.ThreePointDefaultToast")
	proto.RegisterType((*ThreePointAutoPlay)(nil), "bilibili.app.dynamic.v2.ThreePointAutoPlay")
	proto.RegisterType((*ThreePointShare)(nil), "bilibili.app.dynamic.v2.ThreePointShare")
	proto.RegisterType((*ThreePointShareChannel)(nil), "bilibili.app.dynamic.v2.ThreePointShareChannel")
	proto.RegisterType((*ThreePointAttention)(nil), "bilibili.app.dynamic.v2.ThreePointAttention")
	proto.RegisterType((*ThreePointWait)(nil), "bilibili.app.dynamic.v2.ThreePointWait")
	proto.RegisterType((*ThreePointDislike)(nil), "bilibili.app.dynamic.v2.ThreePointDislike")
	proto.RegisterType((*ThreePointFavorite)(nil), "bilibili.app.dynamic.v2.ThreePointFavorite")
	proto.RegisterType((*ThreePointTop)(nil), "bilibili.app.dynamic.v2.ThreePointTop")
	proto.RegisterType((*ThreePointTopicIrrelevant)(nil), "bilibili.app.dynamic.v2.ThreePointTopicIrrelevant")
	proto.RegisterType((*ThreePointDynEdit)(nil), "bilibili.app.dynamic.v2.ThreePointDynEdit")
	proto.RegisterType((*ThreePointComment)(nil), "bilibili.app.dynamic.v2.ThreePointComment")
	proto.RegisterType((*ThreePointHide)(nil), "bilibili.app.dynamic.v2.ThreePointHide")
	proto.RegisterType((*ThreePointHideInteractive)(nil), "bilibili.app.dynamic.v2.ThreePointHideInteractive")
	proto.RegisterType((*CommentDetail)(nil), "bilibili.app.dynamic.v2.CommentDetail")
	proto.RegisterType((*Weight)(nil), "bilibili.app.dynamic.v2.Weight")
	proto.RegisterType((*WeightItem)(nil), "bilibili.app.dynamic.v2.WeightItem")
	proto.RegisterType((*WeightDislike)(nil), "bilibili.app.dynamic.v2.WeightDislike")
	proto.RegisterType((*WeightButton)(nil), "bilibili.app.dynamic.v2.WeightButton")
	proto.RegisterType((*ModuleComment)(nil), "bilibili.app.dynamic.v2.ModuleComment")
	proto.RegisterType((*CmtShowItem)(nil), "bilibili.app.dynamic.v2.CmtShowItem")
	proto.RegisterType((*DynAdditionCommonFollowReq)(nil), "bilibili.app.dynamic.v2.DynAdditionCommonFollowReq")
	proto.RegisterType((*DynAdditionCommonFollowReply)(nil), "bilibili.app.dynamic.v2.DynAdditionCommonFollowReply")
	proto.RegisterType((*DynThumbReq)(nil), "bilibili.app.dynamic.v2.DynThumbReq")
	proto.RegisterType((*DynFakeCardReq)(nil), "bilibili.app.dynamic.v2.DynFakeCardReq")
	proto.RegisterType((*DynFakeCardReply)(nil), "bilibili.app.dynamic.v2.DynFakeCardReply")
	proto.RegisterType((*DynRcmdUpExchangeReq)(nil), "bilibili.app.dynamic.v2.DynRcmdUpExchangeReq")
	proto.RegisterType((*DynRcmdUpExchangeReply)(nil), "bilibili.app.dynamic.v2.DynRcmdUpExchangeReply")
	proto.RegisterType((*DynAllPersonalReq)(nil), "bilibili.app.dynamic.v2.DynAllPersonalReq")
	proto.RegisterType((*DynAllPersonalReply)(nil), "bilibili.app.dynamic.v2.DynAllPersonalReply")
	proto.RegisterType((*TopAdditionUP)(nil), "bilibili.app.dynamic.v2.TopAdditionUP")
	proto.RegisterType((*DynAllUpdOffsetReq)(nil), "bilibili.app.dynamic.v2.DynAllUpdOffsetReq")
	proto.RegisterType((*DynVoteReq)(nil), "bilibili.app.dynamic.v2.DynVoteReq")
	proto.RegisterType((*DynVoteReply)(nil), "bilibili.app.dynamic.v2.DynVoteReply")
	proto.RegisterType((*Relation)(nil), "bilibili.app.dynamic.v2.Relation")
	proto.RegisterType((*MixUpListLiveItem)(nil), "bilibili.app.dynamic.v2.MixUpListLiveItem")
	proto.RegisterType((*MixUpListItem)(nil), "bilibili.app.dynamic.v2.MixUpListItem")
	proto.RegisterType((*DynMixUpListViewMoreReq)(nil), "bilibili.app.dynamic.v2.DynMixUpListViewMoreReq")
	proto.RegisterType((*SortType)(nil), "bilibili.app.dynamic.v2.SortType")
	proto.RegisterType((*DynMixUpListViewMoreReply)(nil), "bilibili.app.dynamic.v2.DynMixUpListViewMoreReply")
	proto.RegisterType((*DynLightReq)(nil), "bilibili.app.dynamic.v2.DynLightReq")
	proto.RegisterType((*DynLightReply)(nil), "bilibili.app.dynamic.v2.DynLightReply")
	proto.RegisterType((*DynDetailReq)(nil), "bilibili.app.dynamic.v2.DynDetailReq")
	proto.RegisterType((*DynDetailReply)(nil), "bilibili.app.dynamic.v2.DynDetailReply")
	proto.RegisterType((*LikeListReq)(nil), "bilibili.app.dynamic.v2.LikeListReq")
	proto.RegisterType((*LikeListReply)(nil), "bilibili.app.dynamic.v2.LikeListReply")
	proto.RegisterType((*RepostListReq)(nil), "bilibili.app.dynamic.v2.RepostListReq")
	proto.RegisterType((*RepostListRsp)(nil), "bilibili.app.dynamic.v2.RepostListRsp")
	proto.RegisterType((*ModuleShareInfo)(nil), "bilibili.app.dynamic.v2.ModuleShareInfo")
	proto.RegisterType((*ShareChannel)(nil), "bilibili.app.dynamic.v2.ShareChannel")
	proto.RegisterType((*ShareReserve)(nil), "bilibili.app.dynamic.v2.ShareReserve")
	proto.RegisterType((*ModuleRecommend)(nil), "bilibili.app.dynamic.v2.ModuleRecommend")
	proto.RegisterType((*ModuleStory)(nil), "bilibili.app.dynamic.v2.ModuleStory")
	proto.RegisterType((*StoryItem)(nil), "bilibili.app.dynamic.v2.StoryItem")
	proto.RegisterType((*StoryArchive)(nil), "bilibili.app.dynamic.v2.StoryArchive")
	proto.RegisterType((*DynSpaceReq)(nil), "bilibili.app.dynamic.v2.DynSpaceReq")
	proto.RegisterType((*DynSpaceRsp)(nil), "bilibili.app.dynamic.v2.DynSpaceRsp")
	proto.RegisterType((*ModuleTop)(nil), "bilibili.app.dynamic.v2.ModuleTop")
	proto.RegisterType((*ModuleButtom)(nil), "bilibili.app.dynamic.v2.ModuleButtom")
	proto.RegisterType((*DynRcmdReq)(nil), "bilibili.app.dynamic.v2.DynRcmdReq")
	proto.RegisterType((*DynRcmdReply)(nil), "bilibili.app.dynamic.v2.DynRcmdReply")
	proto.RegisterType((*DynRegionRcmd)(nil), "bilibili.app.dynamic.v2.DynRegionRcmd")
	proto.RegisterType((*RcmdOption)(nil), "bilibili.app.dynamic.v2.RcmdOption")
	proto.RegisterType((*DynRegionRcmdItem)(nil), "bilibili.app.dynamic.v2.DynRegionRcmdItem")
	proto.RegisterType((*ModuleRcmd)(nil), "bilibili.app.dynamic.v2.ModuleRcmd")
	proto.RegisterType((*RcmdAuthor)(nil), "bilibili.app.dynamic.v2.RcmdAuthor")
	proto.RegisterType((*RcmdItem)(nil), "bilibili.app.dynamic.v2.RcmdItem")
	proto.RegisterType((*RcmdArchive)(nil), "bilibili.app.dynamic.v2.RcmdArchive")
	proto.RegisterType((*RcmdReason)(nil), "bilibili.app.dynamic.v2.RcmdReason")
	proto.RegisterType((*IconBadge)(nil), "bilibili.app.dynamic.v2.IconBadge")
	proto.RegisterType((*CoverIconWithText)(nil), "bilibili.app.dynamic.v2.CoverIconWithText")
	proto.RegisterType((*DynServerDetailsReq)(nil), "bilibili.app.dynamic.v2.DynServerDetailsReq")
	proto.RegisterType((*DynServerDetailsReply)(nil), "bilibili.app.dynamic.v2.DynServerDetailsReply")
	proto.RegisterMapType((map[int64]*DynamicItem)(nil), "bilibili.app.dynamic.v2.DynServerDetailsReply.ItemsEntry")
	proto.RegisterType((*DynSearchReq)(nil), "bilibili.app.dynamic.v2.DynSearchReq")
	proto.RegisterType((*DynSearchReply)(nil), "bilibili.app.dynamic.v2.DynSearchReply")
	proto.RegisterType((*SearchInfo)(nil), "bilibili.app.dynamic.v2.SearchInfo")
	proto.RegisterType((*SearchTopic)(nil), "bilibili.app.dynamic.v2.SearchTopic")
	proto.RegisterType((*SearchTopicButton)(nil), "bilibili.app.dynamic.v2.SearchTopicButton")
	proto.RegisterType((*SearchTopicItem)(nil), "bilibili.app.dynamic.v2.SearchTopicItem")
	proto.RegisterType((*SearchChannel)(nil), "bilibili.app.dynamic.v2.SearchChannel")
	proto.RegisterType((*ChannelInfo)(nil), "bilibili.app.dynamic.v2.ChannelInfo")
	proto.RegisterType((*SetDecisionReq)(nil), "bilibili.app.dynamic.v2.SetDecisionReq")
	proto.RegisterType((*CampusTop)(nil), "bilibili.app.dynamic.v2.CampusTop")
	proto.RegisterType((*CampusShowTabInfo)(nil), "bilibili.app.dynamic.v2.CampusShowTabInfo")
	proto.RegisterType((*CampusBannerInfo)(nil), "bilibili.app.dynamic.v2.CampusBannerInfo")
	proto.RegisterType((*CampusNoticeInfo)(nil), "bilibili.app.dynamic.v2.CampusNoticeInfo")
	proto.RegisterType((*AlumniDynamicsReq)(nil), "bilibili.app.dynamic.v2.AlumniDynamicsReq")
	proto.RegisterType((*AlumniDynamicsReply)(nil), "bilibili.app.dynamic.v2.AlumniDynamicsReply")
	proto.RegisterType((*CampusRcmdReq)(nil), "bilibili.app.dynamic.v2.CampusRcmdReq")
	proto.RegisterType((*CampusRcmdReply)(nil), "bilibili.app.dynamic.v2.CampusRcmdReply")
	proto.RegisterType((*CampusRcmdTop)(nil), "bilibili.app.dynamic.v2.CampusRcmdTop")
	proto.RegisterType((*RcmdTopButton)(nil), "bilibili.app.dynamic.v2.RcmdTopButton")
	proto.RegisterType((*CampusRcmdInfo)(nil), "bilibili.app.dynamic.v2.CampusRcmdInfo")
	proto.RegisterType((*CampusRcmdItem)(nil), "bilibili.app.dynamic.v2.CampusRcmdItem")
	proto.RegisterType((*CampusLabel)(nil), "bilibili.app.dynamic.v2.CampusLabel")
	proto.RegisterType((*SubscribeCampusReq)(nil), "bilibili.app.dynamic.v2.SubscribeCampusReq")
	proto.RegisterType((*SetRecentCampusReq)(nil), "bilibili.app.dynamic.v2.SetRecentCampusReq")
	proto.RegisterType((*DynTabReq)(nil), "bilibili.app.dynamic.v2.DynTabReq")
	proto.RegisterType((*DynTabReply)(nil), "bilibili.app.dynamic.v2.DynTabReply")
	proto.RegisterType((*DynScreenTab)(nil), "bilibili.app.dynamic.v2.DynScreenTab")
	proto.RegisterType((*DynTab)(nil), "bilibili.app.dynamic.v2.DynTab")
	proto.RegisterType((*Popup)(nil), "bilibili.app.dynamic.v2.Popup")
	proto.RegisterType((*SchoolSearchReq)(nil), "bilibili.app.dynamic.v2.SchoolSearchReq")
	proto.RegisterType((*SchoolSearchReply)(nil), "bilibili.app.dynamic.v2.SchoolSearchReply")
	proto.RegisterType((*SearchToast)(nil), "bilibili.app.dynamic.v2.SearchToast")
	proto.RegisterType((*CampusInfo)(nil), "bilibili.app.dynamic.v2.CampusInfo")
	proto.RegisterType((*SchoolRecommendReq)(nil), "bilibili.app.dynamic.v2.SchoolRecommendReq")
	proto.RegisterType((*SchoolRecommendReply)(nil), "bilibili.app.dynamic.v2.SchoolRecommendReply")
	proto.RegisterType((*DynSpaceSearchDetailsReq)(nil), "bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq")
	proto.RegisterType((*DynSpaceSearchDetailsReply)(nil), "bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply")
	proto.RegisterMapType((map[int64]*DynamicItem)(nil), "bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.ItemsEntry")
	proto.RegisterType((*OfficialAccountsReq)(nil), "bilibili.app.dynamic.v2.OfficialAccountsReq")
	proto.RegisterType((*OfficialAccountsReply)(nil), "bilibili.app.dynamic.v2.OfficialAccountsReply")
	proto.RegisterType((*OfficialAccountInfo)(nil), "bilibili.app.dynamic.v2.OfficialAccountInfo")
	proto.RegisterType((*OfficialDynamicsReq)(nil), "bilibili.app.dynamic.v2.OfficialDynamicsReq")
	proto.RegisterType((*OfficialDynamicsReply)(nil), "bilibili.app.dynamic.v2.OfficialDynamicsReply")
	proto.RegisterType((*OfficialItem)(nil), "bilibili.app.dynamic.v2.OfficialItem")
	proto.RegisterType((*OfficialRcmdArchive)(nil), "bilibili.app.dynamic.v2.OfficialRcmdArchive")
	proto.RegisterType((*OfficialRcmdDynamic)(nil), "bilibili.app.dynamic.v2.OfficialRcmdDynamic")
	proto.RegisterType((*CampusRedDotReq)(nil), "bilibili.app.dynamic.v2.CampusRedDotReq")
	proto.RegisterType((*CampusRedDotReply)(nil), "bilibili.app.dynamic.v2.CampusRedDotReply")
	proto.RegisterType((*CampusRcmdFeedReq)(nil), "bilibili.app.dynamic.v2.CampusRcmdFeedReq")
	proto.RegisterType((*CampusRcmdFeedReply)(nil), "bilibili.app.dynamic.v2.CampusRcmdFeedReply")
	proto.RegisterType((*GuideBarInfo)(nil), "bilibili.app.dynamic.v2.GuideBarInfo")
	proto.RegisterType((*TopicSquareReq)(nil), "bilibili.app.dynamic.v2.TopicSquareReq")
	proto.RegisterType((*TopicSquareReply)(nil), "bilibili.app.dynamic.v2.TopicSquareReply")
	proto.RegisterType((*TopicSquareInfo)(nil), "bilibili.app.dynamic.v2.TopicSquareInfo")
	proto.RegisterType((*TopicRcmdCard)(nil), "bilibili.app.dynamic.v2.TopicRcmdCard")
	proto.RegisterType((*TopicListReq)(nil), "bilibili.app.dynamic.v2.TopicListReq")
	proto.RegisterType((*TopicListReply)(nil), "bilibili.app.dynamic.v2.TopicListReply")
	proto.RegisterType((*TopicItem)(nil), "bilibili.app.dynamic.v2.TopicItem")
	proto.RegisterType((*CampusMateLikeListReq)(nil), "bilibili.app.dynamic.v2.CampusMateLikeListReq")
	proto.RegisterType((*CampusMateLikeListReply)(nil), "bilibili.app.dynamic.v2.CampusMateLikeListReply")
	proto.RegisterType((*CampusFeedbackReq)(nil), "bilibili.app.dynamic.v2.CampusFeedbackReq")
	proto.RegisterType((*CampusFeedbackInfo)(nil), "bilibili.app.dynamic.v2.CampusFeedbackInfo")
	proto.RegisterType((*CampusFeedbackReply)(nil), "bilibili.app.dynamic.v2.CampusFeedbackReply")
	proto.RegisterType((*CampusBillBoardReq)(nil), "bilibili.app.dynamic.v2.CampusBillBoardReq")
	proto.RegisterType((*CampusBillboardInternalReq)(nil), "bilibili.app.dynamic.v2.CampusBillboardInternalReq")
	proto.RegisterType((*CampusBillBoardReply)(nil), "bilibili.app.dynamic.v2.CampusBillBoardReply")
	proto.RegisterType((*CampusFeatureProgress)(nil), "bilibili.app.dynamic.v2.CampusFeatureProgress")
	proto.RegisterType((*CampusTopicRcmdFeedReq)(nil), "bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq")
	proto.RegisterType((*CampusTopicRcmdFeedReply)(nil), "bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply")
	proto.RegisterType((*UnfollowMatchReq)(nil), "bilibili.app.dynamic.v2.UnfollowMatchReq")
	proto.RegisterType((*FetchTabSettingReply)(nil), "bilibili.app.dynamic.v2.FetchTabSettingReply")
	proto.RegisterType((*UpdateTabSettingReq)(nil), "bilibili.app.dynamic.v2.UpdateTabSettingReq")
	proto.RegisterType((*CampusSquareReq)(nil), "bilibili.app.dynamic.v2.CampusSquareReq")
	proto.RegisterType((*CampusSquareReply)(nil), "bilibili.app.dynamic.v2.CampusSquareReply")
	proto.RegisterType((*RcmdCampusBrief)(nil), "bilibili.app.dynamic.v2.RcmdCampusBrief")
	proto.RegisterType((*CampusRecommendReq)(nil), "bilibili.app.dynamic.v2.CampusRecommendReq")
	proto.RegisterType((*CampusRecommendReply)(nil), "bilibili.app.dynamic.v2.CampusRecommendReply")
	proto.RegisterType((*CampusHomePagesReply)(nil), "bilibili.app.dynamic.v2.CampusHomePagesReply")
	proto.RegisterType((*CampusHomePagesReq)(nil), "bilibili.app.dynamic.v2.CampusHomePagesReq")
	proto.RegisterType((*CampusEntryTabReq)(nil), "bilibili.app.dynamic.v2.CampusEntryTabReq")
	proto.RegisterType((*CampusEntryTabResp)(nil), "bilibili.app.dynamic.v2.CampusEntryTabResp")
	proto.RegisterType((*CampusHomeRcmdTopic)(nil), "bilibili.app.dynamic.v2.CampusHomeRcmdTopic")
	proto.RegisterType((*HomeSubscribeReq)(nil), "bilibili.app.dynamic.v2.HomeSubscribeReq")
	proto.RegisterType((*HomeSubscribeReply)(nil), "bilibili.app.dynamic.v2.HomeSubscribeReply")
	proto.RegisterType((*LbsPoiReq)(nil), "bilibili.app.dynamic.v2.LbsPoiReq")
	proto.RegisterType((*LbsPoiDetail)(nil), "bilibili.app.dynamic.v2.LbsPoiDetail")
	proto.RegisterType((*LbsPoiReply)(nil), "bilibili.app.dynamic.v2.LbsPoiReply")
	proto.RegisterType((*FeedFilterReq)(nil), "bilibili.app.dynamic.v2.FeedFilterReq")
	proto.RegisterType((*FeedFilterReply)(nil), "bilibili.app.dynamic.v2.FeedFilterReply")
	proto.RegisterType((*CampusMngDetailReq)(nil), "bilibili.app.dynamic.v2.CampusMngDetailReq")
	proto.RegisterType((*CampusMngDetailReply)(nil), "bilibili.app.dynamic.v2.CampusMngDetailReply")
	proto.RegisterType((*CampusMngItem)(nil), "bilibili.app.dynamic.v2.CampusMngItem")
	proto.RegisterType((*CampusMngBasicInfo)(nil), "bilibili.app.dynamic.v2.CampusMngBasicInfo")
	proto.RegisterType((*CampusMngBadge)(nil), "bilibili.app.dynamic.v2.CampusMngBadge")
	proto.RegisterType((*CampusMngSlogan)(nil), "bilibili.app.dynamic.v2.CampusMngSlogan")
	proto.RegisterType((*CampusMngQuiz)(nil), "bilibili.app.dynamic.v2.CampusMngQuiz")
	proto.RegisterType((*CampusMngSubmitReq)(nil), "bilibili.app.dynamic.v2.CampusMngSubmitReq")
	proto.RegisterType((*CampusMngSubmitReply)(nil), "bilibili.app.dynamic.v2.CampusMngSubmitReply")
	proto.RegisterType((*CampusMngQuizDetail)(nil), "bilibili.app.dynamic.v2.CampusMngQuizDetail")
	proto.RegisterType((*CampusMngQuizOperateReq)(nil), "bilibili.app.dynamic.v2.CampusMngQuizOperateReq")
	proto.RegisterType((*CampusMngQuizOperateReply)(nil), "bilibili.app.dynamic.v2.CampusMngQuizOperateReply")
	proto.RegisterType((*LegacyTopicFeedReq)(nil), "bilibili.app.dynamic.v2.LegacyTopicFeedReq")
	proto.RegisterType((*LegacyTopicFeedReply)(nil), "bilibili.app.dynamic.v2.LegacyTopicFeedReply")
}

func init() {
	proto.RegisterFile("go-gateway/app/app-svr/app-dynamic/interface/api/v2/dynamicV2.proto", fileDescriptor_0ca405303911d8c6)
}

var fileDescriptor_0ca405303911d8c6 = []byte{
	// 21422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x6d, 0x70, 0x24, 0x49,
	0x76, 0x18, 0x86, 0xee, 0x46, 0x7f, 0xbd, 0x6e, 0x00, 0x85, 0x9a, 0x2f, 0xcc, 0xcc, 0x7e, 0xd6,
	0x7e, 0xcd, 0xe2, 0xf6, 0x66, 0x6f, 0x67, 0xb9, 0xbc, 0xfd, 0xb8, 0xdb, 0x5b, 0x0c, 0x30, 0x33,
	0xc0, 0x1d, 0x30, 0x03, 0x16, 0x80, 0x59, 0x1e, 0x29, 0xb1, 0xaf, 0xba, 0xab, 0xd0, 0xa8, 0x9b,
	0xee, 0xaa, 0xda, 0xaa, 0x6a, 0x60, 0xb0, 0xa2, 0x4c, 0x39, 0x24, 0xd2, 0x12, 0x49, 0xd9, 0xa6,
	0x24, 0x7f, 0xd0, 0x14, 0x45, 0xda, 0x0e, 0x5a, 0x92, 0x2d, 0x46, 0xc8, 0x26, 0x6d, 0x8b, 0x0e,
	0x06, 0xc3, 0x61, 0x3a, 0xf4, 0x11, 0x96, 0x23, 0x2c, 0xda, 0x26, 0x19, 0xb6, 0x43, 0x41, 0x53,
	0xa2, 0x28, 0xf3, 0x87, 0xad, 0xb0, 0x1d, 0xb6, 0x42, 0xb4, 0x18, 0x8e, 0xf7, 0xf2, 0x65, 0x55,
	0x56, 0x7f, 0x55, 0x63, 0x30, 0xb7, 0x14, 0xa5, 0xfb, 0x81, 0x40, 0xe7, 0xcb, 0xcc, 0x57, 0xf9,
	0xf1, 0xf2, 0xe5, 0x7b, 0x2f, 0x5f, 0xbe, 0x84, 0xf5, 0xae, 0xff, 0xf9, 0xae, 0x15, 0x3b, 0x27,
	0xd6, 0xe9, 0x9b, 0x56, 0x10, 0xe0, 0xdf, 0xe7, 0xa3, 0xe3, 0x90, 0xfe, 0xdb, 0xa7, 0x9e, 0xd5,
	0x77, 0x3b, 0x6f, 0xba, 0x5e, 0xec, 0x84, 0x87, 0x56, 0xc7, 0x79, 0xd3, 0x0a, 0xdc, 0x37, 0x8f,
	0x6f, 0xbd, 0xc9, 0x19, 0x0f, 0x6f, 0xdd, 0x0c, 0x42, 0x3f, 0xf6, 0xf5, 0x2b, 0x6d, 0xb7, 0xe7,
	0xe2, 0xdf, 0x4d, 0x2b, 0x08, 0x6e, 0x72, 0xee, 0xcd, 0xe3, 0x5b, 0xd7, 0xae, 0x76, 0x7d, 0xbf,
	0xdb, 0x73, 0xde, 0xa4, 0x62, 0xed, 0xc1, 0xe1, 0x9b, 0x96, 0x77, 0x2a, 0xea, 0x5c, 0x7b, 0x7f,
	0xd2, 0x87, 0xc3, 0xce, 0x91, 0x7b, 0xec, 0xbc, 0xd9, 0x77, 0x6d, 0xbb, 0xe7, 0x9c, 0x58, 0xa1,
	0xf3, 0xe6, 0xf1, 0x5b, 0x6f, 0x06, 0xa1, 0xd3, 0xf3, 0x2d, 0x5b, 0xd4, 0x35, 0xaa, 0x50, 0xbe,
	0xef, 0x9b, 0xce, 0x27, 0x46, 0x1d, 0xaa, 0xf8, 0x23, 0xe8, 0x9d, 0x1a, 0x3f, 0x5d, 0x82, 0xc6,
	0xc6, 0xa9, 0xf7, 0xd0, 0xb5, 0x1d, 0xcc, 0xd2, 0x5f, 0x83, 0xa5, 0x41, 0x60, 0x5b, 0xb1, 0xd3,
	0x6a, 0x5b, 0x91, 0xd3, 0x73, 0x3d, 0x67, 0xa5, 0xf0, 0x42, 0xe1, 0x46, 0xdd, 0x5c, 0x14, 0xe0,
	0xdb, 0x0c, 0xd5, 0x2f, 0x43, 0xc5, 0x3f, 0x3c, 0x8c, 0x9c, 0x78, 0xa5, 0x48, 0xf9, 0x9c, 0xd2,
	0x75, 0x98, 0x0f, 0xac, 0xae, 0xb3, 0x52, 0x7a, 0xa1, 0x70, 0xa3, 0x6c, 0xd2, 0x6f, 0x7d, 0x1d,
	0x9a, 0xa1, 0x73, 0x18, 0x3a, 0xd1, 0x51, 0x2b, 0x3e, 0x0d, 0x9c, 0x95, 0xf9, 0x17, 0x0a, 0x37,
	0x16, 0x6f, 0xbd, 0x70, 0x73, 0x42, 0xff, 0x6f, 0x9a, 0xa2, 0xb0, 0xd9, 0xe0, 0x5a, 0xfb, 0xa7,
	0x81, 0xa3, 0x7f, 0x15, 0x16, 0x82, 0x9e, 0x75, 0x3a, 0x08, 0x7b, 0xad, 0xc0, 0x0a, 0xad, 0xfe,
	0x4a, 0xf9, 0x85, 0xc2, 0x8d, 0xc6, 0xad, 0x57, 0x26, 0x62, 0xd9, 0x15, 0xa5, 0x77, 0xb1, 0xb0,
	0xd9, 0x0c, 0x94, 0x14, 0xf6, 0xd2, 0x8a, 0x22, 0x37, 0x8a, 0xd3, 0x5e, 0x56, 0x44, 0x2f, 0x05,
	0x38, 0xe9, 0xe5, 0xb3, 0x00, 0x3d, 0xbf, 0x63, 0xf5, 0x5a, 0xb1, 0xdb, 0x77, 0x56, 0xaa, 0xd4,
	0xa7, 0x3a, 0x41, 0xf6, 0xdd, 0xbe, 0x83, 0x9d, 0x3d, 0x0c, 0xfd, 0xfe, 0x4a, 0x8d, 0x2a, 0xd3,
	0x6f, 0xfd, 0x01, 0x34, 0xf0, 0x5b, 0x4e, 0xd8, 0xb2, 0xc2, 0x6e, 0xb4, 0x52, 0xa7, 0x56, 0xde,
	0xcc, 0xb6, 0x92, 0x67, 0xeb, 0x66, 0x3a, 0x5b, 0x37, 0x8f, 0xdf, 0xa2, 0x06, 0x3b, 0xe1, 0x5a,
	0xd8, 0x8d, 0x4c, 0x08, 0x92, 0xdf, 0xc6, 0x0f, 0x40, 0x53, 0xed, 0x8a, 0xbe, 0x08, 0xc5, 0x4f,
	0x3c, 0x9a, 0x95, 0xb2, 0x59, 0xfc, 0xc4, 0xd3, 0x2f, 0x42, 0xf9, 0xd0, 0x3b, 0x76, 0x42, 0x9a,
	0x88, 0xb2, 0x29, 0x12, 0x0c, 0xb5, 0x7a, 0x3c, 0x11, 0x22, 0x81, 0xfd, 0x39, 0xf4, 0xc3, 0x8e,
	0xd3, 0x3a, 0xf2, 0xa3, 0x98, 0xe6, 0xa1, 0x6c, 0xd6, 0x09, 0xb2, 0xe9, 0x47, 0x31, 0x55, 0xf2,
	0x07, 0xe1, 0x23, 0x1a, 0x5b, 0xac, 0x84, 0x09, 0xe3, 0x07, 0x8b, 0xb0, 0x90, 0xd2, 0x48, 0xd0,
	0x3b, 0xd5, 0xb7, 0xa1, 0xc9, 0x03, 0xdd, 0xea, 0xb9, 0x51, 0x4c, 0x8d, 0x69, 0xdc, 0x7a, 0x7d,
	0xe2, 0x54, 0xac, 0x5b, 0xa1, 0x4d, 0xd5, 0x37, 0x4e, 0xbd, 0x6d, 0x37, 0x8a, 0xcd, 0x06, 0x67,
	0x62, 0x42, 0xdf, 0x86, 0x85, 0x63, 0xcc, 0x6c, 0x0d, 0x02, 0x81, 0xae, 0x48, 0xe8, 0x6e, 0xe4,
	0xa3, 0x3b, 0x08, 0x04, 0xb6, 0xe3, 0x34, 0xa1, 0x7f, 0x37, 0x2c, 0x0b, 0x6c, 0x87, 0x7e, 0xaf,
	0xe7, 0x9f, 0x08, 0x8c, 0x25, 0xc2, 0xf8, 0x46, 0x3e, 0xc6, 0xbb, 0x54, 0x89, 0xb0, 0x2e, 0x1d,
	0x67, 0x01, 0xc6, 0xaf, 0x16, 0x40, 0x1b, 0xee, 0x89, 0xfe, 0x2e, 0xcc, 0xf3, 0x10, 0x94, 0x6e,
	0x34, 0x6e, 0xbd, 0x3c, 0xf1, 0x0b, 0x1b, 0xe2, 0xe7, 0x56, 0xec, 0xf4, 0x4d, 0xaa, 0x81, 0x73,
	0xc1, 0x4b, 0xcd, 0x1b, 0xf4, 0xa9, 0xcf, 0x25, 0xb3, 0x2e, 0x20, 0xf7, 0x07, 0x7d, 0xfd, 0x15,
	0x58, 0x3c, 0x72, 0xa3, 0xd8, 0x0f, 0x4f, 0x5b, 0xbc, 0xd0, 0x4a, 0x44, 0x65, 0x0b, 0x0c, 0x7d,
	0x20, 0xd6, 0xdb, 0x98, 0x05, 0x3b, 0x3f, 0x76, 0xc1, 0x5e, 0x85, 0xda, 0x91, 0x15, 0xb5, 0xfa,
	0x7e, 0xe8, 0xd0, 0xf4, 0xd6, 0xcc, 0xea, 0x91, 0x15, 0xed, 0xf8, 0xa1, 0x63, 0xfc, 0x72, 0x91,
	0x98, 0x80, 0x6c, 0x9f, 0xbe, 0x06, 0xf5, 0x8e, 0x15, 0xda, 0x62, 0xb1, 0x16, 0x68, 0xb1, 0xe6,
	0x76, 0x0c, 0xd7, 0xa8, 0x59, 0xc3, 0x6a, 0xb4, 0x5a, 0xd7, 0xa0, 0xee, 0xc6, 0x4e, 0x5f, 0xa0,
	0x28, 0x9e, 0x05, 0x05, 0x56, 0x23, 0x14, 0xef, 0x41, 0xb5, 0xef, 0xdb, 0x83, 0x9e, 0x13, 0xad,
	0x94, 0x68, 0x70, 0x9f, 0x9f, 0x88, 0x60, 0x87, 0xca, 0x99, 0xb2, 0xbc, 0xfe, 0x45, 0xa8, 0x38,
	0x8f, 0x63, 0xc7, 0xb3, 0x69, 0x2c, 0xa6, 0xd5, 0xbc, 0x43, 0xc5, 0x4c, 0x2e, 0x2e, 0x07, 0xe9,
	0xd0, 0xef, 0xd9, 0xbc, 0x06, 0x70, 0x90, 0xee, 0xfa, 0x3d, 0x5b, 0x7f, 0x1e, 0x1a, 0x91, 0x13,
	0x1e, 0x3b, 0x61, 0xcb, 0xf5, 0x0e, 0x7d, 0xe6, 0x17, 0x20, 0x40, 0x5b, 0xde, 0xa1, 0x6f, 0xfc,
	0x75, 0x1d, 0x2a, 0xa2, 0x21, 0xfa, 0x3d, 0x68, 0x88, 0xa6, 0xa8, 0x43, 0xf8, 0xea, 0xb4, 0xfe,
	0x8b, 0x8a, 0x34, 0x02, 0xd0, 0x4f, 0x7e, 0xe3, 0xd2, 0x60, 0x44, 0xd6, 0x20, 0x3e, 0xf2, 0x43,
	0x5e, 0x1a, 0xaf, 0xe4, 0x8c, 0xc4, 0x1a, 0x15, 0xde, 0x9c, 0x33, 0x9b, 0x7d, 0x25, 0xad, 0x3f,
	0x80, 0x45, 0xc6, 0x66, 0xbb, 0x51, 0x30, 0x88, 0x1d, 0x5e, 0x17, 0xaf, 0xe6, 0xa0, 0xdb, 0x10,
	0xa5, 0x37, 0xe7, 0x4c, 0x6e, 0x0d, 0x03, 0xf4, 0xbb, 0x49, 0x3f, 0x6d, 0x27, 0xea, 0xf0, 0x60,
	0xbf, 0x94, 0x87, 0xcd, 0x89, 0x3a, 0x9b, 0x73, 0xb2, 0x9b, 0x98, 0x52, 0x1b, 0x26, 0x4a, 0x33,
	0x73, 0xcf, 0x6d, 0x98, 0x00, 0x28, 0x0d, 0x13, 0x00, 0xdd, 0x84, 0x25, 0x46, 0xd8, 0x73, 0x1f,
	0x39, 0x07, 0x91, 0x13, 0xd2, 0x84, 0x35, 0x6e, 0xbd, 0x96, 0x83, 0x71, 0x9b, 0x8b, 0x6f, 0xce,
	0x99, 0xdc, 0x24, 0x09, 0x51, 0xe6, 0x82, 0x69, 0xab, 0x3a, 0xd3, 0x5c, 0x08, 0x0a, 0x4b, 0xe7,
	0x42, 0xa4, 0x91, 0x4d, 0xc9, 0x99, 0xb5, 0x6d, 0x37, 0x76, 0x7d, 0xcf, 0xea, 0xd1, 0x3e, 0x32,
	0x8d, 0x8f, 0xf2, 0xec, 0x26, 0x15, 0x36, 0xe7, 0x4c, 0xad, 0x3f, 0x04, 0x53, 0x26, 0x25, 0x8a,
	0xad, 0x98, 0x37, 0xa0, 0xbc, 0x49, 0xd9, 0x8b, 0xad, 0x38, 0x9d, 0x14, 0x4c, 0x29, 0x78, 0x68,
	0x39, 0xc0, 0x4c, 0x78, 0x70, 0xa9, 0xa4, 0x78, 0x68, 0xe1, 0xa4, 0x93, 0xdb, 0xf1, 0xfb, 0x7d,
	0xc7, 0x8b, 0x57, 0x1a, 0x33, 0x4d, 0xee, 0xba, 0x28, 0x9d, 0x4e, 0x2e, 0x03, 0xf4, 0xef, 0x05,
	0x9d, 0x11, 0x92, 0x88, 0x65, 0x75, 0xb0, 0xe3, 0x2b, 0x4d, 0x42, 0xba, 0x9a, 0x83, 0x74, 0x2b,
	0xad, 0xb1, 0x39, 0x67, 0xf2, 0x14, 0x28, 0x40, 0xbd, 0x0d, 0x97, 0x32, 0x2b, 0xae, 0x75, 0xe8,
	0x87, 0x27, 0x56, 0x68, 0xaf, 0x2c, 0xe4, 0x6c, 0x21, 0xea, 0xca, 0xbb, 0x2b, 0xea, 0x6c, 0xce,
	0x99, 0x17, 0xfa, 0xa3, 0x60, 0xfd, 0x23, 0xa8, 0x27, 0x73, 0xbf, 0xb2, 0x48, 0x78, 0x5f, 0xcc,
	0x9d, 0xf3, 0xcd, 0x39, 0xb3, 0x26, 0xe7, 0x5a, 0xa1, 0xc5, 0xb6, 0xe5, 0x79, 0x4e, 0xb8, 0xb2,
	0x34, 0x13, 0x2d, 0xde, 0xa6, 0xc2, 0x29, 0x2d, 0x8a, 0xb4, 0xbe, 0x07, 0x9a, 0x1c, 0x50, 0xe4,
	0xd9, 0xde, 0xa0, 0xd7, 0x5b, 0xd1, 0x66, 0x5a, 0x2e, 0xb8, 0x5d, 0xdc, 0x1f, 0xf4, 0x7a, 0xe9,
	0x72, 0x91, 0x10, 0xfd, 0x61, 0x42, 0xe0, 0xd1, 0x91, 0x15, 0x3a, 0x82, 0x6b, 0x2e, 0xe7, 0xec,
	0xec, 0x4c, 0x8c, 0x58, 0x01, 0x79, 0xea, 0xe6, 0x9c, 0xc9, 0xeb, 0x38, 0x01, 0xe9, 0x07, 0x49,
	0x63, 0x43, 0x47, 0x10, 0x94, 0xbd, 0xa2, 0xcf, 0x84, 0xd6, 0x94, 0xe5, 0x53, 0xb4, 0x09, 0x48,
	0x5f, 0x07, 0x90, 0x2c, 0xdb, 0x0f, 0x56, 0x2e, 0x10, 0x42, 0x23, 0x07, 0xe1, 0xbe, 0x1f, 0x6c,
	0xce, 0x99, 0x3c, 0x97, 0xfb, 0x7e, 0xa0, 0x4e, 0xcb, 0x20, 0x8e, 0xfd, 0xfe, 0xca, 0xc5, 0xd9,
	0xa6, 0x85, 0x0a, 0x2b, 0xd3, 0x42, 0x69, 0xfd, 0x00, 0x2e, 0x28, 0x0b, 0x39, 0x21, 0xc4, 0x4b,
	0x67, 0x59, 0xd0, 0xcb, 0xe9, 0x82, 0x96, 0xd4, 0xb7, 0x05, 0xcd, 0x04, 0xad, 0x1f, 0x9e, 0xae,
	0x5c, 0x26, 0x7c, 0x2f, 0xe7, 0xe2, 0xf3, 0xc3, 0xd3, 0xcd, 0x39, 0xb3, 0xd1, 0x4f, 0x93, 0x0a,
	0xaa, 0xd8, 0x0f, 0xdc, 0xce, 0xca, 0x95, 0x99, 0x50, 0xed, 0x63, 0xd9, 0x14, 0x15, 0x25, 0x75,
	0x17, 0x56, 0x54, 0x54, 0x2d, 0xdb, 0x89, 0x2d, 0xb7, 0x17, 0x21, 0xaf, 0x5d, 0x59, 0x19, 0x27,
	0x43, 0x8f, 0x47, 0xbb, 0x21, 0xaa, 0xdd, 0x79, 0x8c, 0x9d, 0xbf, 0xd4, 0x1f, 0x97, 0xa1, 0xef,
	0x24, 0x0c, 0x29, 0xf6, 0x83, 0x56, 0x6c, 0x75, 0x57, 0xae, 0xce, 0x34, 0x4d, 0xfb, 0x7e, 0xb0,
	0x6f, 0x75, 0xd3, 0x69, 0x12, 0x69, 0xfd, 0xeb, 0x09, 0x3b, 0x12, 0x2d, 0x6f, 0x87, 0xae, 0x73,
	0xb8, 0x72, 0x6d, 0x26, 0x56, 0x4e, 0x4d, 0xbb, 0x8d, 0x15, 0x52, 0x56, 0x9e, 0xc2, 0xd4, 0xf1,
	0x75, 0xe3, 0x9e, 0xb3, 0x72, 0x7d, 0xb6, 0xf1, 0xc5, 0xb2, 0xca, 0xf8, 0x62, 0x72, 0x98, 0x34,
	0xbd, 0x95, 0x67, 0x66, 0x27, 0x4d, 0x6f, 0x88, 0x34, 0x3d, 0x05, 0x9b, 0xe7, 0xc7, 0x6e, 0xc7,
	0x59, 0x79, 0x76, 0x26, 0x6c, 0xf7, 0xa9, 0x70, 0x8a, 0x4d, 0xa4, 0x6f, 0x2f, 0x24, 0x3b, 0x0d,
	0xf2, 0x1f, 0xe3, 0x75, 0x68, 0xaa, 0x03, 0x8e, 0x42, 0x59, 0x6c, 0x75, 0x5b, 0x9e, 0xd5, 0x97,
	0xca, 0x68, 0x35, 0xb6, 0xba, 0xf7, 0xad, 0xbe, 0x63, 0xfc, 0x46, 0x59, 0x96, 0x65, 0x11, 0x47,
	0x83, 0x52, 0xdf, 0xb5, 0xa9, 0x58, 0xc9, 0xc4, 0x9f, 0xfa, 0x0d, 0xd0, 0x02, 0xd4, 0xde, 0x5a,
	0x3d, 0xab, 0xed, 0xf4, 0x5a, 0x31, 0x12, 0x94, 0x50, 0x59, 0x17, 0x09, 0xbe, 0x8d, 0xe0, 0x7d,
	0xe7, 0x71, 0xac, 0xbf, 0x07, 0x15, 0x96, 0xb2, 0x4a, 0x39, 0x3c, 0x19, 0xe5, 0x01, 0x64, 0x46,
	0x26, 0x57, 0x40, 0xe5, 0xd4, 0x76, 0x3a, 0x7e, 0x88, 0x72, 0x38, 0xca, 0xc0, 0x2c, 0x0a, 0x4d,
	0x1e, 0x8f, 0x0d, 0x2e, 0x8d, 0xfa, 0x84, 0xd9, 0xb4, 0x95, 0x14, 0x76, 0x61, 0x10, 0xba, 0x24,
	0x01, 0xd5, 0x4d, 0xfc, 0xa9, 0x7f, 0x04, 0xd5, 0x98, 0x55, 0xa3, 0x0a, 0x49, 0xc2, 0x93, 0xd9,
	0xf2, 0xfe, 0x51, 0xe8, 0x38, 0xbb, 0xbe, 0xeb, 0xc5, 0xa4, 0x69, 0x54, 0x62, 0xa1, 0x14, 0xed,
	0x00, 0xb4, 0x2d, 0xbb, 0xcb, 0xf2, 0x68, 0x95, 0xe4, 0xd1, 0x9b, 0x33, 0x6d, 0x65, 0xb7, 0xb1,
	0x1a, 0xc9, 0xa5, 0xf5, 0xb6, 0xfc, 0xa9, 0xef, 0x41, 0x53, 0xa0, 0x63, 0x5a, 0x12, 0x72, 0xcb,
	0x17, 0x66, 0x47, 0x28, 0xc8, 0xc8, 0x6c, 0xb4, 0xd3, 0x84, 0x7e, 0x19, 0x2a, 0x56, 0x4c, 0x82,
	0x55, 0x9d, 0x24, 0x6f, 0x4e, 0xe9, 0x5f, 0x86, 0x5a, 0xe8, 0xf4, 0x2c, 0xda, 0xe4, 0x21, 0x67,
	0x62, 0x4c, 0x2e, 0x68, 0x26, 0x55, 0x50, 0x17, 0x38, 0x71, 0xdc, 0xee, 0x91, 0x14, 0x3b, 0x26,
	0xeb, 0x02, 0x1f, 0x53, 0x31, 0x93, 0x8b, 0x93, 0xc0, 0x7f, 0xe4, 0x9f, 0xb0, 0x1e, 0x49, 0xf2,
	0x45, 0xcd, 0x04, 0x04, 0x09, 0x9d, 0x50, 0xbf, 0x04, 0x15, 0x37, 0xa2, 0xed, 0x62, 0x81, 0xf2,
	0xca, 0x6e, 0x84, 0x9b, 0xc0, 0x4d, 0xb8, 0xc0, 0x04, 0xe7, 0x77, 0xa8, 0x09, 0x82, 0xe6, 0x16,
	0x69, 0x3e, 0x97, 0x05, 0xcd, 0x71, 0x0e, 0x91, 0xdd, 0xb3, 0x40, 0x48, 0x5b, 0x3d, 0xe7, 0xd8,
	0xe9, 0xd1, 0x46, 0x5e, 0x33, 0xeb, 0x08, 0xd9, 0x46, 0x80, 0xf1, 0xab, 0xf3, 0x50, 0x93, 0xf4,
	0x36, 0x86, 0xbc, 0x75, 0x98, 0xa7, 0x85, 0x21, 0x48, 0x9a, 0x7e, 0x93, 0x59, 0xc2, 0xea, 0x38,
	0xac, 0x30, 0xd2, 0x6f, 0x7d, 0x1d, 0x6a, 0xfe, 0xe1, 0xa1, 0xdb, 0x71, 0xad, 0x1e, 0x13, 0xe7,
	0x64, 0x22, 0x7a, 0xc0, 0x05, 0x1f, 0x3a, 0xa1, 0x7b, 0x78, 0x6a, 0x26, 0x15, 0xf5, 0x5b, 0x50,
	0x3a, 0x76, 0x03, 0x16, 0xce, 0x27, 0xdb, 0x6f, 0x1e, 0xba, 0x01, 0xad, 0x0e, 0x2c, 0xac, 0xbf,
	0x83, 0x0a, 0xf2, 0xb1, 0xc3, 0xf2, 0xf7, 0xe4, 0xa9, 0xdb, 0x76, 0x8f, 0x69, 0x83, 0x37, 0xa9,
	0xb8, 0x5c, 0x05, 0xd5, 0x74, 0x15, 0x7c, 0x08, 0xd5, 0xc0, 0xf1, 0x6c, 0xcb, 0x8b, 0x99, 0xde,
	0x5e, 0x9e, 0xba, 0x3e, 0x77, 0x45, 0x59, 0x53, 0x56, 0x42, 0xa9, 0x0b, 0x47, 0x27, 0xe8, 0x59,
	0xb1, 0xc3, 0x52, 0xf1, 0xe4, 0x0d, 0xfe, 0xbe, 0x2c, 0x69, 0xa6, 0x95, 0xf4, 0x8b, 0x50, 0x16,
	0x93, 0x04, 0xc2, 0x3c, 0x42, 0x09, 0x1c, 0xed, 0xc8, 0xed, 0x7a, 0x44, 0x5e, 0x75, 0x93, 0x7e,
	0x23, 0xcb, 0xc2, 0x51, 0x6f, 0x79, 0x87, 0x31, 0x11, 0x4e, 0xd9, 0xac, 0x62, 0xfa, 0xfe, 0x61,
	0xac, 0xbf, 0x00, 0x4d, 0x99, 0xd5, 0xf2, 0x9c, 0x13, 0xa2, 0x9d, 0xb2, 0x09, 0x9c, 0x7d, 0xdf,
	0x39, 0xd1, 0x3f, 0x80, 0x1a, 0x66, 0x92, 0xc0, 0xb4, 0x98, 0x33, 0xd4, 0xf7, 0xef, 0xee, 0xd3,
	0xa0, 0x55, 0xbd, 0xc3, 0x98, 0x28, 0xe4, 0x06, 0x68, 0x6e, 0xd4, 0x8a, 0x1c, 0xcf, 0xf5, 0xc3,
	0x56, 0xdf, 0xe9, 0xb7, 0x59, 0x38, 0x2c, 0x9b, 0x8b, 0x6e, 0xb4, 0x47, 0xe0, 0x1d, 0x82, 0x1a,
	0x7f, 0xab, 0x00, 0x55, 0xae, 0x8e, 0x0a, 0x6b, 0xe8, 0x74, 0x89, 0x56, 0x67, 0x51, 0x58, 0xef,
	0xdf, 0xdd, 0x37, 0xa9, 0xb8, 0x50, 0x58, 0xc3, 0xe4, 0x37, 0x2e, 0x1a, 0x46, 0xe4, 0x76, 0x7c,
	0x8f, 0xa9, 0x92, 0x0b, 0x6c, 0x75, 0x7c, 0x4f, 0xdf, 0x07, 0x9d, 0x0b, 0x10, 0xd1, 0xa3, 0x64,
	0x33, 0x88, 0x88, 0x52, 0x73, 0x3e, 0xb8, 0x77, 0xe4, 0x9f, 0xec, 0x51, 0x69, 0x53, 0x13, 0x18,
	0x52, 0x88, 0xb1, 0x07, 0x8b, 0x59, 0xa2, 0xc5, 0x59, 0x49, 0xba, 0x52, 0x36, 0xe9, 0x37, 0xc2,
	0x48, 0x4f, 0xe5, 0xb5, 0x82, 0xbf, 0x71, 0xa6, 0xdc, 0xa8, 0x45, 0xac, 0x86, 0x4d, 0x65, 0x55,
	0x37, 0x5a, 0xc3, 0xa4, 0xf1, 0x4f, 0x0a, 0x50, 0x65, 0x52, 0xc6, 0xaa, 0xfb, 0x0a, 0x3a, 0xea,
	0xeb, 0x65, 0xa8, 0x70, 0xf3, 0x85, 0xe5, 0x8d, 0x53, 0x88, 0xd2, 0x1e, 0x38, 0x2d, 0xdb, 0x62,
	0x05, 0xbb, 0x64, 0x56, 0xed, 0x81, 0xb3, 0x81, 0x14, 0xf4, 0x45, 0x28, 0xd3, 0x36, 0xc4, 0x4b,
	0xf0, 0xc5, 0x69, 0x4b, 0x88, 0x36, 0x26, 0x53, 0x94, 0x47, 0x26, 0x11, 0x1f, 0x39, 0x7d, 0x66,
	0xe0, 0xc2, 0x34, 0x51, 0x27, 0x08, 0x35, 0xe5, 0x75, 0xd0, 0xac, 0x63, 0x2b, 0xb6, 0xc2, 0x56,
	0x34, 0x68, 0x47, 0x9d, 0xd0, 0x0d, 0x62, 0x5a, 0x70, 0x65, 0x73, 0x49, 0xc0, 0xf7, 0x24, 0x58,
	0x7f, 0x05, 0x16, 0x3d, 0xb7, 0xf3, 0x08, 0xa9, 0xba, 0xd5, 0xf1, 0x7b, 0x7e, 0xc8, 0x6b, 0x6c,
	0x41, 0x42, 0xd7, 0x11, 0x68, 0xec, 0x41, 0x4d, 0xb6, 0x41, 0xd8, 0x74, 0xe3, 0x23, 0xde, 0x7c,
	0xe9, 0x37, 0x8d, 0x6f, 0xba, 0x95, 0xd2, 0x6f, 0x9c, 0x7c, 0xde, 0x64, 0xb1, 0x61, 0xcc, 0x7e,
	0x80, 0x40, 0xfb, 0x08, 0x31, 0xbe, 0x1f, 0x6a, 0x72, 0x99, 0xeb, 0xd7, 0xa1, 0xee, 0x46, 0xad,
	0x9e, 0x7b, 0xec, 0x7a, 0x5d, 0x1e, 0xd6, 0x9a, 0x1b, 0x6d, 0x53, 0x5a, 0xae, 0xfe, 0x62, 0xba,
	0xfa, 0xd7, 0x00, 0x90, 0x2f, 0x10, 0xc1, 0x38, 0x4c, 0x2f, 0xc6, 0x54, 0x66, 0x82, 0xa4, 0xe1,
	0x98, 0xf5, 0x9e, 0xfc, 0x69, 0x58, 0xd0, 0x50, 0x18, 0x03, 0x7e, 0x23, 0x48, 0x79, 0x69, 0x30,
	0x81, 0x97, 0x5e, 0x84, 0xb2, 0xdb, 0x97, 0x06, 0xed, 0xba, 0x29, 0x12, 0x38, 0xf5, 0xce, 0xe3,
	0xc0, 0x0d, 0x85, 0xb1, 0xad, 0x64, 0x72, 0xca, 0xf8, 0xf3, 0x05, 0xa8, 0x27, 0xac, 0x03, 0xbf,
	0xe0, 0xa5, 0x5f, 0xf0, 0xce, 0xf4, 0x85, 0xe7, 0xa1, 0x41, 0x3f, 0x5a, 0x51, 0xdf, 0xea, 0xf5,
	0xd8, 0xa6, 0x07, 0x04, 0xda, 0x43, 0x48, 0xca, 0x8c, 0x84, 0xa0, 0xc0, 0xcc, 0xe8, 0x19, 0xa8,
	0x77, 0x7c, 0x4f, 0xd8, 0x02, 0xd8, 0x46, 0x95, 0x02, 0x8c, 0x1f, 0x2d, 0x40, 0x53, 0x95, 0x3c,
	0xf4, 0x45, 0x28, 0x26, 0x0d, 0x2c, 0xba, 0x64, 0xff, 0x22, 0xcb, 0xdf, 0x20, 0xec, 0x71, 0x1b,
	0xab, 0x98, 0x3e, 0x08, 0x7b, 0x98, 0xf5, 0xcd, 0x41, 0x3f, 0xa0, 0x2c, 0xd1, 0xd2, 0x2a, 0xa6,
	0x31, 0xeb, 0x3b, 0xa1, 0x74, 0x68, 0x79, 0x4c, 0xd3, 0x2f, 0x4f, 0x95, 0x79, 0xf0, 0xab, 0x77,
	0x2d, 0xcf, 0xc4, 0x0a, 0xc6, 0x27, 0xd0, 0x50, 0x60, 0xbc, 0x9f, 0x22, 0x26, 0x41, 0x0e, 0x65,
	0x37, 0x42, 0xf0, 0x65, 0xa8, 0x78, 0x03, 0xe2, 0x63, 0xbc, 0xcc, 0x44, 0x0a, 0x97, 0x84, 0xf8,
	0xd5, 0x8a, 0xe2, 0x90, 0x9b, 0x54, 0x17, 0x90, 0xbd, 0x98, 0x0c, 0xe0, 0x82, 0xbc, 0xc5, 0xd0,
	0x89, 0x84, 0xf1, 0x35, 0x58, 0xc8, 0xd8, 0xb4, 0xb0, 0x98, 0x90, 0xad, 0x05, 0x71, 0x8b, 0xc4,
	0x58, 0x4e, 0xc1, 0x34, 0x59, 0x4a, 0x68, 0xd2, 0x18, 0x00, 0xa4, 0x26, 0x2d, 0xfd, 0x5d, 0xae,
	0x93, 0x6b, 0x09, 0x76, 0xc4, 0x4a, 0x44, 0x31, 0x25, 0xe1, 0x41, 0x3c, 0xb4, 0x92, 0xe4, 0x79,
	0x68, 0xdd, 0x64, 0x99, 0x95, 0xd2, 0x65, 0x66, 0xfc, 0x99, 0x12, 0x8e, 0x5b, 0x82, 0x24, 0x29,
	0x53, 0x50, 0x96, 0xe2, 0x3b, 0xcc, 0xfe, 0x84, 0xe9, 0xf5, 0xc5, 0xa9, 0x8d, 0x21, 0x26, 0x2e,
	0x38, 0xe4, 0x48, 0x1f, 0x71, 0xdd, 0x39, 0x7d, 0xff, 0x9b, 0xae, 0x7a, 0x72, 0x33, 0x79, 0xdd,
	0xdd, 0xc1, 0xa2, 0x42, 0x5a, 0x74, 0xe4, 0x4f, 0x9c, 0xa8, 0xae, 0xef, 0xdb, 0x51, 0xca, 0xbb,
	0xea, 0x66, 0x9d, 0x20, 0x94, 0x8d, 0x1c, 0xb8, 0xe3, 0x7b, 0x44, 0x58, 0x82, 0x62, 0xab, 0x98,
	0x46, 0xc2, 0x42, 0x1e, 0x81, 0x59, 0xb4, 0x66, 0x04, 0x9b, 0xa2, 0xb2, 0xb8, 0xc4, 0xb0, 0xad,
	0xa1, 0x6b, 0xf3, 0xd9, 0x0b, 0xfe, 0xd4, 0x3f, 0x84, 0x32, 0xa1, 0xe5, 0xdd, 0xfd, 0xc6, 0x0c,
	0x86, 0xc8, 0x7b, 0x58, 0xde, 0x14, 0xd5, 0xf0, 0x73, 0x7e, 0xe8, 0x76, 0x85, 0xbc, 0x06, 0xe2,
	0x73, 0x08, 0x90, 0x62, 0x9a, 0x18, 0x88, 0xc8, 0xfd, 0xd4, 0xa1, 0xcd, 0xbe, 0xcc, 0x9d, 0xdc,
	0x73, 0x3f, 0x75, 0x8c, 0xff, 0xa7, 0x08, 0x4b, 0x43, 0x68, 0x49, 0x82, 0xf4, 0x07, 0x61, 0x47,
	0x31, 0x03, 0x97, 0x4d, 0x10, 0x20, 0xd9, 0xf5, 0x64, 0x4d, 0x15, 0xb3, 0x6b, 0x0a, 0xa5, 0xc2,
	0xce, 0x91, 0xd3, 0xb7, 0x94, 0x05, 0x57, 0x17, 0x10, 0xcc, 0xbe, 0x02, 0x55, 0xb2, 0xd5, 0xb8,
	0xb6, 0xe4, 0x40, 0x98, 0xdc, 0xb2, 0xf5, 0x57, 0x61, 0xc9, 0x0f, 0x1c, 0xaf, 0x75, 0x72, 0xe4,
	0xc6, 0x8e, 0xd0, 0x19, 0xca, 0x2f, 0x94, 0x90, 0xbf, 0x23, 0xf8, 0x63, 0x84, 0x92, 0x46, 0xf0,
	0x1c, 0x34, 0x06, 0x91, 0x13, 0xb6, 0x4e, 0x9c, 0x76, 0xeb, 0xf8, 0x16, 0x0d, 0x7c, 0xcd, 0xac,
	0x23, 0xe8, 0x63, 0xa7, 0xfd, 0xf0, 0x16, 0x7e, 0xc0, 0xb2, 0x5b, 0x7d, 0x2b, 0x7c, 0xc4, 0x03,
	0x5f, 0xb1, 0xec, 0x1d, 0x2b, 0x7c, 0x84, 0xe2, 0x2d, 0x37, 0x2c, 0xb0, 0x3a, 0x8f, 0x90, 0x43,
	0xd1, 0xec, 0x88, 0x69, 0x58, 0x16, 0x59, 0xbb, 0x22, 0x87, 0xa6, 0x69, 0x1d, 0xea, 0xd4, 0x47,
	0x1a, 0x82, 0x7a, 0xce, 0x3e, 0x4f, 0xe3, 0xf6, 0xd5, 0x41, 0x3f, 0x10, 0x67, 0x01, 0xdf, 0xe4,
	0x5f, 0x38, 0x50, 0x56, 0x10, 0x88, 0x2f, 0x89, 0x89, 0xa9, 0x5a, 0x41, 0x40, 0x2a, 0xe0, 0xdf,
	0x6d, 0x24, 0x4b, 0x9a, 0x8d, 0xbf, 0x1f, 0x2a, 0x5b, 0xff, 0x62, 0xae, 0x45, 0x50, 0x3d, 0x7c,
	0x10, 0x8b, 0x60, 0x0b, 0x1a, 0xf6, 0xa9, 0xd7, 0xe2, 0x43, 0x3a, 0x36, 0xb9, 0x4f, 0xb1, 0x56,
	0xda, 0xbd, 0x8d, 0x53, 0x6f, 0x4d, 0x94, 0xde, 0x9c, 0x33, 0xc1, 0x4e, 0x52, 0xfa, 0x97, 0xa1,
	0x8a, 0xa8, 0x82, 0x6e, 0x87, 0x75, 0x4a, 0x23, 0x07, 0xcd, 0xee, 0xbd, 0xf5, 0xcd, 0x39, 0xb3,
	0x62, 0x9f, 0x7a, 0xbb, 0xdd, 0x8e, 0xbe, 0x07, 0x4b, 0x58, 0xbd, 0xe3, 0x0f, 0xc2, 0x56, 0xe4,
	0x58, 0x91, 0x2f, 0x99, 0xec, 0xeb, 0x39, 0x68, 0xd6, 0xfd, 0x41, 0xb8, 0x47, 0x15, 0x36, 0xe7,
	0xcc, 0x05, 0x5b, 0x05, 0xe8, 0xbb, 0xb0, 0x98, 0x20, 0x6d, 0x5b, 0x71, 0xe7, 0x88, 0xe5, 0xf9,
	0x1b, 0x33, 0xe0, 0xbc, 0x8d, 0xe5, 0x51, 0x7f, 0xb7, 0x95, 0xb4, 0x1c, 0x30, 0x69, 0xa0, 0xaa,
	0xcc, 0x34, 0x60, 0xa9, 0x8d, 0x14, 0x07, 0x2c, 0x35, 0x8d, 0xd6, 0x10, 0x95, 0x1d, 0x5a, 0x27,
	0x6c, 0x5f, 0x7f, 0x29, 0x07, 0xcf, 0x46, 0x68, 0x9d, 0x6c, 0xce, 0x99, 0x38, 0xce, 0xf8, 0x33,
	0x9d, 0xbd, 0xd8, 0xed, 0xf4, 0x1c, 0x56, 0x15, 0xf2, 0x67, 0x8f, 0x4a, 0x27, 0xb3, 0x47, 0x29,
	0x24, 0x5d, 0x44, 0xd5, 0x1f, 0x44, 0x6e, 0x87, 0x79, 0xca, 0xcb, 0x39, 0x88, 0x76, 0xb0, 0xec,
	0xe6, 0x9c, 0x89, 0xbd, 0xa0, 0xdf, 0xfa, 0x5d, 0x00, 0x31, 0xdc, 0xfd, 0x7e, 0xa2, 0xc0, 0xbe,
	0x92, 0x3b, 0xd4, 0x58, 0x78, 0x73, 0xce, 0xac, 0xdb, 0x32, 0xa1, 0xef, 0x48, 0x5a, 0xc0, 0x54,
	0x8b, 0x54, 0xaa, 0xc6, 0x4c, 0x03, 0xb4, 0x2d, 0xc8, 0x72, 0x21, 0x41, 0x85, 0x00, 0xfd, 0x01,
	0x2c, 0x50, 0xdf, 0x1c, 0xdb, 0xb5, 0x88, 0x4b, 0x34, 0x67, 0x22, 0x82, 0x1d, 0x59, 0x9e, 0x89,
	0x20, 0x49, 0xcb, 0x7e, 0x5a, 0x41, 0xd0, 0x73, 0x62, 0xb6, 0x96, 0xe7, 0xf5, 0x73, 0x8d, 0x0a,
	0x73, 0x3f, 0x45, 0x42, 0xff, 0x6e, 0xd0, 0x10, 0x4f, 0x22, 0xc7, 0xa2, 0x20, 0x23, 0xb4, 0xa0,
	0xcf, 0xe5, 0x60, 0xdb, 0x53, 0xaa, 0x6c, 0xce, 0x99, 0x38, 0x5c, 0x2a, 0x48, 0xdf, 0x11, 0x5d,
	0x26, 0x31, 0x32, 0xec, 0xf4, 0x6d, 0x36, 0x9a, 0xbf, 0x36, 0xc3, 0xf8, 0x99, 0x9d, 0x3e, 0x52,
	0x2a, 0x52, 0x96, 0x4c, 0xca, 0x75, 0x34, 0xe8, 0x76, 0xe4, 0xda, 0xd4, 0x66, 0x1a, 0xc2, 0x83,
	0x7b, 0xeb, 0xc9, 0xd2, 0xc4, 0x21, 0x3c, 0xe8, 0x76, 0x78, 0x65, 0xb6, 0xe1, 0xe2, 0x70, 0xd7,
	0x49, 0x45, 0x5c, 0xce, 0xb3, 0x7f, 0x8e, 0x74, 0xff, 0xbe, 0x83, 0x6b, 0x42, 0xb7, 0x47, 0xa0,
	0xba, 0x09, 0xcb, 0xd9, 0xd5, 0xdf, 0x1a, 0x04, 0x6c, 0x3f, 0x7f, 0x65, 0x06, 0x06, 0x70, 0x10,
	0x6c, 0xce, 0x99, 0x8b, 0xea, 0xea, 0x3f, 0x08, 0xe4, 0xc0, 0x0a, 0xf3, 0x67, 0xe4, 0xc4, 0x6c,
	0x3e, 0xcf, 0x1b, 0x58, 0x32, 0x74, 0xee, 0xd1, 0xfc, 0xe3, 0xc0, 0xca, 0xe4, 0xb0, 0x39, 0xf0,
	0x3f, 0xac, 0xc3, 0x42, 0x86, 0xc7, 0x4e, 0x90, 0xd9, 0x48, 0xe0, 0x93, 0x7e, 0x10, 0x24, 0xf0,
	0x1d, 0x3b, 0xe1, 0x18, 0x89, 0xe6, 0x75, 0x58, 0xa6, 0xac, 0x56, 0xcf, 0x39, 0x8c, 0x69, 0xaf,
	0x6f, 0xbd, 0x25, 0xcf, 0xcc, 0x29, 0x63, 0xdb, 0x39, 0x8c, 0x71, 0xcb, 0x7f, 0x6b, 0x5c, 0xd1,
	0x5b, 0x2c, 0xc0, 0x64, 0x8b, 0xde, 0x1a, 0x57, 0xf4, 0x6d, 0xe9, 0x54, 0x92, 0x29, 0xfa, 0x36,
	0xca, 0x6b, 0xd6, 0xb1, 0x2b, 0xce, 0x0f, 0x4b, 0x26, 0xfd, 0xc6, 0x66, 0x76, 0x58, 0x98, 0x29,
	0x99, 0xf8, 0x13, 0x05, 0x2f, 0x5a, 0x9c, 0xea, 0xc6, 0x39, 0x65, 0xf7, 0xc0, 0xa2, 0x42, 0xf0,
	0xea, 0xcb, 0x9f, 0xfa, 0x47, 0x50, 0xb7, 0xdd, 0xbe, 0xe3, 0x45, 0xa9, 0xe9, 0x6c, 0x32, 0x86,
	0x0d, 0x59, 0xd2, 0x4c, 0x2b, 0xe9, 0xef, 0x41, 0x99, 0x4c, 0x74, 0x2b, 0x0d, 0x12, 0x6a, 0x5f,
	0x9a, 0xa2, 0xaf, 0xda, 0x8e, 0x4f, 0xa6, 0x3d, 0x53, 0xd4, 0x10, 0xaa, 0x84, 0xd7, 0x0a, 0x7a,
	0xd6, 0x29, 0xdb, 0xce, 0xaa, 0x1d, 0xcb, 0xdb, 0xed, 0x59, 0xa7, 0xfa, 0xbb, 0x50, 0x8e, 0xa8,
	0x57, 0x0b, 0x39, 0xbd, 0x22, 0xac, 0xd4, 0x2b, 0x51, 0x81, 0x74, 0xa5, 0x68, 0xf7, 0xde, 0x3a,
	0x71, 0x04, 0xb2, 0xb8, 0xed, 0xde, 0x5b, 0x47, 0xa5, 0xc7, 0xf5, 0x7a, 0xae, 0xe7, 0x1c, 0x98,
	0xdb, 0xb4, 0xa8, 0xeb, 0x66, 0x0a, 0xc0, 0xdc, 0x3b, 0x81, 0x1b, 0xf9, 0xb6, 0xb3, 0x65, 0xd3,
	0x12, 0x2d, 0x99, 0x29, 0x40, 0x5f, 0x81, 0xea, 0xde, 0xa0, 0x4d, 0xba, 0xfd, 0xb2, 0x50, 0xff,
	0x39, 0xa9, 0xbf, 0x00, 0x8d, 0x5d, 0xb9, 0x34, 0xb7, 0xc4, 0x19, 0x53, 0xc9, 0x54, 0x41, 0x28,
	0x2f, 0x62, 0xf7, 0x84, 0xa9, 0xe3, 0x82, 0x90, 0x17, 0x11, 0x40, 0x86, 0x8e, 0x6b, 0x50, 0xb3,
	0x07, 0xa1, 0x30, 0x5b, 0x5e, 0xa4, 0xba, 0x49, 0x3a, 0x23, 0xf7, 0x5d, 0x1a, 0x91, 0xfb, 0xdc,
	0xa8, 0x15, 0x84, 0xce, 0xb1, 0xeb, 0x9c, 0xd0, 0xd9, 0x4c, 0xcd, 0xac, 0xbb, 0xd1, 0xae, 0x00,
	0xe8, 0x5f, 0x85, 0x45, 0x61, 0x79, 0xed, 0x58, 0xb1, 0xd3, 0xf5, 0xc3, 0xd3, 0x95, 0x2b, 0xb3,
	0xcf, 0xcc, 0x02, 0x55, 0x5d, 0xe7, 0x9a, 0xfc, 0xa9, 0x43, 0xc7, 0x8a, 0x07, 0xa1, 0x43, 0x87,
	0x2c, 0xf4, 0xa9, 0xbb, 0x02, 0xa0, 0xdf, 0x83, 0x66, 0xe8, 0x90, 0x7f, 0x83, 0x20, 0xc1, 0xab,
	0x39, 0x5e, 0x1c, 0xa6, 0x28, 0x4c, 0xd3, 0xd5, 0x08, 0xd3, 0x04, 0xd2, 0x7b, 0x1b, 0xe9, 0xfd,
	0x9a, 0xd0, 0x4f, 0xf0, 0x37, 0xc2, 0xa8, 0x83, 0xd7, 0x85, 0x3d, 0x85, 0xfa, 0x86, 0x92, 0xe5,
	0x91, 0x7f, 0x82, 0x9d, 0xef, 0xbb, 0x4e, 0xe8, 0xb4, 0x04, 0xe9, 0x3d, 0x43, 0x0d, 0x5b, 0xc6,
	0xac, 0x5d, 0xce, 0xa1, 0xee, 0xe8, 0x2f, 0xc1, 0x42, 0x52, 0x94, 0x8c, 0xee, 0xcf, 0x52, 0xc9,
	0xa6, 0x04, 0x92, 0x86, 0xfb, 0x12, 0x2c, 0x30, 0x52, 0xbf, 0x1b, 0x3a, 0x51, 0xb4, 0xf2, 0x9c,
	0x28, 0x24, 0xd0, 0x09, 0x18, 0x61, 0xb2, 0xc2, 0xb8, 0x95, 0x4c, 0xd8, 0xf3, 0x34, 0x61, 0x4d,
	0x04, 0x6e, 0xc8, 0x49, 0x93, 0x85, 0x12, 0x4c, 0x2f, 0xa4, 0x85, 0x24, 0x26, 0xe3, 0xfb, 0xa1,
	0x9e, 0x2c, 0x24, 0xd4, 0x5c, 0x8f, 0x84, 0xe9, 0x59, 0x68, 0xd8, 0x9c, 0x42, 0x2a, 0x3e, 0x71,
	0xed, 0xf8, 0x88, 0x9d, 0x7e, 0x44, 0x02, 0x4b, 0x87, 0x7e, 0x9c, 0x1a, 0x8d, 0x38, 0xa5, 0xbf,
	0x0e, 0x9a, 0xf4, 0xd9, 0x0a, 0xdd, 0x4f, 0x7d, 0x2f, 0x66, 0x0b, 0x6e, 0xcd, 0x5c, 0x62, 0xcf,
	0x2d, 0x09, 0x36, 0x7e, 0xad, 0x08, 0x90, 0xce, 0xf7, 0x58, 0xc5, 0xf0, 0x59, 0x00, 0x62, 0x4e,
	0x42, 0x37, 0x16, 0xac, 0xb2, 0x8e, 0x10, 0x32, 0xfb, 0xe8, 0x37, 0x40, 0x4b, 0xb3, 0x5b, 0x1e,
	0x35, 0x5e, 0xf0, 0xce, 0xc5, 0xa4, 0xd0, 0x7d, 0xea, 0xc4, 0x55, 0xa8, 0xb5, 0xbb, 0x2d, 0x55,
	0xc5, 0xae, 0xb6, 0xbb, 0x02, 0xc9, 0xcb, 0xb0, 0x28, 0xb3, 0x18, 0x85, 0xe0, 0x99, 0x4d, 0x2e,
	0x20, 0x10, 0xbc, 0x08, 0xcd, 0xb6, 0x1f, 0xda, 0x4e, 0xc8, 0x48, 0x04, 0xb3, 0x6c, 0x08, 0x98,
	0x40, 0xf4, 0x06, 0xe8, 0x6a, 0x11, 0x46, 0x26, 0xf4, 0x11, 0x4d, 0x29, 0xa8, 0xb6, 0x28, 0x8a,
	0x4f, 0x59, 0xec, 0x2b, 0x63, 0x8b, 0xf6, 0x30, 0xc9, 0x59, 0x56, 0x2f, 0x38, 0xb2, 0xf8, 0x74,
	0xa1, 0xda, 0xee, 0xae, 0x61, 0x92, 0x1b, 0x4b, 0x59, 0x8c, 0x5f, 0x58, 0x77, 0x9b, 0x5c, 0x80,
	0x70, 0x1b, 0xbf, 0x5a, 0x81, 0x7a, 0x22, 0xa1, 0xff, 0x41, 0xdf, 0x80, 0x78, 0xb3, 0xa9, 0xa6,
	0x9b, 0xcd, 0x75, 0xa8, 0x0b, 0x19, 0xa6, 0x95, 0x6c, 0x42, 0xb5, 0x48, 0xb2, 0x39, 0x1d, 0xe6,
	0x9d, 0xc0, 0x15, 0xc7, 0x32, 0x25, 0x93, 0x7e, 0x23, 0x0a, 0xcb, 0x15, 0x4e, 0x21, 0x25, 0x13,
	0x7f, 0x0e, 0xed, 0x57, 0x8d, 0x27, 0xdb, 0xaf, 0x6a, 0xd1, 0xa0, 0x2d, 0x10, 0x34, 0x09, 0xc1,
	0x2b, 0xd3, 0xd9, 0x1a, 0xb3, 0x6a, 0xb3, 0x1a, 0x31, 0xcf, 0xce, 0x72, 0xcf, 0x85, 0x61, 0xee,
	0x99, 0xd9, 0x10, 0x17, 0xcf, 0xb5, 0x21, 0x2e, 0x9d, 0x6b, 0x43, 0xd4, 0xb2, 0x1b, 0xe2, 0xfb,
	0x50, 0x61, 0x11, 0x72, 0x39, 0xa7, 0x51, 0xbb, 0x52, 0x78, 0x34, 0xb9, 0x46, 0x76, 0x13, 0xd2,
	0xa7, 0x6c, 0x42, 0x17, 0xa6, 0x6c, 0x42, 0x17, 0xb3, 0x9b, 0xd0, 0xe8, 0x2e, 0x73, 0xe9, 0x29,
	0xed, 0x32, 0x97, 0x87, 0x76, 0x19, 0xc3, 0x84, 0x7a, 0xd2, 0x27, 0xb6, 0x09, 0x1f, 0xba, 0x9e,
	0x1b, 0x1d, 0xa5, 0x36, 0xe1, 0xbb, 0x94, 0x4e, 0x17, 0x5d, 0x71, 0xc8, 0x52, 0x47, 0xf4, 0x52,
	0x4a, 0xed, 0xfc, 0xc6, 0x1f, 0x2b, 0x81, 0x36, 0xac, 0x07, 0x9f, 0x73, 0xcd, 0x5e, 0x82, 0x4a,
	0x66, 0xa1, 0x96, 0x63, 0x5a, 0x9f, 0xd2, 0x4e, 0x58, 0x56, 0xec, 0x84, 0x09, 0x89, 0x54, 0x72,
	0xd4, 0xb3, 0x51, 0x12, 0xc9, 0xcc, 0x65, 0x75, 0x68, 0x2e, 0x55, 0xfa, 0xa9, 0x65, 0xe9, 0x27,
	0x4b, 0xf6, 0xf5, 0x61, 0xb2, 0x97, 0x02, 0x27, 0x8c, 0x0a, 0x9c, 0x8d, 0x94, 0x07, 0xc8, 0x65,
	0xde, 0x54, 0x96, 0xb9, 0x4a, 0x3f, 0x0b, 0x43, 0xf4, 0x93, 0xe1, 0x19, 0x8b, 0x59, 0x9e, 0x61,
	0xfc, 0xf1, 0x79, 0x58, 0x1a, 0x32, 0x1b, 0x7c, 0x6b, 0x66, 0x40, 0x82, 0x25, 0x5b, 0x24, 0xf0,
	0xad, 0x7f, 0x06, 0x27, 0x61, 0x2c, 0xd7, 0x87, 0xd9, 0xb9, 0x7e, 0x63, 0x76, 0xae, 0xdf, 0x9c,
	0xaa, 0x76, 0x2c, 0x8c, 0x52, 0xc1, 0xe2, 0x28, 0x15, 0x2c, 0x4d, 0xa0, 0x02, 0x6d, 0x1a, 0x15,
	0x2c, 0x0f, 0x51, 0x41, 0x4b, 0x6a, 0x6e, 0xd2, 0xbc, 0xf3, 0x2e, 0xcc, 0xa3, 0x4e, 0xc7, 0x0e,
	0xe3, 0x33, 0x7a, 0x4b, 0x63, 0x0d, 0x24, 0x93, 0x30, 0xb1, 0x68, 0x97, 0x4d, 0x91, 0x30, 0x7e,
	0xac, 0x00, 0x90, 0x9a, 0x81, 0xf4, 0x2f, 0x43, 0x19, 0x0b, 0x47, 0x6c, 0x83, 0x7f, 0x6d, 0x06,
	0xd3, 0x11, 0x7d, 0x42, 0xd4, 0x1a, 0x73, 0xea, 0x24, 0xce, 0x47, 0x4a, 0xc9, 0xf9, 0x88, 0x01,
	0x0b, 0x6e, 0x44, 0xd6, 0xa9, 0xd6, 0xa1, 0x1b, 0xb2, 0x0b, 0x7d, 0xcd, 0x6c, 0xb8, 0x11, 0xe2,
	0xba, 0x8b, 0x20, 0xe3, 0xa7, 0x0b, 0xb0, 0x98, 0xc5, 0x8f, 0x88, 0xa3, 0xb0, 0xc3, 0x74, 0x8f,
	0x3f, 0x27, 0x8b, 0x80, 0x2c, 0x30, 0x96, 0x32, 0x02, 0x23, 0x1d, 0x31, 0x7f, 0x2a, 0xcc, 0xef,
	0x45, 0x93, 0x7e, 0xeb, 0xef, 0xc3, 0x7c, 0x6c, 0x75, 0x23, 0xb2, 0xee, 0xe6, 0x1b, 0xb8, 0xb0,
	0x29, 0xfb, 0x56, 0xd7, 0xa4, 0x3a, 0xc6, 0xbf, 0x56, 0x90, 0x13, 0xc3, 0xf0, 0xd9, 0x6d, 0xa6,
	0x6a, 0x2d, 0xc5, 0x66, 0xfa, 0x21, 0x4f, 0x6c, 0x31, 0xcf, 0x0b, 0x53, 0xad, 0x9f, 0x4e, 0xaf,
	0xf1, 0x4f, 0x0b, 0xb0, 0x3c, 0x92, 0x27, 0x26, 0xa4, 0x27, 0xc7, 0x6d, 0x10, 0xf6, 0xc6, 0x1e,
	0x3b, 0x36, 0xa1, 0xf0, 0x98, 0x07, 0xac, 0xf0, 0x18, 0x53, 0xa7, 0x6c, 0x13, 0x2f, 0x9c, 0xa2,
	0x12, 0xe7, 0x87, 0xae, 0xe3, 0xc5, 0x82, 0x7a, 0xc5, 0xc1, 0xa9, 0x0a, 0xa2, 0x53, 0x5c, 0xb2,
	0xc8, 0xf3, 0x81, 0x29, 0xa7, 0x54, 0x0b, 0x7b, 0x35, 0x63, 0x61, 0x67, 0x1f, 0x8c, 0x5a, 0xea,
	0x83, 0xa1, 0x41, 0x29, 0x4e, 0xe4, 0x23, 0xfc, 0x49, 0x67, 0x8b, 0xbe, 0xcb, 0xcb, 0x1b, 0x7f,
	0x0e, 0xd9, 0xf3, 0x1b, 0x43, 0xf6, 0x7c, 0xe3, 0x2f, 0x17, 0x52, 0x23, 0x87, 0x30, 0x3e, 0x0e,
	0x1f, 0xcd, 0x8d, 0x12, 0x67, 0xc2, 0x4f, 0x4b, 0xe3, 0x8e, 0xae, 0xe6, 0x95, 0x2d, 0xe9, 0x32,
	0x54, 0x88, 0x19, 0x44, 0x7c, 0x16, 0xc0, 0x29, 0x3a, 0x43, 0xa4, 0xe3, 0xe8, 0x0a, 0x9f, 0x21,
	0xd2, 0x71, 0xef, 0x73, 0xa8, 0x22, 0xf4, 0xe9, 0x08, 0x73, 0x6b, 0x83, 0x2f, 0xbd, 0x28, 0x10,
	0xe3, 0x2f, 0x14, 0xa0, 0xa1, 0x58, 0x3b, 0x67, 0x68, 0xe9, 0x05, 0x28, 0x0f, 0x82, 0x56, 0xb2,
	0x92, 0xe6, 0x07, 0xc1, 0x96, 0x9d, 0x36, 0x7f, 0x7e, 0xec, 0x76, 0x50, 0x56, 0xb7, 0x83, 0xcb,
	0x50, 0xa1, 0xb6, 0xbd, 0xc5, 0x2d, 0xe5, 0x14, 0x96, 0x1e, 0x04, 0x81, 0x23, 0xcf, 0xb0, 0x45,
	0xc2, 0xf8, 0xa7, 0x45, 0x68, 0xaa, 0x86, 0x54, 0x6c, 0x91, 0x9f, 0x1e, 0xc4, 0xfa, 0xe7, 0x1c,
	0xcd, 0xf1, 0x4d, 0x1c, 0x3f, 0x96, 0x2b, 0x50, 0x6d, 0xbb, 0x9f, 0xee, 0x4b, 0xaf, 0x2b, 0xd4,
	0x3b, 0x44, 0x12, 0x99, 0x6a, 0xf4, 0xc8, 0x89, 0x3b, 0x47, 0x5b, 0x1b, 0x89, 0xc4, 0xcd, 0x69,
	0xfd, 0x2b, 0x64, 0x20, 0xe9, 0x49, 0xb3, 0xcf, 0xeb, 0x33, 0x99, 0x8b, 0x13, 0x3b, 0x49, 0xcf,
	0x49, 0xb7, 0x3f, 0x38, 0xb3, 0x98, 0xba, 0x06, 0x15, 0xf6, 0xea, 0x6a, 0xe4, 0x1c, 0x35, 0xa4,
	0x3e, 0xe7, 0xec, 0xce, 0xc5, 0x15, 0x8d, 0xdf, 0x2a, 0x4a, 0xae, 0x4c, 0xa6, 0xe6, 0x27, 0xa5,
	0xe4, 0x64, 0x9c, 0xe7, 0xd5, 0x71, 0x7e, 0x1e, 0x1a, 0xbc, 0xe3, 0xd1, 0x68, 0x8b, 0x39, 0x00,
	0xb1, 0xd7, 0xd1, 0x90, 0xbf, 0x08, 0x4d, 0xa5, 0xc0, 0x2d, 0xa9, 0x57, 0xa6, 0x25, 0x6e, 0x0d,
	0x39, 0x13, 0x54, 0x9f, 0xc0, 0x99, 0x20, 0x1d, 0xe1, 0xda, 0x99, 0x05, 0x8c, 0x61, 0xc3, 0x4a,
	0xfd, 0x09, 0x0d, 0x2b, 0xc6, 0x9f, 0x2e, 0x4a, 0x21, 0x2b, 0x35, 0xc3, 0x3f, 0xe9, 0x60, 0xe3,
	0x3e, 0x8e, 0xba, 0x97, 0xb2, 0x22, 0x51, 0x19, 0xdb, 0x9f, 0xb2, 0x28, 0x9f, 0x05, 0x31, 0xec,
	0xa2, 0x17, 0x82, 0x7b, 0xd6, 0x09, 0xc2, 0xf7, 0x77, 0x78, 0x84, 0xaa, 0x67, 0x1e, 0xa1, 0x77,
	0xe0, 0x8a, 0xc0, 0xdc, 0xf6, 0xe3, 0xd8, 0xef, 0xb7, 0x42, 0xdc, 0x05, 0x85, 0x40, 0x26, 0xce,
	0x19, 0x2f, 0x52, 0xf6, 0x6d, 0xca, 0x35, 0x31, 0x13, 0x85, 0x33, 0xe3, 0xaf, 0x17, 0xe4, 0xba,
	0xe7, 0xb3, 0x84, 0x33, 0x0c, 0xc6, 0xfc, 0xc4, 0xc1, 0x28, 0x4f, 0x1a, 0x8c, 0x8a, 0x3a, 0x18,
	0x3a, 0xcc, 0x2b, 0x02, 0x23, 0xfd, 0x4e, 0x59, 0x42, 0x4d, 0x65, 0x09, 0x2f, 0x42, 0x53, 0xac,
	0x13, 0xc6, 0x5f, 0x67, 0xbb, 0x07, 0xc1, 0xe8, 0x13, 0xc6, 0xff, 0x5a, 0x00, 0x7d, 0xd4, 0xa8,
	0x3f, 0xd2, 0x9d, 0x0b, 0x50, 0xb6, 0x6c, 0x64, 0xab, 0x45, 0x16, 0xe9, 0xec, 0x2d, 0x7b, 0x8c,
	0xe4, 0x7c, 0x16, 0x46, 0x7b, 0x15, 0x6a, 0x96, 0xcd, 0x0d, 0xe3, 0xc3, 0x78, 0xcb, 0x16, 0xfd,
	0x3e, 0xc7, 0x7c, 0xe2, 0xae, 0xed, 0x06, 0x91, 0xbc, 0x27, 0x89, 0xbf, 0x8d, 0x9f, 0x4b, 0xc4,
	0xa4, 0xe4, 0x44, 0x65, 0x05, 0xaa, 0x1d, 0xdf, 0x8b, 0x1d, 0x4f, 0x9a, 0xac, 0x64, 0x72, 0x64,
	0xc9, 0x14, 0x9f, 0xd4, 0x16, 0xa9, 0x38, 0x11, 0x96, 0x72, 0x64, 0x50, 0x6c, 0xd6, 0xb0, 0x13,
	0xa1, 0xb1, 0x0f, 0x0d, 0x05, 0x3e, 0xd6, 0xc2, 0x26, 0x29, 0xa1, 0xa8, 0x50, 0xc2, 0xb3, 0x00,
	0x8c, 0x21, 0xdd, 0x05, 0xeb, 0x0c, 0xd9, 0xb2, 0x8d, 0x7f, 0x3d, 0xd1, 0x96, 0x92, 0xc3, 0xa1,
	0x3f, 0xe8, 0x36, 0x26, 0x41, 0xab, 0xd5, 0x84, 0x56, 0x33, 0x36, 0xfa, 0xda, 0xb0, 0x8d, 0x5e,
	0x55, 0xab, 0xea, 0x59, 0xb5, 0x2a, 0xa3, 0x8e, 0xc1, 0x90, 0x3a, 0x26, 0x75, 0x9a, 0xc6, 0xa8,
	0x4e, 0xd3, 0x4c, 0x75, 0x9a, 0x8c, 0xd9, 0x67, 0xe1, 0x49, 0xcc, 0x3e, 0xaa, 0x06, 0xb4, 0x38,
	0xc5, 0x8e, 0xb2, 0x94, 0xb5, 0xa3, 0x24, 0x4b, 0x46, 0x3b, 0xeb, 0x36, 0x6c, 0xfc, 0xd9, 0x22,
	0x5c, 0x1a, 0x7b, 0xae, 0xa7, 0x6f, 0x49, 0xe1, 0x40, 0xc8, 0xea, 0x6f, 0x9f, 0xed, 0x58, 0x90,
	0xec, 0xa1, 0x52, 0x4c, 0x18, 0x77, 0xd6, 0x5a, 0xfc, 0xd6, 0x9c, 0xb5, 0x96, 0xce, 0x73, 0xd6,
	0x7a, 0xbb, 0x22, 0xd4, 0x0b, 0xe3, 0xff, 0x53, 0x24, 0xbb, 0x41, 0x78, 0x10, 0x9c, 0xc1, 0x7d,
	0x2b, 0x59, 0x39, 0xa5, 0x31, 0x2b, 0x67, 0x7e, 0x9c, 0x9d, 0xa1, 0xac, 0xda, 0x19, 0xbe, 0x6d,
	0xd5, 0xd9, 0xb2, 0x8d, 0xbf, 0x91, 0xf0, 0x6c, 0x79, 0x58, 0xab, 0xbf, 0x0f, 0x15, 0x3a, 0xf7,
	0x95, 0x3a, 0xf7, 0xe4, 0x85, 0x45, 0x55, 0xf8, 0x56, 0x02, 0xd5, 0xd0, 0x3f, 0x84, 0x5a, 0xdf,
	0x0f, 0x9d, 0x56, 0x3b, 0x96, 0x64, 0x37, 0x79, 0x58, 0x71, 0xb0, 0x58, 0xcc, 0xac, 0x62, 0xa5,
	0xdb, 0xb1, 0xa7, 0xbf, 0x00, 0xcd, 0xe4, 0xcc, 0x39, 0xe5, 0xab, 0x10, 0x73, 0xdb, 0xb6, 0x6c,
	0x54, 0xe2, 0x82, 0x41, 0x74, 0xa4, 0xb8, 0x49, 0x61, 0x72, 0xcb, 0x36, 0xfe, 0x54, 0x19, 0xb4,
	0xe1, 0xdb, 0x94, 0xfa, 0x07, 0x19, 0x25, 0xf8, 0xb5, 0x19, 0x04, 0x5f, 0x45, 0x03, 0x7e, 0x1f,
	0x4a, 0x41, 0xb7, 0x93, 0xeb, 0x2d, 0x94, 0xd6, 0x15, 0xae, 0x3e, 0x58, 0x29, 0x75, 0x5c, 0x2b,
	0xcd, 0x58, 0x9b, 0xfc, 0xa4, 0x36, 0xe7, 0xa4, 0xe3, 0xda, 0x07, 0x30, 0x7f, 0xec, 0xc7, 0x4e,
	0xee, 0xad, 0x13, 0x59, 0xfd, 0xa1, 0x4f, 0xb7, 0x79, 0xa9, 0x12, 0x0a, 0xfc, 0xec, 0x9c, 0x52,
	0xce, 0x59, 0xa3, 0xb2, 0x7a, 0xe2, 0x9e, 0xc2, 0x15, 0x11, 0x85, 0x13, 0x05, 0x7e, 0x18, 0xe7,
	0xde, 0xb2, 0x95, 0x28, 0xee, 0x50, 0x71, 0x44, 0x21, 0x2a, 0xe2, 0x10, 0x60, 0x6b, 0x6e, 0xe5,
	0x3a, 0xec, 0xa8, 0x7d, 0xb8, 0x85, 0x43, 0x40, 0xd5, 0xf4, 0x77, 0xa1, 0x34, 0xe8, 0xe6, 0x7b,
	0xe9, 0xc8, 0xda, 0x07, 0xdd, 0x0e, 0x0e, 0xfe, 0xa0, 0xdb, 0xd1, 0xdf, 0x81, 0xe2, 0x20, 0xc8,
	0xbd, 0xde, 0x9a, 0x54, 0xdc, 0xdd, 0x9c, 0x33, 0x8b, 0x83, 0x40, 0xba, 0x1f, 0xf2, 0x21, 0x4a,
	0xe8, 0xda, 0xfa, 0x4d, 0xb8, 0xe0, 0x39, 0x8e, 0xdd, 0x3a, 0x09, 0x5d, 0xba, 0x06, 0xd4, 0x73,
	0x3c, 0xdb, 0x09, 0x69, 0x31, 0xd6, 0xcc, 0x65, 0xcc, 0xfa, 0x18, 0x73, 0xd6, 0x39, 0x23, 0x61,
	0x6a, 0xbf, 0x51, 0x84, 0x85, 0x0c, 0x59, 0xe0, 0x22, 0x3c, 0x72, 0x50, 0x0e, 0x4b, 0x65, 0x8b,
	0x1a, 0x02, 0xc8, 0x11, 0x71, 0xbc, 0x1d, 0xfc, 0x3a, 0xd4, 0x85, 0xbf, 0x70, 0xea, 0x2e, 0x58,
	0x23, 0x00, 0xee, 0x43, 0xcf, 0x41, 0x03, 0x79, 0x60, 0x56, 0x0e, 0xa8, 0x23, 0x48, 0x88, 0x00,
	0x99, 0x7c, 0xb9, 0xf9, 0x27, 0xf9, 0xb7, 0xa4, 0x1d, 0xa6, 0x92, 0xda, 0x61, 0x52, 0x2d, 0xb1,
	0xfa, 0x84, 0x5a, 0x62, 0xd2, 0x49, 0x45, 0xac, 0xa7, 0x4e, 0x12, 0x5b, 0x7c, 0x2f, 0xab, 0x01,
	0x4f, 0xe1, 0x0b, 0xe4, 0x11, 0xad, 0x6e, 0x6a, 0xf2, 0x44, 0x00, 0x58, 0x26, 0x43, 0x4d, 0xe9,
	0xef, 0x97, 0x40, 0x1b, 0x6e, 0x08, 0x59, 0xd0, 0x66, 0xb9, 0xed, 0xb0, 0x66, 0xdb, 0xa2, 0x86,
	0xb2, 0xda, 0x77, 0x00, 0x68, 0xd3, 0x17, 0x8d, 0x2c, 0xe6, 0x38, 0xe8, 0x0c, 0x7f, 0x5a, 0xb4,
	0x97, 0xfc, 0x22, 0x93, 0xf3, 0xc9, 0x49, 0xce, 0xd5, 0x9b, 0x50, 0x1d, 0x78, 0x9d, 0x23, 0xa7,
	0xf3, 0x88, 0x97, 0xf7, 0x59, 0x3f, 0x23, 0xab, 0xeb, 0x1b, 0x50, 0x16, 0x78, 0xca, 0x4f, 0x84,
	0x47, 0x54, 0xd6, 0xef, 0x25, 0xb7, 0x1e, 0x2a, 0x34, 0x6e, 0x6f, 0x9e, 0x01, 0x0d, 0xdd, 0xde,
	0x90, 0xd7, 0x24, 0xbe, 0x0b, 0xa0, 0xd3, 0x73, 0x3b, 0x8f, 0xd4, 0x3b, 0x69, 0xb7, 0x66, 0x46,
	0xb6, 0x8e, 0x55, 0xc5, 0x01, 0x62, 0x47, 0xfe, 0x34, 0xfe, 0x49, 0x11, 0x2e, 0x8d, 0x6d, 0x7c,
	0x22, 0x94, 0x17, 0x14, 0xa1, 0x7c, 0x9c, 0x2d, 0xf1, 0x21, 0x34, 0x92, 0x4b, 0xe5, 0xc7, 0x32,
	0x3e, 0xc2, 0x77, 0xcc, 0xdc, 0xaa, 0xad, 0xb4, 0xae, 0xa9, 0x22, 0xd2, 0x37, 0x94, 0xb3, 0xe9,
	0xf9, 0x1c, 0xa3, 0x4e, 0x42, 0x6f, 0xb7, 0xbb, 0x3c, 0x83, 0xf2, 0x18, 0x1b, 0x97, 0xbe, 0x6f,
	0x45, 0x71, 0x22, 0x9a, 0x60, 0x42, 0xff, 0x0a, 0x54, 0x6d, 0x37, 0xb2, 0xda, 0xac, 0xb2, 0x4d,
	0x3b, 0x35, 0xdd, 0x10, 0xe5, 0x84, 0x35, 0x43, 0xd6, 0x42, 0xc2, 0xa0, 0x3b, 0xda, 0xbc, 0x96,
	0xcf, 0x40, 0x18, 0x58, 0xcb, 0x14, 0x95, 0x8d, 0x1f, 0x2c, 0x8c, 0x19, 0x7c, 0xcc, 0xd1, 0x37,
	0x60, 0x3e, 0x3a, 0xf2, 0x4f, 0x78, 0xa1, 0x7d, 0x61, 0x06, 0xf4, 0x54, 0x6f, 0xef, 0xc8, 0x3f,
	0x11, 0x4b, 0x0e, 0x6b, 0x8f, 0xd5, 0xab, 0xc6, 0xb9, 0xc7, 0xff, 0x11, 0xb8, 0x3e, 0x65, 0x5a,
	0xf4, 0xcb, 0x50, 0x09, 0xfc, 0x60, 0x10, 0x44, 0x4c, 0x0b, 0x9c, 0x62, 0xe5, 0xf3, 0xd0, 0x0d,
	0xfb, 0xc9, 0xcd, 0x07, 0x91, 0x24, 0xeb, 0xa9, 0xe5, 0x75, 0x1c, 0xb9, 0x34, 0x39, 0x35, 0xce,
	0x36, 0x68, 0xfc, 0x9a, 0xc2, 0xcb, 0xef, 0x49, 0xa7, 0x72, 0x14, 0x80, 0x5b, 0x7c, 0x37, 0x80,
	0xd8, 0x1c, 0x02, 0xe8, 0xce, 0xc0, 0x3a, 0x34, 0x84, 0x6b, 0xbc, 0x38, 0xb6, 0x28, 0xe6, 0x88,
	0x50, 0x84, 0x91, 0x44, 0x28, 0xe1, 0x51, 0xbf, 0x45, 0xc7, 0x16, 0xd7, 0xd5, 0x70, 0x2d, 0xcc,
	0xfa, 0x93, 0x40, 0x2c, 0x72, 0xd4, 0xe6, 0x95, 0x51, 0x1b, 0xbd, 0x61, 0x3a, 0xe4, 0xa9, 0x5e,
	0x19, 0xf1, 0x54, 0xcf, 0x78, 0x71, 0x57, 0x9f, 0x82, 0x17, 0x77, 0x2d, 0xe3, 0xc5, 0x8d, 0xa2,
	0x1c, 0xbb, 0x9b, 0x8b, 0xfd, 0x40, 0x18, 0x45, 0x40, 0xf8, 0x9c, 0x93, 0x71, 0xe7, 0xb7, 0x4a,
	0x50, 0x4f, 0xfa, 0x9f, 0x4a, 0xf3, 0x05, 0x55, 0x9a, 0x9f, 0xe0, 0x9b, 0x5e, 0x9c, 0xe4, 0x9b,
	0x3e, 0xd4, 0xed, 0xd2, 0x54, 0x07, 0xfd, 0xf9, 0x2c, 0x5f, 0xbe, 0xce, 0x23, 0xa2, 0x9c, 0xff,
	0x52, 0xd9, 0x0d, 0x56, 0x36, 0x54, 0x1b, 0x4a, 0xaa, 0xbc, 0x8b, 0xcb, 0xe1, 0x6c, 0xad, 0xa6,
	0x04, 0x42, 0x83, 0xd0, 0xed, 0xc8, 0x21, 0x11, 0x09, 0xf5, 0xf8, 0xa1, 0x9e, 0x39, 0x7e, 0xc8,
	0x1e, 0x24, 0xc0, 0xf0, 0xc5, 0x80, 0x31, 0xfe, 0xff, 0x8d, 0x19, 0xfc, 0xff, 0x9b, 0x53, 0xfc,
	0xff, 0x17, 0x32, 0xfe, 0xff, 0xea, 0x24, 0x2e, 0x66, 0x27, 0x31, 0x43, 0x24, 0x4b, 0x4f, 0x46,
	0x24, 0xc6, 0x8f, 0x14, 0xa0, 0xa9, 0xca, 0x78, 0x59, 0xc9, 0xa6, 0x30, 0x24, 0xd9, 0x8c, 0x17,
	0x86, 0x52, 0x1d, 0xae, 0xa4, 0xea, 0x70, 0xcf, 0x43, 0x43, 0x5a, 0xde, 0x90, 0x69, 0xf0, 0x9d,
	0x2a, 0x36, 0xbc, 0x21, 0xf7, 0x67, 0x39, 0x27, 0x59, 0x18, 0x3d, 0xe3, 0xf7, 0x0a, 0xd0, 0x50,
	0x64, 0xc6, 0x27, 0x91, 0xcc, 0xc6, 0x2b, 0x9e, 0x4f, 0x45, 0x24, 0x73, 0x53, 0x91, 0xcc, 0xcd,
	0x68, 0x75, 0xac, 0x65, 0xaa, 0x5a, 0x5d, 0xcf, 0xf5, 0x9c, 0xd6, 0xa1, 0xe3, 0xd8, 0xac, 0x66,
	0xd6, 0x10, 0x70, 0xd7, 0x71, 0xec, 0x2c, 0xff, 0xa8, 0x67, 0xf9, 0x87, 0xf1, 0x7b, 0x45, 0x58,
	0xcc, 0xca, 0xfd, 0xdf, 0x96, 0x4e, 0x9f, 0xb2, 0x74, 0x9a, 0x9d, 0x80, 0xc6, 0xd0, 0x04, 0xfc,
	0x83, 0x42, 0x3a, 0x01, 0x42, 0x6b, 0xd2, 0xdf, 0xcf, 0x5a, 0x80, 0x26, 0x6b, 0x3b, 0x77, 0xa2,
	0xc0, 0xea, 0x64, 0xbf, 0xdf, 0x82, 0x8b, 0x32, 0xe0, 0x50, 0x4b, 0xa8, 0x5e, 0xad, 0xbe, 0xdf,
	0xb6, 0x72, 0xcd, 0x3e, 0xd9, 0x26, 0xec, 0xf8, 0x6d, 0x6b, 0x73, 0xce, 0xd4, 0xad, 0x11, 0x68,
	0xc6, 0x21, 0x67, 0x6c, 0x07, 0xe7, 0xb3, 0x1d, 0x4c, 0xd4, 0xa0, 0x5f, 0x2c, 0x81, 0x3e, 0xfa,
	0x95, 0x27, 0xa1, 0xb6, 0x35, 0x80, 0x3e, 0xb9, 0xb6, 0xc7, 0x8e, 0xd5, 0xe7, 0xe0, 0x61, 0x53,
	0x5c, 0xd1, 0xb0, 0xe8, 0xbe, 0x63, 0xf5, 0xcd, 0x7a, 0x5f, 0xfe, 0xd4, 0x03, 0xb8, 0x3e, 0x6e,
	0x98, 0xe4, 0x7d, 0x65, 0x21, 0x89, 0xbf, 0x75, 0x86, 0xd1, 0x62, 0xe1, 0x77, 0xc5, 0x9a, 0x90,
	0x33, 0x66, 0x53, 0x4e, 0xa9, 0xb8, 0x72, 0x0e, 0x2a, 0x4e, 0x0f, 0x32, 0xaa, 0x43, 0x07, 0x19,
	0x67, 0x25, 0xc5, 0xec, 0x9a, 0x68, 0x66, 0xd7, 0x04, 0x72, 0xca, 0x95, 0x49, 0xdd, 0xd6, 0xff,
	0x28, 0xbc, 0x30, 0x65, 0x38, 0x5b, 0xca, 0xbd, 0xc9, 0x77, 0xce, 0x3c, 0xa6, 0xb8, 0xe1, 0x9a,
	0xcf, 0x58, 0x53, 0x72, 0x27, 0x90, 0x49, 0x7a, 0x7f, 0xbb, 0x94, 0xb9, 0xbf, 0x3d, 0xf6, 0xe6,
	0x28, 0x6e, 0x1e, 0xe4, 0x1e, 0xca, 0xde, 0xaa, 0x7c, 0xee, 0x48, 0x20, 0x71, 0x63, 0xfa, 0x11,
	0x3c, 0xb3, 0x36, 0x53, 0x23, 0x46, 0x0d, 0xfa, 0xa9, 0x2b, 0xee, 0xf8, 0x8f, 0x95, 0x46, 0x3e,
	0xf6, 0xfd, 0x50, 0x4f, 0xe8, 0x76, 0xe4, 0x5c, 0x68, 0xc2, 0x2d, 0xe3, 0x31, 0xbb, 0xd0, 0x13,
	0x76, 0xf5, 0xe7, 0x2b, 0x00, 0xa9, 0x41, 0x64, 0x42, 0xcf, 0xee, 0x66, 0xd9, 0x7a, 0x9e, 0x61,
	0x6c, 0xd3, 0xed, 0x1e, 0xf5, 0xf0, 0x13, 0xb8, 0xb0, 0xa7, 0xb0, 0xff, 0xd2, 0x04, 0xf6, 0x3f,
	0x3f, 0x8e, 0xfd, 0x97, 0xcf, 0xb1, 0x70, 0xd2, 0x75, 0x50, 0x19, 0x5a, 0x07, 0x2f, 0xc1, 0x42,
	0x72, 0x1a, 0xe5, 0xc7, 0x56, 0x8f, 0x8d, 0x40, 0xf2, 0x88, 0x6a, 0x1f, 0x61, 0xfa, 0x1d, 0xa8,
	0x59, 0x9d, 0xb8, 0x15, 0x3d, 0x72, 0x65, 0x7c, 0x94, 0xd5, 0x19, 0x9a, 0xb1, 0xd6, 0x89, 0xf7,
	0x1e, 0xb9, 0x9e, 0x59, 0xb5, 0xc4, 0x0f, 0x69, 0x66, 0xaa, 0xa7, 0x66, 0xa6, 0x87, 0xd0, 0xec,
	0xf9, 0x71, 0xec, 0x84, 0xa7, 0xad, 0x64, 0xf9, 0x4e, 0x3b, 0x06, 0xe0, 0xb3, 0x30, 0x19, 0x1a,
	0x65, 0x5b, 0xd4, 0x15, 0x47, 0x63, 0xbd, 0x34, 0x91, 0x9d, 0xaf, 0xb7, 0x73, 0x83, 0xb4, 0x4d,
	0x98, 0xaf, 0xb7, 0x51, 0xf8, 0x1a, 0x04, 0xad, 0x7e, 0x62, 0x73, 0x2e, 0x0f, 0x82, 0x1d, 0xd7,
	0xd6, 0xef, 0x02, 0x49, 0x97, 0x22, 0xac, 0xc5, 0xc2, 0x8c, 0xf3, 0x92, 0x04, 0xda, 0xa9, 0x0d,
	0x64, 0x08, 0x94, 0x67, 0xe9, 0x9e, 0x19, 0xc5, 0x1e, 0x65, 0x0b, 0x75, 0x9d, 0xae, 0x8f, 0x91,
	0xbf, 0x98, 0x8d, 0xd4, 0x42, 0xfe, 0xfe, 0x4c, 0x2d, 0x4a, 0x38, 0x15, 0x41, 0x2d, 0x57, 0xc5,
	0x05, 0x43, 0x1a, 0x39, 0x8d, 0x83, 0x33, 0x9c, 0x26, 0xb1, 0x2b, 0xda, 0x83, 0xc8, 0xf5, 0x9c,
	0x28, 0x92, 0xce, 0x6c, 0x24, 0x1e, 0x0a, 0x90, 0x10, 0xbd, 0x39, 0x8a, 0x0e, 0xee, 0x45, 0xc2,
	0xd7, 0x96, 0xa3, 0xe2, 0x70, 0xf8, 0x03, 0x61, 0xaf, 0xa7, 0xdb, 0x07, 0xe4, 0x6f, 0x5b, 0x33,
	0x81, 0x0c, 0xf6, 0x04, 0x31, 0xde, 0x4f, 0x8d, 0x50, 0x49, 0x44, 0x17, 0xb9, 0x56, 0x0b, 0x63,
	0xe2, 0xb7, 0x14, 0xd3, 0xf8, 0x2d, 0x86, 0x03, 0xcb, 0x23, 0x54, 0x42, 0x7e, 0x61, 0xc7, 0x5d,
	0x4b, 0x56, 0xc6, 0xdf, 0x14, 0xb2, 0xd6, 0x8a, 0xe2, 0x96, 0x88, 0x29, 0xc0, 0x0e, 0xfe, 0x08,
	0x21, 0x59, 0x84, 0x4e, 0x22, 0x7b, 0xd6, 0x29, 0x05, 0xb4, 0x8d, 0x92, 0x93, 0xc8, 0x9e, 0x75,
	0xba, 0x8f, 0x00, 0xe3, 0x2f, 0x14, 0x60, 0x21, 0x33, 0xb3, 0x63, 0x8f, 0x38, 0xbf, 0xca, 0x97,
	0x08, 0x52, 0xeb, 0xd7, 0xe2, 0x14, 0xd1, 0x21, 0x83, 0x8f, 0x4d, 0x5f, 0xb1, 0xfc, 0x39, 0xcd,
	0xf4, 0x35, 0x46, 0x77, 0x35, 0x3a, 0x32, 0xe0, 0x13, 0xc7, 0x51, 0x5c, 0x4b, 0x42, 0x7d, 0x8a,
	0xfd, 0xe3, 0xf5, 0x99, 0xc2, 0x31, 0x8a, 0x63, 0x08, 0x0e, 0xfa, 0x39, 0xe2, 0x15, 0x60, 0xfc,
	0xf4, 0xbc, 0x3c, 0x1d, 0x48, 0x8b, 0xcf, 0x6c, 0x2e, 0xdc, 0x38, 0xf5, 0x44, 0xad, 0x8c, 0xb9,
	0x70, 0x11, 0xc7, 0x0b, 0x69, 0x9f, 0x43, 0xa5, 0xe5, 0x05, 0xf2, 0xbc, 0xf3, 0x98, 0xe2, 0xb9,
	0xc8, 0x58, 0x69, 0x4d, 0x47, 0x49, 0xeb, 0xf7, 0xa0, 0x99, 0xa0, 0xeb, 0xb5, 0xe5, 0xb1, 0xc1,
	0x4b, 0x79, 0xc8, 0xb6, 0x6f, 0xef, 0x6d, 0xce, 0x99, 0xc0, 0xa8, 0xb6, 0xdb, 0x51, 0x06, 0xd1,
	0x91, 0x1f, 0xe7, 0x46, 0xf0, 0x64, 0x44, 0x9b, 0x7e, 0xac, 0x20, 0xda, 0xf4, 0x91, 0x22, 0x16,
	0x12, 0x44, 0x5d, 0xa4, 0xe7, 0x72, 0x8e, 0x21, 0x9e, 0x31, 0xdd, 0xb3, 0xfa, 0x14, 0xaa, 0xcc,
	0x49, 0x93, 0xfa, 0x2e, 0x2c, 0x25, 0xb8, 0xf8, 0x64, 0x22, 0xef, 0x4a, 0x31, 0x63, 0x4b, 0x0e,
	0x26, 0x16, 0x1c, 0x15, 0x90, 0xe9, 0xa6, 0xdf, 0x3d, 0xce, 0xf5, 0x60, 0x60, 0x74, 0x0f, 0xee,
	0x3d, 0x54, 0xba, 0xf9, 0xa0, 0x7b, 0x7c, 0xbb, 0x26, 0xa9, 0xcd, 0xf8, 0x2a, 0x34, 0xd5, 0x29,
	0x9a, 0xb0, 0x07, 0x8e, 0x3a, 0x9c, 0x48, 0x9a, 0x2e, 0x65, 0x68, 0x1a, 0xd2, 0x19, 0x3a, 0x0f,
	0x26, 0x5c, 0x4c, 0x81, 0xaf, 0xc4, 0x6a, 0x28, 0x9b, 0xd5, 0xc0, 0xa7, 0x28, 0x0c, 0xc6, 0x66,
	0xf2, 0x11, 0x9c, 0xaf, 0xf3, 0x34, 0x77, 0x0b, 0x1a, 0xca, 0xec, 0x9d, 0x0b, 0xd5, 0x7f, 0x5e,
	0x84, 0x85, 0xcc, 0xdc, 0x7d, 0x8b, 0x7a, 0x9f, 0x2c, 0xde, 0xf2, 0x13, 0x2c, 0xde, 0x67, 0x01,
	0x50, 0x88, 0x16, 0x77, 0x52, 0x65, 0x50, 0x95, 0x68, 0xd0, 0xe6, 0x60, 0xbf, 0xcf, 0x43, 0x43,
	0xc4, 0x0e, 0x15, 0xdb, 0x42, 0x95, 0x2d, 0x57, 0x1d, 0x35, 0xc0, 0x17, 0x17, 0x40, 0x1e, 0xc7,
	0xbe, 0x0f, 0x02, 0x82, 0x5c, 0x6e, 0x74, 0x87, 0x17, 0x5e, 0xc6, 0x22, 0x28, 0x58, 0x72, 0x23,
	0x89, 0xbc, 0x8c, 0xf7, 0x8e, 0xfc, 0x93, 0x6d, 0xba, 0x90, 0xb4, 0x95, 0x4c, 0xe7, 0x83, 0x7b,
	0x0f, 0xf5, 0x0f, 0xa0, 0x96, 0x10, 0xb7, 0xe0, 0x83, 0x93, 0x43, 0x46, 0x71, 0x1d, 0xb3, 0xea,
	0x0a, 0xa2, 0x36, 0x6c, 0xa8, 0x4a, 0x3c, 0xe7, 0x19, 0xfd, 0xec, 0x30, 0xcd, 0x0f, 0x0d, 0x93,
	0xd1, 0x85, 0xe5, 0x91, 0x10, 0xac, 0xba, 0x09, 0x4b, 0x4a, 0x0c, 0xd7, 0x2d, 0xe1, 0x1a, 0x5e,
	0x9a, 0x7a, 0x89, 0x7a, 0x2b, 0x5b, 0xde, 0x1c, 0x46, 0x60, 0xfc, 0xdf, 0x45, 0x58, 0x1a, 0x2a,
	0xa4, 0xaf, 0x73, 0x20, 0x91, 0x99, 0x18, 0xf8, 0xb6, 0xdf, 0xb1, 0x7a, 0xa8, 0xd3, 0x70, 0x40,
	0x6a, 0xfe, 0x95, 0x04, 0x78, 0x29, 0x9e, 0x39, 0xc0, 0xcb, 0xa8, 0x7f, 0x4e, 0x56, 0x8a, 0x99,
	0x1f, 0x96, 0x62, 0xc8, 0xc9, 0x91, 0xa2, 0xdd, 0x92, 0x20, 0x55, 0x11, 0x07, 0xdb, 0x0c, 0xda,
	0x11, 0xa1, 0x4e, 0x50, 0x2c, 0x88, 0x56, 0xaa, 0xb3, 0x0f, 0xd7, 0x5d, 0xab, 0xe3, 0x98, 0xa2,
	0x9a, 0xfe, 0x25, 0x98, 0xa7, 0xe8, 0xc0, 0xb5, 0x9c, 0x2b, 0xeb, 0x4a, 0x75, 0x54, 0x65, 0x4c,
	0xaa, 0x95, 0x4c, 0x7f, 0x5d, 0x59, 0xca, 0xaf, 0x64, 0x46, 0x7d, 0x8f, 0x8b, 0xf5, 0xdc, 0x47,
	0x0e, 0x6b, 0x26, 0xf4, 0xdb, 0xf8, 0x62, 0xa6, 0x18, 0x36, 0x69, 0x7c, 0x50, 0xbb, 0x11, 0x01,
	0xe8, 0x17, 0x8a, 0x32, 0xda, 0x0e, 0xe1, 0xbe, 0x0c, 0x95, 0xd0, 0x09, 0xfc, 0x28, 0xb9, 0x5b,
	0x29, 0x52, 0xc9, 0x37, 0x8b, 0xe9, 0x37, 0xe9, 0xee, 0x80, 0x13, 0xf4, 0x4e, 0x59, 0xdc, 0x11,
	0x09, 0xfd, 0x43, 0xa8, 0x63, 0xae, 0x10, 0x48, 0xe7, 0x73, 0xa3, 0xd3, 0x3d, 0x12, 0xd1, 0xe9,
	0x6a, 0x3d, 0xfe, 0x45, 0xf1, 0x87, 0xfc, 0x24, 0xa6, 0xb1, 0x08, 0xa9, 0x5e, 0xf7, 0x7c, 0x19,
	0xa5, 0x58, 0x64, 0xab, 0x31, 0x31, 0x28, 0x5b, 0xde, 0x84, 0xb8, 0x0e, 0x75, 0x6a, 0x06, 0xf1,
	0x04, 0xd6, 0xcc, 0x09, 0xc0, 0x46, 0xdc, 0x14, 0xb5, 0x60, 0x2b, 0x35, 0x0e, 0xd2, 0x25, 0xf1,
	0x13, 0x67, 0x11, 0xe5, 0xf8, 0x1b, 0xa2, 0x5c, 0x5d, 0x96, 0xe3, 0x0f, 0x61, 0x39, 0xe3, 0xa7,
	0x92, 0xb1, 0xa3, 0x88, 0xcc, 0x1f, 0x42, 0xfd, 0xd0, 0xef, 0x65, 0xe2, 0xbb, 0x4f, 0xee, 0x39,
	0xd6, 0x10, 0x0b, 0xe1, 0x90, 0x7f, 0x8d, 0x3d, 0x38, 0xbb, 0x0a, 0x94, 0xdf, 0x72, 0xd9, 0x8b,
	0xa1, 0x6e, 0x56, 0x31, 0xbd, 0x65, 0x47, 0xfa, 0x47, 0x00, 0x94, 0x85, 0x22, 0x7c, 0xb4, 0x32,
	0x4f, 0x04, 0x3b, 0x43, 0x6c, 0x4d, 0x6a, 0x23, 0xa6, 0x22, 0xfd, 0x1b, 0x70, 0x49, 0x38, 0x7a,
	0xf4, 0x9d, 0xb0, 0xeb, 0xd8, 0xad, 0xd0, 0x61, 0x97, 0xfd, 0x72, 0x4e, 0x50, 0x66, 0xda, 0x9b,
	0x77, 0xa8, 0x92, 0xc9, 0x75, 0xcc, 0x0b, 0xf1, 0x28, 0xd0, 0xf8, 0x1e, 0xb8, 0x30, 0xa6, 0x2c,
	0x4e, 0x22, 0x7d, 0x52, 0x0d, 0xe0, 0x53, 0x27, 0x08, 0x0d, 0xc4, 0xcb, 0xb0, 0x98, 0xb6, 0xa8,
	0xd5, 0xf1, 0x62, 0xbe, 0x9d, 0xd2, 0xec, 0x4b, 0x34, 0xeb, 0x5e, 0x6c, 0xfc, 0x42, 0x19, 0xea,
	0x1b, 0xa7, 0xde, 0x5a, 0xaf, 0xf7, 0xed, 0x17, 0x36, 0xce, 0xfa, 0xc2, 0xc6, 0xd7, 0x60, 0x91,
	0x4e, 0xcf, 0x06, 0x41, 0xc4, 0x8d, 0xaa, 0xe5, 0x34, 0xca, 0xec, 0xf4, 0xed, 0x83, 0xdd, 0x88,
	0x1b, 0x85, 0x95, 0x0f, 0x02, 0x91, 0xc2, 0x5d, 0xd2, 0xb2, 0x19, 0x4d, 0x3d, 0x27, 0xb0, 0xe2,
	0x9a, 0x2d, 0x30, 0x54, 0x2d, 0xf1, 0x43, 0x78, 0x3b, 0xf7, 0xec, 0x56, 0x14, 0x5b, 0xa1, 0xbc,
	0x23, 0x5c, 0x47, 0xc8, 0x1e, 0x02, 0x92, 0xa7, 0x40, 0x1a, 0x93, 0x9f, 0x02, 0x69, 0x9e, 0xf7,
	0x29, 0x10, 0xa4, 0xb7, 0xd8, 0x6a, 0xb7, 0x42, 0xa7, 0x63, 0xf5, 0x7a, 0xad, 0x41, 0x72, 0x99,
	0xab, 0x19, 0x5b, 0x6d, 0x93, 0x80, 0x07, 0xae, 0xad, 0x7f, 0x15, 0x96, 0x94, 0x52, 0x44, 0x0f,
	0x8b, 0x39, 0x2e, 0xee, 0xa4, 0x8a, 0xd1, 0x2a, 0x5f, 0x48, 0x50, 0x91, 0xd4, 0xf8, 0x79, 0x68,
	0xaa, 0x03, 0x4a, 0xfb, 0x96, 0x1b, 0x11, 0xdf, 0x8c, 0x23, 0x66, 0xbd, 0x75, 0x86, 0xec, 0x47,
	0xc6, 0x3a, 0x54, 0x79, 0xe0, 0xd8, 0x93, 0xd8, 0x79, 0x1c, 0x87, 0x52, 0x3f, 0xad, 0x5a, 0xf6,
	0x1d, 0x4c, 0x22, 0x92, 0xd0, 0xf9, 0x64, 0xe0, 0x44, 0xb1, 0x74, 0x5e, 0xae, 0x9b, 0x75, 0x86,
	0x6c, 0xd9, 0xc6, 0x37, 0xa0, 0xb2, 0xee, 0x7b, 0x87, 0x6e, 0x57, 0x7f, 0x03, 0x74, 0xf1, 0x02,
	0xc6, 0xb1, 0x13, 0xc6, 0x2e, 0x52, 0x89, 0xf3, 0x38, 0x20, 0x6c, 0x35, 0x53, 0xa3, 0x9c, 0x87,
	0x9c, 0x71, 0xe7, 0x71, 0xa0, 0xdf, 0x00, 0x4d, 0x44, 0x8d, 0x6e, 0x1d, 0xbb, 0xce, 0x49, 0xab,
	0xed, 0xc6, 0x22, 0x32, 0xe3, 0xbc, 0xb9, 0x28, 0xe0, 0x0f, 0x5d, 0xe7, 0xe4, 0xb6, 0x1b, 0x47,
	0xc6, 0x4f, 0x8a, 0x57, 0x6f, 0x68, 0x45, 0xe2, 0x56, 0x70, 0x6f, 0xec, 0x7b, 0x26, 0xb9, 0xd7,
	0xd3, 0x46, 0x9f, 0x32, 0x59, 0x83, 0xea, 0x93, 0x3e, 0x62, 0x52, 0x19, 0x04, 0x8c, 0x42, 0x38,
	0xb0, 0xa9, 0x0f, 0x97, 0xe4, 0x38, 0xd5, 0x51, 0xfd, 0x7a, 0x2c, 0x7f, 0xea, 0x5f, 0x86, 0xda,
	0xc0, 0xe3, 0xb0, 0xb5, 0x79, 0x1b, 0xdb, 0x01, 0x17, 0x34, 0x93, 0x2a, 0x4a, 0x30, 0x50, 0xf2,
	0xdc, 0xcc, 0x7b, 0x8a, 0x61, 0xe3, 0xd4, 0x13, 0xc1, 0x40, 0x91, 0x50, 0x64, 0xac, 0x4f, 0xf2,
	0xe7, 0xfe, 0x22, 0x54, 0xe8, 0x0c, 0xbd, 0xcb, 0xfa, 0xdb, 0xe4, 0xd0, 0xbb, 0x62, 0xbe, 0x4d,
	0x2e, 0x6e, 0xfc, 0x9d, 0x42, 0xf2, 0x20, 0xc9, 0x3f, 0x37, 0x8f, 0xac, 0xfc, 0x7a, 0x11, 0xea,
	0xc9, 0x6c, 0x4d, 0x10, 0xb4, 0xef, 0xc3, 0x52, 0x3a, 0xf7, 0x2d, 0xbe, 0x50, 0x37, 0xfd, 0x7a,
	0x5f, 0x82, 0x92, 0x3a, 0xbd, 0x10, 0xab, 0x49, 0x7d, 0x9d, 0x34, 0x0f, 0x19, 0xa5, 0x39, 0xcf,
	0xe1, 0x5d, 0x04, 0x1e, 0x17, 0x76, 0x50, 0xd4, 0x4f, 0xd8, 0x4d, 0xea, 0x0e, 0x34, 0x84, 0x97,
	0xa6, 0xc0, 0x32, 0x7f, 0x06, 0x2c, 0x40, 0x9e, 0x9a, 0x02, 0xcd, 0xd0, 0xfb, 0x29, 0xe5, 0xe1,
	0xf7, 0x53, 0xb2, 0x67, 0x15, 0x95, 0xa1, 0xb3, 0x8a, 0xeb, 0x50, 0x77, 0x1e, 0x4b, 0x77, 0x2b,
	0xb1, 0x4b, 0xd4, 0x9c, 0xc7, 0xc2, 0x7b, 0xca, 0xf8, 0x9f, 0x8a, 0xb0, 0x90, 0x19, 0x87, 0xb1,
	0xee, 0x3e, 0xcf, 0x02, 0x08, 0x1d, 0x40, 0x39, 0x09, 0x20, 0xad, 0x40, 0x7c, 0xe1, 0x2a, 0xd4,
	0xc4, 0xd8, 0x27, 0x8e, 0xa4, 0x55, 0x4a, 0x0b, 0xbb, 0x9f, 0xc8, 0x22, 0x4b, 0x1d, 0x0b, 0xeb,
	0x04, 0x91, 0x81, 0x08, 0xb3, 0xa7, 0xc6, 0xe2, 0xfa, 0x5f, 0xc4, 0x62, 0x3b, 0xfe, 0x1c, 0xee,
	0x7d, 0x75, 0xa4, 0xf7, 0x06, 0x2c, 0x24, 0x67, 0x2b, 0x8a, 0x9e, 0xd8, 0x90, 0xe7, 0x2b, 0x28,
	0x16, 0xa6, 0x96, 0xd5, 0xba, 0x6a, 0x59, 0x35, 0x60, 0x81, 0xb8, 0x5e, 0x52, 0x55, 0x1c, 0xe8,
	0x34, 0x10, 0x28, 0xab, 0x3e, 0x83, 0xe3, 0x17, 0xb3, 0x0b, 0x3c, 0xdf, 0x3e, 0x4c, 0x00, 0xfa,
	0x35, 0x54, 0x9c, 0x23, 0x37, 0x79, 0x47, 0xa3, 0x64, 0x26, 0x69, 0xe3, 0x11, 0x34, 0x94, 0x29,
	0x1d, 0x3b, 0xb2, 0xe3, 0x8f, 0x57, 0xd4, 0xa8, 0x96, 0xa5, 0x6c, 0x54, 0xcb, 0x2b, 0x50, 0x0d,
	0x1d, 0xbb, 0x65, 0xfb, 0xf2, 0x02, 0x6d, 0x25, 0x74, 0xec, 0x0d, 0x3f, 0x36, 0x4e, 0xa1, 0x26,
	0x19, 0xd2, 0x84, 0x25, 0xf2, 0x65, 0x66, 0x05, 0xc5, 0x1c, 0x6b, 0x9f, 0x44, 0x43, 0xe2, 0x64,
	0xca, 0x0f, 0x56, 0xa0, 0xba, 0x1f, 0x5a, 0x9d, 0x47, 0x5b, 0xb6, 0x6c, 0x13, 0x27, 0x8d, 0xbf,
	0x56, 0x02, 0x6d, 0xb8, 0x12, 0xce, 0x3c, 0xae, 0x67, 0xb1, 0xca, 0x79, 0xe3, 0xa9, 0x1f, 0x59,
	0xd1, 0x01, 0x01, 0xc6, 0xe9, 0x29, 0x89, 0x41, 0xb7, 0xa4, 0x18, 0x74, 0x91, 0x42, 0x12, 0x17,
	0x64, 0xfc, 0x29, 0x29, 0x44, 0xdc, 0x47, 0x25, 0x0a, 0xc9, 0xde, 0x49, 0xab, 0x3c, 0xc9, 0x9d,
	0x34, 0x35, 0xc6, 0x77, 0xf5, 0x9c, 0x31, 0xbe, 0x6b, 0x67, 0x89, 0xf1, 0x2d, 0x43, 0x60, 0xd7,
	0x95, 0x10, 0xd8, 0xc9, 0xe5, 0x27, 0x50, 0x2f, 0x3f, 0x9d, 0xff, 0x76, 0xa1, 0x54, 0xa6, 0x9b,
	0xa9, 0xb9, 0x76, 0x1d, 0x1a, 0xca, 0x73, 0x0a, 0x33, 0x1d, 0x87, 0xf1, 0x9a, 0x2d, 0xa5, 0x9e,
	0x1e, 0x5f, 0x82, 0x4b, 0x63, 0xdf, 0x91, 0xd0, 0x5f, 0x82, 0x05, 0xa9, 0x89, 0x75, 0x07, 0xae,
	0x2d, 0xe9, 0xb1, 0xc9, 0xc0, 0x7b, 0x08, 0x33, 0xb6, 0xa5, 0xc1, 0x58, 0x79, 0xbd, 0xe1, 0x5d,
	0x28, 0x0b, 0x5b, 0x6f, 0x61, 0x96, 0x4d, 0x5c, 0x5c, 0x44, 0xa7, 0x0a, 0xc6, 0x0f, 0x15, 0x92,
	0x1e, 0xc9, 0x43, 0xc2, 0x31, 0x4b, 0xe1, 0x23, 0xa8, 0x8b, 0x8b, 0x71, 0x67, 0xf4, 0x9f, 0xaf,
	0x51, 0xad, 0xdb, 0x31, 0xf1, 0x64, 0x42, 0xc5, 0x7c, 0x95, 0xfd, 0x9f, 0x08, 0x24, 0x38, 0xeb,
	0x1d, 0x69, 0x6d, 0xe7, 0xd5, 0xff, 0x0e, 0x94, 0xf0, 0x63, 0x85, 0xd9, 0x3f, 0x86, 0xe5, 0x8d,
	0x7f, 0xa5, 0x20, 0xf1, 0x88, 0x17, 0x1f, 0x90, 0xe1, 0xb8, 0xb6, 0xe3, 0xc5, 0x6e, 0x7c, 0x9a,
	0xb8, 0xf4, 0x70, 0x7a, 0xac, 0x9f, 0xdf, 0xf8, 0x3b, 0x8b, 0xa3, 0x27, 0x7f, 0xcf, 0x43, 0x43,
	0x3c, 0x48, 0xa1, 0xc6, 0xc9, 0x06, 0x01, 0x22, 0x79, 0x76, 0x00, 0x90, 0x36, 0x6e, 0xec, 0xd9,
	0x86, 0x8c, 0x39, 0x8b, 0x8c, 0x97, 0xdb, 0x40, 0x26, 0xa0, 0x4d, 0xc7, 0xb2, 0x93, 0x4c, 0x24,
	0x8e, 0xc4, 0x8f, 0x05, 0xb7, 0x10, 0xcb, 0xed, 0x65, 0x18, 0x5e, 0xc6, 0x59, 0xcc, 0x35, 0x7e,
	0x46, 0x3c, 0xa1, 0xc7, 0x54, 0x85, 0x6a, 0xe0, 0xf3, 0xd0, 0x48, 0x0d, 0x40, 0xd2, 0x17, 0x11,
	0x12, 0x0b, 0x50, 0x34, 0xaa, 0x8d, 0x15, 0x9f, 0x5c, 0x1b, 0xcb, 0x2a, 0x59, 0xa5, 0x61, 0x25,
	0x6b, 0x48, 0x4f, 0x99, 0x3f, 0xb7, 0x9e, 0x92, 0x0a, 0x7e, 0xe5, 0xb3, 0x09, 0x7e, 0x5f, 0x83,
	0x25, 0x75, 0x98, 0x50, 0x36, 0x7f, 0x62, 0xd9, 0xcf, 0xf8, 0xdf, 0x8a, 0x70, 0x41, 0xbe, 0x5b,
	0xb8, 0xeb, 0x84, 0x11, 0xf2, 0x12, 0x1c, 0x7a, 0x14, 0xd2, 0xfc, 0x28, 0x26, 0xfd, 0x49, 0x70,
	0x89, 0x2a, 0xa6, 0x51, 0x75, 0x3a, 0x8b, 0xce, 0x9d, 0x5c, 0xcf, 0xe9, 0xf9, 0x96, 0x2d, 0xdf,
	0x52, 0xa4, 0xd3, 0x3e, 0x04, 0x3c, 0x55, 0x6d, 0x3a, 0x3b, 0x7f, 0x95, 0xe1, 0xf9, 0x7b, 0x06,
	0xea, 0x87, 0xbe, 0x1f, 0x07, 0xa1, 0xeb, 0x49, 0xfb, 0x73, 0x0a, 0xf8, 0x6c, 0x1e, 0xa9, 0xfc,
	0xd9, 0x22, 0x5c, 0x1a, 0x1d, 0xeb, 0x73, 0xcd, 0xdf, 0xc4, 0xc9, 0x50, 0x85, 0xec, 0x52, 0x46,
	0xc8, 0x16, 0xcf, 0x0f, 0x58, 0xb6, 0x14, 0xe6, 0xe7, 0xe5, 0xf3, 0x03, 0x96, 0xcd, 0x92, 0xbc,
	0xfa, 0x98, 0x48, 0xf9, 0xec, 0x8f, 0x89, 0xdc, 0x83, 0x46, 0xe2, 0xc7, 0x32, 0x08, 0x72, 0x8f,
	0xa5, 0xf6, 0xfd, 0x20, 0x75, 0x93, 0x30, 0x41, 0x56, 0x3d, 0x08, 0x8c, 0x00, 0x2e, 0xca, 0xe1,
	0x3a, 0x08, 0xb8, 0x71, 0x39, 0xb4, 0x39, 0xd4, 0xb7, 0xe2, 0x48, 0xdf, 0x32, 0x64, 0x50, 0x1a,
	0x22, 0x03, 0xe3, 0x87, 0x4b, 0xb0, 0x34, 0xa4, 0x73, 0x4e, 0xd8, 0x57, 0xbe, 0x98, 0x11, 0xb1,
	0x26, 0x73, 0x79, 0x81, 0x44, 0x99, 0xb0, 0xa9, 0x0d, 0x40, 0x31, 0x95, 0x8f, 0x34, 0x8e, 0x85,
	0x36, 0x26, 0x96, 0x0c, 0x1d, 0xd7, 0xa3, 0x38, 0x83, 0xfa, 0xd8, 0x3d, 0x20, 0x95, 0x41, 0xb9,
	0xdb, 0x3f, 0x4d, 0x85, 0x16, 0x0d, 0xc0, 0x89, 0x17, 0x6f, 0x25, 0xd4, 0xfb, 0xf2, 0xa7, 0xfe,
	0x22, 0x34, 0x79, 0x67, 0x3b, 0x71, 0xe3, 0xce, 0x11, 0xaf, 0x19, 0xb1, 0xdb, 0xed, 0x11, 0x48,
	0x7f, 0x15, 0x96, 0xa8, 0x3d, 0xca, 0x07, 0xab, 0x44, 0x4d, 0xd4, 0xcc, 0x04, 0xab, 0x7e, 0x03,
	0x34, 0x2a, 0xe7, 0x7a, 0xad, 0x80, 0x29, 0x9b, 0x5d, 0x28, 0x17, 0x11, 0xbe, 0xe5, 0x49, 0x7a,
	0x4f, 0x4a, 0xaa, 0xea, 0x52, 0x3d, 0x2d, 0xb9, 0x93, 0x28, 0x43, 0xc6, 0x7b, 0xb0, 0x34, 0xd4,
	0xf8, 0x59, 0x8f, 0x5e, 0x8c, 0x9f, 0x98, 0x07, 0x48, 0x47, 0xfe, 0x33, 0x91, 0x50, 0x59, 0x87,
	0xf9, 0x1a, 0x2c, 0x0a, 0x0f, 0x8e, 0xe4, 0x61, 0xcf, 0xbc, 0xeb, 0x06, 0x52, 0x8e, 0x26, 0xcb,
	0x52, 0x73, 0xa0, 0xa4, 0x28, 0x0e, 0xad, 0x1b, 0x91, 0x2b, 0x02, 0x09, 0x1f, 0x2d, 0xdb, 0x3a,
	0x65, 0xa1, 0xf5, 0xd5, 0x5c, 0x7c, 0xc2, 0x89, 0x60, 0x89, 0x11, 0x50, 0x6a, 0xc3, 0x3a, 0xd5,
	0x1f, 0xc2, 0x85, 0x2c, 0x4e, 0x11, 0xcf, 0xaf, 0x76, 0x26, 0xac, 0xcb, 0x2a, 0xd6, 0x24, 0xb0,
	0xa0, 0xc0, 0x97, 0x68, 0x5e, 0x55, 0x4a, 0x6f, 0xd9, 0x43, 0x52, 0x3b, 0x3c, 0x89, 0xd4, 0xfe,
	0x0c, 0xd4, 0x23, 0x07, 0xb7, 0x88, 0xd8, 0x97, 0x97, 0xc5, 0x52, 0xc0, 0xa8, 0xb4, 0xcb, 0x41,
	0xd2, 0x84, 0x75, 0x8f, 0x43, 0xdc, 0xd5, 0xdc, 0x48, 0xd8, 0xec, 0x8c, 0x5f, 0x2a, 0xc0, 0x42,
	0xa6, 0x3f, 0xe2, 0xa0, 0xa1, 0x13, 0x67, 0xfc, 0x27, 0x11, 0x20, 0x0f, 0x10, 0x92, 0xcc, 0x4c,
	0x48, 0xc8, 0x05, 0x59, 0x44, 0x04, 0x62, 0x94, 0x48, 0x94, 0x43, 0x3f, 0x42, 0x42, 0xde, 0xb0,
	0x06, 0x50, 0xe9, 0xd6, 0x50, 0x38, 0xc8, 0x06, 0x02, 0x6f, 0x73, 0x48, 0xc8, 0xd7, 0x60, 0xc9,
	0x1f, 0xc4, 0xb8, 0xdf, 0x78, 0x6e, 0x3f, 0x65, 0xbf, 0x75, 0x73, 0x91, 0xc0, 0x6b, 0x12, 0x6a,
	0x1c, 0xc3, 0x85, 0x31, 0x8f, 0xf1, 0xe2, 0x37, 0xc8, 0xa8, 0x67, 0xf5, 0x7a, 0xad, 0x9e, 0xeb,
	0x3d, 0xe2, 0x9e, 0x34, 0x10, 0xb8, 0xd6, 0xeb, 0x6d, 0xbb, 0xde, 0x23, 0xfd, 0x83, 0x0c, 0xdf,
	0x7a, 0x6d, 0xda, 0x89, 0x06, 0xa3, 0x55, 0x84, 0x85, 0xbf, 0x53, 0x80, 0xc5, 0x6c, 0x46, 0xf6,
	0x2a, 0x6c, 0x61, 0x28, 0x28, 0xe2, 0x59, 0x7c, 0xbd, 0x47, 0xe5, 0xd4, 0x77, 0xa0, 0xe2, 0x39,
	0x27, 0x2d, 0x47, 0xbe, 0xa5, 0xf4, 0xdc, 0xe4, 0x97, 0x6f, 0x9c, 0x93, 0x3b, 0xbb, 0x66, 0xd9,
	0x73, 0x4e, 0xee, 0x04, 0xd3, 0x4d, 0x24, 0xbc, 0x60, 0xab, 0xc9, 0x82, 0x35, 0xb6, 0xa1, 0x4c,
	0xd5, 0x15, 0x8d, 0xa8, 0x4c, 0x1a, 0x11, 0x8a, 0x2e, 0x9e, 0xed, 0x3c, 0xa6, 0x33, 0xe6, 0xc4,
	0x14, 0x82, 0x90, 0xbd, 0x23, 0xa1, 0x79, 0x8f, 0xf6, 0xc2, 0xf8, 0x87, 0x65, 0xa8, 0xb0, 0xd3,
	0xcd, 0x33, 0x22, 0xd6, 0xb7, 0x6b, 0xd3, 0xd3, 0x1b, 0x4c, 0x54, 0xf6, 0xa9, 0xb7, 0x65, 0xef,
	0xc5, 0xe1, 0xb0, 0x1f, 0x55, 0x71, 0xc4, 0x8f, 0xea, 0x15, 0x58, 0xa2, 0x77, 0x16, 0x14, 0x1c,
	0xe2, 0x4b, 0x4d, 0x04, 0x6f, 0x48, 0x3c, 0xf2, 0x39, 0x06, 0xc5, 0xea, 0x42, 0xcf, 0x31, 0xc8,
	0x0b, 0x23, 0x94, 0xe9, 0xf6, 0xbb, 0xad, 0xd4, 0xfa, 0x02, 0x08, 0xdb, 0xea, 0x77, 0x0f, 0xc8,
	0x0b, 0x50, 0x54, 0xa7, 0x33, 0xdb, 0xca, 0x19, 0xce, 0x6c, 0xe9, 0x23, 0x99, 0x27, 0x3d, 0xaa,
	0x67, 0x3e, 0xf1, 0xdd, 0x84, 0x85, 0xa4, 0x8b, 0xc4, 0x2a, 0x6b, 0x67, 0x78, 0x03, 0xb9, 0xc1,
	0xc3, 0x20, 0x43, 0x5a, 0x8a, 0x07, 0x34, 0x15, 0xf7, 0xfc, 0x3a, 0x41, 0xa4, 0xd3, 0x9a, 0xc8,
	0x8e, 0x3a, 0x8e, 0x27, 0x7d, 0x79, 0x45, 0x8d, 0x3d, 0x84, 0xb0, 0x33, 0xc1, 0xa1, 0x15, 0xc5,
	0xe2, 0x21, 0x4e, 0x66, 0x31, 0x0d, 0x37, 0xba, 0x6b, 0x45, 0xb1, 0xb8, 0xa0, 0x75, 0x09, 0x2a,
	0x61, 0x1a, 0x76, 0xb3, 0x6c, 0x96, 0x43, 0x79, 0xfb, 0x25, 0x69, 0xff, 0x42, 0xd6, 0x57, 0x8e,
	0xf7, 0x8b, 0xc5, 0x74, 0xbf, 0x50, 0x9f, 0x8e, 0x59, 0xca, 0x3e, 0x1d, 0xf3, 0x01, 0x2c, 0xf2,
	0x35, 0x1b, 0x19, 0xde, 0x43, 0x44, 0x4a, 0xbf, 0x78, 0x53, 0x3c, 0x74, 0x7f, 0x53, 0x3e, 0x74,
	0x7f, 0x73, 0xcd, 0x3b, 0x35, 0x17, 0x44, 0xd9, 0x75, 0x0e, 0xfd, 0x21, 0xa9, 0x80, 0xb6, 0xb1,
	0xe5, 0x94, 0x0a, 0xe8, 0xe8, 0xf8, 0x7d, 0x79, 0xb2, 0xab, 0xe7, 0xbb, 0x1b, 0x39, 0x9e, 0x4d,
	0x12, 0xa9, 0x3c, 0xff, 0xbd, 0x0a, 0xb5, 0x38, 0xb4, 0x3a, 0x8f, 0x90, 0x46, 0x2f, 0xf0, 0xb3,
	0x82, 0x6c, 0x0b, 0x6a, 0x93, 0x87, 0x8b, 0xac, 0x20, 0x79, 0x70, 0x21, 0xe3, 0x9a, 0x4d, 0x42,
	0x7d, 0x94, 0x6b, 0x87, 0x52, 0xf0, 0x08, 0xc9, 0x9e, 0x2b, 0x1a, 0xef, 0x83, 0x36, 0x9c, 0x87,
	0x1f, 0x7a, 0xe4, 0x48, 0x8d, 0x18, 0x7f, 0xe2, 0x52, 0x3c, 0xb6, 0x7a, 0x83, 0x84, 0xcd, 0x50,
	0x82, 0x34, 0x9b, 0x31, 0xef, 0xcd, 0xea, 0xf7, 0x52, 0x19, 0xa2, 0x34, 0xd5, 0x3f, 0x7d, 0x4c,
	0x65, 0x62, 0x22, 0x43, 0x9a, 0x75, 0x31, 0x63, 0xd2, 0x1c, 0x24, 0x96, 0x51, 0x9a, 0xf0, 0x71,
	0x0f, 0x2b, 0xce, 0x8f, 0x7d, 0x58, 0x71, 0xe8, 0x25, 0xbd, 0xf2, 0xc8, 0x4b, 0x7a, 0xf2, 0xb9,
	0x34, 0xe5, 0x09, 0x18, 0x4c, 0x23, 0xed, 0xa8, 0x02, 0x7b, 0xf5, 0xec, 0x02, 0xbb, 0xf2, 0x74,
	0x62, 0xed, 0x89, 0x9e, 0x4e, 0x34, 0x3e, 0x82, 0x95, 0x49, 0xa3, 0x35, 0xd6, 0x7e, 0x30, 0x32,
	0x74, 0xc6, 0x2f, 0x16, 0xa1, 0x26, 0x63, 0x0d, 0x8c, 0x59, 0x0b, 0x85, 0xd9, 0xd7, 0xc2, 0x57,
	0xcf, 0xf3, 0x1c, 0xf8, 0xd0, 0x63, 0xe0, 0xaf, 0xc2, 0x92, 0x65, 0xcb, 0x46, 0xa8, 0xf7, 0xdf,
	0x16, 0x2c, 0x9b, 0xbf, 0xc7, 0x4f, 0x8b, 0xfd, 0xfe, 0x46, 0x92, 0x31, 0xfe, 0xcf, 0xc4, 0x78,
	0xc4, 0xcf, 0x15, 0x4f, 0x34, 0x0c, 0x2b, 0xa1, 0x81, 0x5e, 0x9f, 0xe9, 0x25, 0x64, 0xc5, 0xc9,
	0xeb, 0x2b, 0x30, 0x8f, 0xf2, 0x29, 0x1f, 0x92, 0xcc, 0x56, 0x9d, 0x1f, 0x0a, 0xa7, 0x8a, 0xa8,
	0x71, 0x24, 0x27, 0xa3, 0xe9, 0x52, 0x68, 0xc8, 0xb3, 0x51, 0x24, 0x0d, 0xa5, 0x08, 0x09, 0x52,
	0xe5, 0x4c, 0x11, 0xb2, 0x4b, 0xc9, 0xcb, 0x30, 0xbf, 0x55, 0x49, 0xef, 0x91, 0x52, 0xa4, 0x03,
	0xfd, 0x63, 0x48, 0x6e, 0xdb, 0xb4, 0x8e, 0xfd, 0x38, 0xf3, 0xb4, 0xfc, 0xeb, 0x33, 0x45, 0x4b,
	0xa0, 0xde, 0x6a, 0xd6, 0x10, 0x44, 0xbf, 0x02, 0x55, 0xc2, 0x97, 0xc4, 0x91, 0xaa, 0x60, 0x52,
	0x15, 0x71, 0x86, 0xa3, 0xb2, 0xa5, 0x4f, 0xd8, 0x25, 0x76, 0xdd, 0x6b, 0x50, 0xb3, 0x1d, 0xcb,
	0xa6, 0xa3, 0xb1, 0x32, 0x87, 0x14, 0xe1, 0x34, 0x71, 0xf0, 0xc0, 0x61, 0xf7, 0x38, 0x96, 0x5a,
	0x10, 0x20, 0x9d, 0xe3, 0x3a, 0x3d, 0x3f, 0x72, 0x54, 0xe7, 0xb9, 0x3a, 0x41, 0x64, 0x36, 0xb6,
	0xc6, 0x56, 0x9d, 0x60, 0xea, 0x04, 0xa1, 0xec, 0x8f, 0xa0, 0x2c, 0x24, 0xef, 0x7a, 0x4e, 0xdc,
	0x4a, 0x75, 0x1c, 0x84, 0x04, 0x2e, 0x2a, 0xea, 0x5f, 0x1f, 0x1e, 0xd6, 0x13, 0x3f, 0x94, 0x8f,
	0x9d, 0xcf, 0x36, 0xac, 0x1f, 0xfb, 0xf4, 0x8a, 0x4d, 0x66, 0x60, 0x11, 0xa6, 0x3f, 0x84, 0xe5,
	0x2c, 0xea, 0xc0, 0xed, 0xb0, 0xd9, 0xfb, 0xc6, 0x4c, 0x98, 0x77, 0xc9, 0xf5, 0x77, 0xc9, 0xca,
	0x82, 0xf4, 0x36, 0x5c, 0xca, 0xe2, 0xb5, 0x9d, 0x43, 0x6b, 0xd0, 0x73, 0xd8, 0xc1, 0xe0, 0x8d,
	0x99, 0x70, 0x6f, 0x88, 0x3a, 0x9b, 0x73, 0xe6, 0x05, 0x6b, 0x14, 0x4c, 0x01, 0xd3, 0xdd, 0x4f,
	0xd3, 0xad, 0x5f, 0x09, 0x5c, 0x48, 0x97, 0xd0, 0x63, 0xab, 0xc7, 0x9b, 0xbf, 0x48, 0x64, 0x2f,
	0x4c, 0x2c, 0x8d, 0x5e, 0x42, 0xa6, 0xf8, 0x5f, 0x5a, 0x1a, 0xff, 0x4b, 0x6e, 0xaa, 0xcb, 0xe9,
	0xa6, 0x2a, 0x9e, 0x62, 0xa4, 0xc9, 0xa5, 0xfd, 0xbc, 0x66, 0x56, 0xdd, 0x08, 0x1b, 0x45, 0x02,
	0x6b, 0xe7, 0xc8, 0x77, 0x91, 0x6b, 0x7a, 0xe2, 0x79, 0x91, 0xb2, 0x59, 0x17, 0x90, 0x75, 0x2f,
	0xd6, 0xbf, 0x00, 0x17, 0x79, 0x0c, 0x5a, 0x91, 0xd3, 0x43, 0x5d, 0x44, 0x88, 0x3a, 0x17, 0x09,
	0x8b, 0xce, 0x79, 0x7b, 0x94, 0x45, 0x12, 0x4f, 0xb2, 0xce, 0x0e, 0x52, 0x97, 0xfc, 0x64, 0xde,
	0xd6, 0x92, 0x20, 0xb5, 0xb8, 0x61, 0x7c, 0x7e, 0x66, 0x22, 0x50, 0xc2, 0x99, 0xfe, 0x27, 0x05,
	0xb8, 0x38, 0x2e, 0x1b, 0x17, 0x9b, 0x1f, 0xc4, 0x2d, 0xd7, 0x7e, 0xcc, 0xe2, 0x78, 0xc5, 0x0f,
	0xe2, 0x2d, 0xfb, 0xf1, 0x04, 0x7d, 0xe2, 0x0a, 0x54, 0x79, 0x48, 0xd8, 0xd2, 0x55, 0x11, 0x23,
	0x92, 0x4e, 0x82, 0x30, 0xa2, 0xf0, 0x24, 0xac, 0x40, 0x35, 0x70, 0xc2, 0x48, 0xfa, 0xa3, 0x15,
	0x4c, 0x99, 0x64, 0x29, 0xb0, 0x6f, 0x3d, 0x6e, 0xf9, 0x41, 0xf2, 0x36, 0x20, 0x49, 0x81, 0x3b,
	0xd6, 0xe3, 0x07, 0x04, 0x32, 0xf6, 0x60, 0x69, 0x88, 0xfa, 0xf4, 0x8f, 0x32, 0x43, 0xf1, 0xc6,
	0xac, 0x54, 0xab, 0x8c, 0xc4, 0xdf, 0x28, 0xc0, 0x85, 0x31, 0xb9, 0x53, 0x07, 0x62, 0x4c, 0x84,
	0xb3, 0xa7, 0x36, 0x10, 0xe3, 0x6f, 0x66, 0x8f, 0x0c, 0x4f, 0x75, 0x74, 0x78, 0x3e, 0x97, 0xed,
	0x88, 0x5c, 0x29, 0xca, 0x4d, 0xf4, 0x52, 0xaa, 0x2c, 0xbd, 0x0b, 0x8b, 0xd9, 0x17, 0xf2, 0x67,
	0x8d, 0x40, 0x81, 0x14, 0x39, 0xbc, 0xc7, 0x20, 0x45, 0x2a, 0x36, 0xd4, 0xcf, 0xcf, 0xbc, 0x39,
	0x29, 0xfa, 0xed, 0xff, 0x5b, 0x84, 0x8b, 0xe3, 0xb2, 0x13, 0x0b, 0x51, 0x61, 0x8c, 0x85, 0xa8,
	0x38, 0x6a, 0x21, 0x52, 0x04, 0xc0, 0xac, 0xed, 0x63, 0xfe, 0xbc, 0x27, 0x96, 0xe5, 0x73, 0x9e,
	0x58, 0x56, 0xce, 0x72, 0x62, 0x99, 0xec, 0x62, 0xd5, 0xf1, 0xa7, 0x93, 0xb5, 0x73, 0x9e, 0x4e,
	0xd6, 0xd5, 0x57, 0x22, 0x99, 0x14, 0xb6, 0xdd, 0x47, 0x0e, 0x4d, 0xe7, 0x47, 0x38, 0x70, 0x8f,
	0x1c, 0x76, 0x88, 0x2c, 0xe4, 0x38, 0x44, 0xca, 0x6a, 0x26, 0xb9, 0xab, 0x0a, 0x87, 0x48, 0x21,
	0x49, 0x88, 0x8b, 0x3c, 0x29, 0x01, 0x35, 0x18, 0x46, 0x3e, 0x9f, 0x1b, 0x50, 0x4b, 0x3e, 0xc8,
	0x73, 0x57, 0x48, 0xe7, 0xee, 0x22, 0x94, 0x07, 0xca, 0x14, 0x8b, 0xc4, 0x98, 0x27, 0x2e, 0x5d,
	0x81, 0x85, 0x5c, 0x14, 0x36, 0xa0, 0x9e, 0x5a, 0x6f, 0x0a, 0x39, 0x46, 0x35, 0xac, 0x95, 0x58,
	0x75, 0xcc, 0xb4, 0x22, 0xaf, 0xe4, 0xc4, 0x47, 0x97, 0x56, 0x32, 0x16, 0x36, 0xfa, 0xb0, 0x90,
	0xa9, 0x44, 0xe1, 0x12, 0x9c, 0xae, 0x2b, 0x97, 0x8c, 0x48, 0xd0, 0x51, 0x4c, 0xe8, 0x27, 0xb1,
	0xdd, 0xf0, 0x37, 0xb6, 0xdb, 0xf1, 0xe4, 0x89, 0x3e, 0xfe, 0xd4, 0x5f, 0x80, 0x66, 0x22, 0x67,
	0xa5, 0xd1, 0xbf, 0x40, 0xca, 0x59, 0x5b, 0xb6, 0xf1, 0x8b, 0x55, 0x58, 0xcc, 0x8a, 0xfc, 0x33,
	0xc7, 0xff, 0x4a, 0xab, 0x29, 0x02, 0xe4, 0x5d, 0xa8, 0x8a, 0x7d, 0x26, 0xce, 0x0d, 0x82, 0x9d,
	0xd6, 0x17, 0x4c, 0x24, 0xa6, 0xf7, 0xeb, 0xc4, 0x4f, 0xfd, 0x3e, 0x34, 0xac, 0x41, 0xec, 0xb7,
	0xc4, 0xe1, 0x0a, 0xcb, 0xa3, 0x9f, 0x9b, 0x01, 0xd7, 0xda, 0x20, 0xf6, 0x77, 0x7b, 0xd6, 0xe9,
	0xe6, 0x9c, 0x09, 0x16, 0xff, 0x26, 0x62, 0xe3, 0xe0, 0x2e, 0xf3, 0x39, 0x92, 0x47, 0x8a, 0x89,
	0xb6, 0xc8, 0xcd, 0x39, 0x0e, 0xec, 0xa2, 0x6f, 0x43, 0x9d, 0xde, 0x47, 0x56, 0x0e, 0x4d, 0xde,
	0x98, 0xa5, 0x3d, 0xb2, 0xce, 0xe6, 0x9c, 0x99, 0x22, 0x40, 0x39, 0xfd, 0xc4, 0x72, 0xf3, 0x23,
	0x85, 0xa5, 0x88, 0x3e, 0xb6, 0x5c, 0x1c, 0x21, 0xaa, 0x46, 0xc3, 0x2c, 0xe4, 0x65, 0x56, 0x07,
	0x67, 0x1a, 0x66, 0x51, 0x83, 0x86, 0x59, 0xfc, 0xd4, 0xb7, 0x50, 0xe5, 0x3c, 0xf6, 0x43, 0x37,
	0x96, 0x21, 0x7c, 0x67, 0x19, 0xe3, 0xbb, 0x5c, 0x65, 0x73, 0xce, 0x4c, 0xaa, 0xeb, 0xef, 0x43,
	0x29, 0xf6, 0x03, 0x3e, 0x44, 0x7b, 0x75, 0x16, 0xaa, 0xf1, 0x83, 0xcd, 0x39, 0x13, 0x2b, 0x61,
	0x77, 0xa4, 0x07, 0x39, 0xcc, 0xdc, 0x1d, 0x76, 0x01, 0xc7, 0xee, 0x70, 0x65, 0x1c, 0xd5, 0x23,
	0xd7, 0x96, 0x4f, 0x02, 0xce, 0x32, 0xaa, 0x9b, 0xae, 0x4d, 0x31, 0xe0, 0xb0, 0x9a, 0xde, 0x02,
	0x8d, 0x9d, 0x9f, 0xc2, 0xd0, 0xe9, 0x39, 0xc7, 0x96, 0x27, 0x1f, 0x04, 0xbc, 0x35, 0x5b, 0x7f,
	0xdc, 0xce, 0x56, 0x52, 0x13, 0x65, 0xd6, 0x38, 0x0b, 0xd2, 0xef, 0x09, 0x53, 0x92, 0x63, 0xbb,
	0xf2, 0x6d, 0xc0, 0x99, 0xe6, 0xed, 0xd4, 0xbb, 0x63, 0xbb, 0x31, 0x3f, 0xef, 0x88, 0x3f, 0x13,
	0xc1, 0xcd, 0x85, 0x2b, 0xaa, 0x72, 0x4b, 0x01, 0x17, 0xcf, 0xec, 0xa2, 0x74, 0x51, 0xaa, 0x0f,
	0x42, 0xf3, 0x65, 0x95, 0x40, 0x58, 0x4b, 0xe7, 0xa5, 0xff, 0x88, 0xf1, 0x1f, 0x14, 0x60, 0x79,
	0x64, 0xc9, 0x9e, 0xe1, 0x2b, 0xa3, 0xb7, 0x3f, 0xd2, 0x2f, 0xd4, 0xc9, 0x1e, 0x7b, 0x47, 0x8d,
	0xeb, 0xd4, 0x98, 0x12, 0x52, 0x6b, 0xa4, 0x19, 0xfb, 0x58, 0x8d, 0x03, 0x41, 0x19, 0xb7, 0xe1,
	0xf2, 0xf8, 0x02, 0xb3, 0x87, 0xc9, 0x34, 0x7e, 0xa5, 0x08, 0xfa, 0x28, 0x4f, 0x49, 0x74, 0x38,
	0xa5, 0xcb, 0xa4, 0xc3, 0xd1, 0x01, 0x40, 0x46, 0xc1, 0x2b, 0x4e, 0x52, 0xf0, 0x94, 0xb3, 0x03,
	0xa1, 0xe0, 0x6d, 0xb1, 0x57, 0x9e, 0xa2, 0xff, 0xcd, 0x0f, 0xeb, 0x7f, 0x2f, 0x40, 0x33, 0x41,
	0xdd, 0x3a, 0xbe, 0x95, 0x98, 0x79, 0x19, 0xfb, 0xc3, 0x5b, 0x28, 0xba, 0xa5, 0x08, 0xe4, 0x53,
	0xb6, 0x75, 0xb3, 0x91, 0xe0, 0x78, 0x78, 0x8b, 0x1a, 0xe8, 0xf5, 0xb2, 0x11, 0x38, 0x11, 0x90,
	0xb4, 0x1e, 0x33, 0x15, 0x0d, 0x93, 0x32, 0x33, 0xdf, 0xa7, 0x7d, 0xe4, 0xf8, 0x96, 0x8c, 0x4b,
	0x24, 0xbb, 0xae, 0x7e, 0x5f, 0x16, 0x01, 0xe5, 0xfb, 0xa2, 0x8c, 0xf1, 0x3b, 0x05, 0x58, 0x1a,
	0x62, 0xaf, 0x67, 0xa0, 0x9f, 0x2d, 0xa8, 0x76, 0x8e, 0x50, 0x68, 0xeb, 0x71, 0x2c, 0x8b, 0x37,
	0x67, 0xe5, 0xe1, 0xeb, 0xa2, 0x9a, 0x29, 0xeb, 0x53, 0x6c, 0x74, 0xf1, 0x53, 0xb5, 0xaa, 0x37,
	0x18, 0x46, 0x86, 0xf5, 0xaf, 0x40, 0x95, 0xef, 0xb1, 0xe7, 0x7a, 0x2c, 0x88, 0xf0, 0x5f, 0x7c,
	0xbd, 0x5c, 0xd6, 0xca, 0x52, 0xa1, 0xda, 0x8c, 0xd9, 0xbb, 0x6c, 0xfc, 0x48, 0x11, 0x2e, 0x8c,
	0xd9, 0x49, 0xf4, 0x57, 0x60, 0x31, 0xd9, 0x49, 0x54, 0x5a, 0x5c, 0x48, 0xa0, 0x34, 0xa5, 0x99,
	0x62, 0x0a, 0x55, 0xa6, 0xc5, 0x68, 0x72, 0xdf, 0x00, 0xdd, 0xf3, 0xe3, 0xd6, 0x10, 0x46, 0x41,
	0xa2, 0x9a, 0xe7, 0xa7, 0xdf, 0x25, 0xa4, 0x23, 0xa5, 0x15, 0x8a, 0xcd, 0x94, 0xde, 0x17, 0x57,
	0xa4, 0x65, 0x70, 0x89, 0x72, 0x4e, 0x64, 0xbb, 0x31, 0xfd, 0xcc, 0x46, 0xca, 0x33, 0x7e, 0xa9,
	0xa0, 0x8a, 0x2a, 0xb8, 0x1d, 0xea, 0x2f, 0xc1, 0x42, 0x62, 0x03, 0x50, 0xc6, 0xa1, 0x29, 0x81,
	0xd4, 0x62, 0xb5, 0x90, 0x32, 0x0a, 0x49, 0x21, 0x6a, 0xe8, 0x0d, 0xd0, 0x3c, 0xbf, 0x95, 0x45,
	0xc6, 0x2f, 0xbe, 0x79, 0xfe, 0x9a, 0x8a, 0x6e, 0xa8, 0xa4, 0x6a, 0xf0, 0x4d, 0x4b, 0x12, 0x4e,
	0xc1, 0xdf, 0xca, 0x09, 0x07, 0xfd, 0x72, 0x86, 0x81, 0xf2, 0x0e, 0x3c, 0x3b, 0x35, 0xfc, 0xa7,
	0x05, 0x95, 0x27, 0xc9, 0x3d, 0xf8, 0x0c, 0x2b, 0x68, 0xf8, 0x19, 0x97, 0x17, 0xa1, 0x49, 0x67,
	0x22, 0xc7, 0xfe, 0x80, 0x04, 0x80, 0xf9, 0xf4, 0x48, 0x84, 0x41, 0x74, 0x03, 0x8f, 0xc2, 0xbc,
	0xa9, 0xa6, 0x3a, 0x10, 0x20, 0x1a, 0x0d, 0x5c, 0x4a, 0xa2, 0x80, 0xaa, 0x4f, 0x72, 0x25, 0x11,
	0xc6, 0xdd, 0x87, 0x85, 0xcc, 0x26, 0x79, 0x86, 0x16, 0x7f, 0x87, 0x12, 0x45, 0x67, 0xda, 0x45,
	0x9e, 0x7d, 0x3f, 0x48, 0x65, 0x50, 0xe3, 0xbf, 0x2c, 0xc0, 0xd5, 0x89, 0xdb, 0xf2, 0xd9, 0xf6,
	0x45, 0xb1, 0x1f, 0x95, 0xd4, 0x38, 0x83, 0xaa, 0x87, 0xf4, 0x7c, 0xd6, 0x43, 0xfa, 0x12, 0x54,
	0x42, 0x87, 0x4e, 0xfb, 0xca, 0xf2, 0x8a, 0x5d, 0xb4, 0x45, 0x67, 0x42, 0x08, 0x4e, 0x7c, 0x05,
	0x4a, 0xc4, 0x25, 0xc8, 0x24, 0x44, 0xf7, 0xf7, 0xe8, 0xc9, 0x33, 0x7e, 0x5e, 0x5c, 0xa4, 0x8c,
	0x28, 0x43, 0x2a, 0x62, 0xd3, 0x47, 0xf4, 0xe2, 0xac, 0x90, 0x55, 0x98, 0x32, 0x9d, 0x35, 0xca,
	0xa3, 0x21, 0xd7, 0x4b, 0x6d, 0x97, 0x35, 0x01, 0xd8, 0xb2, 0xf5, 0x55, 0x58, 0x76, 0xa3, 0x16,
	0xe7, 0xdb, 0x4e, 0xcf, 0x89, 0x1d, 0x9b, 0x6d, 0x07, 0x4b, 0x6e, 0xf4, 0x80, 0xe0, 0x1b, 0x02,
	0x6c, 0xfc, 0x37, 0x99, 0x1d, 0x5e, 0xde, 0xe0, 0xdb, 0x82, 0xe6, 0x20, 0x60, 0x83, 0xd2, 0x2c,
	0x2a, 0x0f, 0xd7, 0x13, 0xde, 0x6b, 0x66, 0x63, 0x10, 0xec, 0xc9, 0xaa, 0xfa, 0x1a, 0xd4, 0x06,
	0x41, 0x8b, 0xb6, 0x84, 0xdc, 0x40, 0x28, 0x59, 0x34, 0xd5, 0x41, 0xb0, 0x8e, 0xd5, 0xc6, 0x5e,
	0xb9, 0x1d, 0x1b, 0xd9, 0xdf, 0xf8, 0xdb, 0x19, 0x76, 0x81, 0x72, 0xde, 0x19, 0xa6, 0x7e, 0x7f,
	0x5c, 0x00, 0xcc, 0x5b, 0x33, 0xca, 0x93, 0x13, 0xc3, 0x5f, 0x5e, 0x87, 0x7a, 0xbb, 0xe7, 0xfb,
	0x8f, 0x5a, 0x87, 0x09, 0xed, 0xd4, 0x08, 0x70, 0x57, 0x9c, 0x46, 0x8b, 0xcc, 0xc4, 0x67, 0xb3,
	0x6e, 0x8a, 0xe2, 0xe4, 0xb2, 0x79, 0xaa, 0xd2, 0xf4, 0xd0, 0x57, 0x26, 0x08, 0x36, 0x67, 0x8f,
	0xe5, 0x98, 0x50, 0xfc, 0xbc, 0x42, 0xf1, 0xc6, 0x5d, 0x58, 0xc8, 0xcc, 0x06, 0x49, 0x2b, 0x96,
	0xd7, 0xea, 0xfb, 0xb6, 0x7b, 0x78, 0x2a, 0xbd, 0x6d, 0x3a, 0x96, 0xb7, 0x43, 0x00, 0x25, 0xa2,
	0x10, 0x5b, 0xd2, 0x99, 0x81, 0xf7, 0xa1, 0xf2, 0x71, 0xf2, 0xf4, 0xe7, 0x98, 0xf6, 0xbe, 0x27,
	0xdf, 0xad, 0xca, 0x73, 0xb9, 0x12, 0x58, 0xd4, 0x37, 0xab, 0xc6, 0xdd, 0xaa, 0xff, 0x95, 0x02,
	0x40, 0x5a, 0x52, 0xff, 0x62, 0x46, 0xad, 0xcd, 0x43, 0x9e, 0x39, 0x13, 0x91, 0xe6, 0x90, 0xbc,
	0x73, 0x26, 0x51, 0x55, 0xc8, 0xdf, 0x9b, 0x73, 0x89, 0x31, 0xe4, 0x76, 0xaa, 0xac, 0xe5, 0x45,
	0xb6, 0x16, 0x18, 0x46, 0x15, 0xb5, 0x44, 0xe0, 0xff, 0x1a, 0x2c, 0x64, 0xca, 0xe8, 0x2f, 0xc3,
	0xe2, 0xa1, 0xe3, 0xd8, 0xad, 0xb6, 0x25, 0x63, 0xc8, 0xf2, 0x1e, 0x88, 0xd0, 0xdb, 0x96, 0x08,
	0x09, 0x3b, 0x61, 0x47, 0xf9, 0x0a, 0x34, 0xd5, 0x26, 0x67, 0x82, 0x90, 0x14, 0xb2, 0x41, 0x48,
	0xc6, 0x23, 0xf8, 0x18, 0x16, 0x84, 0xfa, 0x21, 0x99, 0xc5, 0x5d, 0x68, 0x74, 0xfa, 0xf1, 0xde,
	0x91, 0x7f, 0xa2, 0xdc, 0x62, 0x9f, 0x7c, 0x1e, 0xbd, 0x9e, 0x96, 0x35, 0xd5, 0x8a, 0x86, 0x05,
	0x0d, 0x25, 0xef, 0xc9, 0x2d, 0x37, 0x62, 0x0d, 0x08, 0xcd, 0x72, 0x5e, 0xae, 0x01, 0x4a, 0x1a,
	0x3f, 0x5e, 0x80, 0x6b, 0x1b, 0xa7, 0x5e, 0x36, 0xaa, 0x9f, 0x38, 0x89, 0x35, 0x9d, 0x4f, 0x94,
	0x00, 0xbf, 0x85, 0xf3, 0x05, 0xf8, 0x4d, 0xb9, 0x36, 0x37, 0x35, 0xe1, 0xda, 0x13, 0xc3, 0x95,
	0x1a, 0x5d, 0x78, 0x66, 0x62, 0xd3, 0xc4, 0x4d, 0xbd, 0xa7, 0xd3, 0x38, 0xe3, 0x27, 0xc4, 0x15,
	0xb3, 0xfd, 0xa3, 0x41, 0xbf, 0x8d, 0xbd, 0x1e, 0x1d, 0xe8, 0x09, 0xcd, 0x57, 0x9d, 0x22, 0x4a,
	0x23, 0x4e, 0x11, 0x61, 0xa2, 0xd7, 0x51, 0x24, 0x87, 0xef, 0xcc, 0x84, 0x9d, 0x98, 0x72, 0x03,
	0x00, 0x9b, 0xa1, 0x6c, 0xe4, 0xab, 0xb0, 0xb8, 0x71, 0xea, 0xdd, 0xb5, 0x1e, 0xd1, 0x23, 0xc6,
	0xd8, 0xbe, 0x89, 0x6f, 0xa3, 0x18, 0xdb, 0xa0, 0x65, 0xca, 0xb2, 0xd3, 0xed, 0x93, 0xbd, 0xb3,
	0x67, 0x7c, 0x0f, 0x39, 0xa6, 0xd2, 0x9d, 0xcf, 0xe0, 0xce, 0x63, 0x54, 0x0c, 0xba, 0xce, 0xf8,
	0xf1, 0x79, 0x06, 0xd2, 0x8b, 0x9f, 0xf2, 0x66, 0x5d, 0x02, 0x48, 0xbc, 0x8e, 0x4b, 0xa9, 0xd7,
	0xb1, 0xf1, 0x31, 0x5c, 0x1e, 0x83, 0x1b, 0xdb, 0xab, 0xde, 0x58, 0x2c, 0x9c, 0xf9, 0xc6, 0xa2,
	0xf1, 0xdb, 0x45, 0x58, 0x16, 0xf7, 0x39, 0xbf, 0xed, 0xe7, 0xfd, 0xad, 0xf5, 0xf3, 0xfe, 0x8f,
	0x84, 0x4f, 0x7d, 0x66, 0xa4, 0xbf, 0xed, 0xe5, 0x3d, 0xc9, 0xcb, 0xbb, 0x45, 0xf7, 0x12, 0x95,
	0x48, 0x79, 0x6f, 0xd3, 0x5b, 0x03, 0x85, 0x9c, 0x5d, 0x5e, 0xc1, 0x56, 0x1c, 0x04, 0x72, 0x24,
	0x0e, 0xfd, 0x9e, 0xcd, 0xf1, 0x05, 0x70, 0x24, 0xee, 0xfa, 0x3d, 0xdb, 0xf0, 0x40, 0x17, 0xb3,
	0xf1, 0x19, 0x39, 0x91, 0xff, 0x6c, 0x01, 0x60, 0xe3, 0x94, 0xce, 0xbf, 0xf0, 0x43, 0x8a, 0xeb,
	0x40, 0x61, 0xd8, 0x75, 0x00, 0x7f, 0x09, 0x81, 0xa6, 0x24, 0xde, 0x68, 0x88, 0xf4, 0x0f, 0x32,
	0x01, 0x17, 0xa7, 0x89, 0x22, 0xf2, 0x98, 0x5e, 0xd9, 0x4d, 0x72, 0x22, 0xa6, 0x5c, 0x94, 0x66,
	0x6e, 0xe1, 0x5d, 0xc4, 0x31, 0xc9, 0xbf, 0x01, 0xcd, 0xa4, 0xb9, 0x48, 0xa6, 0xef, 0x67, 0xf8,
	0xe2, 0x8c, 0x8f, 0x4c, 0xa4, 0x2f, 0x90, 0x0a, 0x11, 0xb1, 0xa8, 0x8a, 0x88, 0x3f, 0x55, 0x80,
	0x9a, 0x24, 0x21, 0x14, 0x98, 0x32, 0xbb, 0xd3, 0x6b, 0xb9, 0x54, 0x37, 0xd4, 0x49, 0x7e, 0x00,
	0x59, 0x30, 0xc2, 0x62, 0xf2, 0x00, 0xb2, 0xf0, 0x92, 0x12, 0xf1, 0xe5, 0x44, 0x26, 0xeb, 0x32,
	0x65, 0x13, 0x64, 0xb6, 0x33, 0xe1, 0x45, 0x45, 0xe3, 0x21, 0x2c, 0xef, 0xb8, 0x8f, 0x85, 0xcb,
	0xf8, 0xb6, 0x7b, 0x4c, 0x27, 0x92, 0x8a, 0xa4, 0x2a, 0x84, 0x58, 0xd9, 0x80, 0x2b, 0x50, 0x0d,
	0x7d, 0xbf, 0xaf, 0x38, 0x83, 0x60, 0x72, 0xdc, 0xb3, 0x62, 0xc6, 0x7f, 0x5f, 0x82, 0x85, 0x04,
	0xf1, 0x04, 0x61, 0xe5, 0x73, 0xb0, 0x1c, 0x05, 0x4e, 0xc7, 0xb5, 0x7a, 0xa9, 0xdd, 0x84, 0xfb,
	0xa5, 0x71, 0x46, 0x6a, 0xdc, 0x79, 0x11, 0x9a, 0xa1, 0x63, 0xdb, 0x7e, 0xdc, 0x52, 0x8d, 0xb2,
	0x0d, 0x01, 0x13, 0xe7, 0x85, 0xf7, 0x80, 0x0e, 0x0f, 0xd5, 0x98, 0x2d, 0x53, 0xde, 0x1a, 0x1d,
	0xee, 0xb5, 0x59, 0xc3, 0xca, 0x99, 0xb0, 0x7b, 0xe5, 0x31, 0x61, 0xf7, 0x2a, 0xca, 0x49, 0xe8,
	0xef, 0xdb, 0x95, 0x4a, 0x95, 0x85, 0xd5, 0xcf, 0xce, 0xc2, 0x5e, 0x81, 0x45, 0x19, 0x88, 0x50,
	0xf1, 0x4d, 0x2f, 0x9b, 0x0b, 0x12, 0x2a, 0xc6, 0x93, 0x67, 0xb5, 0x91, 0xce, 0xea, 0x77, 0xc2,
	0x95, 0x8d, 0x53, 0x2f, 0x19, 0xba, 0x87, 0xae, 0x43, 0xf7, 0x16, 0x70, 0xb5, 0x5f, 0x87, 0x7a,
	0xe4, 0x87, 0xb1, 0x1a, 0x0b, 0xa5, 0x86, 0x00, 0x12, 0xdc, 0x76, 0xa0, 0xb6, 0xc7, 0xbf, 0xa7,
	0x16, 0x44, 0xb1, 0x3d, 0xc9, 0x54, 0xc3, 0xb3, 0x37, 0x65, 0x89, 0xfb, 0x56, 0xdf, 0x31, 0xfe,
	0x52, 0x11, 0xae, 0x8e, 0x6f, 0x07, 0x2e, 0xe3, 0x2f, 0x65, 0xdf, 0xf9, 0x7d, 0x35, 0x9f, 0x04,
	0x54, 0x95, 0xe9, 0x26, 0x5c, 0x88, 0x1c, 0xdc, 0xf5, 0xd8, 0x71, 0x26, 0x56, 0x8d, 0x63, 0xcb,
	0x22, 0x4b, 0x5a, 0xcf, 0x85, 0x93, 0x11, 0x24, 0x2d, 0x8e, 0xd8, 0x04, 0x3b, 0x79, 0x32, 0xe4,
	0x28, 0x98, 0x75, 0xd9, 0xa1, 0x48, 0x7f, 0x13, 0x2e, 0xa6, 0x17, 0x43, 0x14, 0x5c, 0xc2, 0xee,
	0xb4, 0x2c, 0x2f, 0x87, 0xec, 0x25, 0x15, 0x56, 0x61, 0x59, 0xb6, 0x2d, 0x1d, 0x49, 0x71, 0x9b,
	0x71, 0x89, 0x33, 0x64, 0x61, 0xe3, 0xaf, 0x14, 0x49, 0x92, 0xa5, 0xb0, 0x60, 0x38, 0x4d, 0xa3,
	0x31, 0x0d, 0x0a, 0xe3, 0x62, 0x1a, 0x48, 0x51, 0xa7, 0xa8, 0x88, 0x3a, 0x63, 0x84, 0xb6, 0xa7,
	0x7f, 0x39, 0x30, 0x2b, 0xe4, 0x94, 0x87, 0x85, 0x9c, 0x75, 0xa8, 0xe3, 0x77, 0xd5, 0x0b, 0x26,
	0xd3, 0x4e, 0x99, 0xbb, 0x47, 0xf1, 0xdd, 0xd0, 0xef, 0x73, 0x84, 0x22, 0xfe, 0x25, 0x1c, 0x4a,
	0x1f, 0x39, 0xb4, 0x03, 0x0a, 0x87, 0xf8, 0x2a, 0xa6, 0x0f, 0x5c, 0xdb, 0xf8, 0x6e, 0xba, 0x89,
	0xc9, 0xa3, 0xf5, 0x34, 0x83, 0x7f, 0x18, 0xff, 0x45, 0x89, 0x76, 0x1b, 0x36, 0xdc, 0x8c, 0x95,
	0x99, 0xb3, 0x9b, 0x58, 0x71, 0x78, 0x13, 0x9b, 0x4d, 0xb7, 0xe0, 0x28, 0x71, 0x6a, 0x34, 0x9b,
	0xf2, 0x59, 0xa3, 0xd9, 0xc8, 0x99, 0xae, 0x4c, 0x9e, 0xe9, 0xea, 0xb9, 0x67, 0xfa, 0x2a, 0xd4,
	0x84, 0x6f, 0x3a, 0x3f, 0x97, 0x5c, 0x37, 0xab, 0x94, 0xe6, 0x57, 0x0c, 0x28, 0xab, 0xef, 0xdb,
	0xc2, 0x7b, 0xaf, 0xcc, 0x5e, 0xed, 0x3b, 0xbe, 0x3d, 0x1c, 0x15, 0x08, 0x86, 0x69, 0x64, 0x05,
	0xaa, 0x01, 0xee, 0x27, 0xa1, 0x8c, 0x65, 0x20, 0x93, 0xca, 0xcd, 0xd3, 0xe6, 0xd9, 0x6e, 0x9e,
	0x7e, 0x95, 0x34, 0x2e, 0x39, 0x77, 0xe7, 0xd3, 0xa1, 0x7e, 0xb4, 0x00, 0x8d, 0x6d, 0xf7, 0x11,
	0x3d, 0xb4, 0x80, 0x74, 0x90, 0x9d, 0xf5, 0xc2, 0xb4, 0x59, 0x2f, 0x8e, 0x9d, 0xf5, 0x52, 0x3a,
	0xeb, 0xcf, 0x02, 0x0c, 0xdc, 0x8c, 0xe8, 0x5b, 0x32, 0xeb, 0x03, 0xd7, 0x1e, 0x5a, 0xd5, 0xe5,
	0x74, 0x55, 0x1b, 0x3f, 0x54, 0x10, 0x9e, 0x15, 0xa2, 0x39, 0xd8, 0xb5, 0xf7, 0x32, 0xd2, 0xfa,
	0x8c, 0xee, 0xc3, 0x42, 0x5c, 0x57, 0xc5, 0xf2, 0xe2, 0x88, 0x58, 0x4e, 0xde, 0x57, 0xad, 0x8e,
	0x3f, 0xf0, 0xe2, 0xf4, 0x35, 0xb6, 0xd8, 0xea, 0xad, 0x23, 0xc4, 0xf8, 0x6f, 0x0b, 0xb0, 0x60,
	0x52, 0x98, 0xb6, 0x6f, 0xc5, 0xc8, 0xa4, 0x8a, 0xc4, 0xfc, 0xb0, 0x4e, 0x47, 0xa4, 0x5e, 0x56,
	0x48, 0x7d, 0x03, 0xc5, 0x60, 0x6c, 0x88, 0xca, 0x66, 0x5e, 0x9a, 0xb2, 0xc1, 0x62, 0x59, 0xe2,
	0x31, 0x10, 0x26, 0xbf, 0x8d, 0xbf, 0x97, 0xed, 0x4f, 0x14, 0x7c, 0xe6, 0x6a, 0x90, 0x3a, 0xde,
	0xf3, 0xc3, 0xe3, 0x3d, 0xdc, 0xcb, 0xf2, 0x93, 0xf5, 0xf2, 0x17, 0x0b, 0xb0, 0xc4, 0x81, 0xf7,
	0x68, 0xf1, 0xa2, 0xf8, 0x34, 0xde, 0x8c, 0xb9, 0x0d, 0x8b, 0x62, 0x51, 0xf3, 0x79, 0xa2, 0xb4,
	0x67, 0xe6, 0x9c, 0x20, 0xca, 0x53, 0xca, 0x85, 0x48, 0x49, 0x91, 0x8f, 0x93, 0xc0, 0x26, 0x6c,
	0xf8, 0xbc, 0x29, 0x89, 0xdb, 0x2e, 0xc2, 0x7c, 0x2f, 0xdf, 0xf5, 0x66, 0x83, 0x0b, 0xbf, 0xeb,
	0x1d, 0xf1, 0x29, 0x44, 0xdd, 0xc4, 0x9f, 0xc6, 0x9f, 0x2d, 0x40, 0x73, 0xf8, 0x14, 0x72, 0x24,
	0xe2, 0xf2, 0x45, 0x28, 0xab, 0xf1, 0x92, 0x45, 0x82, 0x6c, 0x2e, 0xc9, 0xc1, 0xab, 0xb0, 0xb9,
	0x30, 0x0e, 0xe5, 0x90, 0x74, 0xfe, 0x89, 0x0e, 0x49, 0xff, 0xbe, 0x6c, 0x15, 0xe7, 0x9c, 0xe1,
	0x21, 0xcb, 0x17, 0xa0, 0xf9, 0x49, 0xd8, 0xea, 0xf8, 0x76, 0xe6, 0x48, 0x1d, 0x3e, 0x09, 0xd7,
	0x7d, 0x5b, 0x9c, 0xa9, 0x2b, 0x25, 0xd4, 0x87, 0x4e, 0x44, 0x09, 0x12, 0x69, 0x9e, 0x83, 0x86,
	0x2c, 0x91, 0x5e, 0x9e, 0xaa, 0x8b, 0x02, 0x07, 0x61, 0x2f, 0x1b, 0xac, 0xbb, 0xf2, 0xc4, 0xc1,
	0xba, 0x8d, 0x9f, 0x4b, 0x68, 0xc7, 0x74, 0x84, 0xf9, 0x91, 0x0e, 0xdf, 0xf8, 0x12, 0x83, 0xda,
	0xe1, 0x46, 0x3f, 0x1b, 0xef, 0x62, 0xcc, 0x74, 0x68, 0x50, 0x8a, 0xad, 0xae, 0x54, 0x41, 0x62,
	0xab, 0x3b, 0xe1, 0x65, 0x63, 0xd5, 0x98, 0x5b, 0xce, 0x1a, 0x73, 0x5f, 0x86, 0xa2, 0x65, 0xf3,
	0x65, 0xb0, 0xf1, 0x37, 0x2e, 0x8a, 0x96, 0x6d, 0xfc, 0x6e, 0x12, 0x7e, 0x63, 0x0f, 0x05, 0xa6,
	0x09, 0x73, 0xf3, 0x6e, 0xd6, 0x68, 0x3f, 0x2d, 0xb8, 0x9a, 0x1f, 0x9e, 0xaa, 0x02, 0xe8, 0x2d,
	0xb8, 0x44, 0xe2, 0x60, 0x30, 0x68, 0xf7, 0xdc, 0xe8, 0xa8, 0xe5, 0x78, 0x71, 0x68, 0x79, 0x1d,
	0xb9, 0xc0, 0x2f, 0x60, 0xe6, 0xae, 0xc8, 0xbb, 0xc3, 0x59, 0xc8, 0x29, 0x0f, 0x39, 0xfc, 0x1c,
	0x1f, 0x58, 0x96, 0x44, 0x84, 0xc4, 0x8c, 0x20, 0x5f, 0xce, 0xbc, 0xfa, 0x3c, 0xe6, 0x99, 0xea,
	0x17, 0xa1, 0x29, 0xbf, 0xaa, 0x38, 0xdc, 0x37, 0x18, 0x46, 0x8e, 0x83, 0x7f, 0xa2, 0x08, 0xf5,
	0xa4, 0xc9, 0xfa, 0x7b, 0x50, 0xe1, 0xbb, 0x26, 0xb9, 0x76, 0x39, 0x39, 0xfd, 0x5c, 0x61, 0x2c,
	0xf1, 0x66, 0xdf, 0x5c, 0x48, 0x4e, 0x48, 0xf4, 0x77, 0xd8, 0x50, 0x3a, 0x9f, 0x13, 0x8d, 0xd2,
	0xec, 0xf4, 0xd5, 0xd0, 0xbc, 0xdb, 0xb0, 0x20, 0x24, 0x5d, 0x96, 0x4b, 0xf2, 0x5d, 0x16, 0xb0,
	0xf4, 0x9a, 0x28, 0xbc, 0x39, 0x67, 0x36, 0x23, 0x25, 0x7d, 0xbb, 0xc1, 0x4f, 0x75, 0xd1, 0x26,
	0xfe, 0xc3, 0xb8, 0x42, 0x95, 0xdc, 0x09, 0x4f, 0x4e, 0x69, 0x50, 0xb2, 0x12, 0x65, 0x19, 0x7f,
	0x8e, 0x31, 0xc5, 0x67, 0xde, 0x1f, 0x9e, 0x7f, 0x82, 0xf7, 0x87, 0x8d, 0xdf, 0x16, 0xd6, 0xea,
	0xbd, 0xc0, 0xea, 0x38, 0x39, 0x16, 0x9e, 0x51, 0xf1, 0xbf, 0x38, 0x4e, 0xfc, 0x1f, 0x12, 0xf6,
	0x4a, 0x4f, 0x59, 0xac, 0x9f, 0x1f, 0x16, 0xd9, 0x54, 0xc1, 0xa4, 0x34, 0xa4, 0x6e, 0x28, 0x42,
	0xa8, 0xf1, 0xa7, 0xd4, 0x9e, 0x9e, 0x6b, 0x47, 0x9d, 0x71, 0x20, 0x26, 0x6f, 0xb0, 0xc6, 0x0e,
	0xd4, 0x93, 0xa0, 0x3e, 0xea, 0x4d, 0xb2, 0xc2, 0x93, 0xdd, 0x24, 0xfb, 0xc9, 0x42, 0x26, 0x9a,
	0x0e, 0x49, 0x21, 0xcc, 0x09, 0x29, 0x16, 0x6f, 0x5e, 0x54, 0x9d, 0x34, 0xfa, 0xad, 0x09, 0xfd,
	0x34, 0x12, 0xae, 0x12, 0x2b, 0xb8, 0xed, 0x3f, 0x66, 0xa1, 0x4c, 0xc6, 0x0a, 0xbe, 0xed, 0x3f,
	0xd6, 0x5f, 0x85, 0x25, 0xa5, 0x40, 0xab, 0x1f, 0x49, 0x1e, 0xba, 0x90, 0x16, 0xda, 0x89, 0xba,
	0xc6, 0x7f, 0x26, 0x8c, 0x7b, 0x14, 0xc6, 0xcf, 0xf9, 0x64, 0x98, 0x42, 0x0a, 0x4f, 0x99, 0x42,
	0x8a, 0xc3, 0x14, 0xa2, 0xea, 0x6c, 0xa5, 0x8c, 0xce, 0xc6, 0x26, 0x78, 0x8e, 0x55, 0xca, 0x5a,
	0x73, 0xdd, 0x8d, 0x38, 0x8a, 0xa9, 0xf1, 0xd3, 0x05, 0x52, 0xbc, 0x44, 0xc3, 0x85, 0x4a, 0x97,
	0x89, 0x60, 0x58, 0x78, 0xe2, 0x08, 0x86, 0xc3, 0xba, 0x61, 0xf1, 0x49, 0x75, 0xc3, 0x1f, 0x2e,
	0x90, 0xda, 0x99, 0x7e, 0x46, 0xff, 0x28, 0x6b, 0xc3, 0x58, 0x9d, 0xad, 0x75, 0xea, 0x36, 0xf2,
	0x45, 0x98, 0xf7, 0x03, 0x8e, 0x71, 0x39, 0x8d, 0x6e, 0xb0, 0xde, 0x03, 0xbe, 0x9c, 0x8c, 0x15,
	0x8c, 0xcf, 0x01, 0xa4, 0x30, 0xa1, 0x8a, 0xf9, 0x27, 0xca, 0x6e, 0x2c, 0x1f, 0xcc, 0x20, 0xf3,
	0xe1, 0x31, 0x1d, 0xad, 0x64, 0x5b, 0x20, 0xa5, 0xef, 0x42, 0x2a, 0x7d, 0x8f, 0xf7, 0x26, 0x48,
	0x0e, 0xb6, 0x4b, 0x39, 0x26, 0x6f, 0x16, 0x12, 0x70, 0xfc, 0x45, 0x0d, 0xe3, 0xdf, 0x2f, 0xc8,
	0x98, 0xc5, 0x34, 0x5c, 0x1f, 0x0c, 0xed, 0x43, 0xd3, 0xbb, 0xcb, 0x2a, 0x8b, 0xdc, 0x89, 0xbe,
	0x98, 0xdd, 0xaa, 0xa7, 0x6f, 0x2f, 0xea, 0x10, 0x0f, 0x85, 0xed, 0x2b, 0x0d, 0x87, 0xed, 0x33,
	0xfe, 0x9d, 0x82, 0x18, 0x4b, 0xbe, 0x54, 0xf9, 0x94, 0x77, 0x4b, 0xd5, 0x08, 0x58, 0x3a, 0xb3,
	0x11, 0xd0, 0xf8, 0xf1, 0x02, 0xd4, 0x92, 0x29, 0x7b, 0x27, 0xe3, 0x05, 0x30, 0xf3, 0x0e, 0xbb,
	0x05, 0x14, 0x43, 0x37, 0xd9, 0x60, 0xf3, 0x56, 0x00, 0x0d, 0x46, 0xb2, 0xbf, 0x36, 0xc2, 0x34,
	0x99, 0xdd, 0x5e, 0x7f, 0xac, 0x0c, 0x0d, 0xa5, 0xec, 0xb4, 0xd7, 0x91, 0x46, 0x2e, 0x03, 0xed,
	0x64, 0x2e, 0x8f, 0x92, 0xdf, 0xe5, 0x5b, 0x7c, 0xa4, 0x60, 0x4c, 0xd1, 0xf7, 0x71, 0xce, 0x3a,
	0xbe, 0xa7, 0x5c, 0x30, 0xc5, 0xe4, 0x5b, 0x67, 0xb9, 0xe1, 0x3a, 0x2a, 0x66, 0x5d, 0x82, 0x8a,
	0x1b, 0xb5, 0x82, 0x6e, 0x87, 0x6f, 0x54, 0x95, 0xdd, 0x68, 0xb7, 0xdb, 0x91, 0x62, 0x41, 0x35,
	0x15, 0x0b, 0xde, 0x95, 0x0f, 0xc8, 0xd7, 0x72, 0x04, 0x00, 0xba, 0x07, 0xaa, 0xbe, 0x1f, 0x3f,
	0xa6, 0xbb, 0xb7, 0xf8, 0xc2, 0xe3, 0xd9, 0xbb, 0x7b, 0x6b, 0xfc, 0x2d, 0x5d, 0x18, 0x7b, 0x4b,
	0x77, 0xcc, 0x97, 0xc5, 0xc3, 0x40, 0x4f, 0xf2, 0xe5, 0xb7, 0xc7, 0x5f, 0xfa, 0x6d, 0x8e, 0xbb,
	0xf4, 0x9b, 0xac, 0x86, 0x05, 0x65, 0x35, 0xa8, 0x17, 0xf6, 0x17, 0x33, 0x17, 0xf6, 0x49, 0xd3,
	0x45, 0xd2, 0x62, 0x97, 0xb2, 0xa5, 0x19, 0x58, 0x84, 0x49, 0x45, 0x4d, 0x08, 0x93, 0xdf, 0xc6,
	0x5f, 0xe4, 0xc5, 0x2c, 0x92, 0xc2, 0x05, 0xb0, 0x1f, 0x0c, 0xa2, 0x96, 0xa2, 0x2f, 0x82, 0x00,
	0x91, 0xab, 0xec, 0x87, 0xf2, 0x1d, 0x3e, 0x71, 0xe7, 0xf8, 0xc6, 0x0c, 0xdf, 0xcb, 0xbc, 0xc5,
	0xf7, 0x7c, 0xb6, 0xd5, 0xcc, 0x5d, 0xd2, 0x06, 0xe9, 0x57, 0x28, 0x9c, 0xb0, 0xe2, 0xa9, 0x5b,
	0x19, 0xd0, 0x4b, 0x9b, 0xc6, 0x57, 0xa0, 0x9e, 0x90, 0x09, 0x2a, 0x73, 0x34, 0x35, 0xed, 0xae,
	0xe2, 0xbf, 0x42, 0x71, 0xea, 0x6e, 0x77, 0xf9, 0x19, 0x9d, 0x91, 0x5b, 0x66, 0x2d, 0x58, 0x4e,
	0xe6, 0xe9, 0x63, 0x37, 0x26, 0xc9, 0x5f, 0xff, 0x4e, 0xc5, 0x4b, 0x6c, 0xb6, 0x19, 0x9e, 0x7c,
	0x8d, 0xed, 0x1f, 0x8b, 0x83, 0xe2, 0x3d, 0x62, 0x95, 0xd3, 0xe2, 0xde, 0x95, 0x6e, 0x94, 0x32,
	0x71, 0xef, 0x72, 0xa4, 0x84, 0xa7, 0x2e, 0xb7, 0x5e, 0x85, 0x5a, 0xdf, 0x6f, 0xbb, 0x2d, 0x2b,
	0x08, 0xa4, 0xa3, 0x0c, 0xa6, 0xd7, 0x82, 0x00, 0x95, 0x15, 0xdb, 0x39, 0x76, 0x3b, 0xf2, 0x98,
	0x88, 0x53, 0x74, 0x31, 0x69, 0x70, 0xcc, 0xef, 0x32, 0xd4, 0x4d, 0x91, 0x10, 0x50, 0xb7, 0x27,
	0x17, 0xbd, 0x48, 0xc8, 0xc7, 0x0d, 0x6a, 0xe9, 0xe3, 0x06, 0xd7, 0xa0, 0x16, 0xf4, 0xac, 0xf8,
	0xd0, 0x0f, 0xfb, 0xf2, 0xb5, 0x4d, 0x99, 0xe6, 0xf3, 0xbf, 0xbe, 0x15, 0xc5, 0x4e, 0xc8, 0xaf,
	0x7e, 0xd4, 0xdc, 0x68, 0x87, 0xd2, 0x28, 0xc7, 0xc5, 0x7e, 0xd0, 0x52, 0x87, 0xaf, 0x41, 0xc3,
	0xb7, 0x10, 0xfb, 0xc1, 0x46, 0x32, 0x82, 0xc6, 0xdf, 0x2c, 0x50, 0x2c, 0xb6, 0xa1, 0xa1, 0x47,
	0xb9, 0xe8, 0x41, 0x56, 0xe6, 0x78, 0x6f, 0x9a, 0xcc, 0x31, 0x5a, 0xfd, 0x26, 0x3d, 0x37, 0x8c,
	0x1a, 0xe9, 0x29, 0xef, 0x8f, 0xd7, 0xbe, 0x0f, 0x20, 0x05, 0xaa, 0xe1, 0x2b, 0x4a, 0x22, 0x7c,
	0xc5, 0xfb, 0x6a, 0xf8, 0x8a, 0x59, 0xc5, 0x77, 0x51, 0xe5, 0xfd, 0xe2, 0xbb, 0x05, 0xe3, 0xaf,
	0x08, 0xc9, 0x6e, 0x8f, 0xce, 0x64, 0xd8, 0x0d, 0xe6, 0x91, 0x73, 0x4a, 0x77, 0xb4, 0xd9, 0x0d,
	0x86, 0x93, 0x63, 0xcf, 0x33, 0x3e, 0xe3, 0xb8, 0x87, 0xc6, 0xef, 0x14, 0xc8, 0x8a, 0x2c, 0x9b,
	0x8b, 0x43, 0xbe, 0x95, 0x7a, 0xdc, 0x93, 0x08, 0x91, 0x27, 0x8b, 0x8a, 0xba, 0xd2, 0x24, 0x26,
	0x3d, 0xf3, 0xc9, 0xe8, 0x76, 0x0f, 0x9a, 0x7c, 0x6e, 0xa5, 0x3e, 0x21, 0xf5, 0x72, 0x0e, 0x2a,
	0xf2, 0x02, 0x36, 0x1b, 0x51, 0x9a, 0x40, 0x6e, 0xc9, 0x88, 0x12, 0xa9, 0x66, 0x1a, 0xb7, 0x14,
	0x78, 0x48, 0x58, 0x81, 0x28, 0xf9, 0x6d, 0xfc, 0x57, 0x05, 0x80, 0x34, 0x6b, 0xa2, 0x91, 0x44,
	0x8d, 0xc9, 0x74, 0x16, 0xf5, 0x4d, 0xe5, 0xf6, 0xa5, 0x2c, 0xb7, 0xcf, 0xdc, 0xf9, 0x4d, 0x6e,
	0xa0, 0x4f, 0x8e, 0xbd, 0x8d, 0x54, 0x73, 0xec, 0x84, 0x91, 0xbc, 0xf7, 0x5c, 0x37, 0x65, 0xd2,
	0xf8, 0xab, 0x05, 0x68, 0x28, 0xe3, 0x34, 0xa1, 0x17, 0x5f, 0xcb, 0x86, 0xc0, 0xce, 0xbb, 0xdf,
	0xa7, 0x20, 0x1c, 0x13, 0x08, 0xfb, 0xc3, 0xac, 0x4c, 0x7c, 0x63, 0x16, 0x34, 0x8a, 0x4c, 0x6a,
	0x6c, 0xc0, 0xf2, 0xc8, 0x07, 0x26, 0xb4, 0x5b, 0x8d, 0x48, 0x5a, 0xcc, 0x46, 0x24, 0xfd, 0xdd,
	0x02, 0x2c, 0x0d, 0x7d, 0x20, 0xe3, 0xe0, 0x5d, 0x98, 0x16, 0x02, 0xbb, 0x38, 0x1c, 0x02, 0x5b,
	0x6e, 0xd7, 0x25, 0x65, 0xbb, 0x1e, 0x1b, 0x9d, 0xd5, 0x8d, 0x5a, 0xe4, 0xb9, 0xeb, 0xc6, 0xa7,
	0x32, 0x0e, 0x8c, 0x1b, 0xad, 0x31, 0x84, 0x1a, 0x60, 0x75, 0x85, 0x59, 0x93, 0x27, 0x2a, 0xb6,
	0xba, 0xf2, 0x96, 0x0e, 0xbd, 0x4e, 0xd8, 0xf3, 0xbd, 0x6e, 0xf2, 0xbc, 0xb1, 0x13, 0x75, 0xb6,
	0x7d, 0xaf, 0x9b, 0x8a, 0x89, 0x35, 0x55, 0x4c, 0x64, 0x6c, 0xca, 0xb3, 0x28, 0x88, 0x8d, 0x6c,
	0x5c, 0x3f, 0x5f, 0x80, 0x85, 0xcc, 0x4a, 0xfb, 0x2c, 0x26, 0xfe, 0x23, 0xa8, 0x25, 0x86, 0xf1,
	0x52, 0x9e, 0x7f, 0x68, 0xba, 0xee, 0xcd, 0xa4, 0x96, 0xf1, 0xc7, 0x8b, 0xd0, 0x50, 0x72, 0x44,
	0x58, 0x04, 0x66, 0x2e, 0x72, 0xca, 0xea, 0x92, 0x65, 0xd8, 0x23, 0xb7, 0x7d, 0x8a, 0xa3, 0xb7,
	0x7d, 0xc6, 0x4d, 0x9c, 0x88, 0xc3, 0x40, 0xfe, 0x1a, 0xac, 0x6b, 0x57, 0xdd, 0x88, 0xdc, 0x34,
	0x70, 0x16, 0xe8, 0xdc, 0x5e, 0xb9, 0x13, 0x51, 0x43, 0x00, 0x4d, 0x51, 0xa2, 0x65, 0x55, 0xce,
	0xa8, 0x65, 0x49, 0x1f, 0xe6, 0x6a, 0xf6, 0x2d, 0xaf, 0x84, 0x74, 0x6b, 0x59, 0xd2, 0xfd, 0x04,
	0x16, 0xf7, 0x9c, 0x78, 0xc3, 0xe9, 0xb8, 0x64, 0x26, 0x73, 0x3e, 0x11, 0x97, 0x09, 0xa2, 0x41,
	0x2f, 0x96, 0xb1, 0x04, 0x44, 0x4a, 0xbf, 0xa7, 0x9e, 0x25, 0x17, 0x73, 0x42, 0x84, 0xac, 0x93,
	0x60, 0x67, 0x3a, 0x9f, 0x8c, 0x9e, 0x27, 0x1b, 0xff, 0x71, 0x05, 0xea, 0x22, 0x7f, 0xdf, 0x0f,
	0x84, 0x07, 0x2b, 0x09, 0x86, 0x69, 0x60, 0x38, 0x01, 0xe0, 0xa7, 0x9b, 0x14, 0xa9, 0xb1, 0x38,
	0x46, 0x6a, 0x9c, 0x8f, 0xad, 0xb6, 0x24, 0x81, 0xbc, 0xf6, 0xec, 0xa1, 0x22, 0x6e, 0xb5, 0x89,
	0x10, 0xa8, 0x1e, 0x6d, 0x03, 0x14, 0xc1, 0xb2, 0x95, 0xc6, 0x61, 0x99, 0x4a, 0x4a, 0x84, 0x47,
	0x44, 0xc8, 0x6c, 0x88, 0x9a, 0x43, 0x11, 0x27, 0xcb, 0xd9, 0xc7, 0x93, 0x2b, 0x6d, 0x8a, 0x10,
	0xc0, 0xd3, 0xf8, 0x7a, 0x0e, 0x62, 0x11, 0x4e, 0x40, 0xa8, 0xb2, 0xa2, 0x22, 0xb6, 0xd0, 0xf5,
	0x8e, 0xe9, 0xfd, 0xf9, 0xe4, 0x8e, 0xfd, 0xcc, 0x2d, 0x14, 0x35, 0xb7, 0xe5, 0x7d, 0x7c, 0x11,
	0xbb, 0x39, 0xf7, 0x3e, 0xbe, 0x40, 0x21, 0xa2, 0x4b, 0x8b, 0xb6, 0x88, 0x8a, 0xfa, 0xd7, 0xa0,
	0x29, 0x18, 0x57, 0xf4, 0xc9, 0xc0, 0x0a, 0x1d, 0xf6, 0xa5, 0xb9, 0x31, 0x3d, 0x16, 0xf7, 0x1e,
	0x95, 0x25, 0x3c, 0x8d, 0x38, 0x05, 0x88, 0x3b, 0x3f, 0x34, 0xb7, 0x42, 0x95, 0x93, 0x57, 0xfd,
	0x78, 0x20, 0x50, 0x18, 0xff, 0x1c, 0x2c, 0x27, 0x45, 0x3a, 0x8f, 0xba, 0xa1, 0x3f, 0xf0, 0x6c,
	0x3e, 0xa4, 0xd6, 0x64, 0x39, 0x09, 0x57, 0xf0, 0xf5, 0xfd, 0x38, 0xf6, 0x59, 0x17, 0x62, 0x7c,
	0x3b, 0x08, 0xd2, 0xd7, 0xa0, 0xde, 0xf7, 0xba, 0x74, 0x44, 0x70, 0xca, 0x37, 0x67, 0x67, 0x1b,
	0xc8, 0x5a, 0xdf, 0xeb, 0x0a, 0xb1, 0x2c, 0xfd, 0x8a, 0xeb, 0xc5, 0xa1, 0xcf, 0xba, 0x13, 0x7f,
	0x65, 0x0b, 0x41, 0xfa, 0x0d, 0xd0, 0x14, 0xa2, 0x15, 0x11, 0x16, 0x97, 0x58, 0x31, 0x4b, 0x28,
	0x97, 0x82, 0x2c, 0xde, 0x00, 0xad, 0x8d, 0x0d, 0xeb, 0xa7, 0x4a, 0x1c, 0x87, 0x75, 0x59, 0x14,
	0x70, 0xa9, 0xc3, 0x19, 0x7f, 0xb9, 0x00, 0xcb, 0x23, 0x34, 0x3c, 0xf6, 0xf4, 0x6d, 0x34, 0xda,
	0xd8, 0xfb, 0x99, 0xeb, 0x4f, 0xaf, 0xe6, 0x74, 0x78, 0xdf, 0x52, 0x7c, 0xa7, 0x87, 0x1f, 0x17,
	0x28, 0xcb, 0xc7, 0x05, 0x88, 0xaf, 0xc9, 0x27, 0x12, 0xf8, 0x5c, 0xc8, 0x15, 0xcf, 0x23, 0x18,
	0xeb, 0xa0, 0x0d, 0x53, 0x73, 0x7a, 0x08, 0x55, 0x50, 0x0f, 0xa1, 0xd4, 0xc3, 0xa5, 0xcc, 0x96,
	0xda, 0x33, 0x3e, 0x95, 0x48, 0x52, 0x32, 0x3c, 0xc3, 0xb1, 0xde, 0x97, 0x92, 0xcb, 0x16, 0xa5,
	0x33, 0xcc, 0x32, 0xd7, 0x31, 0xfe, 0x7c, 0x11, 0x96, 0xd7, 0x7a, 0x83, 0xbe, 0xe7, 0xb2, 0x24,
	0x15, 0xb1, 0xc7, 0xd6, 0x64, 0x46, 0xf5, 0x2c, 0xc0, 0xa1, 0x1b, 0x46, 0x71, 0x46, 0xd1, 0x22,
	0xc8, 0xb7, 0x46, 0xd1, 0x3a, 0xc3, 0x01, 0x81, 0x94, 0xdf, 0xef, 0x8d, 0xfa, 0x02, 0x3d, 0x19,
	0xff, 0x76, 0xe0, 0xc2, 0xf0, 0xe8, 0x9c, 0xcf, 0x6b, 0x79, 0xbc, 0x33, 0xe8, 0xff, 0x58, 0x84,
	0x05, 0x6e, 0x06, 0x1b, 0xd1, 0xcf, 0xb7, 0x55, 0x68, 0x50, 0xea, 0x59, 0xc2, 0x93, 0xa2, 0x60,
	0xe2, 0x4f, 0x82, 0x78, 0x5d, 0x1a, 0x3d, 0x84, 0x78, 0xdd, 0xe1, 0x79, 0x2a, 0x9f, 0x7b, 0x9e,
	0x9e, 0xd6, 0xa0, 0xeb, 0x9b, 0x50, 0xc7, 0x59, 0x14, 0x88, 0xaa, 0x39, 0x8f, 0x04, 0x0b, 0x44,
	0x9b, 0x7e, 0xdf, 0xd9, 0xb5, 0xc4, 0xeb, 0x6a, 0x66, 0x2d, 0xe0, 0x5f, 0xc6, 0x8f, 0x16, 0x61,
	0x49, 0x1d, 0x57, 0x31, 0x77, 0x14, 0x75, 0x21, 0xf7, 0x52, 0x5e, 0x52, 0x6d, 0xdf, 0x0f, 0x44,
	0xcc, 0x85, 0x0f, 0x60, 0x9e, 0x8e, 0x05, 0x8a, 0x39, 0xfe, 0x9c, 0x69, 0x55, 0xb1, 0xfb, 0x62,
	0x25, 0x7d, 0x0d, 0x78, 0x82, 0x50, 0x09, 0xcb, 0x7d, 0x9e, 0x29, 0x91, 0x19, 0x4c, 0x26, 0x03,
	0x16, 0x1f, 0xd2, 0x71, 0x11, 0xeb, 0x20, 0xe9, 0xaa, 0x6e, 0xc0, 0x02, 0xf1, 0x97, 0x23, 0xbf,
	0xef, 0xb4, 0x02, 0x3f, 0xe0, 0xf5, 0xd0, 0x40, 0x20, 0x8d, 0x8e, 0x1f, 0x18, 0x3f, 0x56, 0x55,
	0xc9, 0xec, 0xfc, 0x12, 0xc9, 0xf8, 0x40, 0x6f, 0x92, 0x49, 0xcd, 0x2b, 0x4c, 0x4a, 0x57, 0xee,
	0xb3, 0x94, 0x99, 0xdf, 0x7e, 0x98, 0x30, 0xae, 0x3c, 0x47, 0x79, 0x6e, 0xed, 0x50, 0xc4, 0x9c,
	0x61, 0x79, 0xa6, 0xfa, 0xa4, 0xf2, 0xcc, 0x3d, 0x68, 0xf2, 0xe3, 0x0f, 0x02, 0x51, 0xed, 0x2c,
	0x88, 0x44, 0x4d, 0x81, 0xe8, 0x12, 0x54, 0x48, 0xd7, 0x90, 0xd7, 0xfd, 0xcb, 0x98, 0xba, 0x95,
	0x80, 0xdf, 0x96, 0x4f, 0x9a, 0x60, 0xea, 0xed, 0x11, 0x69, 0xa7, 0xf1, 0xa4, 0xd2, 0xce, 0x56,
	0xfa, 0xac, 0xbc, 0xc0, 0xd4, 0x3c, 0x03, 0x26, 0xf9, 0xf8, 0xbc, 0x40, 0xf5, 0x0a, 0x2c, 0x4a,
	0x54, 0xde, 0xa0, 0xdf, 0x76, 0x42, 0x8e, 0xdf, 0x2a, 0x3f, 0x70, 0x9f, 0x80, 0x48, 0x19, 0x7d,
	0xeb, 0x71, 0x4b, 0xba, 0xb2, 0x88, 0x80, 0x6e, 0xd0, 0xb7, 0x1e, 0x4b, 0xaf, 0x14, 0x9c, 0x9b,
	0xce, 0x91, 0xef, 0xf7, 0xb8, 0x45, 0x4b, 0x67, 0x9a, 0x1b, 0xaa, 0x29, 0x25, 0x39, 0x12, 0x63,
	0x04, 0x16, 0xed, 0x8c, 0x62, 0x8c, 0x40, 0xf1, 0x35, 0x20, 0xd3, 0x28, 0x1b, 0x3f, 0x96, 0x73,
	0xe2, 0xd0, 0xa4, 0xfc, 0x84, 0xa9, 0xce, 0xed, 0x98, 0x74, 0xfc, 0x20, 0xf4, 0xfc, 0x55, 0x58,
	0xb6, 0x06, 0xb6, 0x1b, 0xb7, 0xda, 0xce, 0x21, 0x2a, 0x78, 0x7e, 0xe0, 0x78, 0x1c, 0x74, 0x6e,
	0x89, 0x32, 0x6e, 0x13, 0xfc, 0x41, 0xe0, 0x88, 0x6b, 0xf4, 0x54, 0xb6, 0xef, 0x44, 0x11, 0x6e,
	0x51, 0x17, 0xf8, 0x1a, 0x3d, 0x02, 0x77, 0x04, 0xcc, 0x78, 0x07, 0x16, 0x32, 0xe4, 0x3d, 0x63,
	0x6c, 0x50, 0x07, 0x16, 0xb3, 0x6c, 0x66, 0x62, 0x74, 0xcb, 0xcc, 0x09, 0xd6, 0x4c, 0x4c, 0x4b,
	0xb1, 0x19, 0xfc, 0x72, 0x21, 0xf3, 0x1d, 0x79, 0x9d, 0x61, 0x5c, 0xec, 0xff, 0x27, 0x3c, 0x29,
	0xcb, 0x70, 0xa0, 0xd2, 0x10, 0x07, 0xba, 0x03, 0x0d, 0x12, 0x60, 0x9f, 0x40, 0x63, 0x01, 0xaa,
	0x48, 0xbf, 0x8d, 0x7b, 0xd0, 0x50, 0xb2, 0x66, 0x1b, 0xe1, 0x71, 0x1a, 0xae, 0xf1, 0x13, 0x05,
	0xd0, 0xf7, 0x06, 0xed, 0xa8, 0x13, 0xba, 0x6d, 0x27, 0xd9, 0xc2, 0xce, 0xc9, 0x45, 0x33, 0xfb,
	0x66, 0xe9, 0x1c, 0xc2, 0x0a, 0xb5, 0xce, 0x89, 0x4d, 0xa7, 0xe3, 0x78, 0xf1, 0x3f, 0x73, 0xad,
	0xfb, 0x23, 0xf4, 0x98, 0xe9, 0xbe, 0xd5, 0x66, 0x5f, 0xf3, 0xd8, 0x71, 0x3c, 0xab, 0xeb, 0x84,
	0x91, 0x70, 0xe5, 0x15, 0x0a, 0xf8, 0x42, 0x02, 0x25, 0x77, 0xde, 0xa7, 0xa6, 0x87, 0xff, 0x69,
	0xbe, 0xb5, 0x89, 0x5f, 0x17, 0x42, 0x40, 0x95, 0x1c, 0x44, 0xad, 0x36, 0xcb, 0x70, 0xcf, 0x4f,
	0x93, 0xe1, 0xb0, 0x5a, 0xc5, 0xa6, 0xff, 0xfa, 0x06, 0x40, 0xd4, 0x09, 0x1d, 0x47, 0x54, 0xce,
	0xf3, 0x53, 0xdc, 0x38, 0xf5, 0xf6, 0xa8, 0x34, 0xa2, 0xa8, 0x47, 0xf2, 0xa7, 0xf1, 0xae, 0x30,
	0x4f, 0xcb, 0xf4, 0x64, 0x71, 0x7f, 0x38, 0x9c, 0x9e, 0xf1, 0x77, 0x4b, 0x50, 0x11, 0x4d, 0x9a,
	0xf9, 0xd1, 0xed, 0xcb, 0xb8, 0xd1, 0xb6, 0xdb, 0xc9, 0x3e, 0xcd, 0x29, 0x11, 0x9c, 0xdf, 0x6e,
	0x05, 0xbe, 0xeb, 0x49, 0x95, 0xa7, 0x16, 0x3a, 0x36, 0x39, 0xa0, 0xa0, 0x36, 0xd4, 0x71, 0xe3,
	0xd3, 0x34, 0x34, 0x43, 0x05, 0x93, 0xc2, 0xb7, 0xd6, 0x8d, 0x50, 0xc2, 0xe0, 0x1b, 0x6e, 0x65,
	0xb3, 0xea, 0x46, 0xbb, 0x98, 0xd4, 0xbf, 0x03, 0xca, 0x02, 0x5e, 0xcd, 0x09, 0x4e, 0x4f, 0xc5,
	0x4d, 0x51, 0x58, 0x7f, 0x0e, 0x80, 0xaf, 0x26, 0xec, 0x5b, 0x6d, 0x7e, 0x21, 0x43, 0x81, 0x64,
	0x83, 0xd7, 0xd7, 0x87, 0x82, 0xd7, 0x5f, 0x86, 0x8a, 0xe5, 0x75, 0x8e, 0xfc, 0x90, 0xf7, 0x56,
	0x4e, 0x21, 0xef, 0xa5, 0x38, 0x02, 0x1e, 0xea, 0x0d, 0x4e, 0x14, 0xb3, 0x2a, 0xdd, 0x94, 0xc0,
	0x7d, 0x27, 0x8a, 0x93, 0xa3, 0xed, 0x66, 0xce, 0xd1, 0x36, 0xe9, 0xa1, 0xa9, 0xa2, 0xf8, 0x2e,
	0x54, 0xe9, 0xee, 0xf8, 0x20, 0x60, 0xc5, 0x3a, 0x9f, 0x78, 0xb0, 0xfc, 0x41, 0x30, 0x2a, 0xa4,
	0xb1, 0x4a, 0xad, 0x0a, 0x69, 0xeb, 0x50, 0x16, 0xa3, 0x39, 0xbb, 0x0a, 0x38, 0x7a, 0xc7, 0x2a,
	0x86, 0xa5, 0x3d, 0xda, 0x45, 0x67, 0x39, 0x01, 0x79, 0x6a, 0xab, 0xec, 0x87, 0x0b, 0xb0, 0x9c,
	0xfd, 0xac, 0x70, 0x1a, 0xcf, 0x1c, 0x1e, 0xbd, 0x94, 0x83, 0x9a, 0x64, 0x66, 0xde, 0x1c, 0xde,
	0x57, 0xb5, 0xa5, 0x59, 0x8e, 0x2c, 0x94, 0xa0, 0x56, 0x3b, 0xa9, 0x81, 0xde, 0x8a, 0xc8, 0x73,
	0x95, 0x84, 0x30, 0x3e, 0xa6, 0x97, 0x2e, 0xe3, 0x4e, 0xd4, 0x11, 0x27, 0xf4, 0x99, 0xfc, 0x5b,
	0xc9, 0x15, 0x0b, 0xce, 0xbf, 0x65, 0xfc, 0xc9, 0x02, 0x40, 0xda, 0xc0, 0x73, 0x32, 0xd5, 0x71,
	0xd6, 0xd3, 0xcb, 0x50, 0xf1, 0xbd, 0xe4, 0x89, 0xd0, 0x92, 0xc9, 0xa9, 0xd1, 0x57, 0x22, 0x8d,
	0x7f, 0x19, 0xf9, 0x3c, 0x0d, 0x73, 0xe2, 0x1c, 0xcb, 0xb7, 0x46, 0x7a, 0xec, 0x0d, 0x56, 0xcc,
	0x28, 0x7d, 0x45, 0x86, 0x78, 0xdd, 0xa7, 0xc7, 0xcd, 0xbf, 0x0b, 0x2e, 0x8e, 0x34, 0xe1, 0x7c,
	0x93, 0x6d, 0xfc, 0x83, 0x12, 0xac, 0x48, 0x0f, 0xbe, 0x3d, 0xbe, 0x4c, 0x35, 0xfb, 0xf1, 0xef,
	0x8b, 0xc9, 0x21, 0x17, 0xd2, 0xb4, 0x90, 0x43, 0xea, 0xf2, 0xf8, 0xea, 0x63, 0x04, 0x7d, 0xe6,
	0xaf, 0x99, 0xa9, 0x27, 0xc4, 0xe5, 0x49, 0x27, 0xc4, 0x95, 0xf1, 0x27, 0xc4, 0xd5, 0xb1, 0x27,
	0xc4, 0xb5, 0x31, 0x27, 0xc4, 0xf5, 0xf1, 0x27, 0xc4, 0x30, 0x74, 0x42, 0xbc, 0x08, 0x45, 0x37,
	0x60, 0x2e, 0x58, 0x74, 0x03, 0xfd, 0x2b, 0x50, 0xf3, 0x9c, 0xb8, 0xa5, 0xf0, 0xbf, 0x97, 0xa7,
	0xbc, 0x25, 0x12, 0x9f, 0xf8, 0x21, 0xc5, 0xc5, 0x30, 0xab, 0x9e, 0x23, 0xee, 0xe3, 0xbd, 0x0b,
	0xd5, 0xf8, 0x30, 0x0d, 0xf4, 0xbc, 0x38, 0x85, 0x0b, 0xee, 0xdf, 0xa5, 0xaa, 0x95, 0xf8, 0x90,
	0x68, 0xe7, 0x57, 0x44, 0x1c, 0x89, 0x71, 0x13, 0x8d, 0x24, 0xb4, 0x9f, 0x25, 0xa1, 0x0f, 0xa7,
	0x6e, 0xae, 0xe3, 0x71, 0xfc, 0x3e, 0x9c, 0x38, 0xff, 0x7c, 0x01, 0x2e, 0xc8, 0x8b, 0x9c, 0x6b,
	0x1d, 0xba, 0x59, 0xf1, 0x14, 0xa4, 0xaf, 0xf4, 0x76, 0x07, 0xbb, 0x3d, 0xf3, 0xed, 0x8e, 0xcc,
	0x3a, 0x9e, 0x3f, 0xc7, 0x3a, 0xfe, 0x57, 0x0b, 0x70, 0x69, 0xb4, 0xd9, 0x38, 0x0d, 0xb7, 0xb3,
	0xd3, 0xf0, 0x46, 0xee, 0xf5, 0x55, 0xae, 0xae, 0xf2, 0xef, 0x29, 0x97, 0x7e, 0x26, 0xf4, 0xcc,
	0xf8, 0xbf, 0x46, 0xc7, 0x91, 0x18, 0xee, 0x39, 0x3c, 0xe4, 0x78, 0xa1, 0x14, 0xd3, 0x85, 0x32,
	0xea, 0x6a, 0xad, 0x7a, 0xcc, 0xcd, 0x9f, 0xfd, 0xda, 0xec, 0xd0, 0xee, 0x52, 0xce, 0xd9, 0x5d,
	0x2a, 0xc3, 0xbb, 0x8b, 0x4a, 0x3d, 0x33, 0x1b, 0x62, 0x7f, 0xff, 0xa9, 0xe7, 0xd7, 0x15, 0xea,
	0xc9, 0x5a, 0x48, 0x3f, 0xc8, 0x52, 0xcf, 0x2b, 0xb9, 0xd4, 0xa3, 0xea, 0x84, 0xd9, 0x3b, 0x4d,
	0xa5, 0x59, 0xee, 0x34, 0x3d, 0x75, 0x97, 0x8c, 0x7f, 0x5c, 0x80, 0xa6, 0xda, 0xb6, 0x27, 0xf5,
	0x83, 0xfc, 0xae, 0xb1, 0x7e, 0x90, 0xf9, 0xab, 0x69, 0xb2, 0x3f, 0x64, 0x82, 0x92, 0x6b, 0xb1,
	0x31, 0x71, 0x36, 0x94, 0x3c, 0x4b, 0x12, 0x25, 0x27, 0xb3, 0x2e, 0x96, 0xff, 0xa8, 0x94, 0x12,
	0xe3, 0x93, 0xba, 0x5a, 0xde, 0x00, 0x4d, 0xb8, 0xec, 0x89, 0x97, 0x66, 0x49, 0xdf, 0x2e, 0x29,
	0x1e, 0x7b, 0x26, 0x85, 0x8c, 0x42, 0xcd, 0xfb, 0x36, 0x2f, 0x0d, 0x76, 0xc7, 0x9c, 0x9f, 0xd9,
	0x87, 0x8c, 0x96, 0x8f, 0xf0, 0xc4, 0xcc, 0x5b, 0x7e, 0x99, 0x6f, 0xdc, 0xca, 0x7d, 0x24, 0x79,
	0xcc, 0x37, 0x6e, 0x0d, 0x2f, 0xe1, 0xea, 0xd0, 0x12, 0x56, 0x02, 0xd3, 0xd5, 0xd4, 0xc0, 0x74,
	0xc9, 0xe3, 0x7e, 0xf1, 0x51, 0xe8, 0x38, 0xac, 0x6c, 0x29, 0x8f, 0xfb, 0xa5, 0x3e, 0xff, 0x92,
	0x2b, 0x41, 0xca, 0x95, 0xd8, 0x1b, 0xb4, 0x91, 0xb9, 0x24, 0x82, 0xbc, 0xac, 0x99, 0xf2, 0x32,
	0xa9, 0x24, 0x2e, 0x28, 0x07, 0x63, 0xd9, 0xeb, 0x91, 0x8b, 0x1c, 0x63, 0x27, 0xb9, 0x1e, 0xa9,
	0x41, 0xa9, 0xe3, 0xda, 0x64, 0x94, 0x2b, 0x99, 0xf8, 0xd3, 0xf8, 0xaf, 0x87, 0xa6, 0x9c, 0xe9,
	0xe2, 0x4c, 0x53, 0xfe, 0x26, 0x5c, 0xcc, 0x4c, 0xb9, 0x1f, 0xa8, 0xd3, 0xbe, 0xac, 0x4c, 0xbb,
	0x1f, 0xfc, 0x0b, 0x31, 0xf3, 0x23, 0x21, 0xdd, 0x87, 0xe6, 0x05, 0xc6, 0xcc, 0x4b, 0x3f, 0x9d,
	0x6e, 0x9c, 0xdc, 0xeb, 0x7c, 0x9f, 0x8e, 0x66, 0x58, 0x9c, 0xf2, 0xd2, 0x25, 0x39, 0x79, 0xca,
	0x13, 0xba, 0x36, 0x5b, 0x68, 0xf1, 0xa7, 0x71, 0x92, 0x1c, 0x77, 0xd0, 0xc9, 0x65, 0xee, 0x0e,
	0xf2, 0xd4, 0x34, 0xbf, 0x37, 0xe4, 0x91, 0xad, 0xfc, 0x30, 0xee, 0x01, 0xca, 0x81, 0x6a, 0x41,
	0x3d, 0x50, 0x35, 0xfe, 0x87, 0x62, 0x52, 0xbc, 0xd3, 0xb7, 0xef, 0x3a, 0x8e, 0xfd, 0xcf, 0xc3,
	0xa1, 0xe3, 0x65, 0xa8, 0x44, 0x9d, 0xd0, 0xef, 0xf5, 0xd8, 0x2c, 0xc2, 0x29, 0x24, 0x1f, 0x7a,
	0x82, 0x90, 0x83, 0x82, 0x31, 0xf9, 0x20, 0x88, 0x5e, 0xac, 0xcb, 0x4e, 0x42, 0xed, 0x1c, 0x93,
	0xf0, 0xbf, 0x14, 0xe0, 0xc2, 0xf0, 0xb0, 0x7e, 0x0b, 0x4e, 0x2b, 0xf5, 0xdb, 0x50, 0xa7, 0x07,
	0xcd, 0x5b, 0x6d, 0x4b, 0xc6, 0x99, 0x9f, 0xbc, 0xbf, 0xd3, 0x33, 0xe7, 0xb7, 0x2d, 0xbe, 0xe0,
	0xd9, 0xe5, 0x54, 0x66, 0x2b, 0x9f, 0x1f, 0x91, 0x0c, 0xf9, 0x55, 0x52, 0xe1, 0xe8, 0xc5, 0x29,
	0xe3, 0x2f, 0x15, 0xa0, 0xa9, 0x62, 0xa3, 0xd7, 0xe3, 0x8f, 0x38, 0xf0, 0x57, 0xd9, 0xa4, 0xdf,
	0x63, 0xbd, 0x39, 0x51, 0x2d, 0xf2, 0x23, 0x37, 0xb9, 0x0d, 0x51, 0x36, 0x93, 0xf4, 0xd8, 0xc3,
	0xaa, 0xeb, 0x50, 0x27, 0x2b, 0x8d, 0x32, 0xc3, 0x74, 0x76, 0xbf, 0x8b, 0xc8, 0x5e, 0x62, 0x13,
	0x4e, 0x82, 0x51, 0x4c, 0x76, 0x93, 0x0a, 0x30, 0xcc, 0x38, 0x86, 0x45, 0xc5, 0x1f, 0xe4, 0xb3,
	0x5b, 0x86, 0xbb, 0xa0, 0x65, 0xbe, 0x2b, 0x62, 0x9e, 0xcc, 0x2b, 0x0e, 0xa4, 0xb3, 0x3b, 0xb0,
	0x50, 0x2d, 0xe3, 0xdf, 0x2d, 0xc0, 0xd2, 0x50, 0xce, 0x84, 0x4d, 0xe1, 0x4b, 0x43, 0x41, 0x1f,
	0xcf, 0xe4, 0x87, 0xa0, 0xbf, 0xcf, 0x67, 0xab, 0xa5, 0xfc, 0x98, 0x59, 0x6e, 0x07, 0xc9, 0x9b,
	0x62, 0xd6, 0x51, 0x1d, 0xe3, 0x1f, 0x16, 0x28, 0x5c, 0x56, 0x0a, 0x3f, 0x87, 0x43, 0xe2, 0xc8,
	0xfb, 0xfe, 0x4a, 0xbf, 0xe6, 0x9f, 0xa0, 0x5f, 0xf2, 0xec, 0x4f, 0x6e, 0x4d, 0x74, 0xf6, 0xf7,
	0x96, 0x72, 0x52, 0x58, 0x51, 0x4f, 0x0a, 0x9f, 0x87, 0x86, 0x20, 0xf6, 0x16, 0x3f, 0x1f, 0x49,
	0x12, 0xbd, 0x00, 0x6d, 0x38, 0x51, 0xc7, 0xf8, 0xd1, 0x02, 0x34, 0xa9, 0xab, 0x32, 0x10, 0xc2,
	0x54, 0xba, 0x9a, 0x14, 0x1b, 0xe0, 0xa9, 0x59, 0x81, 0x28, 0x62, 0x6c, 0xda, 0x1c, 0xc1, 0x6c,
	0x32, 0x82, 0xbf, 0x31, 0x7d, 0x26, 0x55, 0xa9, 0x7f, 0x66, 0x65, 0x31, 0xed, 0xc8, 0x0e, 0x68,
	0x9d, 0xd0, 0xc1, 0xf1, 0x12, 0x73, 0xda, 0x8e, 0xe5, 0x2c, 0xbd, 0x34, 0xfd, 0x9a, 0x8c, 0x38,
	0x49, 0x5e, 0x14, 0x95, 0x85, 0xdf, 0x65, 0xec, 0x21, 0x03, 0xad, 0x3f, 0x0d, 0xaf, 0xd6, 0x51,
	0x22, 0x1a, 0xc7, 0x66, 0x52, 0x1a, 0x28, 0xab, 0x34, 0x70, 0x9d, 0x45, 0x71, 0x7e, 0x7e, 0x54,
	0x3c, 0x99, 0x8b, 0x22, 0x19, 0xd6, 0xf9, 0x20, 0x21, 0xc6, 0xea, 0xec, 0xdd, 0x94, 0xbe, 0x3e,
	0x3f, 0x00, 0x97, 0xc4, 0x64, 0xee, 0x58, 0xb1, 0x33, 0x3d, 0xce, 0x48, 0x46, 0x2c, 0x79, 0x6a,
	0xec, 0x69, 0x1f, 0xae, 0x8c, 0x6b, 0xc0, 0xf9, 0x22, 0x8b, 0x18, 0x3f, 0x97, 0xf8, 0x8b, 0xe1,
	0x96, 0xd7, 0xb6, 0x3a, 0x8f, 0xb0, 0x4f, 0x6b, 0x50, 0x46, 0x06, 0x26, 0xe9, 0x30, 0xcf, 0x81,
	0x44, 0x56, 0x65, 0xeb, 0x05, 0xd6, 0x4c, 0xae, 0x19, 0xf3, 0x5e, 0x42, 0x01, 0x40, 0x9e, 0xe2,
	0x71, 0x98, 0x3e, 0xfa, 0xe5, 0xcc, 0xf3, 0x69, 0x85, 0xec, 0xf3, 0x69, 0x97, 0xa0, 0x82, 0x59,
	0x89, 0x21, 0xa3, 0xdc, 0x76, 0x3f, 0x95, 0x51, 0x51, 0x27, 0x9d, 0x9f, 0xa6, 0x92, 0xe9, 0x7c,
	0x26, 0x58, 0xf6, 0x9b, 0x52, 0x50, 0x48, 0x47, 0x0c, 0x27, 0x61, 0x05, 0xaa, 0xf2, 0xa8, 0x9a,
	0x8f, 0x08, 0x38, 0x69, 0xfc, 0xef, 0x05, 0xd9, 0xdc, 0xdb, 0x6e, 0xaf, 0x77, 0xdb, 0xe7, 0xe0,
	0xa2, 0x53, 0xb9, 0xcf, 0x8b, 0xd0, 0x64, 0x6f, 0x79, 0x0a, 0x18, 0x21, 0xbd, 0x88, 0x19, 0xb6,
	0xee, 0xdb, 0xdf, 0x02, 0xb1, 0xed, 0xa9, 0x59, 0x36, 0x3c, 0xb8, 0x96, 0xf6, 0xb7, 0x8d, 0xfd,
	0xdd, 0xe2, 0x93, 0x23, 0x36, 0xb5, 0xf7, 0xd3, 0x6b, 0xac, 0x2c, 0xa8, 0xa7, 0x23, 0x51, 0xcc,
	0x19, 0x89, 0xd2, 0xc8, 0x48, 0x18, 0x7f, 0xad, 0x04, 0x17, 0x47, 0x06, 0x18, 0xe7, 0x64, 0xa2,
	0x83, 0xfe, 0x91, 0xd3, 0xcb, 0x38, 0xe8, 0x63, 0xfa, 0x20, 0x74, 0x87, 0xad, 0x42, 0xa5, 0x11,
	0xab, 0xd0, 0xb3, 0x00, 0x64, 0x40, 0x4e, 0x45, 0xdb, 0x92, 0x59, 0x27, 0x08, 0x89, 0xb6, 0xc3,
	0x8d, 0x2d, 0x8f, 0x4e, 0x9b, 0x5c, 0xac, 0x95, 0xb3, 0xd8, 0x76, 0x84, 0x44, 0x79, 0x1d, 0x44,
	0xb4, 0x26, 0x6a, 0x39, 0xbb, 0xe3, 0x13, 0x80, 0x9b, 0xde, 0x76, 0x3d, 0xbb, 0xa5, 0xf8, 0xee,
	0x96, 0x4d, 0x40, 0x90, 0xf0, 0x8c, 0xc4, 0xb6, 0xf1, 0xfe, 0x28, 0xc4, 0x52, 0xa1, 0x5a, 0xf1,
	0x9e, 0x29, 0xce, 0x79, 0x32, 0x13, 0x01, 0x43, 0x13, 0xb1, 0x07, 0x0b, 0xf4, 0x2a, 0x47, 0x10,
	0xfa, 0xdd, 0xd0, 0x89, 0x22, 0xf6, 0xb9, 0xb9, 0x99, 0xcb, 0x1c, 0xac, 0x78, 0x10, 0x3a, 0xbb,
	0x5c, 0xcb, 0xa4, 0xa7, 0x3d, 0x64, 0xca, 0xf8, 0xb5, 0x82, 0xe4, 0xab, 0x43, 0xe5, 0x50, 0x56,
	0x94, 0x5f, 0x6a, 0x1d, 0x0e, 0x7a, 0x3d, 0x26, 0x98, 0xa6, 0x04, 0xde, 0x1d, 0xf4, 0x7a, 0xfa,
	0xe7, 0x60, 0x39, 0x29, 0x64, 0x75, 0x8e, 0x5c, 0xe7, 0xd8, 0x91, 0x14, 0xa4, 0xc9, 0x8c, 0x35,
	0x86, 0x13, 0xa7, 0x26, 0x55, 0x54, 0x71, 0xbb, 0x12, 0x9a, 0x28, 0x91, 0x45, 0x2a, 0x6d, 0xcc,
	0xab, 0xd2, 0xc6, 0x77, 0x42, 0x09, 0x77, 0xc6, 0xf2, 0x19, 0xe4, 0x17, 0xac, 0x60, 0xfc, 0x50,
	0x11, 0x2e, 0x27, 0x9e, 0x68, 0x42, 0xbc, 0x9a, 0x49, 0x59, 0x9b, 0x24, 0x77, 0x7c, 0xd6, 0x5a,
	0x5a, 0x86, 0x1b, 0x94, 0xcf, 0xc1, 0x0d, 0x7e, 0xab, 0x00, 0x2b, 0x63, 0x07, 0xe2, 0x5b, 0xa1,
	0x5e, 0x4d, 0xb1, 0x72, 0x4e, 0x0a, 0x55, 0x75, 0x17, 0x9a, 0xdf, 0xf4, 0x5d, 0xaf, 0x65, 0xbb,
	0x51, 0x67, 0x10, 0x49, 0x67, 0xce, 0x99, 0x84, 0x83, 0x06, 0x56, 0xdc, 0x10, 0xf5, 0x8c, 0x97,
	0x41, 0x93, 0x51, 0x92, 0x77, 0xac, 0x58, 0x9c, 0x1b, 0xb3, 0xb1, 0xa8, 0x90, 0x1a, 0x8b, 0xbe,
	0x01, 0x17, 0xef, 0x3a, 0x71, 0xe7, 0x68, 0xdf, 0x6a, 0xef, 0x39, 0x71, 0xec, 0x7a, 0x5d, 0x31,
	0x10, 0x9b, 0x43, 0x51, 0x4c, 0xbf, 0x30, 0xf1, 0xfb, 0x89, 0xbb, 0xa6, 0xd5, 0xde, 0x23, 0x04,
	0x43, 0x41, 0xb6, 0x5b, 0x70, 0xe1, 0x40, 0xac, 0x69, 0xe5, 0x13, 0x9f, 0x3c, 0xc5, 0x0f, 0x98,
	0xd2, 0x50, 0x32, 0xa3, 0x86, 0xc6, 0x67, 0xab, 0xc5, 0x11, 0x87, 0xda, 0x52, 0xe2, 0x50, 0x6b,
	0xfc, 0x4c, 0xea, 0xb7, 0xae, 0xa8, 0x5f, 0x93, 0x94, 0x25, 0xf5, 0x7a, 0xdb, 0xf4, 0x0b, 0xc0,
	0xbc, 0x2d, 0x84, 0xae, 0x73, 0xc8, 0x74, 0x73, 0x3e, 0x97, 0xef, 0x3f, 0x51, 0x80, 0xa5, 0x21,
	0xbc, 0xe7, 0x3c, 0x67, 0x18, 0xbe, 0xde, 0x30, 0x3f, 0x7a, 0xbd, 0x61, 0xf4, 0x14, 0xfb, 0x7f,
	0x4e, 0x44, 0x8a, 0xcc, 0x29, 0xf6, 0xd4, 0x96, 0x5c, 0x81, 0x2a, 0x79, 0xc0, 0x7a, 0xbe, 0x3c,
	0x19, 0xc0, 0xe4, 0x7d, 0xff, 0xe9, 0x73, 0x96, 0x0f, 0x59, 0xf6, 0x9b, 0x51, 0x86, 0x10, 0x5e,
	0xdb, 0xc8, 0x39, 0x38, 0x1c, 0xcd, 0x37, 0xe5, 0x76, 0x3e, 0x74, 0x3e, 0xfe, 0xc5, 0xac, 0x7a,
	0x34, 0xbb, 0x9f, 0xdc, 0x64, 0xed, 0xc8, 0xf8, 0xab, 0x05, 0xf9, 0x31, 0x49, 0xf6, 0xd1, 0x79,
	0x5d, 0x9d, 0xb3, 0xde, 0xca, 0xc5, 0x73, 0x7b, 0x2b, 0x97, 0xb2, 0xde, 0xca, 0xc6, 0x8f, 0x15,
	0xe5, 0xe4, 0x2b, 0x4d, 0xfe, 0x03, 0xe9, 0xf5, 0x9e, 0x71, 0x56, 0xaf, 0x9c, 0xc7, 0x59, 0xfd,
	0x0b, 0x92, 0x7d, 0xd0, 0x11, 0x35, 0x3b, 0xca, 0x4d, 0x1b, 0x11, 0xe3, 0x0f, 0xcb, 0x41, 0x4c,
	0x6b, 0x44, 0x81, 0x7e, 0x0f, 0x84, 0xef, 0xa3, 0xfa, 0xd0, 0xf7, 0x8d, 0x9c, 0x26, 0x09, 0x04,
	0x14, 0x7d, 0xd6, 0x91, 0x3f, 0x8d, 0x1f, 0x49, 0xec, 0x89, 0x19, 0x77, 0x58, 0xf2, 0xca, 0x49,
	0x58, 0xda, 0x34, 0xee, 0xb3, 0x93, 0x86, 0x66, 0x53, 0x82, 0x9f, 0xc9, 0x4b, 0xc8, 0x33, 0x9b,
	0x07, 0xa8, 0x82, 0xb1, 0x0b, 0x1a, 0x36, 0x23, 0x71, 0xbf, 0x3c, 0x37, 0xbd, 0x18, 0x5f, 0x07,
	0x7d, 0x08, 0x23, 0x2e, 0x9a, 0xf5, 0xc4, 0x0f, 0xa7, 0x30, 0xd3, 0x6c, 0x3e, 0xa0, 0xc2, 0x72,
	0x7f, 0x11, 0x55, 0x8d, 0xdf, 0x2b, 0x40, 0x7d, 0xbb, 0x1d, 0xed, 0xfa, 0x2e, 0x6f, 0xa1, 0x81,
	0xef, 0xf2, 0x0e, 0x80, 0x3f, 0x13, 0x7f, 0x78, 0xc1, 0xc5, 0xc4, 0x49, 0xe1, 0x24, 0x23, 0xc7,
	0x3a, 0x34, 0x39, 0x82, 0x91, 0xaa, 0xd6, 0xbc, 0x30, 0xe5, 0x78, 0x9a, 0x0a, 0x9b, 0x0d, 0xae,
	0x45, 0xda, 0x63, 0x4e, 0xf0, 0xdc, 0xa1, 0x65, 0x51, 0x39, 0xf7, 0xf1, 0xe9, 0xbf, 0x51, 0x80,
	0xa6, 0x18, 0x00, 0x7e, 0x01, 0x67, 0xb6, 0x31, 0x40, 0xfd, 0xd7, 0x8a, 0xc4, 0x8b, 0xe7, 0x25,
	0xf2, 0xe0, 0xa9, 0x62, 0x7a, 0x57, 0x1c, 0x45, 0x89, 0x43, 0xa7, 0x79, 0xe5, 0xbd, 0x64, 0x54,
	0x59, 0x2d, 0xdb, 0x26, 0x59, 0x9e, 0x5d, 0x6c, 0x38, 0x39, 0xfe, 0xc1, 0x66, 0xe3, 0x17, 0x0a,
	0xd0, 0x90, 0x13, 0x83, 0xb3, 0xad, 0xb2, 0xd5, 0xc2, 0x24, 0x61, 0x2b, 0x2b, 0xc5, 0x7e, 0x19,
	0x85, 0x6c, 0xec, 0x53, 0xae, 0xed, 0x5b, 0x1d, 0x00, 0x93, 0x2b, 0x25, 0xe2, 0xe2, 0xfc, 0x59,
	0xc5, 0x45, 0xe3, 0xc7, 0x8b, 0xb0, 0x80, 0x62, 0xe7, 0x5d, 0xb7, 0x17, 0x3b, 0x21, 0xdf, 0x5f,
	0xcd, 0x84, 0x6a, 0x96, 0x4d, 0xa4, 0x88, 0x87, 0x6d, 0xe9, 0x03, 0x1a, 0x5b, 0xed, 0xcf, 0xdc,
	0xf7, 0xe9, 0x5c, 0x41, 0x86, 0x9f, 0x05, 0xe8, 0x70, 0xcc, 0xc2, 0x30, 0x96, 0xcf, 0x59, 0x74,
	0x44, 0xcc, 0xc2, 0x30, 0x8d, 0x55, 0x5b, 0x4d, 0x43, 0xc2, 0x19, 0xff, 0x12, 0x2c, 0xa9, 0x43,
	0x83, 0x53, 0x3b, 0x69, 0x70, 0xa6, 0xd8, 0x19, 0xe5, 0xdc, 0x94, 0xce, 0x3c, 0x37, 0x6f, 0x49,
	0x56, 0xbc, 0xe3, 0x75, 0xd3, 0x40, 0xce, 0x53, 0xb9, 0xf7, 0x3f, 0x4a, 0xb6, 0x6d, 0xa5, 0xce,
	0x99, 0xa2, 0x94, 0x27, 0xb5, 0x55, 0x41, 0xe1, 0x35, 0x7a, 0x92, 0xb5, 0x75, 0xe4, 0x7a, 0x71,
	0xab, 0x6d, 0x85, 0x14, 0xb6, 0x8d, 0x03, 0xd8, 0xc5, 0x7e, 0xb0, 0xe9, 0x7a, 0xf1, 0x6d, 0x2b,
	0xdc, 0x89, 0xba, 0xfa, 0xdb, 0x70, 0x99, 0x6f, 0x64, 0x46, 0x83, 0x76, 0xdf, 0x8d, 0x45, 0x95,
	0x34, 0xca, 0xdb, 0x05, 0x91, 0xbb, 0x47, 0x99, 0x58, 0x0f, 0x2b, 0x65, 0x7a, 0x34, 0x3f, 0x9d,
	0xe3, 0x96, 0x47, 0x38, 0xee, 0x4f, 0xcd, 0xcb, 0x0b, 0x48, 0xdc, 0x68, 0x7d, 0x17, 0xc4, 0x75,
	0x88, 0x56, 0x46, 0xb0, 0xff, 0x7c, 0x7e, 0x97, 0xd7, 0xb0, 0x16, 0x73, 0xdd, 0x86, 0x95, 0x26,
	0x46, 0x6f, 0x5d, 0x14, 0x47, 0x6f, 0x5d, 0xa0, 0x66, 0x88, 0xa3, 0x75, 0x16, 0x33, 0x1e, 0xb7,
	0x58, 0x6c, 0xda, 0x2e, 0xff, 0xd2, 0x9f, 0x83, 0x46, 0xdf, 0xeb, 0x92, 0xdf, 0x84, 0xf2, 0xbc,
	0x44, 0x5f, 0x94, 0x15, 0x0f, 0xdc, 0xb9, 0x51, 0xcb, 0x76, 0x7a, 0xf2, 0x7d, 0x09, 0x37, 0xda,
	0x70, 0x7a, 0xfa, 0x36, 0x40, 0xdb, 0x8a, 0xdc, 0x8e, 0x1a, 0x28, 0xf5, 0x73, 0xf9, 0x0d, 0xb8,
	0x8d, 0x75, 0xb6, 0xbc, 0x43, 0x7f, 0x73, 0xce, 0xac, 0xb7, 0x65, 0x42, 0xff, 0x8a, 0x0c, 0x11,
	0x55, 0x9d, 0xe9, 0x66, 0x1a, 0x21, 0xb2, 0xbb, 0xf4, 0x52, 0xb3, 0x88, 0x14, 0x75, 0x1b, 0x2a,
	0x51, 0xcf, 0xef, 0x5a, 0xf2, 0xfd, 0xf2, 0x1b, 0xf9, 0x18, 0xf6, 0xa8, 0xfc, 0xe6, 0x9c, 0xc9,
	0x35, 0x51, 0xa5, 0xf9, 0x64, 0xe0, 0x7e, 0x9a, 0xfb, 0x9c, 0x71, 0x82, 0xe1, 0xbb, 0x06, 0xee,
	0xa7, 0x9b, 0x73, 0x26, 0xd5, 0x4a, 0x5e, 0xeb, 0xea, 0x2b, 0xeb, 0x28, 0xe9, 0xed, 0x39, 0xe5,
	0x42, 0x5c, 0xf0, 0x59, 0xd2, 0xae, 0x1e, 0x09, 0x72, 0x36, 0x1e, 0xc9, 0xeb, 0x2d, 0x72, 0x4c,
	0x26, 0xe8, 0x6b, 0xd7, 0xa1, 0x4e, 0x23, 0xa5, 0x5c, 0xdf, 0xad, 0x11, 0xe0, 0x20, 0xec, 0xe9,
	0xaf, 0xc2, 0xd2, 0x20, 0xe8, 0xf9, 0x96, 0x3d, 0xbc, 0x82, 0x16, 0x04, 0x98, 0xd7, 0x8e, 0xe1,
	0x48, 0xa5, 0x33, 0x19, 0xbe, 0x09, 0x5f, 0xbb, 0x9c, 0x4c, 0x07, 0xef, 0x3c, 0x3c, 0xc4, 0x2f,
	0xc3, 0xa2, 0xeb, 0x05, 0x83, 0x91, 0x95, 0xda, 0x24, 0xa8, 0xfc, 0xcc, 0xdf, 0x2a, 0x28, 0x8b,
	0x0c, 0x07, 0x79, 0xc2, 0x57, 0xd6, 0x81, 0x82, 0x4c, 0xf0, 0xdd, 0x9a, 0xb3, 0x1c, 0xda, 0xd5,
	0xb1, 0x9e, 0xb8, 0x4b, 0x73, 0x1d, 0xea, 0x96, 0x6d, 0x33, 0x0e, 0x7e, 0x94, 0xcb, 0xb2, 0x6d,
	0x91, 0xf9, 0x22, 0x34, 0x99, 0xb5, 0xa4, 0xf7, 0x77, 0xea, 0x66, 0x43, 0xc0, 0x44, 0x91, 0x67,
	0x01, 0x70, 0xfe, 0x39, 0x14, 0xb5, 0xb8, 0x69, 0x50, 0x47, 0x88, 0x88, 0xfc, 0xfd, 0xc7, 0x0a,
	0x0a, 0x3d, 0x08, 0x4e, 0x94, 0x2b, 0xf7, 0xed, 0xc0, 0x22, 0xbd, 0xb3, 0xe7, 0x3a, 0xc2, 0x9f,
	0x49, 0xde, 0x49, 0x9a, 0x95, 0x8f, 0x2e, 0xc8, 0xda, 0xe4, 0x2f, 0x6a, 0xbc, 0xa1, 0x70, 0x69,
	0xd9, 0x02, 0xa9, 0xd8, 0x93, 0xf1, 0xa6, 0xa0, 0xde, 0xe4, 0xfd, 0x73, 0x45, 0x29, 0x33, 0xf3,
	0xe0, 0xb3, 0xf8, 0x73, 0x05, 0xaa, 0xd4, 0xcf, 0xf4, 0xc5, 0x1b, 0x4c, 0x6e, 0x91, 0xcf, 0xee,
	0x27, 0x03, 0x27, 0x4a, 0x1e, 0x38, 0xa9, 0x9b, 0x49, 0x5a, 0x7f, 0x05, 0x16, 0x3b, 0x7e, 0x18,
	0x3a, 0x9d, 0xb8, 0x65, 0x79, 0xd1, 0x09, 0xbf, 0xea, 0x4e, 0xf1, 0x37, 0x09, 0xba, 0x46, 0x40,
	0x7d, 0x15, 0x96, 0x4f, 0x42, 0xdf, 0xeb, 0x72, 0xa1, 0x56, 0x22, 0x5e, 0xd4, 0xcd, 0x25, 0xca,
	0x10, 0xe5, 0xb6, 0xdd, 0x28, 0x1e, 0xe1, 0xb7, 0xe5, 0xa7, 0xcf, 0x6f, 0x2b, 0x63, 0x6e, 0xb9,
	0xfd, 0x52, 0x21, 0x39, 0xfa, 0x11, 0xc3, 0xf2, 0x20, 0x70, 0x42, 0x4b, 0x3c, 0x06, 0xb4, 0x01,
	0x15, 0x2b, 0x7d, 0x28, 0x73, 0x31, 0xf7, 0x6e, 0x1e, 0x63, 0x58, 0xa3, 0x3a, 0x26, 0xd7, 0x9d,
	0x6e, 0x80, 0xff, 0x88, 0x79, 0x53, 0x29, 0xc7, 0x95, 0x75, 0xcc, 0xcc, 0x09, 0xfe, 0x64, 0xfc,
	0x99, 0x02, 0x5c, 0x1d, 0xdf, 0x81, 0x89, 0xb4, 0x90, 0x7c, 0xb5, 0xf8, 0xa4, 0x5f, 0x4d, 0x56,
	0x87, 0x88, 0x5a, 0x54, 0x4a, 0x57, 0xc7, 0x3e, 0x02, 0x8c, 0xdf, 0x29, 0x80, 0xbe, 0xed, 0x74,
	0xad, 0xce, 0x29, 0x69, 0x4b, 0xd2, 0x36, 0xfb, 0xe4, 0x07, 0x97, 0x93, 0x54, 0x90, 0x0f, 0xd5,
	0x87, 0x59, 0xf2, 0xdc, 0x63, 0x93, 0x87, 0x4c, 0xd2, 0xb7, 0x5b, 0x6e, 0x23, 0x8b, 0x0e, 0xed,
	0xd6, 0x21, 0x89, 0x67, 0xb9, 0x4f, 0x6b, 0x25, 0x18, 0x00, 0x6b, 0x09, 0x99, 0xce, 0xf8, 0x8b,
	0x45, 0xb8, 0x38, 0xd2, 0xd9, 0xf3, 0xd9, 0x5f, 0x9f, 0xe0, 0xc4, 0x79, 0x0f, 0x2e, 0x46, 0x83,
	0x20, 0xf0, 0xc3, 0xd8, 0xb1, 0xb3, 0x2f, 0xb2, 0xcc, 0xf8, 0xba, 0x8b, 0x9e, 0x54, 0x4f, 0x5f,
	0x6d, 0xd9, 0x81, 0x65, 0x7a, 0x91, 0x52, 0x19, 0x23, 0x5c, 0x99, 0x33, 0x62, 0x5c, 0xc2, 0xba,
	0xeb, 0xc9, 0x40, 0x45, 0xab, 0x6f, 0x42, 0x95, 0x75, 0x40, 0x7d, 0x09, 0xa4, 0x16, 0xd8, 0xf2,
	0x9c, 0x13, 0x6d, 0x4e, 0xbf, 0x00, 0x4b, 0x12, 0xc0, 0xe1, 0x8c, 0xb5, 0xc2, 0xea, 0xef, 0x8a,
	0x97, 0x60, 0x10, 0x33, 0x4d, 0x57, 0x53, 0x3c, 0x9f, 0xe0, 0xf9, 0x9e, 0xa3, 0xcd, 0xe9, 0x0d,
	0xa8, 0x1e, 0xfa, 0xe1, 0x89, 0x15, 0xda, 0x5a, 0x41, 0xaf, 0x40, 0xd1, 0x3a, 0xd6, 0x8a, 0x7a,
	0x15, 0x4a, 0x41, 0xb7, 0xa3, 0x95, 0x30, 0xb7, 0xe3, 0x0f, 0xc2, 0xc8, 0x89, 0xb4, 0x79, 0xbd,
	0x06, 0xf3, 0x87, 0x7e, 0xcf, 0xd6, 0xca, 0xf8, 0xeb, 0xc4, 0x0f, 0x6d, 0xad, 0x82, 0xbf, 0xec,
	0xd0, 0x3a, 0xd1, 0xaa, 0x58, 0xd4, 0x0a, 0x63, 0xb7, 0xd3, 0x73, 0xb4, 0x9a, 0x5e, 0x87, 0x72,
	0x7f, 0x10, 0xb9, 0x1d, 0xad, 0xae, 0x2f, 0x03, 0x05, 0x14, 0xf6, 0x3d, 0x8e, 0xb5, 0xa2, 0x01,
	0x36, 0x93, 0x41, 0xc7, 0x0e, 0x56, 0xb1, 0x7a, 0x5a, 0x03, 0x31, 0xf5, 0xdc, 0x63, 0x47, 0x6b,
	0xea, 0x0b, 0x50, 0xef, 0x3b, 0xb6, 0x6b, 0xe1, 0x2c, 0x6a, 0x0b, 0xba, 0x8e, 0x7c, 0x92, 0xda,
	0xd0, 0x8a, 0xe8, 0x80, 0x53, 0x5b, 0xa4, 0x86, 0xda, 0xda, 0x92, 0x0e, 0x50, 0xb1, 0x82, 0xa0,
	0xe7, 0xc4, 0x9a, 0xa6, 0x6b, 0xb4, 0x1f, 0xa1, 0xb2, 0x4f, 0x11, 0x6c, 0xb5, 0x65, 0x44, 0x44,
	0xef, 0x42, 0x85, 0x9d, 0xbe, 0xad, 0xe9, 0x58, 0x58, 0x84, 0xa2, 0xd1, 0x2e, 0xe8, 0x8b, 0x00,
	0x83, 0x6e, 0x47, 0x22, 0xbc, 0xa8, 0x5f, 0x04, 0x4d, 0xad, 0x4c, 0xe3, 0x79, 0x09, 0xbb, 0x21,
	0x46, 0xf1, 0x32, 0x56, 0x10, 0x6b, 0x8b, 0x90, 0x5d, 0x91, 0x23, 0xd3, 0x1a, 0x04, 0xda, 0x0a,
	0x7e, 0x88, 0xc3, 0xc9, 0x38, 0xb1, 0x76, 0x15, 0x3f, 0x24, 0x0e, 0xb9, 0xb4, 0x6b, 0xab, 0xfb,
	0xb0, 0x70, 0xff, 0xee, 0xbe, 0x08, 0x94, 0xcb, 0x4f, 0x1c, 0xeb, 0xde, 0x61, 0xdc, 0xe2, 0x48,
	0xc4, 0x7c, 0x13, 0x4e, 0x9b, 0xd3, 0xaf, 0xc0, 0x05, 0x05, 0xde, 0xb7, 0x5c, 0xaf, 0x67, 0x79,
	0x5d, 0xad, 0x80, 0xfd, 0x57, 0x32, 0xba, 0x56, 0xac, 0x15, 0x19, 0xeb, 0xde, 0x91, 0x7f, 0xc2,
	0x7c, 0xfa, 0x22, 0x68, 0x58, 0x88, 0x7c, 0x51, 0x53, 0x9c, 0xd7, 0xe1, 0x4a, 0x02, 0xfd, 0xd4,
	0xf7, 0xfb, 0xae, 0xa7, 0xe0, 0xd5, 0xa0, 0x99, 0x64, 0xe2, 0x14, 0x16, 0x57, 0xbf, 0x04, 0xf5,
	0x6d, 0xf7, 0x98, 0x1f, 0x81, 0x92, 0x83, 0xc7, 0x74, 0x22, 0x93, 0x34, 0x47, 0x05, 0x9c, 0x55,
	0x31, 0xb4, 0x7e, 0x4c, 0x3e, 0xf2, 0x5a, 0x71, 0xf5, 0xcf, 0x95, 0xa0, 0xb6, 0xe1, 0x44, 0x82,
	0xc8, 0x74, 0x58, 0x14, 0x47, 0x59, 0xf4, 0x9e, 0x93, 0x40, 0x91, 0x81, 0xc5, 0xce, 0xe3, 0x58,
	0x74, 0x2e, 0x85, 0x59, 0x6e, 0xec, 0x68, 0x45, 0xfd, 0x12, 0x2c, 0xa7, 0xb0, 0x9e, 0x1f, 0xc7,
	0x4e, 0x78, 0xaa, 0x95, 0xb2, 0x45, 0x8f, 0xfd, 0xd8, 0xd1, 0xe6, 0x91, 0x92, 0x14, 0x94, 0x38,
	0x05, 0x5a, 0x39, 0x0b, 0xec, 0xfa, 0xbe, 0x1d, 0x69, 0x15, 0xec, 0x6d, 0x0a, 0x6c, 0x1f, 0x6b,
	0xd5, 0x2c, 0xc4, 0x3a, 0xd6, 0x6a, 0xd9, 0x8a, 0x4e, 0xdf, 0xff, 0xa6, 0xab, 0xd5, 0xb3, 0x9f,
	0x1d, 0x44, 0x4e, 0xa8, 0x41, 0xb6, 0x6a, 0xe7, 0x58, 0x6b, 0x64, 0x21, 0xc7, 0x1d, 0xad, 0x89,
	0x23, 0x94, 0x42, 0x4e, 0x9c, 0xb6, 0xb6, 0x80, 0x93, 0xa4, 0xb4, 0xd6, 0xf2, 0xdb, 0x96, 0xaf,
	0x2d, 0x66, 0x3f, 0xd0, 0xb7, 0xdc, 0x9e, 0xb6, 0xa4, 0xaf, 0xc0, 0xc5, 0x14, 0xe6, 0x77, 0x8f,
	0x25, 0xa1, 0x6a, 0x59, 0x1c, 0x98, 0xe3, 0x04, 0xda, 0xb2, 0x7e, 0x15, 0x2e, 0xa5, 0x50, 0xe5,
	0xa6, 0x94, 0xa6, 0xaf, 0xde, 0x86, 0xfa, 0x1d, 0xec, 0x0a, 0x4d, 0xcb, 0x22, 0x00, 0xf5, 0x4b,
	0x99, 0x55, 0x91, 0xc6, 0x75, 0x5d, 0x48, 0x93, 0x48, 0xfe, 0xc4, 0x06, 0x8e, 0xdd, 0x40, 0x2b,
	0xad, 0xfe, 0x64, 0x09, 0x96, 0x85, 0xb9, 0x4f, 0x65, 0x24, 0x17, 0x60, 0xa9, 0x6f, 0xf7, 0xc8,
	0xf3, 0x91, 0xad, 0x07, 0xda, 0x1c, 0xf2, 0x24, 0x09, 0x44, 0x16, 0x52, 0x40, 0xba, 0x96, 0x00,
	0x5a, 0x30, 0xdc, 0x93, 0x22, 0x2e, 0x84, 0x4c, 0x46, 0xdb, 0x8a, 0x3b, 0x47, 0x5a, 0x49, 0x45,
	0x2b, 0x39, 0xd3, 0x3c, 0x8e, 0xaf, 0x04, 0x12, 0xbf, 0x29, 0x67, 0xbf, 0x2e, 0xf8, 0x4e, 0x05,
	0x07, 0x5d, 0x02, 0x05, 0xff, 0xa9, 0xe2, 0xf0, 0xa6, 0x9f, 0x41, 0xa6, 0xa3, 0xd5, 0x54, 0x6c,
	0x44, 0xcf, 0x75, 0xa4, 0xb9, 0xa4, 0x62, 0xc2, 0x7b, 0x40, 0xad, 0xcc, 0x7c, 0xa6, 0x81, 0x73,
	0x23, 0x61, 0x19, 0x7e, 0xd3, 0x54, 0x91, 0xa4, 0x7c, 0x67, 0x41, 0xed, 0xa8, 0xc2, 0x73, 0x16,
	0xf5, 0x67, 0x60, 0x65, 0x1c, 0x22, 0x1a, 0xfc, 0x25, 0xb5, 0x7f, 0x92, 0xd1, 0x68, 0xea, 0x17,
	0x52, 0x86, 0xb3, 0xbc, 0xda, 0x85, 0xfa, 0x0e, 0xb6, 0x9a, 0xa6, 0x65, 0x19, 0x16, 0x92, 0xc4,
	0x7d, 0x31, 0xcd, 0x1a, 0x34, 0x13, 0xd0, 0xc1, 0xbd, 0x75, 0xb1, 0xf8, 0x13, 0xc8, 0xee, 0xbd,
	0x75, 0xad, 0x98, 0xa9, 0x86, 0x5c, 0x40, 0x2b, 0x65, 0x0a, 0x3d, 0x5c, 0xdf, 0xd3, 0xe6, 0x57,
	0xdf, 0x86, 0x06, 0x07, 0x81, 0xe0, 0xe7, 0x76, 0x9a, 0x49, 0x40, 0x89, 0x64, 0x8d, 0x4b, 0x48,
	0xe8, 0x74, 0xac, 0x5e, 0x4f, 0x2b, 0xac, 0x7e, 0x13, 0xea, 0x0f, 0x5d, 0xdb, 0xf1, 0x25, 0xfb,
	0x3b, 0xc6, 0x04, 0xaf, 0x4e, 0xc7, 0x73, 0x42, 0xab, 0xa7, 0xcd, 0x0d, 0xc1, 0x79, 0x27, 0x14,
	0xe4, 0xa3, 0xc0, 0x83, 0x9e, 0x75, 0xda, 0xb6, 0x3a, 0x8f, 0xb4, 0x22, 0x2e, 0x04, 0x25, 0x43,
	0xb0, 0xe9, 0xd2, 0xea, 0xcf, 0x14, 0xa0, 0x49, 0x1f, 0xdb, 0x1b, 0xb4, 0xf9, 0xa5, 0x67, 0x4d,
	0x4d, 0xf3, 0x80, 0x5c, 0x81, 0x0b, 0x2a, 0xf4, 0xb6, 0xe5, 0x75, 0x07, 0x7d, 0x57, 0x2b, 0xe0,
	0x00, 0xab, 0x19, 0x3b, 0xfe, 0xb1, 0x8b, 0x2c, 0xe9, 0x3a, 0x5c, 0x51, 0xc1, 0x1b, 0x7e, 0x67,
	0xd0, 0x77, 0xbc, 0xd8, 0x22, 0xc6, 0xb4, 0x02, 0x17, 0xb3, 0x99, 0x7d, 0x94, 0xf0, 0x3b, 0xda,
	0xfc, 0x70, 0xce, 0xbe, 0xd3, 0x73, 0xb0, 0x07, 0x5a, 0x79, 0xf5, 0xa7, 0x0b, 0xb0, 0xbc, 0x63,
	0xf7, 0x36, 0x4e, 0xbd, 0x8d, 0xd0, 0x3a, 0xd9, 0xb7, 0xba, 0xec, 0x05, 0x24, 0xa6, 0x37, 0xb4,
	0x4e, 0x5a, 0xb1, 0xd5, 0x95, 0x83, 0x2a, 0x97, 0x90, 0x04, 0x33, 0x1d, 0x17, 0x12, 0xca, 0x92,
	0x19, 0x82, 0xd9, 0x15, 0x47, 0xf0, 0x10, 0xdb, 0x2a, 0x8d, 0x14, 0x17, 0x0c, 0x73, 0x1e, 0xc7,
	0x28, 0x03, 0xef, 0xb5, 0x23, 0xad, 0xbc, 0xda, 0x06, 0x4d, 0xb4, 0x50, 0xbc, 0xb7, 0xbc, 0x2f,
	0xa2, 0x68, 0x5d, 0xc8, 0x2e, 0x26, 0xd9, 0xc4, 0xab, 0x70, 0x69, 0x28, 0x83, 0x77, 0xfb, 0x82,
	0x7e, 0x0d, 0x2e, 0x0f, 0x65, 0xf1, 0xae, 0xaf, 0x15, 0x57, 0xff, 0xad, 0x02, 0x5c, 0x13, 0x1f,
	0xd9, 0x53, 0x56, 0xc0, 0x7d, 0xe7, 0x84, 0x22, 0x22, 0xeb, 0xaf, 0xc1, 0x4b, 0x93, 0x56, 0x48,
	0x8b, 0x82, 0x25, 0xe3, 0xe7, 0x71, 0xa3, 0xcb, 0x2f, 0xc8, 0xfb, 0x56, 0x7e, 0x41, 0x5b, 0xec,
	0x85, 0x3f, 0x58, 0x84, 0xc5, 0xf4, 0xb1, 0x68, 0xc9, 0xef, 0xac, 0x04, 0xa2, 0xcc, 0x8d, 0x02,
	0x14, 0x44, 0x4a, 0x7c, 0xef, 0x2a, 0x5c, 0x1a, 0xce, 0x90, 0xd3, 0xb3, 0x02, 0x17, 0x87, 0xb3,
	0x68, 0x3f, 0x2b, 0xe1, 0x58, 0x0d, 0xe7, 0xf0, 0x64, 0xcf, 0x8f, 0xcb, 0x73, 0x22, 0x14, 0x36,
	0xb5, 0x32, 0xd2, 0xe7, 0x70, 0xde, 0x20, 0x10, 0xfc, 0xa7, 0x32, 0xae, 0x89, 0x83, 0x2e, 0xb2,
	0x46, 0x03, 0x9e, 0x1b, 0x57, 0x8b, 0xd6, 0xaf, 0xd8, 0xd5, 0x6b, 0xab, 0xef, 0x03, 0x6c, 0xf5,
	0xad, 0xae, 0x23, 0x26, 0xe4, 0x32, 0xe8, 0x96, 0x6d, 0xf3, 0x48, 0x25, 0xc2, 0xdb, 0x1c, 0x52,
	0x50, 0x0a, 0x97, 0x33, 0xbf, 0xfa, 0x2e, 0x2c, 0xac, 0xd9, 0xb6, 0x70, 0x45, 0xa0, 0x11, 0x6c,
	0x40, 0xb5, 0x1d, 0x2b, 0x92, 0x67, 0x3b, 0x6e, 0x7d, 0x73, 0xd0, 0x0f, 0xc4, 0xce, 0xd3, 0x8e,
	0x39, 0xa0, 0xa6, 0x56, 0x5c, 0x7d, 0x1f, 0x2e, 0x8f, 0x7f, 0xa9, 0x1b, 0xc5, 0xc4, 0xb4, 0xfe,
	0xc0, 0xeb, 0x1c, 0x39, 0x9d, 0x47, 0x5a, 0x01, 0x25, 0x35, 0xf1, 0xb3, 0xb8, 0xfa, 0x1e, 0x5c,
	0x1d, 0xae, 0xbb, 0xde, 0x73, 0xf9, 0xe1, 0xf7, 0x45, 0x80, 0x0e, 0x26, 0x64, 0x23, 0x9a, 0x50,
	0x13, 0xe9, 0x41, 0xa0, 0x15, 0x56, 0xdf, 0x86, 0x2b, 0x69, 0x55, 0x7a, 0x88, 0x49, 0x06, 0x07,
	0xc0, 0xaf, 0x45, 0x6a, 0xd3, 0x23, 0x21, 0x39, 0x69, 0x85, 0xd5, 0xd7, 0xa0, 0xb9, 0xe1, 0x46,
	0x56, 0xbb, 0x97, 0x0a, 0x4e, 0x47, 0x6e, 0xf7, 0xa8, 0xe7, 0x76, 0x8f, 0x90, 0x34, 0x6b, 0x30,
	0xdf, 0xb5, 0x48, 0x10, 0xbf, 0x05, 0x5a, 0x32, 0x1c, 0xb7, 0xbb, 0x62, 0x40, 0x51, 0xa6, 0x76,
	0x7b, 0x38, 0x84, 0x00, 0x95, 0x28, 0x0e, 0xfd, 0x47, 0x48, 0xa5, 0x58, 0x27, 0xb4, 0x4e, 0xb5,
	0xe2, 0xea, 0x47, 0xb0, 0x70, 0x0f, 0xa9, 0xe6, 0xab, 0x83, 0x7e, 0x20, 0x3b, 0x40, 0x64, 0x24,
	0x9b, 0xa2, 0x41, 0x53, 0xa4, 0xa3, 0xce, 0x91, 0xd3, 0xb7, 0xc4, 0x50, 0x0a, 0xc8, 0x20, 0xec,
	0x69, 0xc5, 0xd5, 0x2b, 0xd0, 0xb8, 0x13, 0xd1, 0x45, 0x5a, 0xf9, 0xc1, 0xbe, 0xdf, 0xb6, 0xb4,
	0xb9, 0xd5, 0xf7, 0x40, 0xdf, 0x94, 0xed, 0xdc, 0x77, 0x1e, 0xc7, 0x22, 0x7f, 0x11, 0x20, 0x59,
	0x59, 0x8e, 0x50, 0x29, 0x44, 0x3a, 0xed, 0x53, 0x61, 0xd5, 0x87, 0x6b, 0xf2, 0xed, 0x2a, 0xbe,
	0x23, 0xb9, 0x2d, 0xc4, 0x34, 0x6a, 0xe2, 0xeb, 0xf0, 0x4a, 0xba, 0x07, 0x88, 0x6c, 0x29, 0xc6,
	0x31, 0x77, 0x4f, 0x04, 0xd4, 0x57, 0xc1, 0x98, 0x5e, 0xb4, 0x13, 0x22, 0xa3, 0x5b, 0xfd, 0x2d,
	0xf1, 0x50, 0xc6, 0x9d, 0xc7, 0xb1, 0xe3, 0xd9, 0x92, 0x55, 0xe2, 0x22, 0x76, 0x1e, 0xc7, 0x19,
	0x19, 0xf3, 0x32, 0xe8, 0x19, 0xb0, 0x60, 0x71, 0x05, 0x12, 0x9b, 0x54, 0x38, 0xb2, 0xb8, 0xe2,
	0x08, 0xf4, 0xc8, 0x8f, 0xb5, 0xd2, 0x08, 0xea, 0xae, 0xd5, 0x47, 0x59, 0xf3, 0x0a, 0x5c, 0xc8,
	0x80, 0x79, 0x61, 0x96, 0x49, 0x58, 0x53, 0x33, 0x50, 0x9f, 0x5b, 0x1f, 0xc4, 0x5a, 0x65, 0x04,
	0xbf, 0xdf, 0x45, 0xc1, 0x13, 0x85, 0x35, 0x15, 0x6a, 0x0d, 0x62, 0x9f, 0xb2, 0x6a, 0xab, 0x2e,
	0x2c, 0x6c, 0xfb, 0x1d, 0xab, 0xb7, 0xd5, 0x49, 0xb5, 0x05, 0x71, 0xb2, 0x43, 0x57, 0x9c, 0xf8,
	0x65, 0x16, 0x31, 0x2d, 0x0a, 0xbc, 0xe7, 0x12, 0xd9, 0x5c, 0x82, 0x65, 0x05, 0x68, 0x1d, 0x5b,
	0xb1, 0x15, 0x8a, 0x5e, 0x66, 0x70, 0x1c, 0xe3, 0x66, 0xb0, 0x7a, 0x40, 0xcf, 0xba, 0x1c, 0x84,
	0xae, 0x3a, 0x9c, 0x83, 0xd0, 0xcd, 0x0c, 0x27, 0xf7, 0x39, 0x01, 0xdb, 0x6e, 0xe8, 0x74, 0x62,
	0xb1, 0x2d, 0x67, 0x32, 0xa2, 0xc1, 0xe1, 0xa1, 0xfb, 0x58, 0x2b, 0xae, 0xfe, 0x50, 0x01, 0x6a,
	0x77, 0xfd, 0x9e, 0x2d, 0xe5, 0x03, 0xf9, 0xfb, 0x7b, 0xfc, 0x90, 0xc9, 0x49, 0x42, 0xf8, 0x2d,
	0x2b, 0x31, 0x39, 0x12, 0x78, 0x37, 0x74, 0x3e, 0x19, 0x60, 0x17, 0x49, 0x20, 0x91, 0xd0, 0x03,
	0xcf, 0x25, 0xf6, 0xa8, 0x80, 0xb6, 0xdd, 0xbe, 0x1b, 0x8b, 0x59, 0x91, 0x20, 0xb2, 0x1c, 0xec,
	0x38, 0x61, 0xd7, 0xb1, 0xb5, 0xf2, 0xea, 0x36, 0xd4, 0x89, 0xa2, 0x25, 0xeb, 0xde, 0xdb, 0xff,
	0xfa, 0xf6, 0x9d, 0xd6, 0xfe, 0xd7, 0x77, 0xef, 0xb4, 0xee, 0x3f, 0xb8, 0x7f, 0x47, 0xb4, 0x45,
	0x01, 0x6e, 0x6f, 0x3d, 0xbc, 0x23, 0xc6, 0x50, 0x01, 0x6e, 0x7c, 0xfd, 0x7e, 0xeb, 0x60, 0x57,
	0x2b, 0xae, 0xfe, 0x7a, 0x01, 0x9a, 0x74, 0xf5, 0x58, 0x1e, 0x0d, 0x5c, 0x81, 0x0b, 0xe2, 0x2d,
	0x34, 0x79, 0xd0, 0xa0, 0x0c, 0xd9, 0x50, 0x06, 0x6f, 0x3d, 0xcf, 0xc1, 0xb5, 0x31, 0x19, 0xad,
	0xce, 0x20, 0x8a, 0xfd, 0xbe, 0x56, 0x44, 0xb2, 0x18, 0xc1, 0x18, 0xf6, 0xad, 0x9e, 0x56, 0x1a,
	0x93, 0xe5, 0xd0, 0x4a, 0xd0, 0xe6, 0xf5, 0x97, 0xe0, 0xf9, 0xa1, 0xac, 0xe4, 0x85, 0x5f, 0x5e,
	0x59, 0x62, 0x7b, 0x98, 0x50, 0x48, 0xab, 0xac, 0xfe, 0x1f, 0xf3, 0xb4, 0xb6, 0xf8, 0x38, 0x1f,
	0xfb, 0xb6, 0x94, 0xbc, 0x40, 0xc4, 0x7d, 0x42, 0xb1, 0x5a, 0x00, 0xc4, 0xa5, 0x6b, 0xa1, 0xb8,
	0x31, 0xc8, 0x76, 0xa3, 0x60, 0x40, 0x8a, 0x5b, 0x5a, 0x0f, 0x95, 0x11, 0xa1, 0xb2, 0x49, 0x00,
	0x0b, 0x74, 0xf3, 0x0a, 0x4c, 0x4a, 0xf7, 0x42, 0x96, 0x17, 0x30, 0xa4, 0x64, 0x1c, 0x67, 0x96,
	0xe5, 0x05, 0x90, 0x3b, 0x5b, 0x25, 0xb9, 0x86, 0xdb, 0x91, 0xb0, 0x69, 0xad, 0xa6, 0x7c, 0x37,
	0x8a, 0xad, 0x58, 0xab, 0x2b, 0x00, 0x32, 0x58, 0x80, 0xf2, 0x51, 0xb9, 0x84, 0x1a, 0x24, 0x0d,
	0x09, 0x18, 0x85, 0x8d, 0x11, 0x96, 0x46, 0xad, 0x49, 0xa2, 0x8c, 0xda, 0xd9, 0xa4, 0x9d, 0x0b,
	0x64, 0x99, 0x90, 0xdf, 0xd7, 0x16, 0x95, 0x16, 0xb2, 0x5d, 0x61, 0x89, 0x44, 0x29, 0x46, 0x8a,
	0x63, 0xed, 0x0d, 0x7a, 0x3d, 0x16, 0xdb, 0xb9, 0x81, 0xe2, 0xe5, 0x53, 0xef, 0xd0, 0xd7, 0x96,
	0x95, 0xc2, 0xa1, 0xf4, 0x23, 0xd2, 0x74, 0x92, 0xb1, 0xd2, 0xde, 0x24, 0x5f, 0x27, 0x9b, 0x85,
	0x7c, 0x22, 0xcf, 0x0f, 0xb4, 0x8b, 0xea, 0xe7, 0xe9, 0x2c, 0x4f, 0xbb, 0x44, 0x8a, 0x8d, 0xac,
	0x2b, 0xec, 0x16, 0x29, 0x44, 0xb0, 0xc2, 0x2b, 0xa4, 0x76, 0x28, 0x90, 0x96, 0x38, 0xb9, 0x8e,
	0x70, 0x94, 0xb5, 0x15, 0x65, 0xa4, 0xe8, 0x8a, 0xa7, 0xd5, 0xd5, 0xae, 0x2a, 0x23, 0xc5, 0x17,
	0x31, 0x42, 0xd7, 0x39, 0xd4, 0xae, 0xa9, 0xb8, 0xdd, 0xb8, 0xe7, 0x68, 0xd7, 0xd5, 0x26, 0x89,
	0xad, 0xfc, 0x19, 0x05, 0xc4, 0x36, 0x91, 0x67, 0x57, 0xff, 0x64, 0x81, 0x76, 0xc2, 0xe4, 0x2d,
	0x75, 0x7e, 0x1e, 0x3a, 0x11, 0x61, 0x48, 0x1a, 0xca, 0x2c, 0xaa, 0xf1, 0x99, 0xa4, 0xe1, 0x16,
	0x54, 0xc1, 0x48, 0xc9, 0xc4, 0xce, 0x16, 0x71, 0xd1, 0x8d, 0xc9, 0x93, 0x1b, 0x50, 0x69, 0xd5,
	0x83, 0x65, 0xb5, 0x25, 0x62, 0x07, 0x7f, 0x06, 0x56, 0xb2, 0x95, 0xe8, 0x79, 0x3d, 0xd9, 0x96,
	0x09, 0xb9, 0x7e, 0xe0, 0xa0, 0x48, 0xfe, 0x2c, 0x5c, 0x1d, 0x97, 0xdb, 0xe9, 0xf9, 0x91, 0xa3,
	0x15, 0x57, 0xb7, 0x41, 0xe3, 0xc7, 0xbe, 0x88, 0x62, 0x64, 0xcf, 0x33, 0x64, 0x34, 0xdc, 0xf3,
	0x31, 0x99, 0x24, 0xd0, 0x17, 0x56, 0x7f, 0xb6, 0x00, 0x97, 0xd4, 0x3b, 0x13, 0x74, 0xc8, 0x45,
	0x38, 0x5f, 0x84, 0x67, 0xb3, 0x44, 0x2c, 0x0e, 0xb8, 0x54, 0xcc, 0x28, 0x0a, 0x4f, 0x2a, 0x12,
	0x27, 0xf7, 0x96, 0xb5, 0x02, 0xb2, 0x98, 0x89, 0x05, 0xa5, 0xc4, 0x36, 0xb5, 0xd0, 0x89, 0x43,
	0x72, 0x43, 0x69, 0xf5, 0xdf, 0x2c, 0xc2, 0x62, 0x7a, 0x25, 0x5a, 0xca, 0x55, 0x71, 0x20, 0x9b,
	0xb4, 0x08, 0x90, 0xc6, 0x47, 0x16, 0xa2, 0x0c, 0x6d, 0x8e, 0xa4, 0x34, 0x15, 0xc9, 0x1c, 0x87,
	0xeb, 0x47, 0x2b, 0x91, 0x05, 0xd2, 0xa2, 0x0d, 0x00, 0xcb, 0xc8, 0xc7, 0xe2, 0xb5, 0x32, 0x8a,
	0x51, 0xa1, 0x43, 0x52, 0x71, 0x05, 0x7f, 0xdb, 0x4e, 0xcf, 0x89, 0x1d, 0x61, 0x9e, 0xb4, 0xdd,
	0x88, 0x36, 0xca, 0x1a, 0x4a, 0x7d, 0x87, 0xd6, 0xb1, 0x1f, 0xe2, 0xae, 0x52, 0xd7, 0xab, 0xe4,
	0x48, 0xa7, 0x81, 0xb0, 0xe9, 0x49, 0xf6, 0x50, 0x83, 0xf9, 0x23, 0xd7, 0x76, 0x84, 0x25, 0x87,
	0x0f, 0x1f, 0x18, 0x1b, 0x59, 0x72, 0xd8, 0x08, 0x1f, 0x86, 0x4e, 0xcf, 0x39, 0xb6, 0xbc, 0x58,
	0x5b, 0xc4, 0xf5, 0x40, 0x46, 0x8c, 0x56, 0xc7, 0xf2, 0x3a, 0x4e, 0x4f, 0xb0, 0x83, 0x44, 0x4f,
	0x97, 0x50, 0xb2, 0x54, 0xca, 0x1b, 0x39, 0x8e, 0xed, 0xa2, 0x02, 0xbf, 0x0e, 0x57, 0xd3, 0x71,
	0x49, 0xde, 0xbe, 0x4f, 0x6d, 0x7b, 0x34, 0x44, 0x71, 0xfa, 0x5a, 0xbe, 0x10, 0xfc, 0xe2, 0x40,
	0x81, 0xa0, 0x20, 0x5a, 0xdd, 0xf7, 0x03, 0x69, 0xe3, 0xc5, 0xe5, 0x9b, 0x0e, 0x2b, 0xa6, 0xf8,
	0xfb, 0x85, 0xd5, 0xdb, 0x00, 0x1f, 0xd3, 0x94, 0x48, 0x6e, 0x2f, 0x26, 0x48, 0xd1, 0xe1, 0x19,
	0x20, 0x47, 0xac, 0xa0, 0x14, 0x22, 0x81, 0xbd, 0xb8, 0x7a, 0x13, 0xe0, 0x2e, 0xb9, 0x12, 0x4b,
	0x9b, 0xc3, 0x61, 0x4c, 0x4d, 0x14, 0xfe, 0xc5, 0xc2, 0xb4, 0x74, 0x98, 0x24, 0x0b, 0xab, 0x06,
	0xd4, 0xf7, 0x8f, 0x06, 0x7d, 0xa1, 0x94, 0x03, 0x54, 0xb8, 0x31, 0x73, 0x38, 0xa9, 0x31, 0x66,
	0x50, 0x07, 0x40, 0x2e, 0xc2, 0x41, 0x24, 0xac, 0xa8, 0xb4, 0x01, 0x12, 0x32, 0xcb, 0xf3, 0xbd,
	0xd3, 0xbe, 0x3f, 0x88, 0xb4, 0xc2, 0xea, 0x2f, 0x17, 0x60, 0x51, 0x4a, 0x9e, 0x5c, 0x7a, 0x05,
	0x2e, 0x26, 0x12, 0xa4, 0x38, 0xfd, 0x52, 0xd6, 0xeb, 0x68, 0x8e, 0x6c, 0x17, 0x32, 0x8f, 0xe1,
	0x5c, 0xce, 0x2b, 0x8e, 0xab, 0x29, 0xf2, 0x1c, 0x5b, 0x2b, 0xa1, 0xf6, 0x34, 0x9c, 0xdb, 0x1f,
	0xc4, 0x03, 0x7a, 0x79, 0xd7, 0xeb, 0x38, 0x21, 0xea, 0x6c, 0xd7, 0xe1, 0xca, 0x70, 0x99, 0x28,
	0x70, 0x3a, 0xae, 0xd5, 0xd3, 0xca, 0xab, 0x6f, 0xc1, 0x42, 0xe6, 0xa5, 0x72, 0x9c, 0x27, 0xf2,
	0x68, 0xef, 0xf9, 0x5d, 0x97, 0xa7, 0x98, 0xd2, 0x03, 0x4f, 0x40, 0x0a, 0xab, 0x5f, 0x00, 0x48,
	0xdf, 0xe3, 0xc5, 0xf2, 0xfc, 0x92, 0x2f, 0x0a, 0xae, 0x6c, 0x7c, 0xa1, 0xb4, 0xb4, 0xab, 0x14,
	0x56, 0x6f, 0x8a, 0xc7, 0xbe, 0x12, 0x73, 0x8d, 0x12, 0xad, 0x42, 0x7c, 0x41, 0x0d, 0x36, 0xa1,
	0x15, 0x56, 0x7f, 0x92, 0xfd, 0x87, 0x95, 0x87, 0x89, 0x68, 0x8c, 0xd2, 0x17, 0x89, 0x5a, 0x19,
	0xfd, 0xe0, 0x25, 0x78, 0x7e, 0x34, 0x4f, 0x9e, 0xd8, 0x3b, 0x56, 0xd8, 0x3e, 0xd5, 0x0a, 0xfa,
	0xf3, 0x70, 0x7d, 0x62, 0xa1, 0x41, 0xa0, 0x15, 0xf5, 0x1b, 0xf0, 0xf2, 0x54, 0x2c, 0xa8, 0x97,
	0xf6, 0xdd, 0xc7, 0x5a, 0x69, 0xf5, 0x1b, 0x50, 0x4f, 0xae, 0xf1, 0x8b, 0x83, 0x04, 0x7a, 0x87,
	0xad, 0x93, 0x9a, 0x22, 0xb2, 0x40, 0x62, 0x1d, 0x64, 0x29, 0x51, 0x80, 0xb6, 0xe5, 0xf5, 0xad,
	0x47, 0x03, 0x21, 0x64, 0x2a, 0xf0, 0x41, 0x80, 0x4c, 0x2a, 0x39, 0x61, 0xe7, 0x08, 0xe2, 0x48,
	0xfc, 0xb2, 0x2d, 0x89, 0x3c, 0xc4, 0x00, 0x11, 0xcd, 0x54, 0xc8, 0x43, 0x92, 0x49, 0xf0, 0x58,
	0x16, 0x15, 0x98, 0x25, 0x62, 0xdd, 0x68, 0x25, 0x5c, 0xcc, 0xd2, 0x9b, 0x5a, 0xde, 0x3d, 0x12,
	0xe6, 0xcd, 0xd4, 0x23, 0x97, 0x8c, 0xd8, 0xf2, 0x13, 0x4e, 0xd4, 0xf2, 0xe3, 0x23, 0x14, 0x88,
	0x56, 0xbf, 0x03, 0x6a, 0x89, 0x3a, 0xaa, 0xc3, 0xa2, 0x88, 0x3b, 0xa1, 0x30, 0xf4, 0x8b, 0x32,
	0x16, 0x05, 0x31, 0x66, 0xab, 0xf3, 0x88, 0x74, 0xda, 0xef, 0x83, 0x86, 0x12, 0xe1, 0x09, 0x69,
	0xe6, 0xfe, 0x7e, 0xeb, 0xe0, 0xfe, 0xd7, 0xee, 0x3f, 0xf8, 0xf8, 0xbe, 0x50, 0x4f, 0x3f, 0xde,
	0xba, 0xbb, 0xa5, 0x15, 0x90, 0x67, 0xac, 0xdf, 0xd9, 0xde, 0x3e, 0xd8, 0x5e, 0x33, 0xb5, 0x22,
	0xf2, 0xc2, 0x07, 0x77, 0xef, 0x6e, 0x6f, 0xdd, 0xbf, 0xa3, 0x95, 0x30, 0xeb, 0xc1, 0xfe, 0xe6,
	0x1d, 0xf3, 0xfe, 0x9d, 0x7d, 0x6d, 0x1e, 0x53, 0x77, 0x64, 0xaa, 0xbc, 0xfa, 0x87, 0xa1, 0x22,
	0x22, 0x40, 0x21, 0xea, 0xfd, 0xbb, 0x0a, 0x6a, 0x80, 0xca, 0x41, 0x6b, 0x7d, 0xcd, 0xdc, 0x10,
	0xfa, 0xf9, 0x41, 0x6b, 0xf7, 0x6b, 0xf7, 0xb4, 0x22, 0x82, 0xd7, 0x05, 0xb8, 0x84, 0xe0, 0x75,
	0x02, 0xcf, 0x23, 0x78, 0x5f, 0x80, 0xcb, 0x08, 0xde, 0x27, 0x70, 0x65, 0x75, 0x0f, 0xae, 0x4c,
	0x70, 0xf7, 0x27, 0xf9, 0xfd, 0xce, 0xfe, 0xfe, 0xd6, 0xfd, 0x7b, 0xad, 0xad, 0xfb, 0x0f, 0xd7,
	0xb6, 0xb7, 0x36, 0x04, 0x45, 0x4b, 0xe0, 0x83, 0xdd, 0x3b, 0xf7, 0xc5, 0x51, 0x85, 0x84, 0xac,
	0x6f, 0x3f, 0xd8, 0xbb, 0xa3, 0x15, 0x57, 0xbf, 0x6b, 0xd8, 0x3f, 0x59, 0xb6, 0x7f, 0x77, 0xed,
	0xde, 0x9d, 0xd6, 0xce, 0xda, 0x57, 0x1f, 0x98, 0x62, 0x3c, 0x29, 0xbd, 0x77, 0x70, 0xfb, 0x81,
	0xb9, 0xb1, 0x75, 0x7f, 0x6d, 0x9f, 0x15, 0x84, 0xb4, 0x54, 0x6b, 0xe3, 0xce, 0xfe, 0xda, 0xd6,
	0xb6, 0x56, 0x5c, 0x5d, 0x4d, 0x63, 0x24, 0x24, 0x77, 0x4c, 0x70, 0x10, 0x37, 0xbe, 0x7e, 0x7f,
	0x6d, 0x67, 0x6b, 0x5d, 0x8c, 0xf4, 0xe6, 0x83, 0x9d, 0x3b, 0x5a, 0x61, 0xf5, 0xb7, 0x0b, 0x6a,
	0x84, 0x04, 0xae, 0x80, 0xdc, 0x66, 0x7d, 0x6d, 0x67, 0xf7, 0x60, 0xaf, 0x65, 0xae, 0xef, 0x6c,
	0xb4, 0xee, 0x9a, 0x0f, 0x76, 0x94, 0xc1, 0x7c, 0x11, 0x9e, 0x1d, 0xc9, 0x45, 0x74, 0xad, 0x83,
	0xfb, 0xb2, 0xa3, 0x2f, 0xc0, 0x33, 0x23, 0x45, 0x1e, 0x6e, 0xed, 0x6d, 0xed, 0xb7, 0x68, 0xf2,
	0xb4, 0xe2, 0xd8, 0x12, 0x84, 0x64, 0xe7, 0xc1, 0xce, 0x9d, 0xfb, 0xfb, 0x5a, 0x09, 0x57, 0xea,
	0x48, 0x09, 0x54, 0x82, 0xb8, 0xc0, 0xbc, 0xfe, 0x06, 0xdc, 0x18, 0x29, 0x30, 0x3c, 0x4a, 0xb2,
	0x74, 0x79, 0xf5, 0x43, 0xe9, 0x14, 0x93, 0xb8, 0x20, 0xe3, 0x30, 0xb0, 0xfe, 0xb5, 0x0c, 0x0b,
	0x77, 0xee, 0xef, 0x9b, 0x5f, 0x6f, 0xc9, 0x31, 0x2a, 0xe0, 0x14, 0x08, 0x10, 0x8d, 0x54, 0x71,
	0x75, 0x4b, 0x4e, 0x94, 0xea, 0x87, 0x8b, 0x12, 0x3a, 0xaf, 0x16, 0xe1, 0x90, 0xdb, 0xf2, 0x0f,
	0x0f, 0xf1, 0xbf, 0x36, 0x87, 0xdb, 0xc0, 0x50, 0x16, 0xfd, 0x23, 0x9b, 0xc5, 0xc5, 0x71, 0xee,
	0x0e, 0x0a, 0xb2, 0xbe, 0xd7, 0x6d, 0x09, 0x67, 0x07, 0x5e, 0x50, 0xcf, 0xc3, 0xf5, 0x91, 0x2c,
	0x97, 0xee, 0x97, 0x75, 0x9c, 0x28, 0xd2, 0x0a, 0xc8, 0xde, 0x47, 0x0a, 0x1c, 0x5a, 0x6e, 0xcf,
	0xb1, 0xb5, 0xe2, 0xea, 0x0f, 0x26, 0xb3, 0xac, 0x38, 0x97, 0x11, 0x77, 0x4a, 0xab, 0xa4, 0xd6,
	0x53, 0x05, 0x98, 0xfa, 0x8e, 0x09, 0xdd, 0x38, 0x93, 0x65, 0x77, 0xf9, 0x88, 0x4c, 0x81, 0x0a,
	0x07, 0x22, 0x71, 0x74, 0xa2, 0x80, 0x3f, 0x19, 0xb8, 0x9f, 0x6a, 0xf3, 0xab, 0xfd, 0x21, 0x9f,
	0x15, 0xe1, 0x5a, 0x81, 0xe4, 0x36, 0x54, 0xb6, 0x65, 0x75, 0x62, 0x72, 0x2f, 0x11, 0x62, 0xe7,
	0xb8, 0x5c, 0xcb, 0xb6, 0x47, 0xba, 0x9d, 0x64, 0xda, 0x4e, 0x4f, 0x2b, 0xde, 0xfa, 0xdb, 0x6f,
	0x40, 0x55, 0x06, 0x98, 0xf9, 0x6e, 0xa8, 0x6d, 0x9c, 0x7a, 0x64, 0x02, 0xd7, 0xa7, 0x1e, 0xdd,
	0x53, 0x11, 0xd3, 0xf9, 0xe4, 0xda, 0xab, 0x33, 0x94, 0x0a, 0x7a, 0xa7, 0xba, 0x49, 0x71, 0x52,
	0xd7, 0x7a, 0x3d, 0xdd, 0x98, 0x56, 0x63, 0xad, 0xd7, 0x43, 0xac, 0x2f, 0xe7, 0x96, 0x41, 0x9c,
	0xdf, 0x47, 0x16, 0x11, 0x8e, 0x34, 0xa7, 0x4f, 0x6d, 0x49, 0x1a, 0xbb, 0xf0, 0xda, 0x8d, 0x99,
	0xca, 0x21, 0xfe, 0x00, 0x34, 0xd9, 0x89, 0x5d, 0x27, 0x8c, 0x50, 0x79, 0xd5, 0xdf, 0xc8, 0xed,
	0xaf, 0x2c, 0x8a, 0xdf, 0xba, 0x79, 0x86, 0xd2, 0xf8, 0x45, 0x9b, 0x5e, 0x69, 0xa5, 0x8c, 0x83,
	0xc0, 0xe6, 0xa7, 0x8d, 0x3f, 0x9f, 0x8b, 0x24, 0x29, 0x8b, 0xdf, 0x9c, 0xec, 0xd9, 0x7b, 0x9f,
	0xe7, 0xe2, 0x07, 0x0b, 0x70, 0x05, 0xc7, 0x91, 0xd5, 0x1e, 0x71, 0x5c, 0x20, 0x84, 0x43, 0xfd,
	0xed, 0xa9, 0x23, 0x3f, 0xa6, 0x06, 0x7e, 0xf2, 0x9d, 0xb3, 0x57, 0x12, 0x34, 0x81, 0xd4, 0x46,
	0x52, 0xe6, 0x74, 0x6a, 0xa3, 0x22, 0xb3, 0xf5, 0xcd, 0x22, 0xdf, 0x89, 0xbb, 0xd6, 0x23, 0x87,
	0x42, 0x4f, 0xbc, 0x36, 0x0d, 0xad, 0x2c, 0x85, 0x98, 0x5f, 0x9f, 0xad, 0x20, 0x7e, 0x22, 0x12,
	0x4f, 0xe9, 0x76, 0xfa, 0xf6, 0x41, 0x70, 0xe7, 0x71, 0xe7, 0xc8, 0xf2, 0xba, 0xce, 0xf4, 0x49,
	0xca, 0x96, 0xc5, 0xcf, 0xbd, 0x79, 0x96, 0xe2, 0xf8, 0xd1, 0x6f, 0xd2, 0x93, 0x74, 0x6b, 0xbd,
	0x5e, 0x42, 0x89, 0xab, 0x39, 0x6b, 0x44, 0xa5, 0xc3, 0x37, 0x66, 0x2e, 0x8b, 0xdf, 0xfa, 0x06,
	0x2c, 0x09, 0x70, 0x4a, 0x83, 0x9f, 0xcb, 0x41, 0x70, 0x46, 0x0a, 0x3c, 0x20, 0x96, 0x83, 0xba,
	0x83, 0xfe, 0xd2, 0x54, 0xea, 0xf6, 0xc9, 0x29, 0xed, 0xda, 0x2b, 0xf9, 0x85, 0x10, 0xed, 0xf7,
	0xc3, 0xc5, 0x8d, 0x53, 0x6f, 0xc7, 0x7d, 0x7c, 0x40, 0x4f, 0x75, 0x3f, 0x74, 0x9d, 0x13, 0x72,
	0x1f, 0xfa, 0xc2, 0xb4, 0xea, 0x23, 0xc5, 0xf1, 0x83, 0xb7, 0xce, 0x58, 0x03, 0xbf, 0x2e, 0x98,
	0x27, 0x69, 0x08, 0xd3, 0xc9, 0x99, 0x8a, 0xe4, 0x32, 0x4f, 0x2e, 0x85, 0x98, 0xbf, 0x97, 0x82,
	0x75, 0xb3, 0xef, 0xe2, 0x2b, 0xf9, 0xfc, 0x0b, 0x71, 0xbf, 0x36, 0x4b, 0x31, 0x6e, 0xb6, 0x0c,
	0xfe, 0x30, 0xa5, 0xd9, 0x4a, 0x80, 0x8a, 0x29, 0xcd, 0xce, 0x46, 0x91, 0xf8, 0x43, 0x52, 0xf9,
	0x21, 0xdc, 0x53, 0x1e, 0x94, 0x48, 0x0a, 0x4d, 0xc7, 0xae, 0x94, 0x8b, 0x02, 0xfd, 0x21, 0x0d,
	0x37, 0x85, 0x1c, 0x9d, 0x3e, 0xdc, 0xf2, 0xb9, 0xfd, 0x6b, 0x33, 0x94, 0x8a, 0x02, 0xfd, 0x0f,
	0xd1, 0x4a, 0x3b, 0xf0, 0xb6, 0x51, 0x85, 0xa3, 0x47, 0xab, 0x5f, 0xca, 0x5b, 0xac, 0xb9, 0x24,
	0x9a, 0xbe, 0x77, 0x22, 0xf6, 0x94, 0xcc, 0xab, 0x9c, 0xd3, 0xf7, 0x94, 0xe1, 0xa7, 0x57, 0xa7,
	0xef, 0x29, 0x63, 0x5e, 0x0b, 0x15, 0xc4, 0x23, 0xa2, 0xb2, 0x4e, 0x27, 0x9e, 0x24, 0x3a, 0xf5,
	0x74, 0xe2, 0x51, 0xa3, 0x49, 0x7f, 0x37, 0x34, 0x94, 0x47, 0xdc, 0xa6, 0xb0, 0xdb, 0xec, 0x53,
	0x6f, 0x33, 0xb0, 0x88, 0x6f, 0xc2, 0x62, 0xf6, 0xad, 0x9f, 0x29, 0x0c, 0x6f, 0xe4, 0xc9, 0xa4,
	0x29, 0x0c, 0x6f, 0xdc, 0x03, 0x42, 0xdf, 0x27, 0x83, 0x49, 0xd3, 0x74, 0xbf, 0x3a, 0xdb, 0xf5,
	0xd2, 0x6b, 0x37, 0x66, 0x2a, 0xc7, 0x0c, 0x75, 0xe8, 0x9d, 0x82, 0x29, 0x0c, 0x75, 0xf4, 0x45,
	0x83, 0x19, 0x46, 0x0b, 0xbf, 0x90, 0x7d, 0x6b, 0x60, 0xda, 0x17, 0x46, 0x5e, 0x25, 0x98, 0xe1,
	0x0b, 0x66, 0x12, 0xe8, 0xde, 0xc8, 0x8b, 0xaf, 0x9e, 0xb7, 0xd4, 0x92, 0xb8, 0xff, 0x36, 0x34,
	0xd5, 0x00, 0xe5, 0xfa, 0x94, 0x47, 0x34, 0xb3, 0xe1, 0xd3, 0xaf, 0xad, 0xce, 0x58, 0x12, 0xbf,
	0xd2, 0x97, 0xd1, 0xd7, 0x93, 0xcb, 0xbf, 0xd3, 0xc6, 0x66, 0x24, 0x92, 0xf7, 0xb5, 0xcf, 0xcf,
	0x5e, 0x18, 0x3f, 0xf7, 0x03, 0xe2, 0xd9, 0xde, 0x91, 0x50, 0xc8, 0xfa, 0x5b, 0x67, 0x0d, 0x9d,
	0xfc, 0xc9, 0xb5, 0xb7, 0x9f, 0x20, 0xda, 0x32, 0xb2, 0x98, 0xe1, 0x18, 0xc2, 0xfa, 0xcc, 0xf1,
	0x82, 0x73, 0x58, 0xcc, 0xf8, 0xe0, 0xc4, 0xca, 0x17, 0x93, 0xd5, 0x9a, 0xff, 0x45, 0x75, 0xbd,
	0xde, 0x3c, 0x43, 0x69, 0xa6, 0x1c, 0x35, 0xc2, 0xa1, 0x9e, 0xbb, 0x16, 0x65, 0x04, 0xc6, 0x6b,
	0xab, 0x33, 0x96, 0x64, 0x1e, 0x94, 0x8d, 0xe0, 0xa7, 0xcf, 0x72, 0xf5, 0x9c, 0x1d, 0xbf, 0xaf,
	0xbd, 0x31, 0x73, 0x59, 0x16, 0x5c, 0x95, 0xc8, 0x6e, 0x53, 0x38, 0x69, 0x36, 0x94, 0xdd, 0x14,
	0xc1, 0x75, 0x24, 0xf6, 0xdc, 0xf7, 0x72, 0x3c, 0x2d, 0xda, 0x8e, 0x5f, 0x99, 0x5e, 0x4f, 0xee,
	0xc6, 0xaf, 0xcd, 0x52, 0x0c, 0x91, 0x1f, 0x27, 0x57, 0x43, 0x94, 0x68, 0x52, 0x7a, 0x5e, 0x2c,
	0x97, 0xa1, 0xd8, 0x57, 0xd7, 0xbe, 0x70, 0xa6, 0xf2, 0x99, 0x39, 0x92, 0xc1, 0x93, 0x72, 0xe7,
	0x48, 0x89, 0x4b, 0x95, 0x3b, 0x47, 0xd9, 0x88, 0x4c, 0x7d, 0x69, 0x1d, 0x49, 0xc2, 0x10, 0xe9,
	0x79, 0xd7, 0xc4, 0xd4, 0x00, 0x4d, 0xd7, 0x3e, 0x3f, 0x7b, 0x61, 0xfc, 0xdc, 0x1f, 0x95, 0xb7,
	0x34, 0x46, 0xa2, 0x1e, 0x4d, 0x51, 0xd3, 0x26, 0xc7, 0x49, 0x3a, 0xeb, 0xe7, 0x4f, 0xa5, 0x1d,
	0x22, 0x13, 0x65, 0x45, 0x7f, 0x33, 0x3f, 0xf0, 0x40, 0x26, 0x38, 0xcd, 0xb5, 0xb7, 0xce, 0x56,
	0x41, 0x48, 0x8e, 0x0b, 0x99, 0xc8, 0x27, 0xfa, 0x64, 0x2a, 0x1f, 0x8e, 0x90, 0x32, 0xdb, 0x66,
	0x39, 0x14, 0x31, 0x45, 0x7f, 0x6e, 0x6a, 0xa5, 0x69, 0x43, 0x37, 0x36, 0xf6, 0x4a, 0x1b, 0xb4,
	0xe1, 0x88, 0x29, 0x53, 0x18, 0xe2, 0x98, 0xe0, 0x2a, 0x33, 0xf4, 0x22, 0x61, 0x81, 0xcc, 0x31,
	0xf2, 0x58, 0x60, 0xca, 0x32, 0x56, 0x67, 0x2c, 0x99, 0x21, 0xf9, 0x59, 0x36, 0xcf, 0xd1, 0x00,
	0x22, 0xb9, 0x34, 0x37, 0xb4, 0x79, 0x26, 0x9f, 0x4b, 0x02, 0x51, 0xe8, 0xb3, 0xc6, 0x6f, 0x88,
	0x66, 0xf9, 0xdc, 0x50, 0x48, 0x0e, 0x57, 0x32, 0x0f, 0x19, 0xb2, 0x21, 0x97, 0x79, 0x28, 0xd1,
	0x20, 0xae, 0x7d, 0x6e, 0xe6, 0xb2, 0x51, 0xa0, 0x77, 0x61, 0x21, 0x13, 0xde, 0x60, 0x0a, 0x49,
	0x0f, 0x07, 0x56, 0x98, 0xf2, 0xa1, 0x31, 0x11, 0x13, 0x4c, 0xa8, 0x88, 0x9b, 0xee, 0x53, 0x04,
	0xb5, 0x24, 0x18, 0xc2, 0x14, 0x41, 0x4d, 0xbd, 0x97, 0xff, 0x7d, 0x00, 0xe9, 0x7d, 0xee, 0x29,
	0x02, 0x72, 0xe6, 0x3e, 0xfc, 0x14, 0x01, 0x79, 0xf8, 0x72, 0x78, 0x5f, 0xb9, 0x8b, 0xc9, 0x6a,
	0xee, 0x0c, 0xf7, 0x6f, 0x53, 0x65, 0xf7, 0xf3, 0xb3, 0x17, 0x1e, 0xfe, 0x9c, 0xb8, 0x44, 0x38,
	0xcb, 0xe7, 0x92, 0x0b, 0x8f, 0xb3, 0x7c, 0x4e, 0xbd, 0x9b, 0xf8, 0xfd, 0x8a, 0x25, 0x5b, 0xb9,
	0xac, 0xa6, 0x7f, 0x61, 0xb6, 0x3b, 0x68, 0xe9, 0xe5, 0xbc, 0x29, 0x66, 0x89, 0xc9, 0xb7, 0xe1,
	0xfa, 0xb0, 0x34, 0x74, 0x51, 0x6b, 0x4a, 0x67, 0x47, 0xef, 0xaf, 0x4d, 0xe9, 0xec, 0xb8, 0xfb,
	0x5f, 0xb7, 0xb7, 0xff, 0xe6, 0x6f, 0x3e, 0x57, 0xf8, 0xef, 0x7e, 0xf3, 0xb9, 0xc2, 0x6f, 0xfc,
	0xe6, 0x73, 0x85, 0x7f, 0xfb, 0xef, 0x3d, 0x37, 0x07, 0x2f, 0x76, 0xfc, 0xfe, 0xcd, 0xb6, 0x15,
	0xb8, 0xd1, 0x24, 0x4c, 0xbb, 0x85, 0xef, 0x29, 0x1e, 0xdf, 0xfa, 0xf7, 0x8a, 0xda, 0xed, 0xb5,
	0xdd, 0xad, 0xb5, 0x20, 0x60, 0x59, 0xef, 0xe1, 0xad, 0x76, 0x25, 0x08, 0xfd, 0xd8, 0x7f, 0xfb,
	0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x32, 0x9c, 0x29, 0xaa, 0x45, 0x01, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DynamicClient is the client API for Dynamic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DynamicClient interface {
	// 动态视频页
	DynVideo(ctx context.Context, in *DynVideoReq, opts ...grpc.CallOption) (*DynVideoReply, error)
	// 动态综合页
	DynAll(ctx context.Context, in *DynAllReq, opts ...grpc.CallOption) (*DynAllReply, error)
	// 批量动态id获取动态详情
	DynDetails(ctx context.Context, in *DynDetailsReq, opts ...grpc.CallOption) (*DynDetailsReply, error)
	// 视频页最近访问 - 个人feed流
	DynVideoPersonal(ctx context.Context, in *DynVideoPersonalReq, opts ...grpc.CallOption) (*DynVideoPersonalReply, error)
	// 视频页最近访问 - 标记已读
	DynVideoUpdOffset(ctx context.Context, in *DynVideoUpdOffsetReq, opts ...grpc.CallOption) (*NoReply, error)
	// 动态通用附加卡-follow/取消follow
	DynAdditionCommonFollow(ctx context.Context, in *DynAdditionCommonFollowReq, opts ...grpc.CallOption) (*DynAdditionCommonFollowReply, error)
	// 动态点赞
	DynThumb(ctx context.Context, in *DynThumbReq, opts ...grpc.CallOption) (*NoReply, error)
	// 动态发布生成临时卡
	DynFakeCard(ctx context.Context, in *DynFakeCardReq, opts ...grpc.CallOption) (*DynFakeCardReply, error)
	// 0关注推荐up主换一换
	DynRcmdUpExchange(ctx context.Context, in *DynRcmdUpExchangeReq, opts ...grpc.CallOption) (*DynRcmdUpExchangeReply, error)
	// 综合页最近访问 - 个人feed流
	DynAllPersonal(ctx context.Context, in *DynAllPersonalReq, opts ...grpc.CallOption) (*DynAllPersonalReply, error)
	// 综合页最近访问 - 标记已读
	DynAllUpdOffset(ctx context.Context, in *DynAllUpdOffsetReq, opts ...grpc.CallOption) (*NoReply, error)
	// 投票操作接口
	DynVote(ctx context.Context, in *DynVoteReq, opts ...grpc.CallOption) (*DynVoteReply, error)
	// 网关调用 - 查看更多-列表
	DynMixUpListViewMore(ctx context.Context, in *DynMixUpListViewMoreReq, opts ...grpc.CallOption) (*DynMixUpListViewMoreReply, error)
	// 轻浏览
	DynLight(ctx context.Context, in *DynLightReq, opts ...grpc.CallOption) (*DynLightReply, error)
	// 动态详情页
	DynDetail(ctx context.Context, in *DynDetailReq, opts ...grpc.CallOption) (*DynDetailReply, error)
	// 点赞列表
	LikeList(ctx context.Context, in *LikeListReq, opts ...grpc.CallOption) (*LikeListReply, error)
	// 转发列表
	RepostList(ctx context.Context, in *RepostListReq, opts ...grpc.CallOption) (*RepostListRsp, error)
	// 空间页动态
	DynSpace(ctx context.Context, in *DynSpaceReq, opts ...grpc.CallOption) (*DynSpaceRsp, error)
	// 未登录页分区UP主推荐
	DynUnLoginRcmd(ctx context.Context, in *DynRcmdReq, opts ...grpc.CallOption) (*DynRcmdReply, error)
	// 动态id批量查询接口 - 服务端使用
	DynServerDetails(ctx context.Context, in *DynServerDetailsReq, opts ...grpc.CallOption) (*DynServerDetailsReply, error)
	// 动态垂搜
	DynSearch(ctx context.Context, in *DynSearchReq, opts ...grpc.CallOption) (*DynSearchReply, error)
	// 设置同城校园二选一结果
	SetDecision(ctx context.Context, in *SetDecisionReq, opts ...grpc.CallOption) (*NoReply, error)
	// 校友圈FEED流
	AlumniDynamics(ctx context.Context, in *AlumniDynamicsReq, opts ...grpc.CallOption) (*AlumniDynamicsReply, error)
	// 动态校园首页 开放/未开放（包括顶部卡+学校推荐列表）
	CampusRcmd(ctx context.Context, in *CampusRcmdReq, opts ...grpc.CallOption) (*CampusRcmdReply, error)
	// 设置预约校园开放通知
	SubscribeCampus(ctx context.Context, in *SubscribeCampusReq, opts ...grpc.CallOption) (*NoReply, error)
	// 设置校园
	SetRecentCampus(ctx context.Context, in *SetRecentCampusReq, opts ...grpc.CallOption) (*NoReply, error)
	// 动态tab页
	DynTab(ctx context.Context, in *DynTabReq, opts ...grpc.CallOption) (*DynTabReply, error)
	// 学校搜索
	SchoolSearch(ctx context.Context, in *SchoolSearchReq, opts ...grpc.CallOption) (*SchoolSearchReply, error)
	// 学校搜索推荐
	SchoolRecommend(ctx context.Context, in *SchoolRecommendReq, opts ...grpc.CallOption) (*SchoolRecommendReply, error)
	// 动态空间搜索页 - 网关调用
	DynSpaceSearchDetails(ctx context.Context, in *DynSpaceSearchDetailsReq, opts ...grpc.CallOption) (*DynSpaceSearchDetailsReply, error)
	// 官方账号
	OfficialAccounts(ctx context.Context, in *OfficialAccountsReq, opts ...grpc.CallOption) (*OfficialAccountsReply, error)
	// 入校必看
	OfficialDynamics(ctx context.Context, in *OfficialDynamicsReq, opts ...grpc.CallOption) (*OfficialDynamicsReply, error)
	// 红点展示
	CampusRedDot(ctx context.Context, in *CampusRedDotReq, opts ...grpc.CallOption) (*CampusRedDotReply, error)
	// 校内主推荐FEED流 V2
	CampusRcmdFeed(ctx context.Context, in *CampusRcmdFeedReq, opts ...grpc.CallOption) (*CampusRcmdFeedReply, error)
	// 话题广场
	TopicSquare(ctx context.Context, in *TopicSquareReq, opts ...grpc.CallOption) (*TopicSquareReply, error)
	// 校园话题列表
	TopicList(ctx context.Context, in *TopicListReq, opts ...grpc.CallOption) (*TopicListReply, error)
	// 校园动态同学点赞列表 - 获取哪些同学给该动态点过赞
	CampusMateLikeList(ctx context.Context, in *CampusMateLikeListReq, opts ...grpc.CallOption) (*CampusMateLikeListReply, error)
	// 校友用户反馈 - 移除内容/负反馈
	CampusFeedback(ctx context.Context, in *CampusFeedbackReq, opts ...grpc.CallOption) (*CampusFeedbackReply, error)
	// 校园十大榜单 - 校园热点
	CampusBillboard(ctx context.Context, in *CampusBillBoardReq, opts ...grpc.CallOption) (*CampusBillBoardReply, error)
	// 校园十大榜单 - 校园热点（内部h5分享网关调用）只有预定义的app-key鉴权 没有对端鉴权措施 使用请联系研发获取说明
	CampusBillboardInternal(ctx context.Context, in *CampusBillboardInternalReq, opts ...grpc.CallOption) (*CampusBillBoardReply, error)
	// 校园话题讨论 - 动态Feed流
	CampusTopicRcmdFeed(ctx context.Context, in *CampusTopicRcmdFeedReq, opts ...grpc.CallOption) (*CampusTopicRcmdFeedReply, error)
	// 取消追漫卡
	UnfollowMatch(ctx context.Context, in *UnfollowMatchReq, opts ...grpc.CallOption) (*NoReply, error)
	// 查询首页校园tab屏蔽开关设置项
	FetchTabSetting(ctx context.Context, in *NoReq, opts ...grpc.CallOption) (*FetchTabSettingReply, error)
	// 更新首页校园tab屏蔽开关设置项
	UpdateTabSetting(ctx context.Context, in *UpdateTabSettingReq, opts ...grpc.CallOption) (*NoReply, error)
	// 校园广场（其他院校的顶部学校推荐）
	CampusSquare(ctx context.Context, in *CampusSquareReq, opts ...grpc.CallOption) (*CampusSquareReply, error)
	// 校园混排推荐流（其他院校/未开放页的推荐feed）
	CampusRecommend(ctx context.Context, in *CampusRecommendReq, opts ...grpc.CallOption) (*CampusRecommendReply, error)
	// 首页校园主页 开放/未开放（包括顶部卡+学校推荐列表）
	CampusHomePages(ctx context.Context, in *CampusHomePagesReq, opts ...grpc.CallOption) (*CampusHomePagesReply, error)
	// 校园入口类型（端上请求是首页入口还是动态入口）
	CampusEntryTab(ctx context.Context, in *CampusEntryTabReq, opts ...grpc.CallOption) (*CampusEntryTabResp, error)
	// 设置预约校园开放通知
	HomeSubscribe(ctx context.Context, in *HomeSubscribeReq, opts ...grpc.CallOption) (*HomeSubscribeReply, error)
	// LBS动态
	LbsPoi(ctx context.Context, in *LbsPoiReq, opts ...grpc.CallOption) (*LbsPoiReply, error)
	// 动态筛选器接口
	FeedFilter(ctx context.Context, in *FeedFilterReq, opts ...grpc.CallOption) (*FeedFilterReply, error)
	// 校园官号管理页详情
	CampusMngDetail(ctx context.Context, in *CampusMngDetailReq, opts ...grpc.CallOption) (*CampusMngDetailReply, error)
	// 校园官号管理页提交
	CampusMngSubmit(ctx context.Context, in *CampusMngSubmitReq, opts ...grpc.CallOption) (*CampusMngSubmitReply, error)
	// 校园官号管理 入园题目管理
	CampusMngQuizOperate(ctx context.Context, in *CampusMngQuizOperateReq, opts ...grpc.CallOption) (*CampusMngQuizOperateReply, error)
	// 老话题feed流 目前用于替换频道下的老话题tab
	LegacyTopicFeed(ctx context.Context, in *LegacyTopicFeedReq, opts ...grpc.CallOption) (*LegacyTopicFeedReply, error)
}

type dynamicClient struct {
	cc *grpc.ClientConn
}

func NewDynamicClient(cc *grpc.ClientConn) DynamicClient {
	return &dynamicClient{cc}
}

func (c *dynamicClient) DynVideo(ctx context.Context, in *DynVideoReq, opts ...grpc.CallOption) (*DynVideoReply, error) {
	out := new(DynVideoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynAll(ctx context.Context, in *DynAllReq, opts ...grpc.CallOption) (*DynAllReply, error) {
	out := new(DynAllReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynDetails(ctx context.Context, in *DynDetailsReq, opts ...grpc.CallOption) (*DynDetailsReply, error) {
	out := new(DynDetailsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynVideoPersonal(ctx context.Context, in *DynVideoPersonalReq, opts ...grpc.CallOption) (*DynVideoPersonalReply, error) {
	out := new(DynVideoPersonalReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynVideoPersonal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynVideoUpdOffset(ctx context.Context, in *DynVideoUpdOffsetReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynVideoUpdOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynAdditionCommonFollow(ctx context.Context, in *DynAdditionCommonFollowReq, opts ...grpc.CallOption) (*DynAdditionCommonFollowReply, error) {
	out := new(DynAdditionCommonFollowReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynAdditionCommonFollow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynThumb(ctx context.Context, in *DynThumbReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynThumb", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynFakeCard(ctx context.Context, in *DynFakeCardReq, opts ...grpc.CallOption) (*DynFakeCardReply, error) {
	out := new(DynFakeCardReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynFakeCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynRcmdUpExchange(ctx context.Context, in *DynRcmdUpExchangeReq, opts ...grpc.CallOption) (*DynRcmdUpExchangeReply, error) {
	out := new(DynRcmdUpExchangeReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynRcmdUpExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynAllPersonal(ctx context.Context, in *DynAllPersonalReq, opts ...grpc.CallOption) (*DynAllPersonalReply, error) {
	out := new(DynAllPersonalReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynAllPersonal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynAllUpdOffset(ctx context.Context, in *DynAllUpdOffsetReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynAllUpdOffset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynVote(ctx context.Context, in *DynVoteReq, opts ...grpc.CallOption) (*DynVoteReply, error) {
	out := new(DynVoteReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynMixUpListViewMore(ctx context.Context, in *DynMixUpListViewMoreReq, opts ...grpc.CallOption) (*DynMixUpListViewMoreReply, error) {
	out := new(DynMixUpListViewMoreReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynMixUpListViewMore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynLight(ctx context.Context, in *DynLightReq, opts ...grpc.CallOption) (*DynLightReply, error) {
	out := new(DynLightReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynLight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynDetail(ctx context.Context, in *DynDetailReq, opts ...grpc.CallOption) (*DynDetailReply, error) {
	out := new(DynDetailReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) LikeList(ctx context.Context, in *LikeListReq, opts ...grpc.CallOption) (*LikeListReply, error) {
	out := new(LikeListReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/LikeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) RepostList(ctx context.Context, in *RepostListReq, opts ...grpc.CallOption) (*RepostListRsp, error) {
	out := new(RepostListRsp)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/RepostList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynSpace(ctx context.Context, in *DynSpaceReq, opts ...grpc.CallOption) (*DynSpaceRsp, error) {
	out := new(DynSpaceRsp)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynSpace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynUnLoginRcmd(ctx context.Context, in *DynRcmdReq, opts ...grpc.CallOption) (*DynRcmdReply, error) {
	out := new(DynRcmdReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynUnLoginRcmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynServerDetails(ctx context.Context, in *DynServerDetailsReq, opts ...grpc.CallOption) (*DynServerDetailsReply, error) {
	out := new(DynServerDetailsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynServerDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynSearch(ctx context.Context, in *DynSearchReq, opts ...grpc.CallOption) (*DynSearchReply, error) {
	out := new(DynSearchReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) SetDecision(ctx context.Context, in *SetDecisionReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/SetDecision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) AlumniDynamics(ctx context.Context, in *AlumniDynamicsReq, opts ...grpc.CallOption) (*AlumniDynamicsReply, error) {
	out := new(AlumniDynamicsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/AlumniDynamics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusRcmd(ctx context.Context, in *CampusRcmdReq, opts ...grpc.CallOption) (*CampusRcmdReply, error) {
	out := new(CampusRcmdReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusRcmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) SubscribeCampus(ctx context.Context, in *SubscribeCampusReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/SubscribeCampus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) SetRecentCampus(ctx context.Context, in *SetRecentCampusReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/SetRecentCampus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynTab(ctx context.Context, in *DynTabReq, opts ...grpc.CallOption) (*DynTabReply, error) {
	out := new(DynTabReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) SchoolSearch(ctx context.Context, in *SchoolSearchReq, opts ...grpc.CallOption) (*SchoolSearchReply, error) {
	out := new(SchoolSearchReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/SchoolSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) SchoolRecommend(ctx context.Context, in *SchoolRecommendReq, opts ...grpc.CallOption) (*SchoolRecommendReply, error) {
	out := new(SchoolRecommendReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/SchoolRecommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) DynSpaceSearchDetails(ctx context.Context, in *DynSpaceSearchDetailsReq, opts ...grpc.CallOption) (*DynSpaceSearchDetailsReply, error) {
	out := new(DynSpaceSearchDetailsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/DynSpaceSearchDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) OfficialAccounts(ctx context.Context, in *OfficialAccountsReq, opts ...grpc.CallOption) (*OfficialAccountsReply, error) {
	out := new(OfficialAccountsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/OfficialAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) OfficialDynamics(ctx context.Context, in *OfficialDynamicsReq, opts ...grpc.CallOption) (*OfficialDynamicsReply, error) {
	out := new(OfficialDynamicsReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/OfficialDynamics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusRedDot(ctx context.Context, in *CampusRedDotReq, opts ...grpc.CallOption) (*CampusRedDotReply, error) {
	out := new(CampusRedDotReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusRedDot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusRcmdFeed(ctx context.Context, in *CampusRcmdFeedReq, opts ...grpc.CallOption) (*CampusRcmdFeedReply, error) {
	out := new(CampusRcmdFeedReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusRcmdFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) TopicSquare(ctx context.Context, in *TopicSquareReq, opts ...grpc.CallOption) (*TopicSquareReply, error) {
	out := new(TopicSquareReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/TopicSquare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) TopicList(ctx context.Context, in *TopicListReq, opts ...grpc.CallOption) (*TopicListReply, error) {
	out := new(TopicListReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/TopicList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusMateLikeList(ctx context.Context, in *CampusMateLikeListReq, opts ...grpc.CallOption) (*CampusMateLikeListReply, error) {
	out := new(CampusMateLikeListReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusMateLikeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusFeedback(ctx context.Context, in *CampusFeedbackReq, opts ...grpc.CallOption) (*CampusFeedbackReply, error) {
	out := new(CampusFeedbackReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusBillboard(ctx context.Context, in *CampusBillBoardReq, opts ...grpc.CallOption) (*CampusBillBoardReply, error) {
	out := new(CampusBillBoardReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusBillboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusBillboardInternal(ctx context.Context, in *CampusBillboardInternalReq, opts ...grpc.CallOption) (*CampusBillBoardReply, error) {
	out := new(CampusBillBoardReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusBillboardInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusTopicRcmdFeed(ctx context.Context, in *CampusTopicRcmdFeedReq, opts ...grpc.CallOption) (*CampusTopicRcmdFeedReply, error) {
	out := new(CampusTopicRcmdFeedReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusTopicRcmdFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) UnfollowMatch(ctx context.Context, in *UnfollowMatchReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/UnfollowMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) FetchTabSetting(ctx context.Context, in *NoReq, opts ...grpc.CallOption) (*FetchTabSettingReply, error) {
	out := new(FetchTabSettingReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/FetchTabSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) UpdateTabSetting(ctx context.Context, in *UpdateTabSettingReq, opts ...grpc.CallOption) (*NoReply, error) {
	out := new(NoReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/UpdateTabSetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusSquare(ctx context.Context, in *CampusSquareReq, opts ...grpc.CallOption) (*CampusSquareReply, error) {
	out := new(CampusSquareReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusSquare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusRecommend(ctx context.Context, in *CampusRecommendReq, opts ...grpc.CallOption) (*CampusRecommendReply, error) {
	out := new(CampusRecommendReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusRecommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusHomePages(ctx context.Context, in *CampusHomePagesReq, opts ...grpc.CallOption) (*CampusHomePagesReply, error) {
	out := new(CampusHomePagesReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusHomePages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusEntryTab(ctx context.Context, in *CampusEntryTabReq, opts ...grpc.CallOption) (*CampusEntryTabResp, error) {
	out := new(CampusEntryTabResp)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusEntryTab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) HomeSubscribe(ctx context.Context, in *HomeSubscribeReq, opts ...grpc.CallOption) (*HomeSubscribeReply, error) {
	out := new(HomeSubscribeReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/HomeSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) LbsPoi(ctx context.Context, in *LbsPoiReq, opts ...grpc.CallOption) (*LbsPoiReply, error) {
	out := new(LbsPoiReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/LbsPoi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) FeedFilter(ctx context.Context, in *FeedFilterReq, opts ...grpc.CallOption) (*FeedFilterReply, error) {
	out := new(FeedFilterReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/FeedFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusMngDetail(ctx context.Context, in *CampusMngDetailReq, opts ...grpc.CallOption) (*CampusMngDetailReply, error) {
	out := new(CampusMngDetailReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusMngDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusMngSubmit(ctx context.Context, in *CampusMngSubmitReq, opts ...grpc.CallOption) (*CampusMngSubmitReply, error) {
	out := new(CampusMngSubmitReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusMngSubmit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) CampusMngQuizOperate(ctx context.Context, in *CampusMngQuizOperateReq, opts ...grpc.CallOption) (*CampusMngQuizOperateReply, error) {
	out := new(CampusMngQuizOperateReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/CampusMngQuizOperate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicClient) LegacyTopicFeed(ctx context.Context, in *LegacyTopicFeedReq, opts ...grpc.CallOption) (*LegacyTopicFeedReply, error) {
	out := new(LegacyTopicFeedReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.dynamic.v2.Dynamic/LegacyTopicFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynamicServer is the server API for Dynamic service.
type DynamicServer interface {
	// 动态视频页
	DynVideo(context.Context, *DynVideoReq) (*DynVideoReply, error)
	// 动态综合页
	DynAll(context.Context, *DynAllReq) (*DynAllReply, error)
	// 批量动态id获取动态详情
	DynDetails(context.Context, *DynDetailsReq) (*DynDetailsReply, error)
	// 视频页最近访问 - 个人feed流
	DynVideoPersonal(context.Context, *DynVideoPersonalReq) (*DynVideoPersonalReply, error)
	// 视频页最近访问 - 标记已读
	DynVideoUpdOffset(context.Context, *DynVideoUpdOffsetReq) (*NoReply, error)
	// 动态通用附加卡-follow/取消follow
	DynAdditionCommonFollow(context.Context, *DynAdditionCommonFollowReq) (*DynAdditionCommonFollowReply, error)
	// 动态点赞
	DynThumb(context.Context, *DynThumbReq) (*NoReply, error)
	// 动态发布生成临时卡
	DynFakeCard(context.Context, *DynFakeCardReq) (*DynFakeCardReply, error)
	// 0关注推荐up主换一换
	DynRcmdUpExchange(context.Context, *DynRcmdUpExchangeReq) (*DynRcmdUpExchangeReply, error)
	// 综合页最近访问 - 个人feed流
	DynAllPersonal(context.Context, *DynAllPersonalReq) (*DynAllPersonalReply, error)
	// 综合页最近访问 - 标记已读
	DynAllUpdOffset(context.Context, *DynAllUpdOffsetReq) (*NoReply, error)
	// 投票操作接口
	DynVote(context.Context, *DynVoteReq) (*DynVoteReply, error)
	// 网关调用 - 查看更多-列表
	DynMixUpListViewMore(context.Context, *DynMixUpListViewMoreReq) (*DynMixUpListViewMoreReply, error)
	// 轻浏览
	DynLight(context.Context, *DynLightReq) (*DynLightReply, error)
	// 动态详情页
	DynDetail(context.Context, *DynDetailReq) (*DynDetailReply, error)
	// 点赞列表
	LikeList(context.Context, *LikeListReq) (*LikeListReply, error)
	// 转发列表
	RepostList(context.Context, *RepostListReq) (*RepostListRsp, error)
	// 空间页动态
	DynSpace(context.Context, *DynSpaceReq) (*DynSpaceRsp, error)
	// 未登录页分区UP主推荐
	DynUnLoginRcmd(context.Context, *DynRcmdReq) (*DynRcmdReply, error)
	// 动态id批量查询接口 - 服务端使用
	DynServerDetails(context.Context, *DynServerDetailsReq) (*DynServerDetailsReply, error)
	// 动态垂搜
	DynSearch(context.Context, *DynSearchReq) (*DynSearchReply, error)
	// 设置同城校园二选一结果
	SetDecision(context.Context, *SetDecisionReq) (*NoReply, error)
	// 校友圈FEED流
	AlumniDynamics(context.Context, *AlumniDynamicsReq) (*AlumniDynamicsReply, error)
	// 动态校园首页 开放/未开放（包括顶部卡+学校推荐列表）
	CampusRcmd(context.Context, *CampusRcmdReq) (*CampusRcmdReply, error)
	// 设置预约校园开放通知
	SubscribeCampus(context.Context, *SubscribeCampusReq) (*NoReply, error)
	// 设置校园
	SetRecentCampus(context.Context, *SetRecentCampusReq) (*NoReply, error)
	// 动态tab页
	DynTab(context.Context, *DynTabReq) (*DynTabReply, error)
	// 学校搜索
	SchoolSearch(context.Context, *SchoolSearchReq) (*SchoolSearchReply, error)
	// 学校搜索推荐
	SchoolRecommend(context.Context, *SchoolRecommendReq) (*SchoolRecommendReply, error)
	// 动态空间搜索页 - 网关调用
	DynSpaceSearchDetails(context.Context, *DynSpaceSearchDetailsReq) (*DynSpaceSearchDetailsReply, error)
	// 官方账号
	OfficialAccounts(context.Context, *OfficialAccountsReq) (*OfficialAccountsReply, error)
	// 入校必看
	OfficialDynamics(context.Context, *OfficialDynamicsReq) (*OfficialDynamicsReply, error)
	// 红点展示
	CampusRedDot(context.Context, *CampusRedDotReq) (*CampusRedDotReply, error)
	// 校内主推荐FEED流 V2
	CampusRcmdFeed(context.Context, *CampusRcmdFeedReq) (*CampusRcmdFeedReply, error)
	// 话题广场
	TopicSquare(context.Context, *TopicSquareReq) (*TopicSquareReply, error)
	// 校园话题列表
	TopicList(context.Context, *TopicListReq) (*TopicListReply, error)
	// 校园动态同学点赞列表 - 获取哪些同学给该动态点过赞
	CampusMateLikeList(context.Context, *CampusMateLikeListReq) (*CampusMateLikeListReply, error)
	// 校友用户反馈 - 移除内容/负反馈
	CampusFeedback(context.Context, *CampusFeedbackReq) (*CampusFeedbackReply, error)
	// 校园十大榜单 - 校园热点
	CampusBillboard(context.Context, *CampusBillBoardReq) (*CampusBillBoardReply, error)
	// 校园十大榜单 - 校园热点（内部h5分享网关调用）只有预定义的app-key鉴权 没有对端鉴权措施 使用请联系研发获取说明
	CampusBillboardInternal(context.Context, *CampusBillboardInternalReq) (*CampusBillBoardReply, error)
	// 校园话题讨论 - 动态Feed流
	CampusTopicRcmdFeed(context.Context, *CampusTopicRcmdFeedReq) (*CampusTopicRcmdFeedReply, error)
	// 取消追漫卡
	UnfollowMatch(context.Context, *UnfollowMatchReq) (*NoReply, error)
	// 查询首页校园tab屏蔽开关设置项
	FetchTabSetting(context.Context, *NoReq) (*FetchTabSettingReply, error)
	// 更新首页校园tab屏蔽开关设置项
	UpdateTabSetting(context.Context, *UpdateTabSettingReq) (*NoReply, error)
	// 校园广场（其他院校的顶部学校推荐）
	CampusSquare(context.Context, *CampusSquareReq) (*CampusSquareReply, error)
	// 校园混排推荐流（其他院校/未开放页的推荐feed）
	CampusRecommend(context.Context, *CampusRecommendReq) (*CampusRecommendReply, error)
	// 首页校园主页 开放/未开放（包括顶部卡+学校推荐列表）
	CampusHomePages(context.Context, *CampusHomePagesReq) (*CampusHomePagesReply, error)
	// 校园入口类型（端上请求是首页入口还是动态入口）
	CampusEntryTab(context.Context, *CampusEntryTabReq) (*CampusEntryTabResp, error)
	// 设置预约校园开放通知
	HomeSubscribe(context.Context, *HomeSubscribeReq) (*HomeSubscribeReply, error)
	// LBS动态
	LbsPoi(context.Context, *LbsPoiReq) (*LbsPoiReply, error)
	// 动态筛选器接口
	FeedFilter(context.Context, *FeedFilterReq) (*FeedFilterReply, error)
	// 校园官号管理页详情
	CampusMngDetail(context.Context, *CampusMngDetailReq) (*CampusMngDetailReply, error)
	// 校园官号管理页提交
	CampusMngSubmit(context.Context, *CampusMngSubmitReq) (*CampusMngSubmitReply, error)
	// 校园官号管理 入园题目管理
	CampusMngQuizOperate(context.Context, *CampusMngQuizOperateReq) (*CampusMngQuizOperateReply, error)
	// 老话题feed流 目前用于替换频道下的老话题tab
	LegacyTopicFeed(context.Context, *LegacyTopicFeedReq) (*LegacyTopicFeedReply, error)
}

// UnimplementedDynamicServer can be embedded to have forward compatible implementations.
type UnimplementedDynamicServer struct {
}

func (*UnimplementedDynamicServer) DynVideo(ctx context.Context, req *DynVideoReq) (*DynVideoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynVideo not implemented")
}
func (*UnimplementedDynamicServer) DynAll(ctx context.Context, req *DynAllReq) (*DynAllReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynAll not implemented")
}
func (*UnimplementedDynamicServer) DynDetails(ctx context.Context, req *DynDetailsReq) (*DynDetailsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynDetails not implemented")
}
func (*UnimplementedDynamicServer) DynVideoPersonal(ctx context.Context, req *DynVideoPersonalReq) (*DynVideoPersonalReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynVideoPersonal not implemented")
}
func (*UnimplementedDynamicServer) DynVideoUpdOffset(ctx context.Context, req *DynVideoUpdOffsetReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynVideoUpdOffset not implemented")
}
func (*UnimplementedDynamicServer) DynAdditionCommonFollow(ctx context.Context, req *DynAdditionCommonFollowReq) (*DynAdditionCommonFollowReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynAdditionCommonFollow not implemented")
}
func (*UnimplementedDynamicServer) DynThumb(ctx context.Context, req *DynThumbReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynThumb not implemented")
}
func (*UnimplementedDynamicServer) DynFakeCard(ctx context.Context, req *DynFakeCardReq) (*DynFakeCardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynFakeCard not implemented")
}
func (*UnimplementedDynamicServer) DynRcmdUpExchange(ctx context.Context, req *DynRcmdUpExchangeReq) (*DynRcmdUpExchangeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynRcmdUpExchange not implemented")
}
func (*UnimplementedDynamicServer) DynAllPersonal(ctx context.Context, req *DynAllPersonalReq) (*DynAllPersonalReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynAllPersonal not implemented")
}
func (*UnimplementedDynamicServer) DynAllUpdOffset(ctx context.Context, req *DynAllUpdOffsetReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynAllUpdOffset not implemented")
}
func (*UnimplementedDynamicServer) DynVote(ctx context.Context, req *DynVoteReq) (*DynVoteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynVote not implemented")
}
func (*UnimplementedDynamicServer) DynMixUpListViewMore(ctx context.Context, req *DynMixUpListViewMoreReq) (*DynMixUpListViewMoreReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynMixUpListViewMore not implemented")
}
func (*UnimplementedDynamicServer) DynLight(ctx context.Context, req *DynLightReq) (*DynLightReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynLight not implemented")
}
func (*UnimplementedDynamicServer) DynDetail(ctx context.Context, req *DynDetailReq) (*DynDetailReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynDetail not implemented")
}
func (*UnimplementedDynamicServer) LikeList(ctx context.Context, req *LikeListReq) (*LikeListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeList not implemented")
}
func (*UnimplementedDynamicServer) RepostList(ctx context.Context, req *RepostListReq) (*RepostListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepostList not implemented")
}
func (*UnimplementedDynamicServer) DynSpace(ctx context.Context, req *DynSpaceReq) (*DynSpaceRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynSpace not implemented")
}
func (*UnimplementedDynamicServer) DynUnLoginRcmd(ctx context.Context, req *DynRcmdReq) (*DynRcmdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynUnLoginRcmd not implemented")
}
func (*UnimplementedDynamicServer) DynServerDetails(ctx context.Context, req *DynServerDetailsReq) (*DynServerDetailsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynServerDetails not implemented")
}
func (*UnimplementedDynamicServer) DynSearch(ctx context.Context, req *DynSearchReq) (*DynSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynSearch not implemented")
}
func (*UnimplementedDynamicServer) SetDecision(ctx context.Context, req *SetDecisionReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDecision not implemented")
}
func (*UnimplementedDynamicServer) AlumniDynamics(ctx context.Context, req *AlumniDynamicsReq) (*AlumniDynamicsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlumniDynamics not implemented")
}
func (*UnimplementedDynamicServer) CampusRcmd(ctx context.Context, req *CampusRcmdReq) (*CampusRcmdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusRcmd not implemented")
}
func (*UnimplementedDynamicServer) SubscribeCampus(ctx context.Context, req *SubscribeCampusReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubscribeCampus not implemented")
}
func (*UnimplementedDynamicServer) SetRecentCampus(ctx context.Context, req *SetRecentCampusReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRecentCampus not implemented")
}
func (*UnimplementedDynamicServer) DynTab(ctx context.Context, req *DynTabReq) (*DynTabReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynTab not implemented")
}
func (*UnimplementedDynamicServer) SchoolSearch(ctx context.Context, req *SchoolSearchReq) (*SchoolSearchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchoolSearch not implemented")
}
func (*UnimplementedDynamicServer) SchoolRecommend(ctx context.Context, req *SchoolRecommendReq) (*SchoolRecommendReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchoolRecommend not implemented")
}
func (*UnimplementedDynamicServer) DynSpaceSearchDetails(ctx context.Context, req *DynSpaceSearchDetailsReq) (*DynSpaceSearchDetailsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynSpaceSearchDetails not implemented")
}
func (*UnimplementedDynamicServer) OfficialAccounts(ctx context.Context, req *OfficialAccountsReq) (*OfficialAccountsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfficialAccounts not implemented")
}
func (*UnimplementedDynamicServer) OfficialDynamics(ctx context.Context, req *OfficialDynamicsReq) (*OfficialDynamicsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfficialDynamics not implemented")
}
func (*UnimplementedDynamicServer) CampusRedDot(ctx context.Context, req *CampusRedDotReq) (*CampusRedDotReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusRedDot not implemented")
}
func (*UnimplementedDynamicServer) CampusRcmdFeed(ctx context.Context, req *CampusRcmdFeedReq) (*CampusRcmdFeedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusRcmdFeed not implemented")
}
func (*UnimplementedDynamicServer) TopicSquare(ctx context.Context, req *TopicSquareReq) (*TopicSquareReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopicSquare not implemented")
}
func (*UnimplementedDynamicServer) TopicList(ctx context.Context, req *TopicListReq) (*TopicListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopicList not implemented")
}
func (*UnimplementedDynamicServer) CampusMateLikeList(ctx context.Context, req *CampusMateLikeListReq) (*CampusMateLikeListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusMateLikeList not implemented")
}
func (*UnimplementedDynamicServer) CampusFeedback(ctx context.Context, req *CampusFeedbackReq) (*CampusFeedbackReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusFeedback not implemented")
}
func (*UnimplementedDynamicServer) CampusBillboard(ctx context.Context, req *CampusBillBoardReq) (*CampusBillBoardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusBillboard not implemented")
}
func (*UnimplementedDynamicServer) CampusBillboardInternal(ctx context.Context, req *CampusBillboardInternalReq) (*CampusBillBoardReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusBillboardInternal not implemented")
}
func (*UnimplementedDynamicServer) CampusTopicRcmdFeed(ctx context.Context, req *CampusTopicRcmdFeedReq) (*CampusTopicRcmdFeedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusTopicRcmdFeed not implemented")
}
func (*UnimplementedDynamicServer) UnfollowMatch(ctx context.Context, req *UnfollowMatchReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnfollowMatch not implemented")
}
func (*UnimplementedDynamicServer) FetchTabSetting(ctx context.Context, req *NoReq) (*FetchTabSettingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchTabSetting not implemented")
}
func (*UnimplementedDynamicServer) UpdateTabSetting(ctx context.Context, req *UpdateTabSettingReq) (*NoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTabSetting not implemented")
}
func (*UnimplementedDynamicServer) CampusSquare(ctx context.Context, req *CampusSquareReq) (*CampusSquareReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusSquare not implemented")
}
func (*UnimplementedDynamicServer) CampusRecommend(ctx context.Context, req *CampusRecommendReq) (*CampusRecommendReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusRecommend not implemented")
}
func (*UnimplementedDynamicServer) CampusHomePages(ctx context.Context, req *CampusHomePagesReq) (*CampusHomePagesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusHomePages not implemented")
}
func (*UnimplementedDynamicServer) CampusEntryTab(ctx context.Context, req *CampusEntryTabReq) (*CampusEntryTabResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusEntryTab not implemented")
}
func (*UnimplementedDynamicServer) HomeSubscribe(ctx context.Context, req *HomeSubscribeReq) (*HomeSubscribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HomeSubscribe not implemented")
}
func (*UnimplementedDynamicServer) LbsPoi(ctx context.Context, req *LbsPoiReq) (*LbsPoiReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LbsPoi not implemented")
}
func (*UnimplementedDynamicServer) FeedFilter(ctx context.Context, req *FeedFilterReq) (*FeedFilterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FeedFilter not implemented")
}
func (*UnimplementedDynamicServer) CampusMngDetail(ctx context.Context, req *CampusMngDetailReq) (*CampusMngDetailReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusMngDetail not implemented")
}
func (*UnimplementedDynamicServer) CampusMngSubmit(ctx context.Context, req *CampusMngSubmitReq) (*CampusMngSubmitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusMngSubmit not implemented")
}
func (*UnimplementedDynamicServer) CampusMngQuizOperate(ctx context.Context, req *CampusMngQuizOperateReq) (*CampusMngQuizOperateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CampusMngQuizOperate not implemented")
}
func (*UnimplementedDynamicServer) LegacyTopicFeed(ctx context.Context, req *LegacyTopicFeedReq) (*LegacyTopicFeedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegacyTopicFeed not implemented")
}

func RegisterDynamicServer(s *grpc.Server, srv DynamicServer) {
	s.RegisterService(&_Dynamic_serviceDesc, srv)
}

func _Dynamic_DynVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynVideoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynVideo(ctx, req.(*DynVideoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynAllReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynAll(ctx, req.(*DynAllReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynDetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynDetails(ctx, req.(*DynDetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynVideoPersonal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynVideoPersonalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynVideoPersonal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynVideoPersonal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynVideoPersonal(ctx, req.(*DynVideoPersonalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynVideoUpdOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynVideoUpdOffsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynVideoUpdOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynVideoUpdOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynVideoUpdOffset(ctx, req.(*DynVideoUpdOffsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynAdditionCommonFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynAdditionCommonFollowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynAdditionCommonFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynAdditionCommonFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynAdditionCommonFollow(ctx, req.(*DynAdditionCommonFollowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynThumb_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynThumbReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynThumb(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynThumb",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynThumb(ctx, req.(*DynThumbReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynFakeCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynFakeCardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynFakeCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynFakeCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynFakeCard(ctx, req.(*DynFakeCardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynRcmdUpExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynRcmdUpExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynRcmdUpExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynRcmdUpExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynRcmdUpExchange(ctx, req.(*DynRcmdUpExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynAllPersonal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynAllPersonalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynAllPersonal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynAllPersonal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynAllPersonal(ctx, req.(*DynAllPersonalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynAllUpdOffset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynAllUpdOffsetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynAllUpdOffset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynAllUpdOffset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynAllUpdOffset(ctx, req.(*DynAllUpdOffsetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynVoteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynVote(ctx, req.(*DynVoteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynMixUpListViewMore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynMixUpListViewMoreReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynMixUpListViewMore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynMixUpListViewMore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynMixUpListViewMore(ctx, req.(*DynMixUpListViewMoreReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynLight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynLightReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynLight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynLight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynLight(ctx, req.(*DynLightReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynDetail(ctx, req.(*DynDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_LikeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).LikeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/LikeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).LikeList(ctx, req.(*LikeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_RepostList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepostListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).RepostList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/RepostList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).RepostList(ctx, req.(*RepostListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynSpaceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynSpace(ctx, req.(*DynSpaceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynUnLoginRcmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynRcmdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynUnLoginRcmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynUnLoginRcmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynUnLoginRcmd(ctx, req.(*DynRcmdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynServerDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynServerDetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynServerDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynServerDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynServerDetails(ctx, req.(*DynServerDetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynSearch(ctx, req.(*DynSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_SetDecision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDecisionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).SetDecision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/SetDecision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).SetDecision(ctx, req.(*SetDecisionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_AlumniDynamics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlumniDynamicsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).AlumniDynamics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/AlumniDynamics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).AlumniDynamics(ctx, req.(*AlumniDynamicsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusRcmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusRcmdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusRcmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusRcmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusRcmd(ctx, req.(*CampusRcmdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_SubscribeCampus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeCampusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).SubscribeCampus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/SubscribeCampus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).SubscribeCampus(ctx, req.(*SubscribeCampusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_SetRecentCampus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRecentCampusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).SetRecentCampus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/SetRecentCampus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).SetRecentCampus(ctx, req.(*SetRecentCampusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynTabReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynTab(ctx, req.(*DynTabReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_SchoolSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchoolSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).SchoolSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/SchoolSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).SchoolSearch(ctx, req.(*SchoolSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_SchoolRecommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchoolRecommendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).SchoolRecommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/SchoolRecommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).SchoolRecommend(ctx, req.(*SchoolRecommendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_DynSpaceSearchDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynSpaceSearchDetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).DynSpaceSearchDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/DynSpaceSearchDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).DynSpaceSearchDetails(ctx, req.(*DynSpaceSearchDetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_OfficialAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfficialAccountsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).OfficialAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/OfficialAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).OfficialAccounts(ctx, req.(*OfficialAccountsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_OfficialDynamics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfficialDynamicsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).OfficialDynamics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/OfficialDynamics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).OfficialDynamics(ctx, req.(*OfficialDynamicsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusRedDot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusRedDotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusRedDot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusRedDot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusRedDot(ctx, req.(*CampusRedDotReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusRcmdFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusRcmdFeedReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusRcmdFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusRcmdFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusRcmdFeed(ctx, req.(*CampusRcmdFeedReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_TopicSquare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicSquareReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).TopicSquare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/TopicSquare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).TopicSquare(ctx, req.(*TopicSquareReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_TopicList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).TopicList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/TopicList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).TopicList(ctx, req.(*TopicListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusMateLikeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusMateLikeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusMateLikeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusMateLikeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusMateLikeList(ctx, req.(*CampusMateLikeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusFeedbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusFeedback(ctx, req.(*CampusFeedbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusBillboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusBillBoardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusBillboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusBillboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusBillboard(ctx, req.(*CampusBillBoardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusBillboardInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusBillboardInternalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusBillboardInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusBillboardInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusBillboardInternal(ctx, req.(*CampusBillboardInternalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusTopicRcmdFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusTopicRcmdFeedReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusTopicRcmdFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusTopicRcmdFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusTopicRcmdFeed(ctx, req.(*CampusTopicRcmdFeedReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_UnfollowMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnfollowMatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).UnfollowMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/UnfollowMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).UnfollowMatch(ctx, req.(*UnfollowMatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_FetchTabSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).FetchTabSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/FetchTabSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).FetchTabSetting(ctx, req.(*NoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_UpdateTabSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTabSettingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).UpdateTabSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/UpdateTabSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).UpdateTabSetting(ctx, req.(*UpdateTabSettingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusSquare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusSquareReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusSquare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusSquare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusSquare(ctx, req.(*CampusSquareReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusRecommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusRecommendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusRecommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusRecommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusRecommend(ctx, req.(*CampusRecommendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusHomePages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusHomePagesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusHomePages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusHomePages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusHomePages(ctx, req.(*CampusHomePagesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusEntryTab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusEntryTabReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusEntryTab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusEntryTab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusEntryTab(ctx, req.(*CampusEntryTabReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_HomeSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomeSubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).HomeSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/HomeSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).HomeSubscribe(ctx, req.(*HomeSubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_LbsPoi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LbsPoiReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).LbsPoi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/LbsPoi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).LbsPoi(ctx, req.(*LbsPoiReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_FeedFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedFilterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).FeedFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/FeedFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).FeedFilter(ctx, req.(*FeedFilterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusMngDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusMngDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusMngDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusMngDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusMngDetail(ctx, req.(*CampusMngDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusMngSubmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusMngSubmitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusMngSubmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusMngSubmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusMngSubmit(ctx, req.(*CampusMngSubmitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_CampusMngQuizOperate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CampusMngQuizOperateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).CampusMngQuizOperate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/CampusMngQuizOperate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).CampusMngQuizOperate(ctx, req.(*CampusMngQuizOperateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynamic_LegacyTopicFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LegacyTopicFeedReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicServer).LegacyTopicFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.dynamic.v2.Dynamic/LegacyTopicFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicServer).LegacyTopicFeed(ctx, req.(*LegacyTopicFeedReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dynamic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.app.dynamic.v2.Dynamic",
	HandlerType: (*DynamicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DynVideo",
			Handler:    _Dynamic_DynVideo_Handler,
		},
		{
			MethodName: "DynAll",
			Handler:    _Dynamic_DynAll_Handler,
		},
		{
			MethodName: "DynDetails",
			Handler:    _Dynamic_DynDetails_Handler,
		},
		{
			MethodName: "DynVideoPersonal",
			Handler:    _Dynamic_DynVideoPersonal_Handler,
		},
		{
			MethodName: "DynVideoUpdOffset",
			Handler:    _Dynamic_DynVideoUpdOffset_Handler,
		},
		{
			MethodName: "DynAdditionCommonFollow",
			Handler:    _Dynamic_DynAdditionCommonFollow_Handler,
		},
		{
			MethodName: "DynThumb",
			Handler:    _Dynamic_DynThumb_Handler,
		},
		{
			MethodName: "DynFakeCard",
			Handler:    _Dynamic_DynFakeCard_Handler,
		},
		{
			MethodName: "DynRcmdUpExchange",
			Handler:    _Dynamic_DynRcmdUpExchange_Handler,
		},
		{
			MethodName: "DynAllPersonal",
			Handler:    _Dynamic_DynAllPersonal_Handler,
		},
		{
			MethodName: "DynAllUpdOffset",
			Handler:    _Dynamic_DynAllUpdOffset_Handler,
		},
		{
			MethodName: "DynVote",
			Handler:    _Dynamic_DynVote_Handler,
		},
		{
			MethodName: "DynMixUpListViewMore",
			Handler:    _Dynamic_DynMixUpListViewMore_Handler,
		},
		{
			MethodName: "DynLight",
			Handler:    _Dynamic_DynLight_Handler,
		},
		{
			MethodName: "DynDetail",
			Handler:    _Dynamic_DynDetail_Handler,
		},
		{
			MethodName: "LikeList",
			Handler:    _Dynamic_LikeList_Handler,
		},
		{
			MethodName: "RepostList",
			Handler:    _Dynamic_RepostList_Handler,
		},
		{
			MethodName: "DynSpace",
			Handler:    _Dynamic_DynSpace_Handler,
		},
		{
			MethodName: "DynUnLoginRcmd",
			Handler:    _Dynamic_DynUnLoginRcmd_Handler,
		},
		{
			MethodName: "DynServerDetails",
			Handler:    _Dynamic_DynServerDetails_Handler,
		},
		{
			MethodName: "DynSearch",
			Handler:    _Dynamic_DynSearch_Handler,
		},
		{
			MethodName: "SetDecision",
			Handler:    _Dynamic_SetDecision_Handler,
		},
		{
			MethodName: "AlumniDynamics",
			Handler:    _Dynamic_AlumniDynamics_Handler,
		},
		{
			MethodName: "CampusRcmd",
			Handler:    _Dynamic_CampusRcmd_Handler,
		},
		{
			MethodName: "SubscribeCampus",
			Handler:    _Dynamic_SubscribeCampus_Handler,
		},
		{
			MethodName: "SetRecentCampus",
			Handler:    _Dynamic_SetRecentCampus_Handler,
		},
		{
			MethodName: "DynTab",
			Handler:    _Dynamic_DynTab_Handler,
		},
		{
			MethodName: "SchoolSearch",
			Handler:    _Dynamic_SchoolSearch_Handler,
		},
		{
			MethodName: "SchoolRecommend",
			Handler:    _Dynamic_SchoolRecommend_Handler,
		},
		{
			MethodName: "DynSpaceSearchDetails",
			Handler:    _Dynamic_DynSpaceSearchDetails_Handler,
		},
		{
			MethodName: "OfficialAccounts",
			Handler:    _Dynamic_OfficialAccounts_Handler,
		},
		{
			MethodName: "OfficialDynamics",
			Handler:    _Dynamic_OfficialDynamics_Handler,
		},
		{
			MethodName: "CampusRedDot",
			Handler:    _Dynamic_CampusRedDot_Handler,
		},
		{
			MethodName: "CampusRcmdFeed",
			Handler:    _Dynamic_CampusRcmdFeed_Handler,
		},
		{
			MethodName: "TopicSquare",
			Handler:    _Dynamic_TopicSquare_Handler,
		},
		{
			MethodName: "TopicList",
			Handler:    _Dynamic_TopicList_Handler,
		},
		{
			MethodName: "CampusMateLikeList",
			Handler:    _Dynamic_CampusMateLikeList_Handler,
		},
		{
			MethodName: "CampusFeedback",
			Handler:    _Dynamic_CampusFeedback_Handler,
		},
		{
			MethodName: "CampusBillboard",
			Handler:    _Dynamic_CampusBillboard_Handler,
		},
		{
			MethodName: "CampusBillboardInternal",
			Handler:    _Dynamic_CampusBillboardInternal_Handler,
		},
		{
			MethodName: "CampusTopicRcmdFeed",
			Handler:    _Dynamic_CampusTopicRcmdFeed_Handler,
		},
		{
			MethodName: "UnfollowMatch",
			Handler:    _Dynamic_UnfollowMatch_Handler,
		},
		{
			MethodName: "FetchTabSetting",
			Handler:    _Dynamic_FetchTabSetting_Handler,
		},
		{
			MethodName: "UpdateTabSetting",
			Handler:    _Dynamic_UpdateTabSetting_Handler,
		},
		{
			MethodName: "CampusSquare",
			Handler:    _Dynamic_CampusSquare_Handler,
		},
		{
			MethodName: "CampusRecommend",
			Handler:    _Dynamic_CampusRecommend_Handler,
		},
		{
			MethodName: "CampusHomePages",
			Handler:    _Dynamic_CampusHomePages_Handler,
		},
		{
			MethodName: "CampusEntryTab",
			Handler:    _Dynamic_CampusEntryTab_Handler,
		},
		{
			MethodName: "HomeSubscribe",
			Handler:    _Dynamic_HomeSubscribe_Handler,
		},
		{
			MethodName: "LbsPoi",
			Handler:    _Dynamic_LbsPoi_Handler,
		},
		{
			MethodName: "FeedFilter",
			Handler:    _Dynamic_FeedFilter_Handler,
		},
		{
			MethodName: "CampusMngDetail",
			Handler:    _Dynamic_CampusMngDetail_Handler,
		},
		{
			MethodName: "CampusMngSubmit",
			Handler:    _Dynamic_CampusMngSubmit_Handler,
		},
		{
			MethodName: "CampusMngQuizOperate",
			Handler:    _Dynamic_CampusMngQuizOperate_Handler,
		},
		{
			MethodName: "LegacyTopicFeed",
			Handler:    _Dynamic_LegacyTopicFeed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go-gateway/app/app-svr/app-dynamic/interface/api/v2/dynamicV2.proto",
}

func (m *NoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *NoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DynVideoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVideoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVideoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x42
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x38
	}
	if len(m.AssistBaseline) > 0 {
		i -= len(m.AssistBaseline)
		copy(dAtA[i:], m.AssistBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AssistBaseline)))
		i--
		dAtA[i] = 0x32
	}
	if m.PlayurlParam != nil {
		{
			size, err := m.PlayurlParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.RefreshType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RefreshType))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UpdateBaseline) > 0 {
		i -= len(m.UpdateBaseline)
		copy(dAtA[i:], m.UpdateBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateBaseline)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PlayurlParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayurlParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlayurlParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Fourk != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Fourk))
		i--
		dAtA[i] = 0x28
	}
	if m.ForceHost != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ForceHost))
		i--
		dAtA[i] = 0x20
	}
	if m.Fnval != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Fnval))
		i--
		dAtA[i] = 0x18
	}
	if m.Fnver != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Fnver))
		i--
		dAtA[i] = 0x10
	}
	if m.Qn != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Qn))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynVideoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVideoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVideoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.VideoFollowList != nil {
		{
			size, err := m.VideoFollowList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.VideoUpList != nil {
		{
			size, err := m.VideoUpList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DynamicList != nil {
		{
			size, err := m.DynamicList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CardVideoDynList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CardVideoDynList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CardVideoDynList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.UpdateBaseline) > 0 {
		i -= len(m.UpdateBaseline)
		copy(dAtA[i:], m.UpdateBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateBaseline)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.HistoryOffset) > 0 {
		i -= len(m.HistoryOffset)
		copy(dAtA[i:], m.HistoryOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HistoryOffset)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UpdateNum != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UpdateNum))
		i--
		dAtA[i] = 0x10
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynamicItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerInfo) > 0 {
		i -= len(m.ServerInfo)
		copy(dAtA[i:], m.ServerInfo)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ServerInfo)))
		i--
		dAtA[i] = 0x32
	}
	if m.HasFold != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HasFold))
		i--
		dAtA[i] = 0x28
	}
	if m.Extend != nil {
		{
			size, err := m.Extend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Modules) > 0 {
		for iNdEx := len(m.Modules) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Modules[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ItemType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ItemType))
		i--
		dAtA[i] = 0x10
	}
	if m.CardType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CardType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Module) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Module) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModuleItem != nil {
		{
			size := m.ModuleItem.Size()
			i -= size
			if _, err := m.ModuleItem.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ModuleType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ModuleType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Module_ModuleAuthor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleAuthor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleAuthor != nil {
		{
			size, err := m.ModuleAuthor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleDispute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleDispute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleDispute != nil {
		{
			size, err := m.ModuleDispute.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleDesc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleDesc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleDesc != nil {
		{
			size, err := m.ModuleDesc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleDynamic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleDynamic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleDynamic != nil {
		{
			size, err := m.ModuleDynamic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleLikeUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleLikeUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleLikeUser != nil {
		{
			size, err := m.ModuleLikeUser.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleExtend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleExtend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleExtend != nil {
		{
			size, err := m.ModuleExtend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleAdditional) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleAdditional) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleAdditional != nil {
		{
			size, err := m.ModuleAdditional.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleStat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleStat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleStat != nil {
		{
			size, err := m.ModuleStat.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleFold) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleFold) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleFold != nil {
		{
			size, err := m.ModuleFold.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleComment != nil {
		{
			size, err := m.ModuleComment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleInteraction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleInteraction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleInteraction != nil {
		{
			size, err := m.ModuleInteraction.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleAuthorForward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleAuthorForward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleAuthorForward != nil {
		{
			size, err := m.ModuleAuthorForward.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleAd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleAd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleAd != nil {
		{
			size, err := m.ModuleAd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleBanner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleBanner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleBanner != nil {
		{
			size, err := m.ModuleBanner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleItemNull) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleItemNull) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleItemNull != nil {
		{
			size, err := m.ModuleItemNull.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleShareInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleShareInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleShareInfo != nil {
		{
			size, err := m.ModuleShareInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleRecommend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleRecommend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleRecommend != nil {
		{
			size, err := m.ModuleRecommend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTop != nil {
		{
			size, err := m.ModuleTop.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleButtom) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleButtom) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleButtom != nil {
		{
			size, err := m.ModuleButtom.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleStatForward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleStatForward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleStatForward != nil {
		{
			size, err := m.ModuleStatForward.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleStory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleStory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleStory != nil {
		{
			size, err := m.ModuleStory.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTopic != nil {
		{
			size, err := m.ModuleTopic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTopicDetailsExt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTopicDetailsExt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTopicDetailsExt != nil {
		{
			size, err := m.ModuleTopicDetailsExt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTopTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTopTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTopTag != nil {
		{
			size, err := m.ModuleTopTag.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTopicBrief) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTopicBrief) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTopicBrief != nil {
		{
			size, err := m.ModuleTopicBrief.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleTitle != nil {
		{
			size, err := m.ModuleTitle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleButton != nil {
		{
			size, err := m.ModuleButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	return len(dAtA) - i, nil
}
func (m *Module_ModuleNotice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Module_ModuleNotice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ModuleNotice != nil {
		{
			size, err := m.ModuleNotice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}
func (m *ModuleTopTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTopTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTopTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAuthor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAuthor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAuthor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShowLevel {
		i--
		if m.ShowLevel {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x78
	}
	if len(m.PtimeLocationText) > 0 {
		i -= len(m.PtimeLocationText)
		copy(dAtA[i:], m.PtimeLocationText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PtimeLocationText)))
		i--
		dAtA[i] = 0x72
	}
	if m.IsTop {
		i--
		if m.IsTop {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.ShowFollow {
		i--
		if m.ShowFollow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.Weight != nil {
		{
			size, err := m.Weight.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.Attend != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Attend))
		i--
		dAtA[i] = 0x48
	}
	if m.BadgeButton != nil {
		{
			size, err := m.BadgeButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.BadgeType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BadgeType))
		i--
		dAtA[i] = 0x38
	}
	if len(m.TpList) > 0 {
		for iNdEx := len(m.TpList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TpList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DecorateCard != nil {
		{
			size, err := m.DecorateCard.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PtimeLabelText) > 0 {
		i -= len(m.PtimeLabelText)
		copy(dAtA[i:], m.PtimeLabelText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PtimeLabelText)))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsSeniorMember != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsSeniorMember))
		i--
		dAtA[i] = 0x78
	}
	if m.NftInfo != nil {
		{
			size, err := m.NftInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.FaceNftNew != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FaceNftNew))
		i--
		dAtA[i] = 0x68
	}
	if m.FaceNft != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FaceNft))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Sign) > 0 {
		i -= len(m.Sign)
		copy(dAtA[i:], m.Sign)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Sign)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Level != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x50
	}
	if m.Nameplate != nil {
		{
			size, err := m.Nameplate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Pendant != nil {
		{
			size, err := m.Pendant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Live != nil {
		{
			size, err := m.Live.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Vip != nil {
		{
			size, err := m.Vip.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Official != nil {
		{
			size, err := m.Official.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *NFTInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NFTInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NFTInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RegionShowStatus != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RegionShowStatus))
		i--
		dAtA[i] = 0x18
	}
	if len(m.RegionIcon) > 0 {
		i -= len(m.RegionIcon)
		copy(dAtA[i:], m.RegionIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RegionIcon)))
		i--
		dAtA[i] = 0x12
	}
	if m.RegionType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RegionType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialVerify) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialVerify) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialVerify) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsAtten != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsAtten))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VipInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VipInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VipInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NicknameColor) > 0 {
		i -= len(m.NicknameColor)
		copy(dAtA[i:], m.NicknameColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NicknameColor)))
		i--
		dAtA[i] = 0x3a
	}
	if m.AvatarSubscript != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AvatarSubscript))
		i--
		dAtA[i] = 0x30
	}
	if m.ThemeType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ThemeType))
		i--
		dAtA[i] = 0x28
	}
	if m.Label != nil {
		{
			size, err := m.Label.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.DueDate != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DueDate))
		i--
		dAtA[i] = 0x18
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VipLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VipLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VipLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LabelTheme) > 0 {
		i -= len(m.LabelTheme)
		copy(dAtA[i:], m.LabelTheme)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.LabelTheme)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LiveInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LiveState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LiveState))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsLiving != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsLiving))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserPendant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserPendant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserPendant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Expire != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Expire))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Pid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Nameplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Nameplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Nameplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Condition) > 0 {
		i -= len(m.Condition)
		copy(dAtA[i:], m.Condition)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Condition)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Level) > 0 {
		i -= len(m.Level)
		copy(dAtA[i:], m.Level)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Level)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ImageSmall) > 0 {
		i -= len(m.ImageSmall)
		copy(dAtA[i:], m.ImageSmall)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ImageSmall)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Nid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Nid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DecorateCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecorateCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecorateCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Fan != nil {
		{
			size, err := m.Fan.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CardUrl) > 0 {
		i -= len(m.CardUrl)
		copy(dAtA[i:], m.CardUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DecoCardFan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DecoCardFan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DecoCardFan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NumberStr) > 0 {
		i -= len(m.NumberStr)
		copy(dAtA[i:], m.NumberStr)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NumberStr)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Number != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Number))
		i--
		dAtA[i] = 0x10
	}
	if m.IsFan != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsFan))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleDispute) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleDispute) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDispute) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleDesc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleDesc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDesc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.JumpUri) > 0 {
		i -= len(m.JumpUri)
		copy(dAtA[i:], m.JumpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Desc) > 0 {
		for iNdEx := len(m.Desc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Desc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Description) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Description) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Description) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EmojiSize != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.EmojiSize))
		i--
		dAtA[i] = 0x58
	}
	if len(m.OrigText) > 0 {
		i -= len(m.OrigText)
		copy(dAtA[i:], m.OrigText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OrigText)))
		i--
		dAtA[i] = 0x52
	}
	if m.Goods != nil {
		{
			size, err := m.Goods.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Rid) > 0 {
		i -= len(m.Rid)
		copy(dAtA[i:], m.Rid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Rid)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.IconName) > 0 {
		i -= len(m.IconName)
		copy(dAtA[i:], m.IconName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.IconUrl) > 0 {
		i -= len(m.IconUrl)
		copy(dAtA[i:], m.IconUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconUrl)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.GoodsType) > 0 {
		i -= len(m.GoodsType)
		copy(dAtA[i:], m.GoodsType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.GoodsType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.EmojiType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.EmojiType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleDescGoods) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleDescGoods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDescGoods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AppName) > 0 {
		i -= len(m.AppName)
		copy(dAtA[i:], m.AppName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AppName)))
		i--
		dAtA[i] = 0x52
	}
	if m.JumpType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpType))
		i--
		dAtA[i] = 0x48
	}
	if len(m.SchemaPackageName) > 0 {
		i -= len(m.SchemaPackageName)
		copy(dAtA[i:], m.SchemaPackageName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SchemaPackageName)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.AdMark) > 0 {
		i -= len(m.AdMark)
		copy(dAtA[i:], m.AdMark)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdMark)))
		i--
		dAtA[i] = 0x3a
	}
	if m.UserWebV2 {
		i--
		if m.UserWebV2 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.OpenWhiteList) > 0 {
		for iNdEx := len(m.OpenWhiteList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OpenWhiteList[iNdEx])
			copy(dAtA[i:], m.OpenWhiteList[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenWhiteList[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.ItemId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.SchemaUrl) > 0 {
		i -= len(m.SchemaUrl)
		copy(dAtA[i:], m.SchemaUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SchemaUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.SourceType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SourceType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleDynamic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleDynamic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModuleItem != nil {
		{
			size := m.ModuleItem.Size()
			i -= size
			if _, err := m.ModuleItem.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleDynamic_DynArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynArchive != nil {
		{
			size, err := m.DynArchive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynPgc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynPgc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynPgc != nil {
		{
			size, err := m.DynPgc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynCourSeason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynCourSeason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynCourSeason != nil {
		{
			size, err := m.DynCourSeason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynCourBatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynCourBatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynCourBatch != nil {
		{
			size, err := m.DynCourBatch.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynForward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynForward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynForward != nil {
		{
			size, err := m.DynForward.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynDraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynDraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynDraw != nil {
		{
			size, err := m.DynDraw.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynArticle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynArticle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynArticle != nil {
		{
			size, err := m.DynArticle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynMusic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynMusic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynMusic != nil {
		{
			size, err := m.DynMusic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynCommon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynCommon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynCommon != nil {
		{
			size, err := m.DynCommon.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynCommonLive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynCommonLive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynCommonLive != nil {
		{
			size, err := m.DynCommonLive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynMedialist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynMedialist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynMedialist != nil {
		{
			size, err := m.DynMedialist.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynApplet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynApplet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynApplet != nil {
		{
			size, err := m.DynApplet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynSubscription != nil {
		{
			size, err := m.DynSubscription.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynLiveRcmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynLiveRcmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynLiveRcmd != nil {
		{
			size, err := m.DynLiveRcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynUgcSeason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynUgcSeason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynUgcSeason != nil {
		{
			size, err := m.DynUgcSeason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynSubscriptionNew) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynSubscriptionNew) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynSubscriptionNew != nil {
		{
			size, err := m.DynSubscriptionNew.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynCourBatchUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynCourBatchUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynCourBatchUp != nil {
		{
			size, err := m.DynCourBatchUp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}
func (m *ModuleDynamic_DynTopicSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleDynamic_DynTopicSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynTopicSet != nil {
		{
			size, err := m.DynTopicSet.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}
func (m *MdlDynArchive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PartProgress != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PartProgress))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x80
	}
	if m.PartDuration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PartDuration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf8
	}
	if m.ShowProgress {
		i--
		if m.ShowProgress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.PremiereCard {
		i--
		if m.PremiereCard {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe8
	}
	if m.ShowPremiereBadge {
		i--
		if m.ShowPremiereBadge {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if m.View != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.View))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if len(m.Bvid) > 0 {
		i -= len(m.Bvid)
		copy(dAtA[i:], m.Bvid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Bvid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if m.ReserveType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReserveType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.IsFeature {
		i--
		if m.IsFeature {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if len(m.BadgeCategory) > 0 {
		for iNdEx := len(m.BadgeCategory) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BadgeCategory[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
	}
	if m.IsPreview {
		i--
		if m.IsPreview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.PgcSeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PgcSeasonId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.SubType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SubType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.EpisodeId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.EpisodeId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.InlineURL) > 0 {
		i -= len(m.InlineURL)
		copy(dAtA[i:], m.InlineURL)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.InlineURL)))
		i--
		dAtA[i] = 0x7a
	}
	if m.IsPGC {
		i--
		if m.IsPGC {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if m.Stype != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Stype))
		i--
		dAtA[i] = 0x68
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if len(m.Badge) > 0 {
		for iNdEx := len(m.Badge) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Badge[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	if m.Dimension != nil {
		{
			size, err := m.Dimension.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.MediaType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.MediaType))
		i--
		dAtA[i] = 0x48
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x40
	}
	if m.Avid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Avid))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Dimension) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Dimension) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Dimension) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ForceHorizontal {
		i--
		if m.ForceHorizontal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Rotate != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rotate))
		i--
		dAtA[i] = 0x18
	}
	if m.Width != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x10
	}
	if m.Height != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VideoBadge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoBadge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoBadge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BgAlphaNight != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BgAlphaNight))
		i--
		dAtA[i] = 0x50
	}
	if m.BgAlpha != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BgAlpha))
		i--
		dAtA[i] = 0x48
	}
	if m.BgStyle != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BgStyle))
		i--
		dAtA[i] = 0x40
	}
	if len(m.BorderColorNight) > 0 {
		i -= len(m.BorderColorNight)
		copy(dAtA[i:], m.BorderColorNight)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BorderColorNight)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.BorderColor) > 0 {
		i -= len(m.BorderColor)
		copy(dAtA[i:], m.BorderColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BorderColor)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BgColorNight) > 0 {
		i -= len(m.BgColorNight)
		copy(dAtA[i:], m.BgColorNight)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BgColorNight)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BgColor) > 0 {
		i -= len(m.BgColor)
		copy(dAtA[i:], m.BgColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BgColor)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TextColorNight) > 0 {
		i -= len(m.TextColorNight)
		copy(dAtA[i:], m.TextColorNight)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TextColorNight)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TextColor) > 0 {
		i -= len(m.TextColor)
		copy(dAtA[i:], m.TextColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TextColor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynPGC) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynPGC) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynPGC) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsFeature {
		i--
		if m.IsFeature {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if len(m.BadgeCategory) > 0 {
		for iNdEx := len(m.BadgeCategory) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BadgeCategory[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.Season != nil {
		{
			size, err := m.Season.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.Badge) > 0 {
		for iNdEx := len(m.Badge) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Badge[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x7a
		}
	}
	if m.Dimension != nil {
		{
			size, err := m.Dimension.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.IsPreview {
		i--
		if m.IsPreview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.SubType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SubType))
		i--
		dAtA[i] = 0x60
	}
	if m.MediaType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.MediaType))
		i--
		dAtA[i] = 0x58
	}
	if m.Aid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x50
	}
	if m.Epid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Epid))
		i--
		dAtA[i] = 0x48
	}
	if m.SeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x40
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PGCSeason) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PGCSeason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PGCSeason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsFinish != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsFinish))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynCourSeason) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynCourSeason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynCourSeason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x70
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x68
	}
	if m.Epid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Epid))
		i--
		dAtA[i] = 0x60
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x58
	}
	if m.Avid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Avid))
		i--
		dAtA[i] = 0x50
	}
	if m.IsPreview {
		i--
		if m.IsPreview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Text_1) > 0 {
		i -= len(m.Text_1)
		copy(dAtA[i:], m.Text_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynCourBatch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynCourBatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynCourBatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.Epid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Epid))
		i--
		dAtA[i] = 0x78
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x70
	}
	if m.Avid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Avid))
		i--
		dAtA[i] = 0x68
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x52
	}
	if m.IsPreview {
		i--
		if m.IsPreview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Text_2) > 0 {
		i -= len(m.Text_2)
		copy(dAtA[i:], m.Text_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Text_1) > 0 {
		i -= len(m.Text_1)
		copy(dAtA[i:], m.Text_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynForward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynForward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynForward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rtype != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rtype))
		i--
		dAtA[i] = 0x10
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynDraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynDraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynDraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsDrawFirst {
		i--
		if m.IsDrawFirst {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynDrawItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynDrawItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynDrawItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tags) > 0 {
		for iNdEx := len(m.Tags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Size_ != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Size_))))
		i--
		dAtA[i] = 0x25
	}
	if m.Height != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x18
	}
	if m.Width != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Src) > 0 {
		i -= len(m.Src)
		copy(dAtA[i:], m.Src)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Src)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynDrawTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynDrawTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynDrawTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynDrawTagItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynDrawTagItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynDrawTagItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SchemaUrl) > 0 {
		i -= len(m.SchemaUrl)
		copy(dAtA[i:], m.SchemaUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SchemaUrl)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Poi) > 0 {
		i -= len(m.Poi)
		copy(dAtA[i:], m.Poi)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Poi)))
		i--
		dAtA[i] = 0x52
	}
	if m.Tid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Tid))
		i--
		dAtA[i] = 0x48
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x40
	}
	if m.ItemId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x38
	}
	if m.Source != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x30
	}
	if m.Orientation != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Orientation))
		i--
		dAtA[i] = 0x28
	}
	if m.Y != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Y))
		i--
		dAtA[i] = 0x20
	}
	if m.X != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.X))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynArticle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynArticle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynArticle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TemplateID != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TemplateID))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Covers) > 0 {
		for iNdEx := len(m.Covers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Covers[iNdEx])
			copy(dAtA[i:], m.Covers[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Covers[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynMusic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynMusic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynMusic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Upper) > 0 {
		i -= len(m.Upper)
		copy(dAtA[i:], m.Upper)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Upper)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Label1) > 0 {
		i -= len(m.Label1)
		copy(dAtA[i:], m.Label1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label1)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.UpId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UpId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynCommon) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynCommon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynCommon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Badge) > 0 {
		for iNdEx := len(m.Badge) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Badge[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x48
	}
	if m.SketchID != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SketchID))
		i--
		dAtA[i] = 0x40
	}
	if m.BizType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BizType))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Oid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Oid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynLive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynLive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynLive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReserveType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReserveType))
		i--
		dAtA[i] = 0x48
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.LiveState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LiveState))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CoverLabel2) > 0 {
		i -= len(m.CoverLabel2)
		copy(dAtA[i:], m.CoverLabel2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLabel2)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLabel) > 0 {
		i -= len(m.CoverLabel)
		copy(dAtA[i:], m.CoverLabel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLabel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynMedialist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynMedialist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynMedialist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CoverBottomRightIcon) > 0 {
		i -= len(m.CoverBottomRightIcon)
		copy(dAtA[i:], m.CoverBottomRightIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverBottomRightIcon)))
		i--
		dAtA[i] = 0x42
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.CoverType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CoverType))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynApplet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynApplet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynApplet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ButtonTitle) > 0 {
		i -= len(m.ButtonTitle)
		copy(dAtA[i:], m.ButtonTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ButtonTitle)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynSubscription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tips) > 0 {
		i -= len(m.Tips)
		copy(dAtA[i:], m.Tips)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Tips)))
		i--
		dAtA[i] = 0x42
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AdTitle) > 0 {
		i -= len(m.AdTitle)
		copy(dAtA[i:], m.AdTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdTitle)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if m.AdId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AdId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynLiveRcmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynLiveRcmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynLiveRcmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Pendant != nil {
		{
			size, err := m.Pendant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ReserveType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReserveType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LivePendant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LivePendant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LivePendant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PendantId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PendantId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynUGCSeason) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynUGCSeason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynUGCSeason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Badge) > 0 {
		for iNdEx := len(m.Badge) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Badge[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x70
	}
	if m.Dimension != nil {
		{
			size, err := m.Dimension.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x60
	}
	if m.Avid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Avid))
		i--
		dAtA[i] = 0x58
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x52
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.InlineURL) > 0 {
		i -= len(m.InlineURL)
		copy(dAtA[i:], m.InlineURL)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.InlineURL)))
		i--
		dAtA[i] = 0x42
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynSubscriptionNew) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynSubscriptionNew) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynSubscriptionNew) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynSubscriptionNew_DynSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynSubscriptionNew_DynSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynSubscription != nil {
		{
			size, err := m.DynSubscription.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *MdlDynSubscriptionNew_DynLiveRcmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynSubscriptionNew_DynLiveRcmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynLiveRcmd != nil {
		{
			size, err := m.DynLiveRcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *MdlDynCourUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynCourUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynCourUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x70
	}
	if m.Duration != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x68
	}
	if m.Epid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Epid))
		i--
		dAtA[i] = 0x60
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x58
	}
	if m.Avid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Avid))
		i--
		dAtA[i] = 0x50
	}
	if m.IsPreview {
		i--
		if m.IsPreview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.CanPlay {
		i--
		if m.CanPlay {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.PlayIcon) > 0 {
		i -= len(m.PlayIcon)
		copy(dAtA[i:], m.PlayIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PlayIcon)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Text_1) > 0 {
		i -= len(m.Text_1)
		copy(dAtA[i:], m.Text_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text_1)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MdlDynTopicSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MdlDynTopicSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MdlDynTopicSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PushId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PushId))
		i--
		dAtA[i] = 0x20
	}
	if m.TopicSetId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicSetId))
		i--
		dAtA[i] = 0x18
	}
	if m.MoreBtn != nil {
		{
			size, err := m.MoreBtn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Topics) > 0 {
		for iNdEx := len(m.Topics) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Topics[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAdditional) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAdditional) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NeedWriteCalender {
		i--
		if m.NeedWriteCalender {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x38
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAdditional_Pgc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Pgc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Pgc != nil {
		{
			size, err := m.Pgc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Goods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Goods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Goods != nil {
		{
			size, err := m.Goods.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Vote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Vote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Vote != nil {
		{
			size, err := m.Vote.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Common) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Common) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Common != nil {
		{
			size, err := m.Common.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Esport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Esport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Esport != nil {
		{
			size, err := m.Esport.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Vote2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Vote2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Vote2 != nil {
		{
			size, err := m.Vote2.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Ugc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Ugc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Ugc != nil {
		{
			size, err := m.Ugc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAdditional_Up) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAdditional_Up) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Up != nil {
		{
			size, err := m.Up.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *AdditionalPGC) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalPGC) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalPGC) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x52
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x48
	}
	if len(m.HeadIcon) > 0 {
		i -= len(m.HeadIcon)
		copy(dAtA[i:], m.HeadIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadIcon)))
		i--
		dAtA[i] = 0x42
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.HeadText) > 0 {
		i -= len(m.HeadText)
		copy(dAtA[i:], m.HeadText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionalButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClickType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ClickType))
		i--
		dAtA[i] = 0x38
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x30
	}
	if m.Check != nil {
		{
			size, err := m.Check.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Uncheck != nil {
		{
			size, err := m.Uncheck.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if m.JumpStyle != nil {
		{
			size, err := m.JumpStyle.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionalButtonStyle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalButtonStyle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalButtonStyle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Share != nil {
		{
			size, err := m.Share.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Disable != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Disable))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x2a
	}
	if m.BgStyle != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BgStyle))
		i--
		dAtA[i] = 0x20
	}
	if m.Interactive != nil {
		{
			size, err := m.Interactive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionalButtonShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalButtonShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalButtonShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x12
	}
	if m.Show != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Show))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionalButtonInteractive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalButtonInteractive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalButtonInteractive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cancel) > 0 {
		i -= len(m.Cancel)
		copy(dAtA[i:], m.Cancel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cancel)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Confirm) > 0 {
		i -= len(m.Confirm)
		copy(dAtA[i:], m.Confirm)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Confirm)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Popups) > 0 {
		i -= len(m.Popups)
		copy(dAtA[i:], m.Popups)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Popups)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionGoods) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionGoods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionGoods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AdMarkIcon) > 0 {
		i -= len(m.AdMarkIcon)
		copy(dAtA[i:], m.AdMarkIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdMarkIcon)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.AppName) > 0 {
		i -= len(m.AppName)
		copy(dAtA[i:], m.AppName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AppName)))
		i--
		dAtA[i] = 0x42
	}
	if m.JumpType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpType))
		i--
		dAtA[i] = 0x38
	}
	if m.SourceType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SourceType))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GoodsItems) > 0 {
		for iNdEx := len(m.GoodsItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GoodsItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.RcmdDesc) > 0 {
		i -= len(m.RcmdDesc)
		copy(dAtA[i:], m.RcmdDesc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RcmdDesc)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GoodsItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GoodsItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GoodsItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JumpType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpType))
		i--
		dAtA[i] = 0x78
	}
	if len(m.AppName) > 0 {
		i -= len(m.AppName)
		copy(dAtA[i:], m.AppName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AppName)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.AdMark) > 0 {
		i -= len(m.AdMark)
		copy(dAtA[i:], m.AdMark)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdMark)))
		i--
		dAtA[i] = 0x6a
	}
	if m.UserWebV2 {
		i--
		if m.UserWebV2 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if len(m.OpenWhiteList) > 0 {
		for iNdEx := len(m.OpenWhiteList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OpenWhiteList[iNdEx])
			copy(dAtA[i:], m.OpenWhiteList[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenWhiteList[iNdEx])))
			i--
			dAtA[i] = 0x5a
		}
	}
	if len(m.SchemaUrl) > 0 {
		i -= len(m.SchemaUrl)
		copy(dAtA[i:], m.SchemaUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SchemaUrl)))
		i--
		dAtA[i] = 0x52
	}
	if m.ItemId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ItemId))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Brief) > 0 {
		i -= len(m.Brief)
		copy(dAtA[i:], m.Brief)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Brief)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.JumpDesc) > 0 {
		i -= len(m.JumpDesc)
		copy(dAtA[i:], m.JumpDesc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpDesc)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x22
	}
	if m.SourceType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SourceType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SchemaPackageName) > 0 {
		i -= len(m.SchemaPackageName)
		copy(dAtA[i:], m.SchemaPackageName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SchemaPackageName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ButtonText) > 0 {
		i -= len(m.ButtonText)
		copy(dAtA[i:], m.ButtonText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ButtonText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Text_1) > 0 {
		i -= len(m.Text_1)
		copy(dAtA[i:], m.Text_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text_1)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionUgc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionUgc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionUgc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x4a
	}
	if m.LineFeed {
		i--
		if m.LineFeed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Duration) > 0 {
		i -= len(m.Duration)
		copy(dAtA[i:], m.Duration)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Duration)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.HeadText) > 0 {
		i -= len(m.HeadText)
		copy(dAtA[i:], m.HeadText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionCommon) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionCommon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionCommon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x52
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x48
	}
	if len(m.HeadIcon) > 0 {
		i -= len(m.HeadIcon)
		copy(dAtA[i:], m.HeadIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadIcon)))
		i--
		dAtA[i] = 0x42
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.HeadText) > 0 {
		i -= len(m.HeadText)
		copy(dAtA[i:], m.HeadText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionEsport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionEsport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionEsport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionEsport_AdditionEsportMoba) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionEsport_AdditionEsportMoba) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AdditionEsportMoba != nil {
		{
			size, err := m.AdditionEsportMoba.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AdditionEsportMoba) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionEsportMoba) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionEsportMoba) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.HeadIcon) > 0 {
		i -= len(m.HeadIcon)
		copy(dAtA[i:], m.HeadIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadIcon)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AdditionEsportMobaStatus != nil {
		{
			size, err := m.AdditionEsportMobaStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.MatchTeam) > 0 {
		for iNdEx := len(m.MatchTeam) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MatchTeam[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.HeadText) > 0 {
		i -= len(m.HeadText)
		copy(dAtA[i:], m.HeadText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionEsportMobaStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionEsportMobaStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionEsportMobaStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NightColor) > 0 {
		i -= len(m.NightColor)
		copy(dAtA[i:], m.NightColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NightColor)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x22
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AdditionEsportMobaStatusDesc) > 0 {
		for iNdEx := len(m.AdditionEsportMobaStatusDesc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AdditionEsportMobaStatusDesc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AdditionEsportMobaStatusDesc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionEsportMobaStatusDesc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionEsportMobaStatusDesc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NightColor) > 0 {
		i -= len(m.NightColor)
		copy(dAtA[i:], m.NightColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NightColor)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MatchTeam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MatchTeam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MatchTeam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NightColor) > 0 {
		i -= len(m.NightColor)
		copy(dAtA[i:], m.NightColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NightColor)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionUP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionUP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionUP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsPremiere {
		i--
		if m.IsPremiere {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if len(m.BadgeText) > 0 {
		i -= len(m.BadgeText)
		copy(dAtA[i:], m.BadgeText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BadgeText)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.BusinessId) > 0 {
		i -= len(m.BusinessId)
		copy(dAtA[i:], m.BusinessId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BusinessId)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.ShowText_2 {
		i--
		if m.ShowText_2 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x78
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0x72
	}
	if m.UserInfo != nil {
		{
			size, err := m.UserInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.UpMid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UpMid))
		i--
		dAtA[i] = 0x60
	}
	if m.DescText_3 != nil {
		{
			size, err := m.DescText_3.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.LotteryType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LotteryType))
		i--
		dAtA[i] = 0x50
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x48
	}
	if m.ActSkin != nil {
		{
			size, err := m.ActSkin.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.ReserveTotal != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReserveTotal))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x32
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x1a
	}
	if m.DescText_1 != nil {
		{
			size, err := m.DescText_1.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionUserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionUserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AdditionalActSkin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionalActSkin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionalActSkin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayTimes != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PlayTimes))
		i--
		dAtA[i] = 0x18
	}
	if len(m.LastImage) > 0 {
		i -= len(m.LastImage)
		copy(dAtA[i:], m.LastImage)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.LastImage)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Svga) > 0 {
		i -= len(m.Svga)
		copy(dAtA[i:], m.Svga)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Svga)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HighlightText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HighlightText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HighlightText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if m.TextStyle != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TextStyle))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleExtend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleExtend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Extend) > 0 {
		for iNdEx := len(m.Extend) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Extend[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleExtendItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleExtendItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Extend != nil {
		{
			size := m.Extend.Size()
			i -= size
			if _, err := m.Extend.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleExtendItem_ExtInfoTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoTopic != nil {
		{
			size, err := m.ExtInfoTopic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ModuleExtendItem_ExtInfoLbs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoLbs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoLbs != nil {
		{
			size, err := m.ExtInfoLbs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleExtendItem_ExtInfoHot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoHot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoHot != nil {
		{
			size, err := m.ExtInfoHot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ModuleExtendItem_ExtInfoGame) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoGame) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoGame != nil {
		{
			size, err := m.ExtInfoGame.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleExtendItem_ExtInfoCommon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoCommon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoCommon != nil {
		{
			size, err := m.ExtInfoCommon.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ModuleExtendItem_ExtInfoOgv) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleExtendItem_ExtInfoOgv) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ExtInfoOgv != nil {
		{
			size, err := m.ExtInfoOgv.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *ExtInfoTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtInfoLBS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoLBS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoLBS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PoiType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PoiType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtInfoHot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoHot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoHot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtInfoGame) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoGame) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoGame) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtInfoCommon) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoCommon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoCommon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsShowLight {
		i--
		if m.IsShowLight {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x48
	}
	if len(m.ActionUrl) > 0 {
		i -= len(m.ActionUrl)
		copy(dAtA[i:], m.ActionUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ActionUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ActionText) > 0 {
		i -= len(m.ActionText)
		copy(dAtA[i:], m.ActionText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ActionText)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SubModule) > 0 {
		i -= len(m.SubModule)
		copy(dAtA[i:], m.SubModule)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubModule)))
		i--
		dAtA[i] = 0x32
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x28
	}
	if m.PoiType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PoiType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtInfoOGV) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtInfoOGV) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtInfoOGV) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InfoOgv) > 0 {
		for iNdEx := len(m.InfoOgv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InfoOgv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *InfoOGV) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InfoOGV) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InfoOGV) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SubModule) > 0 {
		i -= len(m.SubModule)
		copy(dAtA[i:], m.SubModule)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubModule)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleInteraction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleInteraction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleInteraction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InteractionItem) > 0 {
		for iNdEx := len(m.InteractionItem) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InteractionItem[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *InteractionItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InteractionItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InteractionItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Stat != nil {
		{
			size, err := m.Stat.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.Faces) > 0 {
		for iNdEx := len(m.Faces) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Faces[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.CommentMid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CommentMid))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		for iNdEx := len(m.Desc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Desc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.IconType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IconType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InteractionStat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InteractionStat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InteractionStat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Like != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Like))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InteractionFace) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InteractionFace) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InteractionFace) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x12
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleStat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleStat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleStat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NoForwardText) > 0 {
		i -= len(m.NoForwardText)
		copy(dAtA[i:], m.NoForwardText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NoForwardText)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.NoCommentText) > 0 {
		i -= len(m.NoCommentText)
		copy(dAtA[i:], m.NoCommentText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NoCommentText)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ReplyUrl) > 0 {
		i -= len(m.ReplyUrl)
		copy(dAtA[i:], m.ReplyUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ReplyUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if m.NoForward {
		i--
		if m.NoForward {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.NoComment {
		i--
		if m.NoComment {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.LikeInfo != nil {
		{
			size, err := m.LikeInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Reply != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Reply))
		i--
		dAtA[i] = 0x18
	}
	if m.Like != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Like))
		i--
		dAtA[i] = 0x10
	}
	if m.Repost != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Repost))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleFold) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleFold) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleFold) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TopicMergedResource != nil {
		{
			size, err := m.TopicMergedResource.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.FoldUsers) > 0 {
		for iNdEx := len(m.FoldUsers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FoldUsers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.FoldIds) > 0 {
		i -= len(m.FoldIds)
		copy(dAtA[i:], m.FoldIds)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.FoldIds)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if m.FoldType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FoldType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicMergedResource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicMergedResource) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicMergedResource) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MergedResCnt != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.MergedResCnt))
		i--
		dAtA[i] = 0x10
	}
	if m.MergeType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.MergeType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynAllReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAllReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAllReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TabRecallType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TabRecallType))
		i--
		dAtA[i] = 0x70
	}
	if m.TabRecallUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TabRecallUid))
		i--
		dAtA[i] = 0x68
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x5a
	}
	if m.ColdStart != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ColdStart))
		i--
		dAtA[i] = 0x50
	}
	if m.AdParam != nil {
		{
			size, err := m.AdParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.RcmdUpsParam != nil {
		{
			size, err := m.RcmdUpsParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x38
	}
	if len(m.AssistBaseline) > 0 {
		i -= len(m.AssistBaseline)
		copy(dAtA[i:], m.AssistBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AssistBaseline)))
		i--
		dAtA[i] = 0x32
	}
	if m.PlayurlParam != nil {
		{
			size, err := m.PlayurlParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.RefreshType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RefreshType))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UpdateBaseline) > 0 {
		i -= len(m.UpdateBaseline)
		copy(dAtA[i:], m.UpdateBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateBaseline)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdUPsParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdUPsParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdUPsParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DislikeTs != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DislikeTs))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestId) > 0 {
		i -= len(m.RequestId)
		copy(dAtA[i:], m.RequestId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RequestId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AdExtra) > 0 {
		i -= len(m.AdExtra)
		copy(dAtA[i:], m.AdExtra)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdExtra)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Config) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DetailViewBits != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DetailViewBits))
		i--
		dAtA[i] = 0x10
	}
	if m.StoryVerticalExp {
		i--
		if m.StoryVerticalExp {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynAllReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAllReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAllReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.RegionRcmd != nil {
		{
			size, err := m.RegionRcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Unfollow != nil {
		{
			size, err := m.Unfollow.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.TopicList != nil {
		{
			size, err := m.TopicList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.UpList != nil {
		{
			size, err := m.UpList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DynamicList != nil {
		{
			size, err := m.DynamicList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynamicList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynamicList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynamicList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.UpdateBaseline) > 0 {
		i -= len(m.UpdateBaseline)
		copy(dAtA[i:], m.UpdateBaseline)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateBaseline)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.HistoryOffset) > 0 {
		i -= len(m.HistoryOffset)
		copy(dAtA[i:], m.HistoryOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HistoryOffset)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UpdateNum != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UpdateNum))
		i--
		dAtA[i] = 0x10
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TopicList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ExpStyle != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ExpStyle))
		i--
		dAtA[i] = 0x38
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServerInfo) > 0 {
		i -= len(m.ServerInfo)
		copy(dAtA[i:], m.ServerInfo)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ServerInfo)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MoreButton != nil {
		{
			size, err := m.MoreButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ActButton != nil {
		{
			size, err := m.ActButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopicListItem) > 0 {
		for iNdEx := len(m.TopicListItem) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TopicListItem[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopicListItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicListItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicListItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Position != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Extension) > 0 {
		i -= len(m.Extension)
		copy(dAtA[i:], m.Extension)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Extension)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TailIconUrl) > 0 {
		i -= len(m.TailIconUrl)
		copy(dAtA[i:], m.TailIconUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TailIconUrl)))
		i--
		dAtA[i] = 0x52
	}
	if m.UpMid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UpMid))
		i--
		dAtA[i] = 0x48
	}
	if len(m.HeadIconUrl) > 0 {
		i -= len(m.HeadIconUrl)
		copy(dAtA[i:], m.HeadIconUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HeadIconUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ServerInfo) > 0 {
		i -= len(m.ServerInfo)
		copy(dAtA[i:], m.ServerInfo)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ServerInfo)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Pos != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Pos))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x22
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.IconTitle) > 0 {
		i -= len(m.IconTitle)
		copy(dAtA[i:], m.IconTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconTitle)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopicButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RedDot {
		i--
		if m.RedDot {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.JumpUri) > 0 {
		i -= len(m.JumpUri)
		copy(dAtA[i:], m.JumpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Unfollow) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Unfollow) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Unfollow) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TrackId) > 0 {
		i -= len(m.TrackId)
		copy(dAtA[i:], m.TrackId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TrackId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnfollowUserItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnfollowUserItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnfollowUserItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x62
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Sign) > 0 {
		i -= len(m.Sign)
		copy(dAtA[i:], m.Sign)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Sign)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Vip != nil {
		{
			size, err := m.Vip.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Official != nil {
		{
			size, err := m.Official.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.LiveState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LiveState))
		i--
		dAtA[i] = 0x30
	}
	if m.Pos != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Pos))
		i--
		dAtA[i] = 0x28
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x12
	}
	if m.HasUpdate {
		i--
		if m.HasUpdate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleTopicDetailsExt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTopicDetailsExt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTopicDetailsExt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CommentGuide) > 0 {
		i -= len(m.CommentGuide)
		copy(dAtA[i:], m.CommentGuide)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CommentGuide)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleTopicBrief) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTopicBrief) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTopicBrief) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Topic != nil {
		{
			size, err := m.Topic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TitleStyle != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TitleStyle))
		i--
		dAtA[i] = 0x18
	}
	if m.RightBtn != nil {
		{
			size, err := m.RightBtn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Btn != nil {
		{
			size, err := m.Btn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleNotice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleNotice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleNotice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NoticeType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.NoticeType))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Identity) > 0 {
		i -= len(m.Identity)
		copy(dAtA[i:], m.Identity)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Identity)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IconButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IconButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IconButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JumpUri) > 0 {
		i -= len(m.JumpUri)
		copy(dAtA[i:], m.JumpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUri)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.IconTail) > 0 {
		i -= len(m.IconTail)
		copy(dAtA[i:], m.IconTail)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconTail)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.IconHead) > 0 {
		i -= len(m.IconHead)
		copy(dAtA[i:], m.IconHead)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconHead)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynDetailsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynDetailsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynDetailsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x18
	}
	if m.PlayurlParam != nil {
		{
			size, err := m.PlayurlParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.DynamicIds) > 0 {
		i -= len(m.DynamicIds)
		copy(dAtA[i:], m.DynamicIds)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicIds)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynDetailsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynDetailsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynDetailsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynVideoPersonalReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVideoPersonalReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVideoPersonalReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Footprint) > 0 {
		i -= len(m.Footprint)
		copy(dAtA[i:], m.Footprint)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Footprint)))
		i--
		dAtA[i] = 0x3a
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x30
	}
	if m.PlayurlParam != nil {
		{
			size, err := m.PlayurlParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.IsPreload != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsPreload))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HostUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HostUid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynVideoPersonalReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVideoPersonalReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVideoPersonalReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AdditionUp != nil {
		{
			size, err := m.AdditionUp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ReadOffset) > 0 {
		i -= len(m.ReadOffset)
		copy(dAtA[i:], m.ReadOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ReadOffset)))
		i--
		dAtA[i] = 0x22
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynVideoUpdOffsetReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVideoUpdOffsetReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVideoUpdOffsetReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Footprint) > 0 {
		i -= len(m.Footprint)
		copy(dAtA[i:], m.Footprint)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Footprint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ReadOffset) > 0 {
		i -= len(m.ReadOffset)
		copy(dAtA[i:], m.ReadOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ReadOffset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HostUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HostUid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CardVideoUpList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CardVideoUpList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CardVideoUpList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShowMoreButton {
		i--
		if m.ShowMoreButton {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.ShowInPersonal {
		i--
		if m.ShowInPersonal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.ShowMoreLabel {
		i--
		if m.ShowMoreLabel {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.TitleSwitch != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TitleSwitch))
		i--
		dAtA[i] = 0x30
	}
	if m.MoreLabel != nil {
		{
			size, err := m.MoreLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ShowLiveNum != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ShowLiveNum))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Footprint) > 0 {
		i -= len(m.Footprint)
		copy(dAtA[i:], m.Footprint)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Footprint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpListMoreLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpListMoreLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpListMoreLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpListItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpListItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpListItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsRecall {
		i--
		if m.IsRecall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x62
	}
	if m.Separator {
		i--
		if m.Separator {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.LiveState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LiveState))
		i--
		dAtA[i] = 0x50
	}
	if m.StyleId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.StyleId))
		i--
		dAtA[i] = 0x48
	}
	if m.DisplayStyleNight != nil {
		{
			size, err := m.DisplayStyleNight.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.DisplayStyleDay != nil {
		{
			size, err := m.DisplayStyleDay.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.UserItemType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UserItemType))
		i--
		dAtA[i] = 0x30
	}
	if m.Pos != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Pos))
		i--
		dAtA[i] = 0x28
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x12
	}
	if m.HasUpdate {
		i--
		if m.HasUpdate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserItemStyle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserItemStyle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserItemStyle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OuterAnimation) > 0 {
		i -= len(m.OuterAnimation)
		copy(dAtA[i:], m.OuterAnimation)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OuterAnimation)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RectBgColor) > 0 {
		i -= len(m.RectBgColor)
		copy(dAtA[i:], m.RectBgColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RectBgColor)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RectIcon) > 0 {
		i -= len(m.RectIcon)
		copy(dAtA[i:], m.RectIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RectIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RectTextColor) > 0 {
		i -= len(m.RectTextColor)
		copy(dAtA[i:], m.RectTextColor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RectTextColor)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RectText) > 0 {
		i -= len(m.RectText)
		copy(dAtA[i:], m.RectText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RectText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CardVideoFollowList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CardVideoFollowList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CardVideoFollowList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ViewAllLink) > 0 {
		i -= len(m.ViewAllLink)
		copy(dAtA[i:], m.ViewAllLink)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ViewAllLink)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FollowListItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowListItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowListItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Pos != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Pos))
		i--
		dAtA[i] = 0x38
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x32
	}
	if m.NewEp != nil {
		{
			size, err := m.NewEp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.SeasonId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SeasonId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *NewEP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewEP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewEP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.IndexShow) > 0 {
		i -= len(m.IndexShow)
		copy(dAtA[i:], m.IndexShow)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IndexShow)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Extend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Extend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Extend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TrackId) > 0 {
		i -= len(m.TrackId)
		copy(dAtA[i:], m.TrackId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TrackId)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.Reply != nil {
		{
			size, err := m.Reply.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.OrigFace) > 0 {
		i -= len(m.OrigFace)
		copy(dAtA[i:], m.OrigFace)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OrigFace)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.SourceContent != nil {
		{
			size, err := m.SourceContent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.CardUrl) > 0 {
		i -= len(m.CardUrl)
		copy(dAtA[i:], m.CardUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardUrl)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x70
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x68
	}
	if m.RType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RType))
		i--
		dAtA[i] = 0x60
	}
	if m.IsFastShare {
		i--
		if m.IsFastShare {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if len(m.ShareScene) > 0 {
		i -= len(m.ShareScene)
		copy(dAtA[i:], m.ShareScene)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ShareScene)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ShareType) > 0 {
		i -= len(m.ShareType)
		copy(dAtA[i:], m.ShareType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ShareType)))
		i--
		dAtA[i] = 0x4a
	}
	if m.OrigDynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.OrigDynType))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Desc) > 0 {
		for iNdEx := len(m.Desc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Desc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.OrigDesc) > 0 {
		for iNdEx := len(m.OrigDesc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OrigDesc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.OrigImgUrl) > 0 {
		i -= len(m.OrigImgUrl)
		copy(dAtA[i:], m.OrigImgUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OrigImgUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OrigName) > 0 {
		i -= len(m.OrigName)
		copy(dAtA[i:], m.OrigName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OrigName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OrigDynIdStr) > 0 {
		i -= len(m.OrigDynIdStr)
		copy(dAtA[i:], m.OrigDynIdStr)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OrigDynIdStr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BusinessId) > 0 {
		i -= len(m.BusinessId)
		copy(dAtA[i:], m.BusinessId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BusinessId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DynIdStr) > 0 {
		i -= len(m.DynIdStr)
		copy(dAtA[i:], m.DynIdStr)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynIdStr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtendReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtendReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtendReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Params) > 0 {
		for iNdEx := len(m.Params) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Params[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExtendReplyParam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtendReplyParam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtendReplyParam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAuthorForward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAuthorForward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAuthorForward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TpList) > 0 {
		for iNdEx := len(m.TpList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TpList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.FaceUrl) > 0 {
		i -= len(m.FaceUrl)
		copy(dAtA[i:], m.FaceUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.FaceUrl)))
		i--
		dAtA[i] = 0x32
	}
	if m.ShowFollow {
		i--
		if m.ShowFollow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.PtimeLabelText) > 0 {
		i -= len(m.PtimeLabelText)
		copy(dAtA[i:], m.PtimeLabelText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PtimeLabelText)))
		i--
		dAtA[i] = 0x22
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		for iNdEx := len(m.Title) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Title[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAuthorForwardTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAuthorForwardTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAuthorForwardTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleAd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x22
	}
	if m.AdContentType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AdContentType))
		i--
		dAtA[i] = 0x18
	}
	if m.ModuleAuthor != nil {
		{
			size, err := m.ModuleAuthor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.SourceContent != nil {
		{
			size, err := m.SourceContent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleBanner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleBanner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleBanner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DislikeIcon) > 0 {
		i -= len(m.DislikeIcon)
		copy(dAtA[i:], m.DislikeIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DislikeIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DislikeText) > 0 {
		i -= len(m.DislikeText)
		copy(dAtA[i:], m.DislikeText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DislikeText)))
		i--
		dAtA[i] = 0x22
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleBanner_User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleBanner_User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.User != nil {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *AdditionVote2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVote2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVote2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DefauleSelectShare {
		i--
		if m.DefauleSelectShare {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.ChoiceCnt != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ChoiceCnt))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.IsVoted {
		i--
		if m.IsVoted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Tips) > 0 {
		i -= len(m.Tips)
		copy(dAtA[i:], m.Tips)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Tips)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x7a
	}
	if m.Total != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x70
	}
	if m.BizType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BizType))
		i--
		dAtA[i] = 0x68
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.State != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x48
	}
	if len(m.VotedText) > 0 {
		i -= len(m.VotedText)
		copy(dAtA[i:], m.VotedText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.VotedText)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CloseText) > 0 {
		i -= len(m.CloseText)
		copy(dAtA[i:], m.CloseText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CloseText)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.OpenText) > 0 {
		i -= len(m.OpenText)
		copy(dAtA[i:], m.OpenText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenText)))
		i--
		dAtA[i] = 0x32
	}
	if m.Deadline != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Deadline))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if m.VoteId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.VoteId))
		i--
		dAtA[i] = 0x10
	}
	if m.AdditionVoteType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AdditionVoteType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVote2_AdditionVoteWord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVote2_AdditionVoteWord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AdditionVoteWord != nil {
		{
			size, err := m.AdditionVoteWord.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *AdditionVote2_AdditionVotePic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVote2_AdditionVotePic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AdditionVotePic != nil {
		{
			size, err := m.AdditionVotePic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *AdditionVote2_AdditionVoteDefaule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVote2_AdditionVoteDefaule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AdditionVoteDefaule != nil {
		{
			size, err := m.AdditionVoteDefaule.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *AdditionVoteWord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVoteWord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVoteWord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Item) > 0 {
		for iNdEx := len(m.Item) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Item[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVoteWordItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVoteWordItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVoteWordItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsMaxOption {
		i--
		if m.IsMaxOption {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Persent != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Persent))))
		i--
		dAtA[i] = 0x29
	}
	if m.Total != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x20
	}
	if m.IsVote {
		i--
		if m.IsVote {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.OptIdx != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.OptIdx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVotePic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVotePic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVotePic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Item) > 0 {
		for iNdEx := len(m.Item) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Item[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVotePicItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVotePicItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVotePicItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsMaxOption {
		i--
		if m.IsMaxOption {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.Persent != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Persent))))
		i--
		dAtA[i] = 0x29
	}
	if m.Total != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x20
	}
	if m.IsVote {
		i--
		if m.IsVote {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if m.OptIdx != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.OptIdx))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AdditionVoteDefaule) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdditionVoteDefaule) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdditionVoteDefaule) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Cover) > 0 {
		for iNdEx := len(m.Cover) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Cover[iNdEx])
			copy(dAtA[i:], m.Cover[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleItemNull) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleItemNull) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleItemNull) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleBannerUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleBannerUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleBannerUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleBannerUserItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleBannerUserItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleBannerUserItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Vip != nil {
		{
			size, err := m.Vip.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Official != nil {
		{
			size, err := m.Official.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.LiveState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LiveState))
		i--
		dAtA[i] = 0x20
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleLikeUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleLikeUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleLikeUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DisplayText) > 0 {
		i -= len(m.DisplayText)
		copy(dAtA[i:], m.DisplayText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DisplayText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.LikeUsers) > 0 {
		for iNdEx := len(m.LikeUsers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LikeUsers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LikeUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uname) > 0 {
		i -= len(m.Uname)
		copy(dAtA[i:], m.Uname)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uname)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LikeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsLike {
		i--
		if m.IsLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Animation != nil {
		{
			size, err := m.Animation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LikeAnimation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeAnimation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeAnimation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LikeIconId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LikeIconId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.End) > 0 {
		i -= len(m.End)
		copy(dAtA[i:], m.End)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.End)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Proc) > 0 {
		i -= len(m.Proc)
		copy(dAtA[i:], m.Proc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Proc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Begin) > 0 {
		i -= len(m.Begin)
		copy(dAtA[i:], m.Begin)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Begin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointItem_Default) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Default) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Default != nil {
		{
			size, err := m.Default.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_AutoPlayer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_AutoPlayer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AutoPlayer != nil {
		{
			size, err := m.AutoPlayer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Share) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Share) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Share != nil {
		{
			size, err := m.Share.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Attention) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Attention) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Attention != nil {
		{
			size, err := m.Attention.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Wait) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Wait) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Wait != nil {
		{
			size, err := m.Wait.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Dislike) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Dislike) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Dislike != nil {
		{
			size, err := m.Dislike.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Favorite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Favorite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Favorite != nil {
		{
			size, err := m.Favorite.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Top) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Top) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Top != nil {
		{
			size, err := m.Top.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Comment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Comment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Comment != nil {
		{
			size, err := m.Comment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_Hide) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_Hide) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Hide != nil {
		{
			size, err := m.Hide.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_TopicIrrelevant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_TopicIrrelevant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.TopicIrrelevant != nil {
		{
			size, err := m.TopicIrrelevant.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func (m *ThreePointItem_DynEdit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointItem_DynEdit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DynEdit != nil {
		{
			size, err := m.DynEdit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	return len(dAtA) - i, nil
}
func (m *ModuleAuthorBadgeButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleAuthorBadgeButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleAuthorBadgeButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.State != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointDefault) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointDefault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointDefault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Toast != nil {
		{
			size, err := m.Toast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointDefaultToast) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointDefaultToast) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointDefaultToast) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointAutoPlay) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointAutoPlay) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointAutoPlay) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CloseIconV2) > 0 {
		i -= len(m.CloseIconV2)
		copy(dAtA[i:], m.CloseIconV2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CloseIconV2)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.OpenIconV2) > 0 {
		i -= len(m.OpenIconV2)
		copy(dAtA[i:], m.OpenIconV2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenIconV2)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.OnlyText) > 0 {
		i -= len(m.OnlyText)
		copy(dAtA[i:], m.OnlyText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OnlyText)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OnlyIcon) > 0 {
		i -= len(m.OnlyIcon)
		copy(dAtA[i:], m.OnlyIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OnlyIcon)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CloseTextV2) > 0 {
		i -= len(m.CloseTextV2)
		copy(dAtA[i:], m.CloseTextV2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CloseTextV2)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OpenTextV2) > 0 {
		i -= len(m.OpenTextV2)
		copy(dAtA[i:], m.OpenTextV2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenTextV2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CloseText) > 0 {
		i -= len(m.CloseText)
		copy(dAtA[i:], m.CloseText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CloseText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CloseIcon) > 0 {
		i -= len(m.CloseIcon)
		copy(dAtA[i:], m.CloseIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CloseIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OpenText) > 0 {
		i -= len(m.OpenText)
		copy(dAtA[i:], m.OpenText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OpenIcon) > 0 {
		i -= len(m.OpenIcon)
		copy(dAtA[i:], m.OpenIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.OpenIcon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointShare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointShare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointShare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reserve != nil {
		{
			size, err := m.Reserve.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ChannelName) > 0 {
		i -= len(m.ChannelName)
		copy(dAtA[i:], m.ChannelName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ChannelName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Channel) > 0 {
		for iNdEx := len(m.Channel) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Channel[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointShareChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointShareChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointShareChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointAttention) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointAttention) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointAttention) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x28
	}
	if len(m.NotAttentionText) > 0 {
		i -= len(m.NotAttentionText)
		copy(dAtA[i:], m.NotAttentionText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NotAttentionText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NotAttentionIcon) > 0 {
		i -= len(m.NotAttentionIcon)
		copy(dAtA[i:], m.NotAttentionIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NotAttentionIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AttentionText) > 0 {
		i -= len(m.AttentionText)
		copy(dAtA[i:], m.AttentionText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AttentionText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AttentionIcon) > 0 {
		i -= len(m.AttentionIcon)
		copy(dAtA[i:], m.AttentionIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AttentionIcon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointWait) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointWait) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointWait) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x28
	}
	if len(m.NoAdditionText) > 0 {
		i -= len(m.NoAdditionText)
		copy(dAtA[i:], m.NoAdditionText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NoAdditionText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NoAdditionIcon) > 0 {
		i -= len(m.NoAdditionIcon)
		copy(dAtA[i:], m.NoAdditionIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.NoAdditionIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AdditionText) > 0 {
		i -= len(m.AdditionText)
		copy(dAtA[i:], m.AdditionText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdditionText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AdditionIcon) > 0 {
		i -= len(m.AdditionIcon)
		copy(dAtA[i:], m.AdditionIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AdditionIcon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointDislike) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointDislike) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointDislike) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointFavorite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointFavorite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointFavorite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CancelTitle) > 0 {
		i -= len(m.CancelTitle)
		copy(dAtA[i:], m.CancelTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CancelTitle)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CancelIcon) > 0 {
		i -= len(m.CancelIcon)
		copy(dAtA[i:], m.CancelIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CancelIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsFavourite {
		i--
		if m.IsFavourite {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Id != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointTop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointTop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointTop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointTopicIrrelevant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointTopicIrrelevant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointTopicIrrelevant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x3a
	}
	if m.ResType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ResType))
		i--
		dAtA[i] = 0x30
	}
	if m.ResId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ResId))
		i--
		dAtA[i] = 0x28
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointDynEdit) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointDynEdit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointDynEdit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsOriginDeleted {
		i--
		if m.IsOriginDeleted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.OriginId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.OriginId))
		i--
		dAtA[i] = 0x10
	}
	if m.DynId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if m.UpClose != nil {
		{
			size, err := m.UpClose.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UpSelection != nil {
		{
			size, err := m.UpSelection.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointHide) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointHide) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointHide) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BlookType) > 0 {
		i -= len(m.BlookType)
		copy(dAtA[i:], m.BlookType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BlookType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.BlookFid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BlookFid))
		i--
		dAtA[i] = 0x20
	}
	if m.Interactive != nil {
		{
			size, err := m.Interactive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ThreePointHideInteractive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThreePointHideInteractive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThreePointHideInteractive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cancel) > 0 {
		i -= len(m.Cancel)
		copy(dAtA[i:], m.Cancel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cancel)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Confirm) > 0 {
		i -= len(m.Confirm)
		copy(dAtA[i:], m.Confirm)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Confirm)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CommentDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommentDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CommentDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.CanModify {
		i--
		if m.CanModify {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Weight) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Weight) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Weight) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WeightItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeightItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeightItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WeightItem_Button) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeightItem_Button) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *WeightItem_Dislike) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeightItem_Dislike) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Dislike != nil {
		{
			size, err := m.Dislike.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *WeightDislike) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeightDislike) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeightDislike) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FeedBackType) > 0 {
		i -= len(m.FeedBackType)
		copy(dAtA[i:], m.FeedBackType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.FeedBackType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WeightButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeightButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WeightButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CmtShowItem) > 0 {
		for iNdEx := len(m.CmtShowItem) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CmtShowItem[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CmtShowItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CmtShowItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CmtShowItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uname) > 0 {
		i -= len(m.Uname)
		copy(dAtA[i:], m.Uname)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uname)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynAdditionCommonFollowReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAdditionCommonFollowReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAdditionCommonFollowReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardType) > 0 {
		i -= len(m.CardType)
		copy(dAtA[i:], m.CardType)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CardType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DynId) > 0 {
		i -= len(m.DynId)
		copy(dAtA[i:], m.DynId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynAdditionCommonFollowReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAdditionCommonFollowReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAdditionCommonFollowReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynThumbReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynThumbReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynThumbReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Rid) > 0 {
		i -= len(m.Rid)
		copy(dAtA[i:], m.Rid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Rid)))
		i--
		dAtA[i] = 0x22
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.DynId) > 0 {
		i -= len(m.DynId)
		copy(dAtA[i:], m.DynId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynFakeCardReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynFakeCardReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynFakeCardReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynFakeCardReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynFakeCardReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynFakeCardReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynRcmdUpExchangeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRcmdUpExchangeReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRcmdUpExchangeReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x1a
	}
	if m.DislikeTs != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DislikeTs))
		i--
		dAtA[i] = 0x10
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynRcmdUpExchangeReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRcmdUpExchangeReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRcmdUpExchangeReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unfollow != nil {
		{
			size, err := m.Unfollow.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynAllPersonalReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAllPersonalReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAllPersonalReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Footprint) > 0 {
		i -= len(m.Footprint)
		copy(dAtA[i:], m.Footprint)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Footprint)))
		i--
		dAtA[i] = 0x3a
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x30
	}
	if m.PlayurlParam != nil {
		{
			size, err := m.PlayurlParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.IsPreload != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsPreload))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HostUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HostUid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynAllPersonalReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAllPersonalReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAllPersonalReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AdditionUp != nil {
		{
			size, err := m.AdditionUp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ReadOffset) > 0 {
		i -= len(m.ReadOffset)
		copy(dAtA[i:], m.ReadOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ReadOffset)))
		i--
		dAtA[i] = 0x22
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TopAdditionUP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopAdditionUP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopAdditionUP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasFold != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HasFold))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Up) > 0 {
		for iNdEx := len(m.Up) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Up[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynAllUpdOffsetReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynAllUpdOffsetReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynAllUpdOffsetReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Footprint) > 0 {
		i -= len(m.Footprint)
		copy(dAtA[i:], m.Footprint)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Footprint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ReadOffset) > 0 {
		i -= len(m.ReadOffset)
		copy(dAtA[i:], m.ReadOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ReadOffset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HostUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HostUid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynVoteReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVoteReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVoteReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Share {
		i--
		if m.Share {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0x22
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Votes) > 0 {
		dAtA184 := make([]byte, len(m.Votes)*10)
		var j183 int
		for _, num1 := range m.Votes {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA184[j183] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j183++
			}
			dAtA184[j183] = uint8(num)
			j183++
		}
		i -= j183
		copy(dAtA[i:], dAtA184[:j183])
		i = encodeVarintDynamicV2(dAtA, i, uint64(j183))
		i--
		dAtA[i] = 0x12
	}
	if m.VoteId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.VoteId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynVoteReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynVoteReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynVoteReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x12
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Relation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Relation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Relation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.IsFollowed != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsFollowed))
		i--
		dAtA[i] = 0x18
	}
	if m.IsFollow != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsFollow))
		i--
		dAtA[i] = 0x10
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MixUpListLiveItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MixUpListLiveItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MixUpListLiveItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RoomId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RoomId))
		i--
		dAtA[i] = 0x10
	}
	if m.Status {
		i--
		if m.Status {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MixUpListItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MixUpListItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MixUpListItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x5a
	}
	if m.PremiereState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PremiereState))
		i--
		dAtA[i] = 0x50
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Vip != nil {
		{
			size, err := m.Vip.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Official != nil {
		{
			size, err := m.Official.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Face) > 0 {
		i -= len(m.Face)
		copy(dAtA[i:], m.Face)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Face)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if m.LiveInfo != nil {
		{
			size, err := m.LiveInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ReddotState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReddotState))
		i--
		dAtA[i] = 0x18
	}
	if m.SpecialAttention != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SpecialAttention))
		i--
		dAtA[i] = 0x10
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynMixUpListViewMoreReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynMixUpListViewMoreReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynMixUpListViewMoreReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SortType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SortType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SortType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SortType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SortType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SortTypeName) > 0 {
		i -= len(m.SortTypeName)
		copy(dAtA[i:], m.SortTypeName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SortTypeName)))
		i--
		dAtA[i] = 0x12
	}
	if m.SortType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.SortType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynMixUpListViewMoreReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynMixUpListViewMoreReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynMixUpListViewMoreReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DefaultSortType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DefaultSortType))
		i--
		dAtA[i] = 0x28
	}
	if m.ShowMoreSortTypes {
		i--
		if m.ShowMoreSortTypes {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.SortTypes) > 0 {
		for iNdEx := len(m.SortTypes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SortTypes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.SearchDefaultText) > 0 {
		i -= len(m.SearchDefaultText)
		copy(dAtA[i:], m.SearchDefaultText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SearchDefaultText)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynLightReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynLightReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynLightReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FakeUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FakeUid))
		i--
		dAtA[i] = 0x38
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x30
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x28
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.HistoryOffset) > 0 {
		i -= len(m.HistoryOffset)
		copy(dAtA[i:], m.HistoryOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HistoryOffset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynLightReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynLightReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynLightReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DynamicList != nil {
		{
			size, err := m.DynamicList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynDetailReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynDetailReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if len(m.Pattern) > 0 {
		i -= len(m.Pattern)
		copy(dAtA[i:], m.Pattern)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Pattern)))
		i--
		dAtA[i] = 0x5a
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x50
	}
	if m.ShareMode != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ShareMode))
		i--
		dAtA[i] = 0x48
	}
	if len(m.ShareId) > 0 {
		i -= len(m.ShareId)
		copy(dAtA[i:], m.ShareId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ShareId)))
		i--
		dAtA[i] = 0x42
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x32
	}
	if m.AdParam != nil {
		{
			size, err := m.AdParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x20
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynDetailReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynDetailReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynDetailReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size, err := m.Item.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LikeListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x28
	}
	if m.UidOffset != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.UidOffset))
		i--
		dAtA[i] = 0x20
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x18
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LikeListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalCount != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x18
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RepostListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RepostListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RepostListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RepostType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RepostType))
		i--
		dAtA[i] = 0x30
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x22
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x18
	}
	if m.DynType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.DynamicId) > 0 {
		i -= len(m.DynamicId)
		copy(dAtA[i:], m.DynamicId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DynamicId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RepostListRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RepostListRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RepostListRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RepostType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RepostType))
		i--
		dAtA[i] = 0x28
	}
	if m.TotalCount != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x20
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleShareInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleShareInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleShareInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Sid) > 0 {
		i -= len(m.Sid)
		copy(dAtA[i:], m.Sid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Sid)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Oid) > 0 {
		i -= len(m.Oid)
		copy(dAtA[i:], m.Oid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Oid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ShareOrigin) > 0 {
		i -= len(m.ShareOrigin)
		copy(dAtA[i:], m.ShareOrigin)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ShareOrigin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ShareChannels) > 0 {
		for iNdEx := len(m.ShareChannels) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ShareChannels[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ShareChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShareChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ShareChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reserve != nil {
		{
			size, err := m.Reserve.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ShareReserve) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShareReserve) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ShareReserve) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserInfo != nil {
		{
			size, err := m.UserInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.QrCodeUrl) > 0 {
		i -= len(m.QrCodeUrl)
		copy(dAtA[i:], m.QrCodeUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.QrCodeUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.QrCodeText) > 0 {
		i -= len(m.QrCodeText)
		copy(dAtA[i:], m.QrCodeText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.QrCodeText)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.QrCodeIcon) > 0 {
		i -= len(m.QrCodeIcon)
		copy(dAtA[i:], m.QrCodeIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.QrCodeIcon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleRecommend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleRecommend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleRecommend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ad) > 0 {
		for iNdEx := len(m.Ad) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ad[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ModuleTitle) > 0 {
		i -= len(m.ModuleTitle)
		copy(dAtA[i:], m.ModuleTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ModuleTitle)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ModuleStory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleStory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleStory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PublishText) > 0 {
		i -= len(m.PublishText)
		copy(dAtA[i:], m.PublishText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.PublishText)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if m.FoldState != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FoldState))
		i--
		dAtA[i] = 0x20
	}
	if m.ShowPublishEntrance {
		i--
		if m.ShowPublishEntrance {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StoryItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoryItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoryItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RcmdItem != nil {
		{
			size := m.RcmdItem.Size()
			i -= size
			if _, err := m.RcmdItem.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StoryItem_StoryArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoryItem_StoryArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.StoryArchive != nil {
		{
			size, err := m.StoryArchive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *StoryArchive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoryArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoryArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dimension != nil {
		{
			size, err := m.Dimension.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Aid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynSpaceReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSpaceReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSpaceReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x32
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x28
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HistoryOffset) > 0 {
		i -= len(m.HistoryOffset)
		copy(dAtA[i:], m.HistoryOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HistoryOffset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HostUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.HostUid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynSpaceRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSpaceRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSpaceRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.HistoryOffset) > 0 {
		i -= len(m.HistoryOffset)
		copy(dAtA[i:], m.HistoryOffset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HistoryOffset)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleTop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleTop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleTop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TpList) > 0 {
		for iNdEx := len(m.TpList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TpList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ModuleButtom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleButtom) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleButtom) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CommentBoxMsg) > 0 {
		i -= len(m.CommentBoxMsg)
		copy(dAtA[i:], m.CommentBoxMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CommentBoxMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CommentBox {
		i--
		if m.CommentBox {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ModuleStat != nil {
		{
			size, err := m.ModuleStat.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynRcmdReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRcmdReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRcmdReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsRefresh {
		i--
		if m.IsRefresh {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.FakeUid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FakeUid))
		i--
		dAtA[i] = 0x18
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x10
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynRcmdReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRcmdReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRcmdReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DynamicList != nil {
		{
			size, err := m.DynamicList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.RegionRcmd != nil {
		{
			size, err := m.RegionRcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynRegionRcmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRegionRcmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRegionRcmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Opts != nil {
		{
			size, err := m.Opts.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RcmdOption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdOption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdOption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ShowTitle {
		i--
		if m.ShowTitle {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynRegionRcmdItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynRegionRcmdItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynRegionRcmdItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ModuleRcmd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModuleRcmd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModuleRcmd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerInfo) > 0 {
		i -= len(m.ServerInfo)
		copy(dAtA[i:], m.ServerInfo)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ServerInfo)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdAuthor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdAuthor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdAuthor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RcmdItem != nil {
		{
			size := m.RcmdItem.Size()
			i -= size
			if _, err := m.RcmdItem.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RcmdItem_RcmdArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdItem_RcmdArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RcmdArchive != nil {
		{
			size, err := m.RcmdArchive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *RcmdArchive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RcmdReason != nil {
		{
			size, err := m.RcmdReason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if len(m.TrackId) > 0 {
		i -= len(m.TrackId)
		copy(dAtA[i:], m.TrackId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TrackId)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.CoverLeftText_3) > 0 {
		i -= len(m.CoverLeftText_3)
		copy(dAtA[i:], m.CoverLeftText_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_3)))
		i--
		dAtA[i] = 0x62
	}
	if m.CoverLeftIcon_3 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CoverLeftIcon_3))
		i--
		dAtA[i] = 0x58
	}
	if len(m.CoverLeftText_2) > 0 {
		i -= len(m.CoverLeftText_2)
		copy(dAtA[i:], m.CoverLeftText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_2)))
		i--
		dAtA[i] = 0x52
	}
	if m.CoverLeftIcon_2 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CoverLeftIcon_2))
		i--
		dAtA[i] = 0x48
	}
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Aid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x38
	}
	if m.IsPgc {
		i--
		if m.IsPgc {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CoverLeftText_1) > 0 {
		i -= len(m.CoverLeftText_1)
		copy(dAtA[i:], m.CoverLeftText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverLeftText_1)))
		i--
		dAtA[i] = 0x22
	}
	if m.CoverLeftIcon_1 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CoverLeftIcon_1))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdReason) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdReason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdReason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpName) > 0 {
		i -= len(m.UpName)
		copy(dAtA[i:], m.UpName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RcmdReason) > 0 {
		i -= len(m.RcmdReason)
		copy(dAtA[i:], m.RcmdReason)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RcmdReason)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Style != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Style))
		i--
		dAtA[i] = 0x10
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IconBadge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IconBadge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IconBadge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.IconBgUrl) > 0 {
		i -= len(m.IconBgUrl)
		copy(dAtA[i:], m.IconBgUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconBgUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CoverIconWithText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CoverIconWithText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CoverIconWithText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if m.Icon != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Icon))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynServerDetailsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynServerDetailsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynServerDetailsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TopDynamicIds) > 0 {
		dAtA214 := make([]byte, len(m.TopDynamicIds)*10)
		var j213 int
		for _, num1 := range m.TopDynamicIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA214[j213] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j213++
			}
			dAtA214[j213] = uint8(num)
			j213++
		}
		i -= j213
		copy(dAtA[i:], dAtA214[:j213])
		i = encodeVarintDynamicV2(dAtA, i, uint64(j213))
		i--
		dAtA[i] = 0x5a
	}
	if m.IsMaster {
		i--
		if m.IsMaster {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.Platform) > 0 {
		i -= len(m.Platform)
		copy(dAtA[i:], m.Platform)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Platform)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x40
	}
	if m.Build != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Buvid) > 0 {
		i -= len(m.Buvid)
		copy(dAtA[i:], m.Buvid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Buvid)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Device) > 0 {
		i -= len(m.Device)
		copy(dAtA[i:], m.Device)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Device)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MobiApp) > 0 {
		i -= len(m.MobiApp)
		copy(dAtA[i:], m.MobiApp)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.MobiApp)))
		i--
		dAtA[i] = 0x22
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x10
	}
	if len(m.DynamicIds) > 0 {
		dAtA217 := make([]byte, len(m.DynamicIds)*10)
		var j216 int
		for _, num1 := range m.DynamicIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA217[j216] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j216++
			}
			dAtA217[j216] = uint8(num)
			j216++
		}
		i -= j216
		copy(dAtA[i:], dAtA217[:j216])
		i = encodeVarintDynamicV2(dAtA, i, uint64(j216))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynServerDetailsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynServerDetailsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynServerDetailsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for k := range m.Items {
			v := m.Items[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintDynamicV2(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintDynamicV2(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintDynamicV2(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynSearchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSearchReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSearchReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Keyword) > 0 {
		i -= len(m.Keyword)
		copy(dAtA[i:], m.Keyword)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Keyword)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynSearchReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSearchReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSearchReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SearchInfo != nil {
		{
			size, err := m.SearchInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.SearchTopic != nil {
		{
			size, err := m.SearchTopic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ChannelInfo != nil {
		{
			size, err := m.ChannelInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0x32
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Total != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x20
	}
	if len(m.TrackId) > 0 {
		i -= len(m.TrackId)
		copy(dAtA[i:], m.TrackId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TrackId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.MoreButton != nil {
		{
			size, err := m.MoreButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchTopicButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchTopicButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchTopicButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JumpUri) > 0 {
		i -= len(m.JumpUri)
		copy(dAtA[i:], m.JumpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchTopicItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchTopicItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchTopicItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TagText) > 0 {
		i -= len(m.TagText)
		copy(dAtA[i:], m.TagText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TagText)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DescLong) > 0 {
		i -= len(m.DescLong)
		copy(dAtA[i:], m.DescLong)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescLong)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.TagIcon) > 0 {
		i -= len(m.TagIcon)
		copy(dAtA[i:], m.TagIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TagIcon)))
		i--
		dAtA[i] = 0x32
	}
	if m.IsActivity {
		i--
		if m.IsActivity {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x12
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SearchChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Channels) > 0 {
		for iNdEx := len(m.Channels) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Channels[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.MoreButton != nil {
		{
			size, err := m.MoreButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ChannelInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChannelInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChannelInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JumpUri) > 0 {
		i -= len(m.JumpUri)
		copy(dAtA[i:], m.JumpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUri)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.TypeIcon) > 0 {
		i -= len(m.TypeIcon)
		copy(dAtA[i:], m.TypeIcon)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TypeIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsAtten {
		i--
		if m.IsAtten {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChannelName) > 0 {
		i -= len(m.ChannelName)
		copy(dAtA[i:], m.ChannelName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ChannelName)))
		i--
		dAtA[i] = 0x12
	}
	if m.ChannelId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ChannelId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SetDecisionReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetDecisionReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetDecisionReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if m.Result != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusTop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusTop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusTop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BottomLeftText) > 0 {
		i -= len(m.BottomLeftText)
		copy(dAtA[i:], m.BottomLeftText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BottomLeftText)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.CampusNameLink) > 0 {
		i -= len(m.CampusNameLink)
		copy(dAtA[i:], m.CampusNameLink)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusNameLink)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.CampusIntro) > 0 {
		i -= len(m.CampusIntro)
		copy(dAtA[i:], m.CampusIntro)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusIntro)))
		i--
		dAtA[i] = 0x72
	}
	if m.MngEntry != nil {
		{
			size, err := m.MngEntry.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if len(m.CampusMotto) > 0 {
		i -= len(m.CampusMotto)
		copy(dAtA[i:], m.CampusMotto)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusMotto)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CampusBackground) > 0 {
		i -= len(m.CampusBackground)
		copy(dAtA[i:], m.CampusBackground)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusBackground)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CampusBadge) > 0 {
		i -= len(m.CampusBadge)
		copy(dAtA[i:], m.CampusBadge)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusBadge)))
		i--
		dAtA[i] = 0x52
	}
	if m.TopicSquare != nil {
		{
			size, err := m.TopicSquare.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.Notice != nil {
		{
			size, err := m.Notice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.InviteLabel != nil {
		{
			size, err := m.InviteLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Banner) > 0 {
		for iNdEx := len(m.Banner) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Banner[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SwitchLabel != nil {
		{
			size, err := m.SwitchLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Tabs) > 0 {
		for iNdEx := len(m.Tabs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tabs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusShowTabInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusShowTabInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusShowTabInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IconUrl) > 0 {
		i -= len(m.IconUrl)
		copy(dAtA[i:], m.IconUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.IconUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RedDot != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RedDot))
		i--
		dAtA[i] = 0x20
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusBannerInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusBannerInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusBannerInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JumpUrl) > 0 {
		i -= len(m.JumpUrl)
		copy(dAtA[i:], m.JumpUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusNoticeInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusNoticeInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusNoticeInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AlumniDynamicsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlumniDynamicsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AlumniDynamicsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x30
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x28
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.FirstTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FirstTime))
		i--
		dAtA[i] = 0x10
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AlumniDynamicsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlumniDynamicsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AlumniDynamicsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PageType))
		i--
		dAtA[i] = 0x38
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x30
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Lng != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lng))))
		i--
		dAtA[i] = 0x21
	}
	if m.Lat != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lat))))
		i--
		dAtA[i] = 0x19
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JumpHomePop != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpHomePop))
		i--
		dAtA[i] = 0x28
	}
	if m.PageType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PageType))
		i--
		dAtA[i] = 0x20
	}
	if m.CampusTop != nil {
		{
			size, err := m.CampusTop.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Rcmd != nil {
		{
			size, err := m.Rcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Top != nil {
		{
			size, err := m.Top.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdTop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdTop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdTop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AuditMessage) > 0 {
		i -= len(m.AuditMessage)
		copy(dAtA[i:], m.AuditMessage)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AuditMessage)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.AuditBeforeOpen {
		i--
		if m.AuditBeforeOpen {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.RcmdTopic != nil {
		{
			size, err := m.RcmdTopic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.MngLabel != nil {
		{
			size, err := m.MngLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.SchoolLabel != nil {
		{
			size, err := m.SchoolLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.MaxReserve != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.MaxReserve))
		i--
		dAtA[i] = 0x70
	}
	if m.ReserveNumber != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ReserveNumber))
		i--
		dAtA[i] = 0x68
	}
	if m.ReserveLabel != nil {
		{
			size, err := m.ReserveLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.InviteLabel != nil {
		{
			size, err := m.InviteLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Desc_3) > 0 {
		i -= len(m.Desc_3)
		copy(dAtA[i:], m.Desc_3)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_3)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Desc_2) > 0 {
		i -= len(m.Desc_2)
		copy(dAtA[i:], m.Desc_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_2)))
		i--
		dAtA[i] = 0x4a
	}
	if m.NoticeLabel != nil {
		{
			size, err := m.NoticeLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.SwitchLabel != nil {
		{
			size, err := m.SwitchLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RcmdTopButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdTopButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdTopButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EntryLabel != nil {
		{
			size, err := m.EntryLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SubscribeCampusReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubscribeCampusReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubscribeCampusReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SetRecentCampusReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetRecentCampusReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetRecentCampusReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynTabReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynTabReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynTabReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if m.TeenagersMode != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TeenagersMode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DynTabReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynTabReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynTabReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ScreenTab) > 0 {
		for iNdEx := len(m.ScreenTab) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ScreenTab[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.DynTab) > 0 {
		for iNdEx := len(m.DynTab) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DynTab[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynScreenTab) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynScreenTab) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynScreenTab) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynTab) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynTab) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynTab) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JumpHomePop) > 0 {
		i -= len(m.JumpHomePop)
		copy(dAtA[i:], m.JumpHomePop)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.JumpHomePop)))
		i--
		dAtA[i] = 0x72
	}
	if m.BackUp != nil {
		{
			size, err := m.BackUp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x60
	}
	if len(m.InternalTest) > 0 {
		i -= len(m.InternalTest)
		copy(dAtA[i:], m.InternalTest)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.InternalTest)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Anchor) > 0 {
		i -= len(m.Anchor)
		copy(dAtA[i:], m.Anchor)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Anchor)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.SubTitle) > 0 {
		i -= len(m.SubTitle)
		copy(dAtA[i:], m.SubTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubTitle)))
		i--
		dAtA[i] = 0x4a
	}
	if m.DefaultTab {
		i--
		if m.DefaultTab {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Popup != nil {
		{
			size, err := m.Popup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.IsPopup != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.IsPopup))
		i--
		dAtA[i] = 0x30
	}
	if m.CityId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CityId))
		i--
		dAtA[i] = 0x28
	}
	if m.RedPoint != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RedPoint))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Bubble) > 0 {
		i -= len(m.Bubble)
		copy(dAtA[i:], m.Bubble)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Bubble)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Popup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Popup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Popup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SchoolSearchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SchoolSearchReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SchoolSearchReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Keyword) > 0 {
		i -= len(m.Keyword)
		copy(dAtA[i:], m.Keyword)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Keyword)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SchoolSearchReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SchoolSearchReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SchoolSearchReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Toast != nil {
		{
			size, err := m.Toast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *SearchToast) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchToast) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchToast) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Online != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Online))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SchoolRecommendReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SchoolRecommendReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SchoolRecommendReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x18
	}
	if m.Lng != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Lng))))
		i--
		dAtA[i] = 0x15
	}
	if m.Lat != 0 {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.Lat))))
		i--
		dAtA[i] = 0xd
	}
	return len(dAtA) - i, nil
}

func (m *SchoolRecommendReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SchoolRecommendReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SchoolRecommendReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DynSpaceSearchDetailsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSpaceSearchDetailsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSpaceSearchDetailsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TfType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TfType))
		i--
		dAtA[i] = 0x68
	}
	if m.NetType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.NetType))
		i--
		dAtA[i] = 0x60
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Platform) > 0 {
		i -= len(m.Platform)
		copy(dAtA[i:], m.Platform)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Platform)))
		i--
		dAtA[i] = 0x52
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x48
	}
	if m.Build != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Buvid) > 0 {
		i -= len(m.Buvid)
		copy(dAtA[i:], m.Buvid)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Buvid)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Device) > 0 {
		i -= len(m.Device)
		copy(dAtA[i:], m.Device)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Device)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MobiApp) > 0 {
		i -= len(m.MobiApp)
		copy(dAtA[i:], m.MobiApp)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.MobiApp)))
		i--
		dAtA[i] = 0x2a
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.SearchWords) > 0 {
		for iNdEx := len(m.SearchWords) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SearchWords[iNdEx])
			copy(dAtA[i:], m.SearchWords[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SearchWords[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.DynamicIds) > 0 {
		dAtA250 := make([]byte, len(m.DynamicIds)*10)
		var j249 int
		for _, num1 := range m.DynamicIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA250[j249] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j249++
			}
			dAtA250[j249] = uint8(num)
			j249++
		}
		i -= j249
		copy(dAtA[i:], dAtA250[:j249])
		i = encodeVarintDynamicV2(dAtA, i, uint64(j249))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DynSpaceSearchDetailsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DynSpaceSearchDetailsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DynSpaceSearchDetailsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for k := range m.Items {
			v := m.Items[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintDynamicV2(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintDynamicV2(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintDynamicV2(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *OfficialAccountsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialAccountsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialAccountsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialAccountsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialAccountsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialAccountsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *OfficialAccountInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialAccountInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialAccountInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Relation != nil {
		{
			size, err := m.Relation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OfficialDynamicsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialDynamicsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialDynamicsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialDynamicsReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialDynamicsReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialDynamicsReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Offset != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *OfficialItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RcmdItem != nil {
		{
			size := m.RcmdItem.Size()
			i -= size
			if _, err := m.RcmdItem.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OfficialItem_RcmdArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialItem_RcmdArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RcmdArchive != nil {
		{
			size, err := m.RcmdArchive.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *OfficialItem_RcmdDynamic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialItem_RcmdDynamic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.RcmdDynamic != nil {
		{
			size, err := m.RcmdDynamic.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *OfficialRcmdArchive) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialRcmdArchive) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialRcmdArchive) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x78
	}
	if m.DynamicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynamicId))
		i--
		dAtA[i] = 0x70
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x6a
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x60
	}
	if m.Aid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x52
	}
	if m.ShowThreePoint {
		i--
		if m.ShowThreePoint {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x3a
	}
	if m.DescIcon_2 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DescIcon_2))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DescIcon_1 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DescIcon_1))
		i--
		dAtA[i] = 0x20
	}
	if len(m.CoverRightText) > 0 {
		i -= len(m.CoverRightText)
		copy(dAtA[i:], m.CoverRightText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverRightText)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OfficialRcmdDynamic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OfficialRcmdDynamic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OfficialRcmdDynamic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Rid))
		i--
		dAtA[i] = 0x68
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x62
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x58
	}
	if m.DynamicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynamicId))
		i--
		dAtA[i] = 0x50
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DescText_2) > 0 {
		i -= len(m.DescText_2)
		copy(dAtA[i:], m.DescText_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_2)))
		i--
		dAtA[i] = 0x3a
	}
	if m.DescIcon_2 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DescIcon_2))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DescText_1) > 0 {
		i -= len(m.DescText_1)
		copy(dAtA[i:], m.DescText_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescText_1)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DescIcon_1 != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DescIcon_1))
		i--
		dAtA[i] = 0x20
	}
	if len(m.CoverRightTopText) > 0 {
		i -= len(m.CoverRightTopText)
		copy(dAtA[i:], m.CoverRightTopText)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CoverRightTopText)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusRedDotReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRedDotReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRedDotReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRedDotReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRedDotReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRedDotReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RedDot != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RedDot))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdFeedReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdFeedReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdFeedReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x40
	}
	if len(m.ViewDynId) > 0 {
		i -= len(m.ViewDynId)
		copy(dAtA[i:], m.ViewDynId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ViewDynId)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Scroll != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Scroll))
		i--
		dAtA[i] = 0x30
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x28
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.FirstTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FirstTime))
		i--
		dAtA[i] = 0x10
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRcmdFeedReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRcmdFeedReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRcmdFeedReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Update {
		i--
		if m.Update {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.GuideBar != nil {
		{
			size, err := m.GuideBar.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GuideBarInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GuideBarInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GuideBarInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JumpPosition != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpPosition))
		i--
		dAtA[i] = 0x30
	}
	if m.JumpPage != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.JumpPage))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if m.Position != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.Show != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Show))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicSquareReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicSquareReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicSquareReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicSquareReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicSquareReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicSquareReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopicSquareInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicSquareInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicSquareInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rcmd != nil {
		{
			size, err := m.Rcmd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopicRcmdCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicRcmdCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicRcmdCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdateDesc) > 0 {
		i -= len(m.UpdateDesc)
		copy(dAtA[i:], m.UpdateDesc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateDesc)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Desc_2) > 0 {
		i -= len(m.Desc_2)
		copy(dAtA[i:], m.Desc_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_2)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Desc_1) > 0 {
		i -= len(m.Desc_1)
		copy(dAtA[i:], m.Desc_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_1)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x12
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CreateTopicBtn != nil {
		{
			size, err := m.CreateTopicBtn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TopicItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RcmdDesc) > 0 {
		i -= len(m.RcmdDesc)
		copy(dAtA[i:], m.RcmdDesc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.RcmdDesc)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Desc_2) > 0 {
		i -= len(m.Desc_2)
		copy(dAtA[i:], m.Desc_2)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_2)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x12
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMateLikeListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMateLikeListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMateLikeListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x10
	}
	if m.DynamicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.DynamicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMateLikeListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMateLikeListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMateLikeListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CampusFeedbackReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusFeedbackReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusFeedbackReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x18
	}
	if m.From != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.From))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Infos) > 0 {
		for iNdEx := len(m.Infos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Infos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CampusFeedbackInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusFeedbackInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusFeedbackInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x22
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x18
	}
	if m.BizId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BizId))
		i--
		dAtA[i] = 0x10
	}
	if m.BizType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BizType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusFeedbackReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusFeedbackReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusFeedbackReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusBillBoardReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusBillBoardReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusBillBoardReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusBillboardInternalReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusBillboardInternalReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusBillboardInternalReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x10
	}
	if m.Mid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusBillBoardReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusBillBoardReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusBillBoardReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OpenProgress != nil {
		{
			size, err := m.OpenProgress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x50
	}
	if len(m.UpdateToast) > 0 {
		i -= len(m.UpdateToast)
		copy(dAtA[i:], m.UpdateToast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UpdateToast)))
		i--
		dAtA[i] = 0x4a
	}
	if m.BindNotice != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BindNotice))
		i--
		dAtA[i] = 0x40
	}
	if len(m.ShareUri) > 0 {
		i -= len(m.ShareUri)
		copy(dAtA[i:], m.ShareUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.ShareUri)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x2a
	}
	if m.BuildTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.BuildTime))
		i--
		dAtA[i] = 0x20
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HelpUri) > 0 {
		i -= len(m.HelpUri)
		copy(dAtA[i:], m.HelpUri)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HelpUri)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusFeatureProgress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusFeatureProgress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusFeatureProgress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Btn != nil {
		{
			size, err := m.Btn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc_1) > 0 {
		i -= len(m.Desc_1)
		copy(dAtA[i:], m.Desc_1)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Desc_1)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DescTitle) > 0 {
		i -= len(m.DescTitle)
		copy(dAtA[i:], m.DescTitle)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.DescTitle)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProgressAchieved != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ProgressAchieved))
		i--
		dAtA[i] = 0x10
	}
	if m.ProgressFull != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ProgressFull))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusTopicRcmdFeedReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusTopicRcmdFeedReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusTopicRcmdFeedReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.FromType))
		i--
		dAtA[i] = 0x28
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusTopicRcmdFeedReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusTopicRcmdFeedReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusTopicRcmdFeedReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JoinDiscuss != nil {
		{
			size, err := m.JoinDiscuss.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x22
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UnfollowMatchReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnfollowMatchReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnfollowMatchReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Cid != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Cid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FetchTabSettingReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FetchTabSettingReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FetchTabSettingReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UpdateTabSettingReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateTabSettingReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateTabSettingReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusSquareReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusSquareReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusSquareReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Lng != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lng))))
		i--
		dAtA[i] = 0x19
	}
	if m.Lat != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lat))))
		i--
		dAtA[i] = 0x11
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusSquareReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusSquareReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusSquareReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Button != nil {
		{
			size, err := m.Button.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RcmdCampusBrief) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RcmdCampusBrief) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RcmdCampusBrief) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CampusBadge) > 0 {
		i -= len(m.CampusBadge)
		copy(dAtA[i:], m.CampusBadge)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusBadge)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRecommendReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRecommendReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRecommendReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.From != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.From))
		i--
		dAtA[i] = 0x20
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.PageNo != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PageNo))
		i--
		dAtA[i] = 0x10
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusRecommendReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusRecommendReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusRecommendReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CampusHomePagesReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusHomePagesReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusHomePagesReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PageType))
		i--
		dAtA[i] = 0x18
	}
	if m.CampusTop != nil {
		{
			size, err := m.CampusTop.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Top != nil {
		{
			size, err := m.Top.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusHomePagesReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusHomePagesReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusHomePagesReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.PageType))
		i--
		dAtA[i] = 0x30
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Lng != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lng))))
		i--
		dAtA[i] = 0x21
	}
	if m.Lat != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Lat))))
		i--
		dAtA[i] = 0x19
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusEntryTabReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusEntryTabReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusEntryTabReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusEntryTabResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusEntryTabResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusEntryTabResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EntryType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.EntryType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusHomeRcmdTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusHomeRcmdTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusHomeRcmdTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Topic) > 0 {
		for iNdEx := len(m.Topic) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Topic[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Title != nil {
		{
			size, err := m.Title.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HomeSubscribeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HomeSubscribeReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HomeSubscribeReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HomeSubscribeReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HomeSubscribeReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HomeSubscribeReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Online != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Online))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LbsPoiReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LbsPoiReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LbsPoiReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x28
	}
	if m.RefreshType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.RefreshType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Poi) > 0 {
		i -= len(m.Poi)
		copy(dAtA[i:], m.Poi)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Poi)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LbsPoiDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LbsPoiDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LbsPoiDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Cover) > 0 {
		for iNdEx := len(m.Cover) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Cover[iNdEx])
			copy(dAtA[i:], m.Cover[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Cover[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.BasePic) > 0 {
		for iNdEx := len(m.BasePic) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BasePic[iNdEx])
			copy(dAtA[i:], m.BasePic[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BasePic[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Type != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Poi) > 0 {
		i -= len(m.Poi)
		copy(dAtA[i:], m.Poi)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Poi)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LbsPoiReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LbsPoiReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LbsPoiReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Detail != nil {
		{
			size, err := m.Detail.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x12
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FeedFilterReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedFilterReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedFilterReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x38
	}
	if m.ColdStart != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ColdStart))
		i--
		dAtA[i] = 0x30
	}
	if m.AdParam != nil {
		{
			size, err := m.AdParam.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.PlayerArgs != nil {
		{
			size, err := m.PlayerArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.LocalTime != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.LocalTime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Tab) > 0 {
		i -= len(m.Tab)
		copy(dAtA[i:], m.Tab)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Tab)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FeedFilterReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedFilterReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedFilterReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngDetailReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngDetailReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngDetailReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngDetailReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngDetailReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.BottomSubmitHintMsg) > 0 {
		i -= len(m.BottomSubmitHintMsg)
		copy(dAtA[i:], m.BottomSubmitHintMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BottomSubmitHintMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopHintBarMsg) > 0 {
		i -= len(m.TopHintBarMsg)
		copy(dAtA[i:], m.TopHintBarMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopHintBarMsg)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Item != nil {
		{
			size := m.Item.Size()
			i -= size
			if _, err := m.Item.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.IsDel {
		i--
		if m.IsDel {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.MngItemId) > 0 {
		i -= len(m.MngItemId)
		copy(dAtA[i:], m.MngItemId)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.MngItemId)))
		i--
		dAtA[i] = 0x22
	}
	if m.ItemType != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.ItemType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AuditMessage) > 0 {
		i -= len(m.AuditMessage)
		copy(dAtA[i:], m.AuditMessage)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AuditMessage)))
		i--
		dAtA[i] = 0x12
	}
	if m.AuditStatus != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AuditStatus))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngItem_BasicInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngItem_BasicInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BasicInfo != nil {
		{
			size, err := m.BasicInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *CampusMngItem_Badge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngItem_Badge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Badge != nil {
		{
			size, err := m.Badge.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *CampusMngItem_Slogan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngItem_Slogan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Slogan != nil {
		{
			size, err := m.Slogan.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *CampusMngItem_Quiz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngItem_Quiz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Quiz != nil {
		{
			size, err := m.Quiz.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *CampusMngBasicInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngBasicInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngBasicInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.HintMsg) > 0 {
		i -= len(m.HintMsg)
		copy(dAtA[i:], m.HintMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.HintMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CampusName) > 0 {
		i -= len(m.CampusName)
		copy(dAtA[i:], m.CampusName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CampusName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngBadge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngBadge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngBadge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UploadHintMsg) > 0 {
		i -= len(m.UploadHintMsg)
		copy(dAtA[i:], m.UploadHintMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.UploadHintMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BadgeUrl) > 0 {
		i -= len(m.BadgeUrl)
		copy(dAtA[i:], m.BadgeUrl)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.BadgeUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngSlogan) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngSlogan) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngSlogan) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InputHintMsg) > 0 {
		i -= len(m.InputHintMsg)
		copy(dAtA[i:], m.InputHintMsg)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.InputHintMsg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Slogan) > 0 {
		i -= len(m.Slogan)
		copy(dAtA[i:], m.Slogan)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Slogan)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngQuiz) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngQuiz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngQuiz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.QuizCount != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.QuizCount))
		i--
		dAtA[i] = 0x28
	}
	if len(m.SubmitLabel) > 0 {
		i -= len(m.SubmitLabel)
		copy(dAtA[i:], m.SubmitLabel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.SubmitLabel)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AddLabel) > 0 {
		i -= len(m.AddLabel)
		copy(dAtA[i:], m.AddLabel)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AddLabel)))
		i--
		dAtA[i] = 0x1a
	}
	if m.MoreLabel != nil {
		{
			size, err := m.MoreLabel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngSubmitReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngSubmitReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngSubmitReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ModifiedItems) > 0 {
		for iNdEx := len(m.ModifiedItems) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ModifiedItems[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngSubmitReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngSubmitReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngSubmitReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngQuizDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngQuizDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngQuizDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AuditMessage) > 0 {
		i -= len(m.AuditMessage)
		copy(dAtA[i:], m.AuditMessage)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.AuditMessage)))
		i--
		dAtA[i] = 0x32
	}
	if m.AuditStatus != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.AuditStatus))
		i--
		dAtA[i] = 0x28
	}
	if len(m.WrongAnswerList) > 0 {
		for iNdEx := len(m.WrongAnswerList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.WrongAnswerList[iNdEx])
			copy(dAtA[i:], m.WrongAnswerList[iNdEx])
			i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.WrongAnswerList[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.CorrectAnswer) > 0 {
		i -= len(m.CorrectAnswer)
		copy(dAtA[i:], m.CorrectAnswer)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.CorrectAnswer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Question) > 0 {
		i -= len(m.Question)
		copy(dAtA[i:], m.Question)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Question)))
		i--
		dAtA[i] = 0x12
	}
	if m.QuizId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.QuizId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngQuizOperateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngQuizOperateReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngQuizOperateReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Quiz) > 0 {
		for iNdEx := len(m.Quiz) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Quiz[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.CampusId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.CampusId))
		i--
		dAtA[i] = 0x10
	}
	if m.Action != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CampusMngQuizOperateReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CampusMngQuizOperateReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CampusMngQuizOperateReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.QuizTotal != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.QuizTotal))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Quiz) > 0 {
		for iNdEx := len(m.Quiz) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Quiz[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Toast) > 0 {
		i -= len(m.Toast)
		copy(dAtA[i:], m.Toast)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Toast)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LegacyTopicFeedReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LegacyTopicFeedReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LegacyTopicFeedReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CardFilter != nil {
		{
			size, err := m.CardFilter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.SortType != nil {
		{
			size, err := m.SortType.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDynamicV2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x12
	}
	if m.TopicId != 0 {
		i = encodeVarintDynamicV2(dAtA, i, uint64(m.TopicId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LegacyTopicFeedReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LegacyTopicFeedReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LegacyTopicFeedReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FeedCardFilters) > 0 {
		for iNdEx := len(m.FeedCardFilters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FeedCardFilters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.SupportedSortTypes) > 0 {
		for iNdEx := len(m.SupportedSortTypes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SupportedSortTypes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintDynamicV2(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HasMore {
		i--
		if m.HasMore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDynamicV2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintDynamicV2(dAtA []byte, offset int, v uint64) int {
	offset -= sovDynamicV2(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVideoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UpdateBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.RefreshType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RefreshType))
	}
	if m.PlayurlParam != nil {
		l = m.PlayurlParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AssistBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PlayurlParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Qn != 0 {
		n += 1 + sovDynamicV2(uint64(m.Qn))
	}
	if m.Fnver != 0 {
		n += 1 + sovDynamicV2(uint64(m.Fnver))
	}
	if m.Fnval != 0 {
		n += 1 + sovDynamicV2(uint64(m.Fnval))
	}
	if m.ForceHost != 0 {
		n += 1 + sovDynamicV2(uint64(m.ForceHost))
	}
	if m.Fourk != 0 {
		n += 1 + sovDynamicV2(uint64(m.Fourk))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVideoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicList != nil {
		l = m.DynamicList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.VideoUpList != nil {
		l = m.VideoUpList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.VideoFollowList != nil {
		l = m.VideoFollowList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CardVideoDynList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.UpdateNum != 0 {
		n += 1 + sovDynamicV2(uint64(m.UpdateNum))
	}
	l = len(m.HistoryOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.UpdateBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardType != 0 {
		n += 1 + sovDynamicV2(uint64(m.CardType))
	}
	if m.ItemType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ItemType))
	}
	if len(m.Modules) > 0 {
		for _, e := range m.Modules {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Extend != nil {
		l = m.Extend.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasFold != 0 {
		n += 1 + sovDynamicV2(uint64(m.HasFold))
	}
	l = len(m.ServerInfo)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Module) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ModuleType))
	}
	if m.ModuleItem != nil {
		n += m.ModuleItem.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Module_ModuleAuthor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleAuthor != nil {
		l = m.ModuleAuthor.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleDispute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleDispute != nil {
		l = m.ModuleDispute.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleDesc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleDesc != nil {
		l = m.ModuleDesc.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleDynamic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleDynamic != nil {
		l = m.ModuleDynamic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleLikeUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleLikeUser != nil {
		l = m.ModuleLikeUser.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleExtend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleExtend != nil {
		l = m.ModuleExtend.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleAdditional) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleAdditional != nil {
		l = m.ModuleAdditional.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleStat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleStat != nil {
		l = m.ModuleStat.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleFold) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleFold != nil {
		l = m.ModuleFold.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleComment != nil {
		l = m.ModuleComment.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleInteraction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleInteraction != nil {
		l = m.ModuleInteraction.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleAuthorForward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleAuthorForward != nil {
		l = m.ModuleAuthorForward.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleAd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleAd != nil {
		l = m.ModuleAd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleBanner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleBanner != nil {
		l = m.ModuleBanner.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleItemNull) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleItemNull != nil {
		l = m.ModuleItemNull.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleShareInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleShareInfo != nil {
		l = m.ModuleShareInfo.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleRecommend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleRecommend != nil {
		l = m.ModuleRecommend.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTop != nil {
		l = m.ModuleTop.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleButtom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleButtom != nil {
		l = m.ModuleButtom.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleStatForward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleStatForward != nil {
		l = m.ModuleStatForward.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleStory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleStory != nil {
		l = m.ModuleStory.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTopic != nil {
		l = m.ModuleTopic.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTopicDetailsExt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTopicDetailsExt != nil {
		l = m.ModuleTopicDetailsExt.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTopTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTopTag != nil {
		l = m.ModuleTopTag.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTopicBrief) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTopicBrief != nil {
		l = m.ModuleTopicBrief.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleTitle != nil {
		l = m.ModuleTitle.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleButton != nil {
		l = m.ModuleButton.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *Module_ModuleNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleNotice != nil {
		l = m.ModuleNotice.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleTopTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAuthor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.PtimeLabelText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DecorateCard != nil {
		l = m.DecorateCard.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.TpList) > 0 {
		for _, e := range m.TpList {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.BadgeType != 0 {
		n += 1 + sovDynamicV2(uint64(m.BadgeType))
	}
	if m.BadgeButton != nil {
		l = m.BadgeButton.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Attend != 0 {
		n += 1 + sovDynamicV2(uint64(m.Attend))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Weight != nil {
		l = m.Weight.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowFollow {
		n += 2
	}
	if m.IsTop {
		n += 2
	}
	l = len(m.PtimeLocationText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowLevel {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Official != nil {
		l = m.Official.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Vip != nil {
		l = m.Vip.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Live != nil {
		l = m.Live.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Pendant != nil {
		l = m.Pendant.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Nameplate != nil {
		l = m.Nameplate.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Level != 0 {
		n += 1 + sovDynamicV2(uint64(m.Level))
	}
	l = len(m.Sign)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FaceNft != 0 {
		n += 1 + sovDynamicV2(uint64(m.FaceNft))
	}
	if m.FaceNftNew != 0 {
		n += 1 + sovDynamicV2(uint64(m.FaceNftNew))
	}
	if m.NftInfo != nil {
		l = m.NftInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsSeniorMember != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsSeniorMember))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NFTInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RegionType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RegionType))
	}
	l = len(m.RegionIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RegionShowStatus != 0 {
		n += 1 + sovDynamicV2(uint64(m.RegionShowStatus))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialVerify) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsAtten != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsAtten))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VipInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.DueDate != 0 {
		n += 1 + sovDynamicV2(uint64(m.DueDate))
	}
	if m.Label != nil {
		l = m.Label.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ThemeType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ThemeType))
	}
	if m.AvatarSubscript != 0 {
		n += 1 + sovDynamicV2(uint64(m.AvatarSubscript))
	}
	l = len(m.NicknameColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VipLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.LabelTheme)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LiveInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsLiving != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsLiving))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LiveState != 0 {
		n += 1 + sovDynamicV2(uint64(m.LiveState))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserPendant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Pid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Expire != 0 {
		n += 1 + sovDynamicV2(uint64(m.Expire))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Nameplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Nid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Nid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ImageSmall)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Level)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Condition)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DecorateCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.CardUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Fan != nil {
		l = m.Fan.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DecoCardFan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsFan != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsFan))
	}
	if m.Number != 0 {
		n += 1 + sovDynamicV2(uint64(m.Number))
	}
	l = len(m.NumberStr)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleDispute) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleDesc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Desc) > 0 {
		for _, e := range m.Desc {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.JumpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Description) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.EmojiType != 0 {
		n += 1 + sovDynamicV2(uint64(m.EmojiType))
	}
	l = len(m.GoodsType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.IconUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.IconName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Rid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Goods != nil {
		l = m.Goods.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OrigText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.EmojiSize != 0 {
		n += 1 + sovDynamicV2(uint64(m.EmojiSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleDescGoods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SourceType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SourceType))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SchemaUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ItemId != 0 {
		n += 1 + sovDynamicV2(uint64(m.ItemId))
	}
	if len(m.OpenWhiteList) > 0 {
		for _, s := range m.OpenWhiteList {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.UserWebV2 {
		n += 2
	}
	l = len(m.AdMark)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SchemaPackageName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.JumpType != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpType))
	}
	l = len(m.AppName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleDynamic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.ModuleItem != nil {
		n += m.ModuleItem.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleDynamic_DynArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynArchive != nil {
		l = m.DynArchive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynPgc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynPgc != nil {
		l = m.DynPgc.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynCourSeason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynCourSeason != nil {
		l = m.DynCourSeason.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynCourBatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynCourBatch != nil {
		l = m.DynCourBatch.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynForward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynForward != nil {
		l = m.DynForward.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynDraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynDraw != nil {
		l = m.DynDraw.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynArticle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynArticle != nil {
		l = m.DynArticle.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynMusic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynMusic != nil {
		l = m.DynMusic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynCommon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynCommon != nil {
		l = m.DynCommon.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynCommonLive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynCommonLive != nil {
		l = m.DynCommonLive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynMedialist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynMedialist != nil {
		l = m.DynMedialist.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynApplet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynApplet != nil {
		l = m.DynApplet.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynSubscription != nil {
		l = m.DynSubscription.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynLiveRcmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynLiveRcmd != nil {
		l = m.DynLiveRcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynUgcSeason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynUgcSeason != nil {
		l = m.DynUgcSeason.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynSubscriptionNew) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynSubscriptionNew != nil {
		l = m.DynSubscriptionNew.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynCourBatchUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynCourBatchUp != nil {
		l = m.DynCourBatchUp.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleDynamic_DynTopicSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynTopicSet != nil {
		l = m.DynTopicSet.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *MdlDynArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Avid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Avid))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.MediaType != 0 {
		n += 1 + sovDynamicV2(uint64(m.MediaType))
	}
	if m.Dimension != nil {
		l = m.Dimension.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Badge) > 0 {
		for _, e := range m.Badge {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.CanPlay {
		n += 2
	}
	if m.Stype != 0 {
		n += 1 + sovDynamicV2(uint64(m.Stype))
	}
	if m.IsPGC {
		n += 2
	}
	l = len(m.InlineURL)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.EpisodeId != 0 {
		n += 2 + sovDynamicV2(uint64(m.EpisodeId))
	}
	if m.SubType != 0 {
		n += 2 + sovDynamicV2(uint64(m.SubType))
	}
	if m.PgcSeasonId != 0 {
		n += 2 + sovDynamicV2(uint64(m.PgcSeasonId))
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.Duration != 0 {
		n += 2 + sovDynamicV2(uint64(m.Duration))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.IsPreview {
		n += 3
	}
	if len(m.BadgeCategory) > 0 {
		for _, e := range m.BadgeCategory {
			l = e.Size()
			n += 2 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.IsFeature {
		n += 3
	}
	if m.ReserveType != 0 {
		n += 2 + sovDynamicV2(uint64(m.ReserveType))
	}
	l = len(m.Bvid)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.View != 0 {
		n += 2 + sovDynamicV2(uint64(m.View))
	}
	if m.ShowPremiereBadge {
		n += 3
	}
	if m.PremiereCard {
		n += 3
	}
	if m.ShowProgress {
		n += 3
	}
	if m.PartDuration != 0 {
		n += 2 + sovDynamicV2(uint64(m.PartDuration))
	}
	if m.PartProgress != 0 {
		n += 2 + sovDynamicV2(uint64(m.PartProgress))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Dimension) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovDynamicV2(uint64(m.Height))
	}
	if m.Width != 0 {
		n += 1 + sovDynamicV2(uint64(m.Width))
	}
	if m.Rotate != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rotate))
	}
	if m.ForceHorizontal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoBadge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.TextColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.TextColorNight)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BgColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BgColorNight)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BorderColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BorderColorNight)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BgStyle != 0 {
		n += 1 + sovDynamicV2(uint64(m.BgStyle))
	}
	if m.BgAlpha != 0 {
		n += 1 + sovDynamicV2(uint64(m.BgAlpha))
	}
	if m.BgAlphaNight != 0 {
		n += 1 + sovDynamicV2(uint64(m.BgAlphaNight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynPGC) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.SeasonId != 0 {
		n += 1 + sovDynamicV2(uint64(m.SeasonId))
	}
	if m.Epid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Epid))
	}
	if m.Aid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Aid))
	}
	if m.MediaType != 0 {
		n += 1 + sovDynamicV2(uint64(m.MediaType))
	}
	if m.SubType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SubType))
	}
	if m.IsPreview {
		n += 2
	}
	if m.Dimension != nil {
		l = m.Dimension.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Badge) > 0 {
		for _, e := range m.Badge {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.CanPlay {
		n += 3
	}
	if m.Season != nil {
		l = m.Season.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.Duration != 0 {
		n += 2 + sovDynamicV2(uint64(m.Duration))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if len(m.BadgeCategory) > 0 {
		for _, e := range m.BadgeCategory {
			l = e.Size()
			n += 2 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.IsFeature {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PGCSeason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsFinish != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsFinish))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynCourSeason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CanPlay {
		n += 2
	}
	if m.IsPreview {
		n += 2
	}
	if m.Avid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Avid))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.Epid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Epid))
	}
	if m.Duration != 0 {
		n += 1 + sovDynamicV2(uint64(m.Duration))
	}
	if m.SeasonId != 0 {
		n += 1 + sovDynamicV2(uint64(m.SeasonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynCourBatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CanPlay {
		n += 2
	}
	if m.IsPreview {
		n += 2
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Avid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Avid))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.Epid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Epid))
	}
	if m.Duration != 0 {
		n += 2 + sovDynamicV2(uint64(m.Duration))
	}
	if m.SeasonId != 0 {
		n += 2 + sovDynamicV2(uint64(m.SeasonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynForward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rtype != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rtype))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynDraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	if m.IsDrawFirst {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynDrawItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Src)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Width != 0 {
		n += 1 + sovDynamicV2(uint64(m.Width))
	}
	if m.Height != 0 {
		n += 1 + sovDynamicV2(uint64(m.Height))
	}
	if m.Size_ != 0 {
		n += 5
	}
	if len(m.Tags) > 0 {
		for _, e := range m.Tags {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynDrawTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynDrawTagItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.X != 0 {
		n += 1 + sovDynamicV2(uint64(m.X))
	}
	if m.Y != 0 {
		n += 1 + sovDynamicV2(uint64(m.Y))
	}
	if m.Orientation != 0 {
		n += 1 + sovDynamicV2(uint64(m.Orientation))
	}
	if m.Source != 0 {
		n += 1 + sovDynamicV2(uint64(m.Source))
	}
	if m.ItemId != 0 {
		n += 1 + sovDynamicV2(uint64(m.ItemId))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	if m.Tid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Tid))
	}
	l = len(m.Poi)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SchemaUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynArticle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Covers) > 0 {
		for _, s := range m.Covers {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TemplateID != 0 {
		n += 1 + sovDynamicV2(uint64(m.TemplateID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynMusic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UpId != 0 {
		n += 1 + sovDynamicV2(uint64(m.UpId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Upper)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynCommon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Oid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Oid))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BizType != 0 {
		n += 1 + sovDynamicV2(uint64(m.BizType))
	}
	if m.SketchID != 0 {
		n += 1 + sovDynamicV2(uint64(m.SketchID))
	}
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	if len(m.Badge) > 0 {
		for _, e := range m.Badge {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynLive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLabel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLabel2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LiveState != 0 {
		n += 1 + sovDynamicV2(uint64(m.LiveState))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ReserveType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ReserveType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynMedialist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CoverType != 0 {
		n += 1 + sovDynamicV2(uint64(m.CoverType))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverBottomRightIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynApplet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ButtonTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	if m.AdId != 0 {
		n += 1 + sovDynamicV2(uint64(m.AdId))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AdTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Tips)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynLiveRcmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ReserveType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ReserveType))
	}
	if m.Pendant != nil {
		l = m.Pendant.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LivePendant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PendantId != 0 {
		n += 1 + sovDynamicV2(uint64(m.PendantId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynUGCSeason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.InlineURL)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CanPlay {
		n += 2
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Avid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Avid))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.Dimension != nil {
		l = m.Dimension.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovDynamicV2(uint64(m.Duration))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Badge) > 0 {
		for _, e := range m.Badge {
			l = e.Size()
			n += 2 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynSubscriptionNew) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynSubscriptionNew_DynSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynSubscription != nil {
		l = m.DynSubscription.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *MdlDynSubscriptionNew_DynLiveRcmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynLiveRcmd != nil {
		l = m.DynLiveRcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *MdlDynCourUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.PlayIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CanPlay {
		n += 2
	}
	if m.IsPreview {
		n += 2
	}
	if m.Avid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Avid))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.Epid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Epid))
	}
	if m.Duration != 0 {
		n += 1 + sovDynamicV2(uint64(m.Duration))
	}
	if m.SeasonId != 0 {
		n += 1 + sovDynamicV2(uint64(m.SeasonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MdlDynTopicSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Topics) > 0 {
		for _, e := range m.Topics {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.MoreBtn != nil {
		l = m.MoreBtn.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TopicSetId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicSetId))
	}
	if m.PushId != 0 {
		n += 1 + sovDynamicV2(uint64(m.PushId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAdditional) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.NeedWriteCalender {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAdditional_Pgc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pgc != nil {
		l = m.Pgc.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Goods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Goods != nil {
		l = m.Goods.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Vote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vote != nil {
		l = m.Vote.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Common) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Common != nil {
		l = m.Common.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Esport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Esport != nil {
		l = m.Esport.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Vote2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vote2 != nil {
		l = m.Vote2.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Ugc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ugc != nil {
		l = m.Ugc.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAdditional_Up) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Up != nil {
		l = m.Up.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionalPGC) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HeadText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HeadIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionalButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.JumpStyle != nil {
		l = m.JumpStyle.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Uncheck != nil {
		l = m.Uncheck.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Check != nil {
		l = m.Check.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.ClickType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ClickType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionalButtonStyle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Interactive != nil {
		l = m.Interactive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BgStyle != 0 {
		n += 1 + sovDynamicV2(uint64(m.BgStyle))
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Disable != 0 {
		n += 1 + sovDynamicV2(uint64(m.Disable))
	}
	if m.Share != nil {
		l = m.Share.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionalButtonShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Show != 0 {
		n += 1 + sovDynamicV2(uint64(m.Show))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionalButtonInteractive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Popups)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Confirm)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cancel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionGoods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RcmdDesc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.GoodsItems) > 0 {
		for _, e := range m.GoodsItems {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SourceType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SourceType))
	}
	if m.JumpType != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpType))
	}
	l = len(m.AppName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AdMarkIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GoodsItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SchemaPackageName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SourceType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SourceType))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpDesc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Brief)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Price)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ItemId != 0 {
		n += 1 + sovDynamicV2(uint64(m.ItemId))
	}
	l = len(m.SchemaUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.OpenWhiteList) > 0 {
		for _, s := range m.OpenWhiteList {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.UserWebV2 {
		n += 2
	}
	l = len(m.AdMark)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AppName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.JumpType != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ButtonText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionUgc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HeadText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Duration)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LineFeed {
		n += 2
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionCommon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HeadText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HeadIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionEsport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionEsport_AdditionEsportMoba) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdditionEsportMoba != nil {
		l = m.AdditionEsportMoba.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionEsportMoba) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HeadText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.MatchTeam) > 0 {
		for _, e := range m.MatchTeam {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.AdditionEsportMobaStatus != nil {
		l = m.AdditionEsportMobaStatus.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HeadIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionEsportMobaStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AdditionEsportMobaStatusDesc) > 0 {
		for _, e := range m.AdditionEsportMobaStatusDesc {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NightColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionEsportMobaStatusDesc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NightColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MatchTeam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NightColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionUP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DescText_1 != nil {
		l = m.DescText_1.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ReserveTotal != 0 {
		n += 1 + sovDynamicV2(uint64(m.ReserveTotal))
	}
	if m.ActSkin != nil {
		l = m.ActSkin.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.LotteryType != 0 {
		n += 1 + sovDynamicV2(uint64(m.LotteryType))
	}
	if m.DescText_3 != nil {
		l = m.DescText_3.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UpMid != 0 {
		n += 1 + sovDynamicV2(uint64(m.UpMid))
	}
	if m.UserInfo != nil {
		l = m.UserInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowText_2 {
		n += 2
	}
	if m.DynType != 0 {
		n += 2 + sovDynamicV2(uint64(m.DynType))
	}
	l = len(m.BusinessId)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BadgeText)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.IsPremiere {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionalActSkin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Svga)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.LastImage)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayTimes != 0 {
		n += 1 + sovDynamicV2(uint64(m.PlayTimes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HighlightText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TextStyle != 0 {
		n += 1 + sovDynamicV2(uint64(m.TextStyle))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleExtend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Extend) > 0 {
		for _, e := range m.Extend {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleExtendItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Extend != nil {
		n += m.Extend.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleExtendItem_ExtInfoTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoTopic != nil {
		l = m.ExtInfoTopic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleExtendItem_ExtInfoLbs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoLbs != nil {
		l = m.ExtInfoLbs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleExtendItem_ExtInfoHot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoHot != nil {
		l = m.ExtInfoHot.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleExtendItem_ExtInfoGame) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoGame != nil {
		l = m.ExtInfoGame.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleExtendItem_ExtInfoCommon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoCommon != nil {
		l = m.ExtInfoCommon.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleExtendItem_ExtInfoOgv) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExtInfoOgv != nil {
		l = m.ExtInfoOgv.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ExtInfoTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtInfoLBS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PoiType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PoiType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtInfoHot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtInfoGame) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtInfoCommon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PoiType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PoiType))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	l = len(m.SubModule)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ActionText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ActionUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.IsShowLight {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtInfoOGV) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InfoOgv) > 0 {
		for _, e := range m.InfoOgv {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InfoOGV) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubModule)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleInteraction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InteractionItem) > 0 {
		for _, e := range m.InteractionItem {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InteractionItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IconType != 0 {
		n += 1 + sovDynamicV2(uint64(m.IconType))
	}
	if len(m.Desc) > 0 {
		for _, e := range m.Desc {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CommentMid != 0 {
		n += 1 + sovDynamicV2(uint64(m.CommentMid))
	}
	if len(m.Faces) > 0 {
		for _, e := range m.Faces {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Stat != nil {
		l = m.Stat.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InteractionStat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Like != 0 {
		n += 1 + sovDynamicV2(uint64(m.Like))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InteractionFace) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleStat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Repost != 0 {
		n += 1 + sovDynamicV2(uint64(m.Repost))
	}
	if m.Like != 0 {
		n += 1 + sovDynamicV2(uint64(m.Like))
	}
	if m.Reply != 0 {
		n += 1 + sovDynamicV2(uint64(m.Reply))
	}
	if m.LikeInfo != nil {
		l = m.LikeInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.NoComment {
		n += 2
	}
	if m.NoForward {
		n += 2
	}
	l = len(m.ReplyUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NoCommentText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NoForwardText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleFold) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FoldType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FoldType))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.FoldIds)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.FoldUsers) > 0 {
		for _, e := range m.FoldUsers {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.TopicMergedResource != nil {
		l = m.TopicMergedResource.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicMergedResource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MergeType != 0 {
		n += 1 + sovDynamicV2(uint64(m.MergeType))
	}
	if m.MergedResCnt != 0 {
		n += 1 + sovDynamicV2(uint64(m.MergedResCnt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAllReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UpdateBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.RefreshType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RefreshType))
	}
	if m.PlayurlParam != nil {
		l = m.PlayurlParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AssistBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.RcmdUpsParam != nil {
		l = m.RcmdUpsParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.AdParam != nil {
		l = m.AdParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ColdStart != 0 {
		n += 1 + sovDynamicV2(uint64(m.ColdStart))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TabRecallUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.TabRecallUid))
	}
	if m.TabRecallType != 0 {
		n += 1 + sovDynamicV2(uint64(m.TabRecallType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdUPsParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DislikeTs != 0 {
		n += 1 + sovDynamicV2(uint64(m.DislikeTs))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AdExtra)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Config) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoryVerticalExp {
		n += 2
	}
	if m.DetailViewBits != 0 {
		n += 1 + sovDynamicV2(uint64(m.DetailViewBits))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAllReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicList != nil {
		l = m.DynamicList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UpList != nil {
		l = m.UpList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TopicList != nil {
		l = m.TopicList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Unfollow != nil {
		l = m.Unfollow.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RegionRcmd != nil {
		l = m.RegionRcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynamicList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.UpdateNum != 0 {
		n += 1 + sovDynamicV2(uint64(m.UpdateNum))
	}
	l = len(m.HistoryOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.UpdateBaseline)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.TopicListItem) > 0 {
		for _, e := range m.TopicListItem {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.ActButton != nil {
		l = m.ActButton.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MoreButton != nil {
		l = m.MoreButton.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ServerInfo)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ExpStyle != 0 {
		n += 1 + sovDynamicV2(uint64(m.ExpStyle))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicListItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.IconTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Pos != 0 {
		n += 1 + sovDynamicV2(uint64(m.Pos))
	}
	l = len(m.ServerInfo)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HeadIconUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UpMid != 0 {
		n += 1 + sovDynamicV2(uint64(m.UpMid))
	}
	l = len(m.TailIconUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Extension)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovDynamicV2(uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RedDot {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Unfollow) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.TrackId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnfollowUserItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasUpdate {
		n += 2
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	if m.Pos != 0 {
		n += 1 + sovDynamicV2(uint64(m.Pos))
	}
	if m.LiveState != 0 {
		n += 1 + sovDynamicV2(uint64(m.LiveState))
	}
	if m.Official != nil {
		l = m.Official.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Vip != nil {
		l = m.Vip.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Sign)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleTopicDetailsExt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CommentGuide)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleTopicBrief) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Topic != nil {
		l = m.Topic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RightBtn != nil {
		l = m.RightBtn.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TitleStyle != 0 {
		n += 1 + sovDynamicV2(uint64(m.TitleStyle))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Btn != nil {
		l = m.Btn.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleNotice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Identity)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.NoticeType != 0 {
		n += 1 + sovDynamicV2(uint64(m.NoticeType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IconButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.IconHead)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.IconTail)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynDetailsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DynamicIds)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayurlParam != nil {
		l = m.PlayurlParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynDetailsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVideoPersonalReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HostUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.HostUid))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.IsPreload != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsPreload))
	}
	if m.PlayurlParam != nil {
		l = m.PlayurlParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	l = len(m.Footprint)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVideoPersonalReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.ReadOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.AdditionUp != nil {
		l = m.AdditionUp.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVideoUpdOffsetReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HostUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.HostUid))
	}
	l = len(m.ReadOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Footprint)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CardVideoUpList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Footprint)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowLiveNum != 0 {
		n += 1 + sovDynamicV2(uint64(m.ShowLiveNum))
	}
	if m.MoreLabel != nil {
		l = m.MoreLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TitleSwitch != 0 {
		n += 1 + sovDynamicV2(uint64(m.TitleSwitch))
	}
	if m.ShowMoreLabel {
		n += 2
	}
	if m.ShowInPersonal {
		n += 2
	}
	if m.ShowMoreButton {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpListMoreLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpListItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasUpdate {
		n += 2
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	if m.Pos != 0 {
		n += 1 + sovDynamicV2(uint64(m.Pos))
	}
	if m.UserItemType != 0 {
		n += 1 + sovDynamicV2(uint64(m.UserItemType))
	}
	if m.DisplayStyleDay != nil {
		l = m.DisplayStyleDay.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DisplayStyleNight != nil {
		l = m.DisplayStyleNight.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.StyleId != 0 {
		n += 1 + sovDynamicV2(uint64(m.StyleId))
	}
	if m.LiveState != 0 {
		n += 1 + sovDynamicV2(uint64(m.LiveState))
	}
	if m.Separator {
		n += 2
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsRecall {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserItemStyle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RectText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.RectTextColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.RectIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.RectBgColor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OuterAnimation)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CardVideoFollowList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ViewAllLink)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FollowListItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SeasonId != 0 {
		n += 1 + sovDynamicV2(uint64(m.SeasonId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.NewEp != nil {
		l = m.NewEp.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Pos != 0 {
		n += 1 + sovDynamicV2(uint64(m.Pos))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewEP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	l = len(m.IndexShow)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Extend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DynIdStr)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BusinessId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OrigDynIdStr)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OrigName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OrigImgUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.OrigDesc) > 0 {
		for _, e := range m.OrigDesc {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if len(m.Desc) > 0 {
		for _, e := range m.Desc {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.OrigDynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.OrigDynType))
	}
	l = len(m.ShareType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ShareScene)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsFastShare {
		n += 2
	}
	if m.RType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RType))
	}
	if m.DynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynType))
	}
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.CardUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SourceContent != nil {
		l = m.SourceContent.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OrigFace)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.Reply != nil {
		l = m.Reply.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.TrackId)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtendReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Params) > 0 {
		for _, e := range m.Params {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtendReplyParam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAuthorForward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Title) > 0 {
		for _, e := range m.Title {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.PtimeLabelText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowFollow {
		n += 2
	}
	l = len(m.FaceUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.TpList) > 0 {
		for _, e := range m.TpList {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAuthorForwardTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleAd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SourceContent != nil {
		l = m.SourceContent.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ModuleAuthor != nil {
		l = m.ModuleAuthor.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.AdContentType != 0 {
		n += 1 + sovDynamicV2(uint64(m.AdContentType))
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleBanner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	l = len(m.DislikeText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DislikeIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleBanner_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionVote2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdditionVoteType != 0 {
		n += 1 + sovDynamicV2(uint64(m.AdditionVoteType))
	}
	if m.VoteId != 0 {
		n += 1 + sovDynamicV2(uint64(m.VoteId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Deadline != 0 {
		n += 1 + sovDynamicV2(uint64(m.Deadline))
	}
	l = len(m.OpenText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CloseText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.VotedText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovDynamicV2(uint64(m.State))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.BizType != 0 {
		n += 1 + sovDynamicV2(uint64(m.BizType))
	}
	if m.Total != 0 {
		n += 1 + sovDynamicV2(uint64(m.Total))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Tips)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.IsVoted {
		n += 3
	}
	if m.ChoiceCnt != 0 {
		n += 2 + sovDynamicV2(uint64(m.ChoiceCnt))
	}
	if m.DefauleSelectShare {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVote2_AdditionVoteWord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdditionVoteWord != nil {
		l = m.AdditionVoteWord.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionVote2_AdditionVotePic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdditionVotePic != nil {
		l = m.AdditionVotePic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionVote2_AdditionVoteDefaule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdditionVoteDefaule != nil {
		l = m.AdditionVoteDefaule.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *AdditionVoteWord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Item) > 0 {
		for _, e := range m.Item {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVoteWordItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OptIdx != 0 {
		n += 1 + sovDynamicV2(uint64(m.OptIdx))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsVote {
		n += 2
	}
	if m.Total != 0 {
		n += 1 + sovDynamicV2(uint64(m.Total))
	}
	if m.Persent != 0 {
		n += 9
	}
	if m.IsMaxOption {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVotePic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Item) > 0 {
		for _, e := range m.Item {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVotePicItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OptIdx != 0 {
		n += 1 + sovDynamicV2(uint64(m.OptIdx))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsVote {
		n += 2
	}
	if m.Total != 0 {
		n += 1 + sovDynamicV2(uint64(m.Total))
	}
	if m.Persent != 0 {
		n += 9
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsMaxOption {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AdditionVoteDefaule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cover) > 0 {
		for _, s := range m.Cover {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleItemNull) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleBannerUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleBannerUserItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	if m.LiveState != 0 {
		n += 1 + sovDynamicV2(uint64(m.LiveState))
	}
	if m.Official != nil {
		l = m.Official.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Vip != nil {
		l = m.Vip.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleLikeUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LikeUsers) > 0 {
		for _, e := range m.LikeUsers {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.DisplayText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Animation != nil {
		l = m.Animation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsLike {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeAnimation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Begin)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Proc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.End)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LikeIconId != 0 {
		n += 1 + sovDynamicV2(uint64(m.LikeIconId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointItem_Default) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Default != nil {
		l = m.Default.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_AutoPlayer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AutoPlayer != nil {
		l = m.AutoPlayer.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Share) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Share != nil {
		l = m.Share.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Attention) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Attention != nil {
		l = m.Attention.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Wait) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Wait != nil {
		l = m.Wait.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Dislike) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dislike != nil {
		l = m.Dislike.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Favorite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Favorite != nil {
		l = m.Favorite.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Top) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Top != nil {
		l = m.Top.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Comment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Comment != nil {
		l = m.Comment.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_Hide) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hide != nil {
		l = m.Hide.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_TopicIrrelevant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicIrrelevant != nil {
		l = m.TopicIrrelevant.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ThreePointItem_DynEdit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynEdit != nil {
		l = m.DynEdit.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *ModuleAuthorBadgeButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovDynamicV2(uint64(m.State))
	}
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointDefault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Toast != nil {
		l = m.Toast.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointDefaultToast) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointAutoPlay) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OpenIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OpenText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CloseIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CloseText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OpenTextV2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CloseTextV2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OnlyIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OnlyText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.OpenIconV2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CloseIconV2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointShare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Channel) > 0 {
		for _, e := range m.Channel {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.ChannelName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Reserve != nil {
		l = m.Reserve.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointShareChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointAttention) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AttentionIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AttentionText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NotAttentionIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NotAttentionText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointWait) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AdditionIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AdditionText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NoAdditionIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.NoAdditionText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointDislike) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointFavorite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovDynamicV2(uint64(m.Id))
	}
	if m.IsFavourite {
		n += 2
	}
	l = len(m.CancelIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CancelTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointTop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointTopicIrrelevant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	if m.ResId != 0 {
		n += 1 + sovDynamicV2(uint64(m.ResId))
	}
	if m.ResType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ResType))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointDynEdit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynId != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynId))
	}
	if m.OriginId != 0 {
		n += 1 + sovDynamicV2(uint64(m.OriginId))
	}
	if m.IsOriginDeleted {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpSelection != nil {
		l = m.UpSelection.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UpClose != nil {
		l = m.UpClose.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointHide) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Interactive != nil {
		l = m.Interactive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BlookFid != 0 {
		n += 1 + sovDynamicV2(uint64(m.BlookFid))
	}
	l = len(m.BlookType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThreePointHideInteractive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Confirm)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cancel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommentDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanModify {
		n += 2
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Weight) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WeightItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WeightItem_Button) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *WeightItem_Dislike) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Dislike != nil {
		l = m.Dislike.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *WeightDislike) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FeedBackType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WeightButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CmtShowItem) > 0 {
		for _, e := range m.CmtShowItem {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CmtShowItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.Uname)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAdditionCommonFollowReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	l = len(m.DynId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CardType)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAdditionCommonFollowReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynThumbReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.DynId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynType))
	}
	l = len(m.Rid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynFakeCardReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynFakeCardReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRcmdUpExchangeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	if m.DislikeTs != 0 {
		n += 1 + sovDynamicV2(uint64(m.DislikeTs))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRcmdUpExchangeReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Unfollow != nil {
		l = m.Unfollow.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAllPersonalReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HostUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.HostUid))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.IsPreload != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsPreload))
	}
	if m.PlayurlParam != nil {
		l = m.PlayurlParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	l = len(m.Footprint)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAllPersonalReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.ReadOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.AdditionUp != nil {
		l = m.AdditionUp.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopAdditionUP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Up) > 0 {
		for _, e := range m.Up {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasFold != 0 {
		n += 1 + sovDynamicV2(uint64(m.HasFold))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynAllUpdOffsetReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HostUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.HostUid))
	}
	l = len(m.ReadOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Footprint)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVoteReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VoteId != 0 {
		n += 1 + sovDynamicV2(uint64(m.VoteId))
	}
	if len(m.Votes) > 0 {
		l = 0
		for _, e := range m.Votes {
			l += sovDynamicV2(uint64(e))
		}
		n += 1 + sovDynamicV2(uint64(l)) + l
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Share {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynVoteReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Relation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.IsFollow != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsFollow))
	}
	if m.IsFollowed != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsFollowed))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MixUpListLiveItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status {
		n += 2
	}
	if m.RoomId != 0 {
		n += 1 + sovDynamicV2(uint64(m.RoomId))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MixUpListItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	if m.SpecialAttention != 0 {
		n += 1 + sovDynamicV2(uint64(m.SpecialAttention))
	}
	if m.ReddotState != 0 {
		n += 1 + sovDynamicV2(uint64(m.ReddotState))
	}
	if m.LiveInfo != nil {
		l = m.LiveInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Face)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Official != nil {
		l = m.Official.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Vip != nil {
		l = m.Vip.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PremiereState != 0 {
		n += 1 + sovDynamicV2(uint64(m.PremiereState))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynMixUpListViewMoreReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SortType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SortType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SortType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SortType != 0 {
		n += 1 + sovDynamicV2(uint64(m.SortType))
	}
	l = len(m.SortTypeName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynMixUpListViewMoreReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.SearchDefaultText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.SortTypes) > 0 {
		for _, e := range m.SortTypes {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.ShowMoreSortTypes {
		n += 2
	}
	if m.DefaultSortType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DefaultSortType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynLightReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HistoryOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.FakeUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.FakeUid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynLightReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicList != nil {
		l = m.DynamicList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Uid))
	}
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynType))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.AdParam != nil {
		l = m.AdParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.ShareId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShareMode != 0 {
		n += 1 + sovDynamicV2(uint64(m.ShareMode))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	l = len(m.Pattern)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynDetailReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Item != nil {
		l = m.Item.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynType))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.UidOffset != 0 {
		n += 1 + sovDynamicV2(uint64(m.UidOffset))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasMore {
		n += 2
	}
	if m.TotalCount != 0 {
		n += 1 + sovDynamicV2(uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RepostListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DynamicId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynType != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynType))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RepostType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RepostType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RepostListRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.TotalCount != 0 {
		n += 1 + sovDynamicV2(uint64(m.TotalCount))
	}
	if m.RepostType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RepostType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleShareInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.ShareChannels) > 0 {
		for _, e := range m.ShareChannels {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.ShareOrigin)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Oid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Sid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShareChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Reserve != nil {
		l = m.Reserve.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShareReserve) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.QrCodeIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.QrCodeText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.QrCodeUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.UserInfo != nil {
		l = m.UserInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleRecommend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ModuleTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Ad) > 0 {
		for _, e := range m.Ad {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleStory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.ShowPublishEntrance {
		n += 2
	}
	if m.FoldState != 0 {
		n += 1 + sovDynamicV2(uint64(m.FoldState))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.PublishText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoryItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.RcmdItem != nil {
		n += m.RcmdItem.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoryItem_StoryArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoryArchive != nil {
		l = m.StoryArchive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *StoryArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Aid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Aid))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Dimension != nil {
		l = m.Dimension.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSpaceReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HostUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.HostUid))
	}
	l = len(m.HistoryOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSpaceRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.HistoryOffset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleTop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TpList) > 0 {
		for _, e := range m.TpList {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleButtom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModuleStat != nil {
		l = m.ModuleStat.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CommentBox {
		n += 2
	}
	l = len(m.CommentBoxMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRcmdReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.FakeUid != 0 {
		n += 1 + sovDynamicV2(uint64(m.FakeUid))
	}
	if m.IsRefresh {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRcmdReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RegionRcmd != nil {
		l = m.RegionRcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynamicList != nil {
		l = m.DynamicList.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRegionRcmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Opts != nil {
		l = m.Opts.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdOption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShowTitle {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynRegionRcmdItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModuleRcmd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.ServerInfo)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdAuthor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.RcmdItem != nil {
		n += m.RcmdItem.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdItem_RcmdArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RcmdArchive != nil {
		l = m.RcmdArchive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *RcmdArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CoverLeftIcon_1 != 0 {
		n += 1 + sovDynamicV2(uint64(m.CoverLeftIcon_1))
	}
	l = len(m.CoverLeftText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsPgc {
		n += 2
	}
	if m.Aid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Aid))
	}
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CoverLeftIcon_2 != 0 {
		n += 1 + sovDynamicV2(uint64(m.CoverLeftIcon_2))
	}
	l = len(m.CoverLeftText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CoverLeftIcon_3 != 0 {
		n += 1 + sovDynamicV2(uint64(m.CoverLeftIcon_3))
	}
	l = len(m.CoverLeftText_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.TrackId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RcmdReason != nil {
		l = m.RcmdReason.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdReason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Style != 0 {
		n += 1 + sovDynamicV2(uint64(m.Style))
	}
	l = len(m.RcmdReason)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.UpName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IconBadge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IconBgUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CoverIconWithText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Icon != 0 {
		n += 1 + sovDynamicV2(uint64(m.Icon))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynServerDetailsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DynamicIds) > 0 {
		l = 0
		for _, e := range m.DynamicIds {
			l += sovDynamicV2(uint64(e))
		}
		n += 1 + sovDynamicV2(uint64(l)) + l
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.MobiApp)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Buvid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovDynamicV2(uint64(m.Build))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsMaster {
		n += 2
	}
	if len(m.TopDynamicIds) > 0 {
		l = 0
		for _, e := range m.TopDynamicIds {
			l += sovDynamicV2(uint64(e))
		}
		n += 1 + sovDynamicV2(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynServerDetailsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for k, v := range m.Items {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovDynamicV2(uint64(l))
			}
			mapEntrySize := 1 + sovDynamicV2(uint64(k)) + l
			n += mapEntrySize + 1 + sovDynamicV2(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSearchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSearchReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChannelInfo != nil {
		l = m.ChannelInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SearchTopic != nil {
		l = m.SearchTopic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SearchInfo != nil {
		l = m.SearchInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.TrackId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Total != 0 {
		n += 1 + sovDynamicV2(uint64(m.Total))
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MoreButton != nil {
		l = m.MoreButton.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchTopicButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchTopicItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsActivity {
		n += 2
	}
	l = len(m.TagIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescLong)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.TagText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MoreButton != nil {
		l = m.MoreButton.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Channels) > 0 {
		for _, e := range m.Channels {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChannelInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChannelId != 0 {
		n += 1 + sovDynamicV2(uint64(m.ChannelId))
	}
	l = len(m.ChannelName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsAtten {
		n += 2
	}
	l = len(m.TypeIcon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetDecisionReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovDynamicV2(uint64(m.Result))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusTop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Tabs) > 0 {
		for _, e := range m.Tabs {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.SwitchLabel != nil {
		l = m.SwitchLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Banner) > 0 {
		for _, e := range m.Banner {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.InviteLabel != nil {
		l = m.InviteLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Notice != nil {
		l = m.Notice.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.TopicSquare != nil {
		l = m.TopicSquare.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusBadge)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusBackground)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusMotto)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MngEntry != nil {
		l = m.MngEntry.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusIntro)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusNameLink)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BottomLeftText)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusShowTabInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.RedDot != 0 {
		n += 1 + sovDynamicV2(uint64(m.RedDot))
	}
	l = len(m.IconUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusBannerInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusNoticeInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AlumniDynamicsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.FirstTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.FirstTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AlumniDynamicsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Lat != 0 {
		n += 9
	}
	if m.Lng != 0 {
		n += 9
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.PageType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PageType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Top != nil {
		l = m.Top.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rcmd != nil {
		l = m.Rcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CampusTop != nil {
		l = m.CampusTop.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PageType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PageType))
	}
	if m.JumpHomePop != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpHomePop))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdTop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SwitchLabel != nil {
		l = m.SwitchLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.NoticeLabel != nil {
		l = m.NoticeLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_3)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.InviteLabel != nil {
		l = m.InviteLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ReserveLabel != nil {
		l = m.ReserveLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ReserveNumber != 0 {
		n += 1 + sovDynamicV2(uint64(m.ReserveNumber))
	}
	if m.MaxReserve != 0 {
		n += 1 + sovDynamicV2(uint64(m.MaxReserve))
	}
	if m.SchoolLabel != nil {
		l = m.SchoolLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MngLabel != nil {
		l = m.MngLabel.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.RcmdTopic != nil {
		l = m.RcmdTopic.Size()
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.AuditBeforeOpen {
		n += 3
	}
	l = len(m.AuditMessage)
	if l > 0 {
		n += 2 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdTopButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.EntryLabel != nil {
		l = m.EntryLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SubscribeCampusReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetRecentCampusReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynTabReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TeenagersMode != 0 {
		n += 1 + sovDynamicV2(uint64(m.TeenagersMode))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynTabReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DynTab) > 0 {
		for _, e := range m.DynTab {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if len(m.ScreenTab) > 0 {
		for _, e := range m.ScreenTab {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynScreenTab) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynTab) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Bubble)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RedPoint != 0 {
		n += 1 + sovDynamicV2(uint64(m.RedPoint))
	}
	if m.CityId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CityId))
	}
	if m.IsPopup != 0 {
		n += 1 + sovDynamicV2(uint64(m.IsPopup))
	}
	if m.Popup != nil {
		l = m.Popup.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DefaultTab {
		n += 2
	}
	l = len(m.SubTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Anchor)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.InternalTest)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.BackUp != nil {
		l = m.BackUp.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.JumpHomePop)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Popup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SchoolSearchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SchoolSearchReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Toast != nil {
		l = m.Toast.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchToast) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Online != 0 {
		n += 1 + sovDynamicV2(uint64(m.Online))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SchoolRecommendReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lat != 0 {
		n += 5
	}
	if m.Lng != 0 {
		n += 5
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SchoolRecommendReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSpaceSearchDetailsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DynamicIds) > 0 {
		l = 0
		for _, e := range m.DynamicIds {
			l += sovDynamicV2(uint64(e))
		}
		n += 1 + sovDynamicV2(uint64(l)) + l
	}
	if len(m.SearchWords) > 0 {
		for _, s := range m.SearchWords {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.MobiApp)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Buvid)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovDynamicV2(uint64(m.Build))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Platform)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Ip)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.NetType != 0 {
		n += 1 + sovDynamicV2(uint64(m.NetType))
	}
	if m.TfType != 0 {
		n += 1 + sovDynamicV2(uint64(m.TfType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DynSpaceSearchDetailsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for k, v := range m.Items {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovDynamicV2(uint64(l))
			}
			mapEntrySize := 1 + sovDynamicV2(uint64(k)) + l
			n += mapEntrySize + 1 + sovDynamicV2(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialAccountsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovDynamicV2(uint64(m.Offset))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialAccountsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasMore {
		n += 2
	}
	if m.Offset != 0 {
		n += 1 + sovDynamicV2(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialAccountInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Relation != nil {
		l = m.Relation.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialDynamicsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovDynamicV2(uint64(m.Offset))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialDynamicsReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Offset != 0 {
		n += 1 + sovDynamicV2(uint64(m.Offset))
	}
	if m.HasMore {
		n += 2
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if m.RcmdItem != nil {
		n += m.RcmdItem.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialItem_RcmdArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RcmdArchive != nil {
		l = m.RcmdArchive.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *OfficialItem_RcmdDynamic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RcmdDynamic != nil {
		l = m.RcmdDynamic.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *OfficialRcmdArchive) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverRightText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DescIcon_1 != 0 {
		n += 1 + sovDynamicV2(uint64(m.DescIcon_1))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DescIcon_2 != 0 {
		n += 1 + sovDynamicV2(uint64(m.DescIcon_2))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ShowThreePoint {
		n += 2
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Aid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Aid))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynamicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynamicId))
	}
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OfficialRcmdDynamic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CoverRightTopText)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DescIcon_1 != 0 {
		n += 1 + sovDynamicV2(uint64(m.DescIcon_1))
	}
	l = len(m.DescText_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DescIcon_2 != 0 {
		n += 1 + sovDynamicV2(uint64(m.DescIcon_2))
	}
	l = len(m.DescText_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.DynamicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynamicId))
	}
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Rid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRedDotReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRedDotReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RedDot != 0 {
		n += 1 + sovDynamicV2(uint64(m.RedDot))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdFeedReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.FirstTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.FirstTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.Scroll != 0 {
		n += 1 + sovDynamicV2(uint64(m.Scroll))
	}
	l = len(m.ViewDynId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRcmdFeedReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.GuideBar != nil {
		l = m.GuideBar.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if m.Update {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GuideBarInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Show != 0 {
		n += 1 + sovDynamicV2(uint64(m.Show))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.Position != 0 {
		n += 1 + sovDynamicV2(uint64(m.Position))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.JumpPage != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpPage))
	}
	if m.JumpPosition != 0 {
		n += 1 + sovDynamicV2(uint64(m.JumpPosition))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicSquareReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicSquareReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicSquareInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Rcmd != nil {
		l = m.Rcmd.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicRcmdCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.UpdateDesc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CreateTopicBtn != nil {
		l = m.CreateTopicBtn.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_2)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.RcmdDesc)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMateLikeListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DynamicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.DynamicId))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMateLikeListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusFeedbackReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Infos) > 0 {
		for _, e := range m.Infos {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.From != 0 {
		n += 1 + sovDynamicV2(uint64(m.From))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusFeedbackInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BizType != 0 {
		n += 1 + sovDynamicV2(uint64(m.BizType))
	}
	if m.BizId != 0 {
		n += 1 + sovDynamicV2(uint64(m.BizId))
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusFeedbackReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusBillBoardReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusBillboardInternalReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Mid))
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusBillBoardReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HelpUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BuildTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.BuildTime))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.ShareUri)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.BindNotice != 0 {
		n += 1 + sovDynamicV2(uint64(m.BindNotice))
	}
	l = len(m.UpdateToast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.OpenProgress != nil {
		l = m.OpenProgress.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusFeatureProgress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProgressFull != 0 {
		n += 1 + sovDynamicV2(uint64(m.ProgressFull))
	}
	if m.ProgressAchieved != 0 {
		n += 1 + sovDynamicV2(uint64(m.ProgressAchieved))
	}
	l = len(m.DescTitle)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Desc_1)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Btn != nil {
		l = m.Btn.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusTopicRcmdFeedReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.FromType != 0 {
		n += 1 + sovDynamicV2(uint64(m.FromType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusTopicRcmdFeedReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.JoinDiscuss != nil {
		l = m.JoinDiscuss.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnfollowMatchReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cid != 0 {
		n += 1 + sovDynamicV2(uint64(m.Cid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FetchTabSettingReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateTabSettingReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDynamicV2(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusSquareReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.Lat != 0 {
		n += 9
	}
	if m.Lng != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusSquareReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.Button != nil {
		l = m.Button.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RcmdCampusBrief) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CampusBadge)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRecommendReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.PageNo != 0 {
		n += 1 + sovDynamicV2(uint64(m.PageNo))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.From != 0 {
		n += 1 + sovDynamicV2(uint64(m.From))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusRecommendReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasMore {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusHomePagesReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Top != nil {
		l = m.Top.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CampusTop != nil {
		l = m.CampusTop.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PageType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PageType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusHomePagesReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Lat != 0 {
		n += 9
	}
	if m.Lng != 0 {
		n += 9
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.PageType != 0 {
		n += 1 + sovDynamicV2(uint64(m.PageType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusEntryTabReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusEntryTabResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EntryType != 0 {
		n += 1 + sovDynamicV2(uint64(m.EntryType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusHomeRcmdTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Title != nil {
		l = m.Title.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Topic) > 0 {
		for _, e := range m.Topic {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HomeSubscribeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HomeSubscribeReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Online != 0 {
		n += 1 + sovDynamicV2(uint64(m.Online))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LbsPoiReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Poi)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.RefreshType != 0 {
		n += 1 + sovDynamicV2(uint64(m.RefreshType))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LbsPoiDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Poi)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovDynamicV2(uint64(m.Type))
	}
	if len(m.BasePic) > 0 {
		for _, s := range m.BasePic {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if len(m.Cover) > 0 {
		for _, s := range m.Cover {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LbsPoiReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasMore {
		n += 2
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.Detail != nil {
		l = m.Detail.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FeedFilterReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Tab)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.LocalTime != 0 {
		n += 1 + sovDynamicV2(uint64(m.LocalTime))
	}
	if m.PlayerArgs != nil {
		l = m.PlayerArgs.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.AdParam != nil {
		l = m.AdParam.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ColdStart != 0 {
		n += 1 + sovDynamicV2(uint64(m.ColdStart))
	}
	if m.Page != 0 {
		n += 1 + sovDynamicV2(uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FeedFilterReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.HasMore {
		n += 2
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngDetailReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	l = len(m.TopHintBarMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BottomSubmitHintMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuditStatus != 0 {
		n += 1 + sovDynamicV2(uint64(m.AuditStatus))
	}
	l = len(m.AuditMessage)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.ItemType != 0 {
		n += 1 + sovDynamicV2(uint64(m.ItemType))
	}
	l = len(m.MngItemId)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.IsDel {
		n += 2
	}
	if m.Item != nil {
		n += m.Item.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngItem_BasicInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BasicInfo != nil {
		l = m.BasicInfo.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *CampusMngItem_Badge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Badge != nil {
		l = m.Badge.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *CampusMngItem_Slogan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slogan != nil {
		l = m.Slogan.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *CampusMngItem_Quiz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Quiz != nil {
		l = m.Quiz.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	return n
}
func (m *CampusMngBasicInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	l = len(m.CampusName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.HintMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngBadge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.BadgeUrl)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.UploadHintMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngSlogan) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Slogan)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.InputHintMsg)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngQuiz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.MoreLabel != nil {
		l = m.MoreLabel.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.AddLabel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.SubmitLabel)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.QuizCount != 0 {
		n += 1 + sovDynamicV2(uint64(m.QuizCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngSubmitReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if len(m.ModifiedItems) > 0 {
		for _, e := range m.ModifiedItems {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngSubmitReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngQuizDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.QuizId != 0 {
		n += 1 + sovDynamicV2(uint64(m.QuizId))
	}
	l = len(m.Question)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.CorrectAnswer)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.WrongAnswerList) > 0 {
		for _, s := range m.WrongAnswerList {
			l = len(s)
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.AuditStatus != 0 {
		n += 1 + sovDynamicV2(uint64(m.AuditStatus))
	}
	l = len(m.AuditMessage)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngQuizOperateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovDynamicV2(uint64(m.Action))
	}
	if m.CampusId != 0 {
		n += 1 + sovDynamicV2(uint64(m.CampusId))
	}
	if len(m.Quiz) > 0 {
		for _, e := range m.Quiz {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CampusMngQuizOperateReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Toast)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.Quiz) > 0 {
		for _, e := range m.Quiz {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.QuizTotal != 0 {
		n += 1 + sovDynamicV2(uint64(m.QuizTotal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LegacyTopicFeedReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicId != 0 {
		n += 1 + sovDynamicV2(uint64(m.TopicId))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.SortType != nil {
		l = m.SortType.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.CardFilter != nil {
		l = m.CardFilter.Size()
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LegacyTopicFeedReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.HasMore {
		n += 2
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovDynamicV2(uint64(l))
	}
	if len(m.SupportedSortTypes) > 0 {
		for _, e := range m.SupportedSortTypes {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if len(m.FeedCardFilters) > 0 {
		for _, e := range m.FeedCardFilters {
			l = e.Size()
			n += 1 + l + sovDynamicV2(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDynamicV2(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDynamicV2(x uint64) (n int) {
	return sovDynamicV2(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVideoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVideoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVideoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshType", wireType)
			}
			m.RefreshType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshType |= Refresh(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayurlParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayurlParam == nil {
				m.PlayurlParam = &PlayurlParam{}
			}
			if err := m.PlayurlParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssistBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssistBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayurlParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayurlParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayurlParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qn", wireType)
			}
			m.Qn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Qn |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fnver", wireType)
			}
			m.Fnver = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fnver |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fnval", wireType)
			}
			m.Fnval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fnval |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceHost", wireType)
			}
			m.ForceHost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ForceHost |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fourk", wireType)
			}
			m.Fourk = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fourk |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVideoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVideoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVideoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DynamicList == nil {
				m.DynamicList = &CardVideoDynList{}
			}
			if err := m.DynamicList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoUpList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoUpList == nil {
				m.VideoUpList = &CardVideoUpList{}
			}
			if err := m.VideoUpList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoFollowList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoFollowList == nil {
				m.VideoFollowList = &CardVideoFollowList{}
			}
			if err := m.VideoFollowList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CardVideoDynList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CardVideoDynList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CardVideoDynList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateNum", wireType)
			}
			m.UpdateNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			m.CardType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardType |= DynamicType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			m.ItemType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemType |= DynamicType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Modules = append(m.Modules, &Module{})
			if err := m.Modules[len(m.Modules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Extend == nil {
				m.Extend = &Extend{}
			}
			if err := m.Extend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasFold", wireType)
			}
			m.HasFold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasFold |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Module) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Module: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Module: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleType", wireType)
			}
			m.ModuleType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModuleType |= DynModuleType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAuthor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleAuthor{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleAuthor{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleDispute", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleDispute{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleDispute{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleDesc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleDesc{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleDesc{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleDynamic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleDynamic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleDynamic{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleLikeUser", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleLikeUser{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleLikeUser{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleExtend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleExtend{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleExtend{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAdditional", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleAdditional{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleAdditional{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleStat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleStat{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleStat{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleFold", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleFold{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleFold{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleComment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleComment{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleComment{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleInteraction", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleInteraction{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleInteraction{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAuthorForward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleAuthorForward{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleAuthorForward{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleAd{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleAd{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleBanner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleBanner{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleBanner{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleItemNull", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleItemNull{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleItemNull{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleShareInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleShareInfo{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleShareInfo{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleRecommend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleRecommend{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleRecommend{v}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTop{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTop{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleButtom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleButtom{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleButtom{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleStatForward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleStat{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleStatForward{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleStory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleStory{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleStory{v}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTopic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTopic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTopic{v}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTopicDetailsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTopicDetailsExt{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTopicDetailsExt{v}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTopTag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTopTag{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTopTag{v}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTopicBrief", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTopicBrief{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTopicBrief{v}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTitle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleTitle{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleTitle{v}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleButton{v}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleNotice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleNotice{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &Module_ModuleNotice{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTopTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTopTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTopTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAuthor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAuthor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAuthor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtimeLabelText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PtimeLabelText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &UserInfo{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DecorateCard", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DecorateCard == nil {
				m.DecorateCard = &DecorateCard{}
			}
			if err := m.DecorateCard.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TpList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TpList = append(m.TpList, &ThreePointItem{})
			if err := m.TpList[len(m.TpList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeType", wireType)
			}
			m.BadgeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BadgeType |= ModuleAuthorBadgeType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BadgeButton == nil {
				m.BadgeButton = &ModuleAuthorBadgeButton{}
			}
			if err := m.BadgeButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attend", wireType)
			}
			m.Attend = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Attend |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Weight == nil {
				m.Weight = &Weight{}
			}
			if err := m.Weight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowFollow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowFollow = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTop", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTop = bool(v != 0)
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtimeLocationText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PtimeLocationText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowLevel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowLevel = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Official", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Official == nil {
				m.Official = &OfficialVerify{}
			}
			if err := m.Official.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vip", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vip == nil {
				m.Vip = &VipInfo{}
			}
			if err := m.Vip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Live", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Live == nil {
				m.Live = &LiveInfo{}
			}
			if err := m.Live.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pendant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pendant == nil {
				m.Pendant = &UserPendant{}
			}
			if err := m.Pendant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nameplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Nameplate == nil {
				m.Nameplate = &Nameplate{}
			}
			if err := m.Nameplate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sign", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sign = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceNft", wireType)
			}
			m.FaceNft = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceNft |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceNftNew", wireType)
			}
			m.FaceNftNew = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FaceNftNew |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NftInfo == nil {
				m.NftInfo = &NFTInfo{}
			}
			if err := m.NftInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSeniorMember", wireType)
			}
			m.IsSeniorMember = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsSeniorMember |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NFTInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NFTInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NFTInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionType", wireType)
			}
			m.RegionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionType |= NFTRegionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegionIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionShowStatus", wireType)
			}
			m.RegionShowStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionShowStatus |= NFTShowStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialVerify) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialVerify: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialVerify: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAtten", wireType)
			}
			m.IsAtten = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsAtten |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VipInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VipInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VipInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DueDate", wireType)
			}
			m.DueDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DueDate |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Label == nil {
				m.Label = &VipLabel{}
			}
			if err := m.Label.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeType", wireType)
			}
			m.ThemeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ThemeType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarSubscript", wireType)
			}
			m.AvatarSubscript = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AvatarSubscript |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NicknameColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NicknameColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VipLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VipLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VipLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelTheme", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LabelTheme = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLiving", wireType)
			}
			m.IsLiving = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsLiving |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveState", wireType)
			}
			m.LiveState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveState |= LiveState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserPendant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserPendant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserPendant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expire", wireType)
			}
			m.Expire = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expire |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Nameplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Nameplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Nameplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nid", wireType)
			}
			m.Nid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Nid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageSmall", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageSmall = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Level = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Condition", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DecorateCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DecorateCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DecorateCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fan == nil {
				m.Fan = &DecoCardFan{}
			}
			if err := m.Fan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DecoCardFan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DecoCardFan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DecoCardFan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFan", wireType)
			}
			m.IsFan = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsFan |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			m.Number = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Number |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NumberStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleDispute) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleDispute: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleDispute: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleDesc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleDesc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleDesc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = append(m.Desc, &Description{})
			if err := m.Desc[len(m.Desc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Description) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Description: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Description: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= DescType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmojiType", wireType)
			}
			m.EmojiType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EmojiType |= EmojiType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodsType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoodsType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Goods == nil {
				m.Goods = &ModuleDescGoods{}
			}
			if err := m.Goods.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmojiSize", wireType)
			}
			m.EmojiSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EmojiSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleDescGoods) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleDescGoods: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleDescGoods: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemaUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenWhiteList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenWhiteList = append(m.OpenWhiteList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserWebV2", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserWebV2 = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdMark", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdMark = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaPackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemaPackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpType", wireType)
			}
			m.JumpType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpType |= GoodsJumpType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleDynamic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleDynamic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleDynamic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ModuleDynamicType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynArchive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynArchive{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynArchive{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynPgc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynPGC{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynPgc{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynCourSeason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynCourSeason{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynCourSeason{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynCourBatch", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynCourBatch{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynCourBatch{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynForward", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynForward{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynForward{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynDraw", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynDraw{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynDraw{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynArticle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynArticle{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynArticle{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynMusic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynMusic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynMusic{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynCommon", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynCommon{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynCommon{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynCommonLive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynLive{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynCommonLive{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynMedialist", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynMedialist{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynMedialist{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynApplet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynApplet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynApplet{v}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynSubscription", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynSubscription{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynSubscription{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynLiveRcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynLiveRcmd{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynLiveRcmd{v}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynUgcSeason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynUGCSeason{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynUgcSeason{v}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynSubscriptionNew", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynSubscriptionNew{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynSubscriptionNew{v}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynCourBatchUp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynCourUp{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynCourBatchUp{v}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynTopicSet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynTopicSet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ModuleItem = &ModuleDynamic_DynTopicSet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynArchive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynArchive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynArchive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avid", wireType)
			}
			m.Avid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Avid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaType", wireType)
			}
			m.MediaType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MediaType |= MediaType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dimension == nil {
				m.Dimension = &Dimension{}
			}
			if err := m.Dimension.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Badge = append(m.Badge, &VideoBadge{})
			if err := m.Badge[len(m.Badge)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stype", wireType)
			}
			m.Stype = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stype |= VideoType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPGC", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPGC = bool(v != 0)
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InlineURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InlineURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EpisodeId", wireType)
			}
			m.EpisodeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EpisodeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubType", wireType)
			}
			m.SubType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PgcSeasonId", wireType)
			}
			m.PgcSeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PgcSeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPreview = bool(v != 0)
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeCategory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BadgeCategory = append(m.BadgeCategory, &VideoBadge{})
			if err := m.BadgeCategory[len(m.BadgeCategory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFeature", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFeature = bool(v != 0)
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveType", wireType)
			}
			m.ReserveType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReserveType |= ReserveType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bvid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bvid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			m.View = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.View |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowPremiereBadge", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowPremiereBadge = bool(v != 0)
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PremiereCard", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PremiereCard = bool(v != 0)
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowProgress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowProgress = bool(v != 0)
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartDuration", wireType)
			}
			m.PartDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PartDuration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartProgress", wireType)
			}
			m.PartProgress = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PartProgress |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Dimension) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Dimension: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Dimension: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rotate", wireType)
			}
			m.Rotate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rotate |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceHorizontal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForceHorizontal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoBadge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoBadge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoBadge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextColorNight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextColorNight = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgColorNight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgColorNight = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BorderColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BorderColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BorderColorNight", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BorderColorNight = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgStyle", wireType)
			}
			m.BgStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BgStyle |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgAlpha", wireType)
			}
			m.BgAlpha = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BgAlpha |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgAlphaNight", wireType)
			}
			m.BgAlphaNight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BgAlphaNight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynPGC) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynPGC: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynPGC: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epid", wireType)
			}
			m.Epid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaType", wireType)
			}
			m.MediaType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MediaType |= MediaType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubType", wireType)
			}
			m.SubType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SubType |= VideoSubType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPreview = bool(v != 0)
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dimension == nil {
				m.Dimension = &Dimension{}
			}
			if err := m.Dimension.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Badge = append(m.Badge, &VideoBadge{})
			if err := m.Badge[len(m.Badge)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Season", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Season == nil {
				m.Season = &PGCSeason{}
			}
			if err := m.Season.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeCategory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BadgeCategory = append(m.BadgeCategory, &VideoBadge{})
			if err := m.BadgeCategory[len(m.BadgeCategory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFeature", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFeature = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PGCSeason) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PGCSeason: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PGCSeason: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFinish", wireType)
			}
			m.IsFinish = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsFinish |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynCourSeason) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynCourSeason: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynCourSeason: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPreview = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avid", wireType)
			}
			m.Avid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Avid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epid", wireType)
			}
			m.Epid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynCourBatch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynCourBatch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynCourBatch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPreview = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avid", wireType)
			}
			m.Avid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Avid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epid", wireType)
			}
			m.Epid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynForward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynForward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynForward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &DynamicItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rtype", wireType)
			}
			m.Rtype = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rtype |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynDraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynDraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynDraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &MdlDynDrawItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDrawFirst", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDrawFirst = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynDrawItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynDrawItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynDrawItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Src = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Size_ = float32(math.Float32frombits(v))
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = append(m.Tags, &MdlDynDrawTag{})
			if err := m.Tags[len(m.Tags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynDrawTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynDrawTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynDrawTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= MdlDynDrawTagType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &MdlDynDrawTagItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynDrawTagItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynDrawTagItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynDrawTagItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			m.X = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.X |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Y", wireType)
			}
			m.Y = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Y |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Orientation", wireType)
			}
			m.Orientation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Orientation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tid", wireType)
			}
			m.Tid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Tid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Poi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Poi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemaUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynArticle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynArticle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynArticle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Covers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Covers = append(m.Covers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateID", wireType)
			}
			m.TemplateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TemplateID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynMusic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynMusic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynMusic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpId", wireType)
			}
			m.UpId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Upper", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Upper = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynCommon) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynCommon: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynCommon: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oid", wireType)
			}
			m.Oid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Oid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizType", wireType)
			}
			m.BizType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BizType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SketchID", wireType)
			}
			m.SketchID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SketchID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= MdlDynCommonType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Badge = append(m.Badge, &VideoBadge{})
			if err := m.Badge[len(m.Badge)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynLive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynLive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynLive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLabel2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLabel2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveState", wireType)
			}
			m.LiveState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveState |= LiveState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveType", wireType)
			}
			m.ReserveType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReserveType |= ReserveType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynMedialist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynMedialist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynMedialist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverType", wireType)
			}
			m.CoverType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverBottomRightIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverBottomRightIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynApplet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynApplet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynApplet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynSubscription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynSubscription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynSubscription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdId", wireType)
			}
			m.AdId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tips", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tips = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynLiveRcmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynLiveRcmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynLiveRcmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveType", wireType)
			}
			m.ReserveType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReserveType |= ReserveType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pendant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pendant == nil {
				m.Pendant = &LivePendant{}
			}
			if err := m.Pendant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LivePendant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LivePendant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LivePendant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendantId", wireType)
			}
			m.PendantId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PendantId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynUGCSeason) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynUGCSeason: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynUGCSeason: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InlineURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InlineURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avid", wireType)
			}
			m.Avid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Avid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dimension == nil {
				m.Dimension = &Dimension{}
			}
			if err := m.Dimension.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Badge = append(m.Badge, &VideoBadge{})
			if err := m.Badge[len(m.Badge)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynSubscriptionNew) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynSubscriptionNew: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynSubscriptionNew: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= MdlDynSubscriptionNewStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynSubscription", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynSubscription{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &MdlDynSubscriptionNew_DynSubscription{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynLiveRcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MdlDynLiveRcmd{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &MdlDynSubscriptionNew_DynLiveRcmd{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynCourUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynCourUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynCourUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &VideoBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanPlay", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanPlay = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPreview = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avid", wireType)
			}
			m.Avid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Avid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Epid", wireType)
			}
			m.Epid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Epid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MdlDynTopicSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MdlDynTopicSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MdlDynTopicSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topics = append(m.Topics, &TopicItem{})
			if err := m.Topics[len(m.Topics)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreBtn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreBtn == nil {
				m.MoreBtn = &IconButton{}
			}
			if err := m.MoreBtn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicSetId", wireType)
			}
			m.TopicSetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicSetId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushId", wireType)
			}
			m.PushId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PushId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAdditional) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAdditional: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAdditional: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= AdditionalType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pgc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionalPGC{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Pgc{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Goods", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionGoods{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Goods{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionVote{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Vote{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Common", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionCommon{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Common{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Esport", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionEsport{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Esport{v}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vote2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionVote2{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Vote2{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ugc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionUgc{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Ugc{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Up", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionUP{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleAdditional_Up{v}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeedWriteCalender", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NeedWriteCalender = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalPGC) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalPGC: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalPGC: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= ImageStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= AddButtonType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpStyle", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JumpStyle == nil {
				m.JumpStyle = &AdditionalButtonStyle{}
			}
			if err := m.JumpStyle.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uncheck", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Uncheck == nil {
				m.Uncheck = &AdditionalButtonStyle{}
			}
			if err := m.Uncheck.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Check", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Check == nil {
				m.Check = &AdditionalButtonStyle{}
			}
			if err := m.Check.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= AdditionalButtonStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickType", wireType)
			}
			m.ClickType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClickType |= AdditionalButtonClickType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalButtonStyle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalButtonStyle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalButtonStyle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interactive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interactive == nil {
				m.Interactive = &AdditionalButtonInteractive{}
			}
			if err := m.Interactive.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgStyle", wireType)
			}
			m.BgStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BgStyle |= AddButtonBgStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Disable", wireType)
			}
			m.Disable = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Disable |= DisableState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Share == nil {
				m.Share = &AdditionalButtonShare{}
			}
			if err := m.Share.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalButtonShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalButtonShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalButtonShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Show", wireType)
			}
			m.Show = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Show |= AdditionalShareShowType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalButtonInteractive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalButtonInteractive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalButtonInteractive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Popups", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Popups = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Confirm", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Confirm = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cancel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cancel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionGoods) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionGoods: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionGoods: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoodsItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoodsItems = append(m.GoodsItems, &GoodsItem{})
			if err := m.GoodsItems[len(m.GoodsItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpType", wireType)
			}
			m.JumpType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpType |= GoodsJumpType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdMarkIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdMarkIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GoodsItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GoodsItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GoodsItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaPackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemaPackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceType", wireType)
			}
			m.SourceType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Brief", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Brief = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemId", wireType)
			}
			m.ItemId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemaUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenWhiteList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenWhiteList = append(m.OpenWhiteList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserWebV2", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserWebV2 = bool(v != 0)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdMark", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdMark = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpType", wireType)
			}
			m.JumpType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpType |= GoodsJumpType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionUgc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionUgc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionUgc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Duration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LineFeed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LineFeed = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionCommon) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionCommon: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionCommon: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= ImageStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionEsport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionEsport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionEsport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= EspaceStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionEsportMoba", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionEsportMoba{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &AdditionEsport_AdditionEsportMoba{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionEsportMoba) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionEsportMoba: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionEsportMoba: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchTeam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MatchTeam = append(m.MatchTeam, &MatchTeam{})
			if err := m.MatchTeam[len(m.MatchTeam)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionEsportMobaStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdditionEsportMobaStatus == nil {
				m.AdditionEsportMobaStatus = &AdditionEsportMobaStatus{}
			}
			if err := m.AdditionEsportMobaStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionEsportMobaStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionEsportMobaStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionEsportMobaStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionEsportMobaStatusDesc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionEsportMobaStatusDesc = append(m.AdditionEsportMobaStatusDesc, &AdditionEsportMobaStatusDesc{})
			if err := m.AdditionEsportMobaStatusDesc[len(m.AdditionEsportMobaStatusDesc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NightColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NightColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionEsportMobaStatusDesc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionEsportMobaStatusDesc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionEsportMobaStatusDesc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NightColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NightColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MatchTeam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MatchTeam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MatchTeam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NightColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NightColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionUP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionUP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionUP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DescText_1 == nil {
				m.DescText_1 = &HighlightText{}
			}
			if err := m.DescText_1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveTotal", wireType)
			}
			m.ReserveTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReserveTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActSkin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ActSkin == nil {
				m.ActSkin = &AdditionalActSkin{}
			}
			if err := m.ActSkin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LotteryType", wireType)
			}
			m.LotteryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LotteryType |= ReserveRelationLotteryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_3", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DescText_3 == nil {
				m.DescText_3 = &HighlightText{}
			}
			if err := m.DescText_3.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpMid", wireType)
			}
			m.UpMid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpMid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserInfo == nil {
				m.UserInfo = &AdditionUserInfo{}
			}
			if err := m.UserInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowText_2", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowText_2 = bool(v != 0)
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BadgeText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPremiere", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPremiere = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionalActSkin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionalActSkin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionalActSkin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Svga", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Svga = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayTimes", wireType)
			}
			m.PlayTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlayTimes |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HighlightText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HighlightText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HighlightText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextStyle", wireType)
			}
			m.TextStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TextStyle |= HighlightTextStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleExtend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleExtend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleExtend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Extend = append(m.Extend, &ModuleExtendItem{})
			if err := m.Extend[len(m.Extend)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleExtendItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleExtendItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleExtendItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= DynExtendType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoTopic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoTopic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoTopic{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoLbs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoLBS{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoLbs{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoHot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoHot{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoHot{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoGame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoGame{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoGame{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoCommon", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoCommon{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoCommon{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfoOgv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ExtInfoOGV{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Extend = &ModuleExtendItem_ExtInfoOgv{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoLBS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoLBS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoLBS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoiType", wireType)
			}
			m.PoiType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoiType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoHot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoHot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoHot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoGame) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoGame: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoGame: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoCommon) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoCommon: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoCommon: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoiType", wireType)
			}
			m.PoiType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoiType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= DynExtendType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubModule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubModule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActionUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsShowLight", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsShowLight = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtInfoOGV) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtInfoOGV: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtInfoOGV: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfoOgv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfoOgv = append(m.InfoOgv, &InfoOGV{})
			if err := m.InfoOgv[len(m.InfoOgv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InfoOGV) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InfoOGV: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InfoOGV: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubModule", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubModule = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleInteraction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleInteraction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleInteraction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractionItem", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InteractionItem = append(m.InteractionItem, &InteractionItem{})
			if err := m.InteractionItem[len(m.InteractionItem)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InteractionItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InteractionItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InteractionItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconType", wireType)
			}
			m.IconType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IconType |= LocalIconType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = append(m.Desc, &Description{})
			if err := m.Desc[len(m.Desc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentMid", wireType)
			}
			m.CommentMid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentMid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Faces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Faces = append(m.Faces, &InteractionFace{})
			if err := m.Faces[len(m.Faces)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stat == nil {
				m.Stat = &InteractionStat{}
			}
			if err := m.Stat.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InteractionStat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InteractionStat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InteractionStat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Like", wireType)
			}
			m.Like = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Like |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InteractionFace) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InteractionFace: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InteractionFace: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleStat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleStat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleStat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Repost", wireType)
			}
			m.Repost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Repost |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Like", wireType)
			}
			m.Like = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Like |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reply", wireType)
			}
			m.Reply = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reply |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LikeInfo == nil {
				m.LikeInfo = &LikeInfo{}
			}
			if err := m.LikeInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoComment", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoComment = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForward", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoForward = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplyUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoCommentText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoCommentText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoForwardText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoForwardText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleFold) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleFold: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleFold: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FoldType", wireType)
			}
			m.FoldType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FoldType |= FoldType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FoldIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FoldIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FoldUsers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FoldUsers = append(m.FoldUsers, &UserInfo{})
			if err := m.FoldUsers[len(m.FoldUsers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicMergedResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopicMergedResource == nil {
				m.TopicMergedResource = &TopicMergedResource{}
			}
			if err := m.TopicMergedResource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicMergedResource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicMergedResource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicMergedResource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeType", wireType)
			}
			m.MergeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MergeType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergedResCnt", wireType)
			}
			m.MergedResCnt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MergedResCnt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAllReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAllReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAllReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshType", wireType)
			}
			m.RefreshType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshType |= Refresh(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayurlParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayurlParam == nil {
				m.PlayurlParam = &PlayurlParam{}
			}
			if err := m.PlayurlParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssistBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssistBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdUpsParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RcmdUpsParam == nil {
				m.RcmdUpsParam = &RcmdUPsParam{}
			}
			if err := m.RcmdUpsParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdParam == nil {
				m.AdParam = &AdParam{}
			}
			if err := m.AdParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ColdStart", wireType)
			}
			m.ColdStart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ColdStart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabRecallUid", wireType)
			}
			m.TabRecallUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabRecallUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TabRecallType", wireType)
			}
			m.TabRecallType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TabRecallType |= StyleType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdUPsParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdUPsParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdUPsParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DislikeTs", wireType)
			}
			m.DislikeTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DislikeTs |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdExtra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdExtra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryVerticalExp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StoryVerticalExp = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailViewBits", wireType)
			}
			m.DetailViewBits = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DetailViewBits |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAllReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAllReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAllReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DynamicList == nil {
				m.DynamicList = &DynamicList{}
			}
			if err := m.DynamicList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpList == nil {
				m.UpList = &CardVideoUpList{}
			}
			if err := m.UpList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopicList == nil {
				m.TopicList = &TopicList{}
			}
			if err := m.TopicList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unfollow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unfollow == nil {
				m.Unfollow = &Unfollow{}
			}
			if err := m.Unfollow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionRcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RegionRcmd == nil {
				m.RegionRcmd = &DynRegionRcmd{}
			}
			if err := m.RegionRcmd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynamicList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynamicList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynamicList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateNum", wireType)
			}
			m.UpdateNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBaseline", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateBaseline = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicListItem", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicListItem = append(m.TopicListItem, &TopicListItem{})
			if err := m.TopicListItem[len(m.TopicListItem)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ActButton == nil {
				m.ActButton = &TopicButton{}
			}
			if err := m.ActButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreButton == nil {
				m.MoreButton = &TopicButton{}
			}
			if err := m.MoreButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpStyle", wireType)
			}
			m.ExpStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpStyle |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicListItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicListItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicListItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			m.Pos = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pos |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadIconUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadIconUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpMid", wireType)
			}
			m.UpMid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpMid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TailIconUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TailIconUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extension", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Extension = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedDot", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RedDot = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Unfollow) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Unfollow: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Unfollow: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &UnfollowUserItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnfollowUserItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnfollowUserItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnfollowUserItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasUpdate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasUpdate = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			m.Pos = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pos |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveState", wireType)
			}
			m.LiveState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveState |= LiveState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Official", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Official == nil {
				m.Official = &OfficialVerify{}
			}
			if err := m.Official.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vip", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vip == nil {
				m.Vip = &VipInfo{}
			}
			if err := m.Vip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sign", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sign = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTopicDetailsExt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTopicDetailsExt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTopicDetailsExt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentGuide", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommentGuide = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTopicBrief) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTopicBrief: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTopicBrief: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Topic == nil {
				m.Topic = &TopicItem{}
			}
			if err := m.Topic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RightBtn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RightBtn == nil {
				m.RightBtn = &IconButton{}
			}
			if err := m.RightBtn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TitleStyle", wireType)
			}
			m.TitleStyle = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TitleStyle |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Btn == nil {
				m.Btn = &IconButton{}
			}
			if err := m.Btn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleNotice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleNotice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleNotice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoticeType", wireType)
			}
			m.NoticeType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NoticeType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IconButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IconButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IconButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconHead", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconHead = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconTail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconTail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynDetailsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynDetailsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynDetailsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicIds = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayurlParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayurlParam == nil {
				m.PlayurlParam = &PlayurlParam{}
			}
			if err := m.PlayurlParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynDetailsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynDetailsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynDetailsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVideoPersonalReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVideoPersonalReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVideoPersonalReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostUid", wireType)
			}
			m.HostUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreload", wireType)
			}
			m.IsPreload = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsPreload |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayurlParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayurlParam == nil {
				m.PlayurlParam = &PlayurlParam{}
			}
			if err := m.PlayurlParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVideoPersonalReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVideoPersonalReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVideoPersonalReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionUp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdditionUp == nil {
				m.AdditionUp = &TopAdditionUP{}
			}
			if err := m.AdditionUp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVideoUpdOffsetReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVideoUpdOffsetReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVideoUpdOffsetReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostUid", wireType)
			}
			m.HostUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CardVideoUpList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CardVideoUpList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CardVideoUpList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &UpListItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowLiveNum", wireType)
			}
			m.ShowLiveNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShowLiveNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreLabel == nil {
				m.MoreLabel = &UpListMoreLabel{}
			}
			if err := m.MoreLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TitleSwitch", wireType)
			}
			m.TitleSwitch = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TitleSwitch |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowMoreLabel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowMoreLabel = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowInPersonal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowInPersonal = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowMoreButton", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowMoreButton = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpListMoreLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpListMoreLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpListMoreLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpListItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpListItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpListItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasUpdate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasUpdate = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			m.Pos = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pos |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserItemType", wireType)
			}
			m.UserItemType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserItemType |= UserItemType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayStyleDay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisplayStyleDay == nil {
				m.DisplayStyleDay = &UserItemStyle{}
			}
			if err := m.DisplayStyleDay.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayStyleNight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisplayStyleNight == nil {
				m.DisplayStyleNight = &UserItemStyle{}
			}
			if err := m.DisplayStyleNight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StyleId", wireType)
			}
			m.StyleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StyleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveState", wireType)
			}
			m.LiveState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveState |= LiveState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Separator", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Separator = bool(v != 0)
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRecall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsRecall = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserItemStyle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserItemStyle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserItemStyle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RectText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RectText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RectTextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RectTextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RectIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RectIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RectBgColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RectBgColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OuterAnimation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OuterAnimation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CardVideoFollowList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CardVideoFollowList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CardVideoFollowList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewAllLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewAllLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &FollowListItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowListItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowListItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowListItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeasonId", wireType)
			}
			m.SeasonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeasonId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewEp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewEp == nil {
				m.NewEp = &NewEP{}
			}
			if err := m.NewEp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pos", wireType)
			}
			m.Pos = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pos |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewEP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewEP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewEP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IndexShow", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IndexShow = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Extend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Extend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Extend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynIdStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynIdStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDynIdStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigDynIdStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigImgUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigImgUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDesc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigDesc = append(m.OrigDesc, &Description{})
			if err := m.OrigDesc[len(m.OrigDesc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = append(m.Desc, &Description{})
			if err := m.Desc[len(m.Desc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDynType", wireType)
			}
			m.OrigDynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrigDynType |= DynamicType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareScene", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareScene = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFastShare", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFastShare = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RType", wireType)
			}
			m.RType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceContent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceContent == nil {
				m.SourceContent = &types.Any{}
			}
			if err := m.SourceContent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigFace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigFace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reply", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reply == nil {
				m.Reply = &ExtendReply{}
			}
			if err := m.Reply.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtendReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtendReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtendReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = append(m.Params, &ExtendReplyParam{})
			if err := m.Params[len(m.Params)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtendReplyParam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtendReplyParam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtendReplyParam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAuthorForward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAuthorForward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAuthorForward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = append(m.Title, &ModuleAuthorForwardTitle{})
			if err := m.Title[len(m.Title)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtimeLabelText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PtimeLabelText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowFollow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowFollow = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FaceUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FaceUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TpList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TpList = append(m.TpList, &ThreePointItem{})
			if err := m.TpList[len(m.TpList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAuthorForwardTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAuthorForwardTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAuthorForwardTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceContent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceContent == nil {
				m.SourceContent = &types.Any{}
			}
			if err := m.SourceContent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleAuthor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ModuleAuthor == nil {
				m.ModuleAuthor = &ModuleAuthor{}
			}
			if err := m.ModuleAuthor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdContentType", wireType)
			}
			m.AdContentType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdContentType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleBanner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleBanner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleBanner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ModuleBannerType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ModuleBannerUser{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ModuleBanner_User{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DislikeText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DislikeText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DislikeIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DislikeIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVote2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVote2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVote2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionVoteType", wireType)
			}
			m.AdditionVoteType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AdditionVoteType |= AdditionVoteType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteId", wireType)
			}
			m.VoteId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VoteId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deadline", wireType)
			}
			m.Deadline = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Deadline |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotedText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VotedText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= AdditionVoteState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionVoteWord", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionVoteWord{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &AdditionVote2_AdditionVoteWord{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionVotePic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionVotePic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &AdditionVote2_AdditionVotePic{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionVoteDefaule", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AdditionVoteDefaule{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &AdditionVote2_AdditionVoteDefaule{v}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizType", wireType)
			}
			m.BizType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BizType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tips", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tips = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsVoted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsVoted = bool(v != 0)
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChoiceCnt", wireType)
			}
			m.ChoiceCnt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChoiceCnt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefauleSelectShare", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefauleSelectShare = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVoteWord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVoteWord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVoteWord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Item = append(m.Item, &AdditionVoteWordItem{})
			if err := m.Item[len(m.Item)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVoteWordItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVoteWordItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVoteWordItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptIdx", wireType)
			}
			m.OptIdx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OptIdx |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsVote", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsVote = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Persent", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Persent = float64(math.Float64frombits(v))
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMaxOption", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMaxOption = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVotePic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVotePic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVotePic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Item = append(m.Item, &AdditionVotePicItem{})
			if err := m.Item[len(m.Item)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVotePicItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVotePicItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVotePicItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OptIdx", wireType)
			}
			m.OptIdx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OptIdx |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsVote", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsVote = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Persent", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Persent = float64(math.Float64frombits(v))
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMaxOption", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMaxOption = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdditionVoteDefaule) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdditionVoteDefaule: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdditionVoteDefaule: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = append(m.Cover, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleItemNull) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleItemNull: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleItemNull: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleBannerUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleBannerUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleBannerUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ModuleBannerUserItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleBannerUserItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleBannerUserItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleBannerUserItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveState", wireType)
			}
			m.LiveState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveState |= LiveState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Official", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Official == nil {
				m.Official = &OfficialVerify{}
			}
			if err := m.Official.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vip", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vip == nil {
				m.Vip = &VipInfo{}
			}
			if err := m.Vip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &AdditionalButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleLikeUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleLikeUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleLikeUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeUsers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LikeUsers = append(m.LikeUsers, &LikeUser{})
			if err := m.LikeUsers[len(m.LikeUsers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Animation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Animation == nil {
				m.Animation = &LikeAnimation{}
			}
			if err := m.Animation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsLike = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeAnimation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeAnimation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeAnimation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Begin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Begin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field End", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.End = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeIconId", wireType)
			}
			m.LikeIconId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeIconId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ThreePointType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Default", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointDefault{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Default{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoPlayer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointAutoPlay{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_AutoPlayer{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointShare{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Share{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attention", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointAttention{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Attention{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wait", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointWait{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Wait{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dislike", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointDislike{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Dislike{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Favorite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointFavorite{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Favorite{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Top", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointTop{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Top{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointComment{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Comment{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hide", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointHide{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_Hide{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicIrrelevant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointTopicIrrelevant{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_TopicIrrelevant{v}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynEdit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ThreePointDynEdit{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &ThreePointItem_DynEdit{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleAuthorBadgeButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleAuthorBadgeButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleAuthorBadgeButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointDefault) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointDefault: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointDefault: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Toast == nil {
				m.Toast = &ThreePointDefaultToast{}
			}
			if err := m.Toast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointDefaultToast) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointDefaultToast: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointDefaultToast: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointAutoPlay) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointAutoPlay: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointAutoPlay: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenTextV2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenTextV2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseTextV2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseTextV2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlyIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OnlyIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlyText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OnlyText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenIconV2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenIconV2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseIconV2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloseIconV2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointShare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointShare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointShare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = append(m.Channel, &ThreePointShareChannel{})
			if err := m.Channel[len(m.Channel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reserve", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reserve == nil {
				m.Reserve = &ShareReserve{}
			}
			if err := m.Reserve.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointShareChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointShareChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointShareChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointAttention) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointAttention: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointAttention: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttentionIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AttentionIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttentionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AttentionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotAttentionIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotAttentionIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotAttentionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotAttentionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ThreePointAttentionStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointWait) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointWait: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointWait: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoAdditionIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoAdditionIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoAdditionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoAdditionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointDislike) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointDislike: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointDislike: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointFavorite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointFavorite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointFavorite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFavourite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFavourite = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointTop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointTop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointTop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= TopType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointTopicIrrelevant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointTopicIrrelevant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointTopicIrrelevant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResId", wireType)
			}
			m.ResId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResType", wireType)
			}
			m.ResType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointDynEdit) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointDynEdit: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointDynEdit: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynId", wireType)
			}
			m.DynId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginId", wireType)
			}
			m.OriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOriginDeleted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsOriginDeleted = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpSelection", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpSelection == nil {
				m.UpSelection = &CommentDetail{}
			}
			if err := m.UpSelection.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpClose", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpClose == nil {
				m.UpClose = &CommentDetail{}
			}
			if err := m.UpClose.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointHide) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointHide: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointHide: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interactive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interactive == nil {
				m.Interactive = &ThreePointHideInteractive{}
			}
			if err := m.Interactive.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlookFid", wireType)
			}
			m.BlookFid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlookFid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlookType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BlookType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThreePointHideInteractive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThreePointHideInteractive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThreePointHideInteractive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Confirm", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Confirm = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cancel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cancel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommentDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommentDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommentDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanModify", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanModify = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Weight) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Weight: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Weight: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &WeightItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WeightItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeightItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeightItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= WeightType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &WeightButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &WeightItem_Button{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dislike", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &WeightDislike{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &WeightItem_Dislike{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WeightDislike) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeightDislike: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeightDislike: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedBackType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedBackType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WeightButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeightButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeightButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CmtShowItem", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CmtShowItem = append(m.CmtShowItem, &CmtShowItem{})
			if err := m.CmtShowItem[len(m.CmtShowItem)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CmtShowItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CmtShowItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CmtShowItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAdditionCommonFollowReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAdditionCommonFollowReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAdditionCommonFollowReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= AdditionalButtonStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAdditionCommonFollowReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAdditionCommonFollowReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAdditionCommonFollowReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= AdditionalButtonStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynThumbReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynThumbReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynThumbReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ThumbType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynFakeCardReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynFakeCardReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynFakeCardReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynFakeCardReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynFakeCardReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynFakeCardReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &DynamicItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRcmdUpExchangeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRcmdUpExchangeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRcmdUpExchangeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DislikeTs", wireType)
			}
			m.DislikeTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DislikeTs |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRcmdUpExchangeReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRcmdUpExchangeReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRcmdUpExchangeReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unfollow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unfollow == nil {
				m.Unfollow = &Unfollow{}
			}
			if err := m.Unfollow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAllPersonalReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAllPersonalReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAllPersonalReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostUid", wireType)
			}
			m.HostUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPreload", wireType)
			}
			m.IsPreload = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsPreload |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayurlParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayurlParam == nil {
				m.PlayurlParam = &PlayurlParam{}
			}
			if err := m.PlayurlParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAllPersonalReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAllPersonalReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAllPersonalReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionUp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdditionUp == nil {
				m.AdditionUp = &TopAdditionUP{}
			}
			if err := m.AdditionUp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopAdditionUP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopAdditionUP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopAdditionUP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Up", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Up = append(m.Up, &AdditionUP{})
			if err := m.Up[len(m.Up)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasFold", wireType)
			}
			m.HasFold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasFold |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynAllUpdOffsetReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynAllUpdOffsetReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynAllUpdOffsetReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostUid", wireType)
			}
			m.HostUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVoteReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVoteReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVoteReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteId", wireType)
			}
			m.VoteId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VoteId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Votes = append(m.Votes, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDynamicV2
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDynamicV2
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Votes) == 0 {
					m.Votes = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Votes = append(m.Votes, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= VoteStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Share = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynVoteReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynVoteReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynVoteReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &AdditionVote2{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Relation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Relation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Relation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= RelationStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFollow", wireType)
			}
			m.IsFollow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsFollow |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFollowed", wireType)
			}
			m.IsFollowed = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsFollowed |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MixUpListLiveItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MixUpListLiveItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MixUpListLiveItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			m.RoomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MixUpListItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MixUpListItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MixUpListItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpecialAttention", wireType)
			}
			m.SpecialAttention = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SpecialAttention |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReddotState", wireType)
			}
			m.ReddotState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReddotState |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LiveInfo == nil {
				m.LiveInfo = &MixUpListLiveItem{}
			}
			if err := m.LiveInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Face", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Face = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Official", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Official == nil {
				m.Official = &OfficialVerify{}
			}
			if err := m.Official.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vip", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vip == nil {
				m.Vip = &VipInfo{}
			}
			if err := m.Vip.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PremiereState", wireType)
			}
			m.PremiereState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PremiereState |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynMixUpListViewMoreReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynMixUpListViewMoreReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynMixUpListViewMoreReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			m.SortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SortType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SortType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SortType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			m.SortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortTypeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SortTypeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynMixUpListViewMoreReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynMixUpListViewMoreReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynMixUpListViewMoreReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &MixUpListItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchDefaultText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchDefaultText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortTypes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SortTypes = append(m.SortTypes, &SortType{})
			if err := m.SortTypes[len(m.SortTypes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowMoreSortTypes", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowMoreSortTypes = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultSortType", wireType)
			}
			m.DefaultSortType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefaultSortType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynLightReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynLightReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynLightReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= LightFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FakeUid", wireType)
			}
			m.FakeUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FakeUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynLightReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynLightReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynLightReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DynamicList == nil {
				m.DynamicList = &DynamicList{}
			}
			if err := m.DynamicList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdParam == nil {
				m.AdParam = &AdParam{}
			}
			if err := m.AdParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareMode", wireType)
			}
			m.ShareMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShareMode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pattern", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pattern = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &Config{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynDetailReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynDetailReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynDetailReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Item", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Item == nil {
				m.Item = &DynamicItem{}
			}
			if err := m.Item.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UidOffset", wireType)
			}
			m.UidOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UidOffset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ModuleAuthor{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RepostListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RepostListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RepostListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynType", wireType)
			}
			m.DynType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepostType", wireType)
			}
			m.RepostType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepostType |= RepostType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RepostListRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RepostListRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RepostListRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepostType", wireType)
			}
			m.RepostType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepostType |= RepostType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleShareInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleShareInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleShareInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareChannels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareChannels = append(m.ShareChannels, &ShareChannel{})
			if err := m.ShareChannels[len(m.ShareChannels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareOrigin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShareChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShareChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShareChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reserve", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reserve == nil {
				m.Reserve = &ShareReserve{}
			}
			if err := m.Reserve.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShareReserve) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShareReserve: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShareReserve: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrCodeIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrCodeIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrCodeText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrCodeText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QrCodeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QrCodeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserInfo == nil {
				m.UserInfo = &AdditionUserInfo{}
			}
			if err := m.UserInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleRecommend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleRecommend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleRecommend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModuleTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ad", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ad = append(m.Ad, &types.Any{})
			if err := m.Ad[len(m.Ad)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleStory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleStory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleStory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &StoryItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowPublishEntrance", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowPublishEntrance = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FoldState", wireType)
			}
			m.FoldState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FoldState |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublishText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublishText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoryItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoryItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoryItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &UserInfo{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RcmdType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryArchive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &StoryArchive{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RcmdItem = &StoryItem_StoryArchive{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoryArchive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoryArchive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoryArchive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dimension", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dimension == nil {
				m.Dimension = &Dimension{}
			}
			if err := m.Dimension.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSpaceReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSpaceReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSpaceReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HostUid", wireType)
			}
			m.HostUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HostUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSpaceRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSpaceRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSpaceRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistoryOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HistoryOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleTop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleTop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleTop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TpList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TpList = append(m.TpList, &ThreePointItem{})
			if err := m.TpList[len(m.TpList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleButtom) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleButtom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleButtom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModuleStat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ModuleStat == nil {
				m.ModuleStat = &ModuleStat{}
			}
			if err := m.ModuleStat.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentBox", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CommentBox = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentBoxMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommentBoxMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRcmdReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRcmdReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRcmdReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FakeUid", wireType)
			}
			m.FakeUid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FakeUid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRefresh", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsRefresh = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRcmdReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRcmdReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRcmdReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionRcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RegionRcmd == nil {
				m.RegionRcmd = &DynRegionRcmd{}
			}
			if err := m.RegionRcmd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DynamicList == nil {
				m.DynamicList = &DynamicList{}
			}
			if err := m.DynamicList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRegionRcmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRegionRcmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRegionRcmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &DynRegionRcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Opts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Opts == nil {
				m.Opts = &RcmdOption{}
			}
			if err := m.Opts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdOption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdOption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdOption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowTitle", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowTitle = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynRegionRcmdItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynRegionRcmdItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynRegionRcmdItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ModuleRcmd{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModuleRcmd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModuleRcmd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModuleRcmd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &RcmdAuthor{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdAuthor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdAuthor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdAuthor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &UserInfo{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RcmdType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdArchive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RcmdArchive{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RcmdItem = &RcmdItem_RcmdArchive{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdArchive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdArchive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdArchive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftIcon_1", wireType)
			}
			m.CoverLeftIcon_1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverLeftIcon_1 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPgc", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPgc = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Badge == nil {
				m.Badge = &IconBadge{}
			}
			if err := m.Badge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftIcon_2", wireType)
			}
			m.CoverLeftIcon_2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverLeftIcon_2 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftIcon_3", wireType)
			}
			m.CoverLeftIcon_3 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoverLeftIcon_3 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverLeftText_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverLeftText_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdReason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RcmdReason == nil {
				m.RcmdReason = &RcmdReason{}
			}
			if err := m.RcmdReason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdReason) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdReason: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdReason: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Style", wireType)
			}
			m.Style = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Style |= RcmdReasonStyle(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdReason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdReason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IconBadge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IconBadge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IconBadge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconBgUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconBgUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CoverIconWithText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CoverIconWithText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CoverIconWithText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			m.Icon = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Icon |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynServerDetailsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynServerDetailsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynServerDetailsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.DynamicIds = append(m.DynamicIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDynamicV2
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDynamicV2
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.DynamicIds) == 0 {
					m.DynamicIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.DynamicIds = append(m.DynamicIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIds", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobiApp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobiApp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buvid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buvid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMaster", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMaster = bool(v != 0)
		case 11:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TopDynamicIds = append(m.TopDynamicIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDynamicV2
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDynamicV2
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TopDynamicIds) == 0 {
					m.TopDynamicIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TopDynamicIds = append(m.TopDynamicIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TopDynamicIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynServerDetailsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynServerDetailsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynServerDetailsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Items == nil {
				m.Items = make(map[int64]*DynamicItem)
			}
			var mapkey int64
			var mapvalue *DynamicItem
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthDynamicV2
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthDynamicV2
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &DynamicItem{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipDynamicV2(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthDynamicV2
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Items[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSearchReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSearchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSearchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSearchReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSearchReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSearchReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChannelInfo == nil {
				m.ChannelInfo = &SearchChannel{}
			}
			if err := m.ChannelInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchTopic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SearchTopic == nil {
				m.SearchTopic = &SearchTopic{}
			}
			if err := m.SearchTopic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SearchInfo == nil {
				m.SearchInfo = &SearchInfo{}
			}
			if err := m.SearchInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreButton == nil {
				m.MoreButton = &SearchTopicButton{}
			}
			if err := m.MoreButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &SearchTopicItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchTopicButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchTopicButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchTopicButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchTopicItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchTopicItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchTopicItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActivity", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsActivity = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescLong", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescLong = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreButton == nil {
				m.MoreButton = &SearchTopicButton{}
			}
			if err := m.MoreButton.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channels = append(m.Channels, &ChannelInfo{})
			if err := m.Channels[len(m.Channels)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChannelInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChannelInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChannelInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			m.ChannelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChannelId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAtten", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAtten = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TypeIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TypeIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetDecisionReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetDecisionReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetDecisionReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusTop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusTop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusTop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tabs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tabs = append(m.Tabs, &CampusShowTabInfo{})
			if err := m.Tabs[len(m.Tabs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchLabel == nil {
				m.SwitchLabel = &CampusLabel{}
			}
			if err := m.SwitchLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Banner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Banner = append(m.Banner, &CampusBannerInfo{})
			if err := m.Banner[len(m.Banner)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InviteLabel == nil {
				m.InviteLabel = &CampusLabel{}
			}
			if err := m.InviteLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Notice == nil {
				m.Notice = &CampusNoticeInfo{}
			}
			if err := m.Notice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicSquare", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TopicSquare == nil {
				m.TopicSquare = &TopicSquareInfo{}
			}
			if err := m.TopicSquare.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusBadge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusBadge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusBackground", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusBackground = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusMotto", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusMotto = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MngEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MngEntry == nil {
				m.MngEntry = &CampusLabel{}
			}
			if err := m.MngEntry.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusIntro", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusIntro = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusNameLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusNameLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomLeftText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomLeftText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusShowTabInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusShowTabInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusShowTabInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= CampusTabType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedDot", wireType)
			}
			m.RedDot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedDot |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusBannerInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusBannerInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusBannerInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusNoticeInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusNoticeInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusNoticeInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &CampusLabel{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AlumniDynamicsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlumniDynamicsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlumniDynamicsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstTime", wireType)
			}
			m.FirstTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FirstTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AlumniDynamicsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlumniDynamicsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlumniDynamicsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lat = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lng", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lng = float64(math.Float64frombits(v))
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageType", wireType)
			}
			m.PageType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageType |= CampusHomePageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Top", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Top == nil {
				m.Top = &CampusRcmdTop{}
			}
			if err := m.Top.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rcmd == nil {
				m.Rcmd = &CampusRcmdInfo{}
			}
			if err := m.Rcmd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusTop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CampusTop == nil {
				m.CampusTop = &CampusTop{}
			}
			if err := m.CampusTop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageType", wireType)
			}
			m.PageType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpHomePop", wireType)
			}
			m.JumpHomePop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpHomePop |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdTop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdTop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdTop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &RcmdTopButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchLabel == nil {
				m.SwitchLabel = &CampusLabel{}
			}
			if err := m.SwitchLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoticeLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NoticeLabel == nil {
				m.NoticeLabel = &CampusLabel{}
			}
			if err := m.NoticeLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_3", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_3 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InviteLabel == nil {
				m.InviteLabel = &CampusLabel{}
			}
			if err := m.InviteLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReserveLabel == nil {
				m.ReserveLabel = &CampusLabel{}
			}
			if err := m.ReserveLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReserveNumber", wireType)
			}
			m.ReserveNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReserveNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxReserve", wireType)
			}
			m.MaxReserve = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxReserve |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchoolLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SchoolLabel == nil {
				m.SchoolLabel = &CampusLabel{}
			}
			if err := m.SchoolLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MngLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MngLabel == nil {
				m.MngLabel = &CampusLabel{}
			}
			if err := m.MngLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdTopic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RcmdTopic == nil {
				m.RcmdTopic = &CampusHomeRcmdTopic{}
			}
			if err := m.RcmdTopic.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditBeforeOpen", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuditBeforeOpen = bool(v != 0)
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuditMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdTopButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdTopButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdTopButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &CampusRcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EntryLabel == nil {
				m.EntryLabel = &CampusLabel{}
			}
			if err := m.EntryLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubscribeCampusReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubscribeCampusReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubscribeCampusReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetRecentCampusReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetRecentCampusReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetRecentCampusReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynTabReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynTabReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynTabReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeenagersMode", wireType)
			}
			m.TeenagersMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TeenagersMode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynTabReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynTabReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynTabReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynTab", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynTab = append(m.DynTab, &DynTab{})
			if err := m.DynTab[len(m.DynTab)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenTab", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScreenTab = append(m.ScreenTab, &DynScreenTab{})
			if err := m.ScreenTab[len(m.ScreenTab)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynScreenTab) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynScreenTab: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynScreenTab: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynTab) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynTab: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynTab: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bubble", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bubble = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedPoint", wireType)
			}
			m.RedPoint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedPoint |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CityId", wireType)
			}
			m.CityId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CityId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPopup", wireType)
			}
			m.IsPopup = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsPopup |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Popup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Popup == nil {
				m.Popup = &Popup{}
			}
			if err := m.Popup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultTab", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DefaultTab = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Anchor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Anchor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InternalTest", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InternalTest = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ShowType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackUp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BackUp == nil {
				m.BackUp = &DynTab{}
			}
			if err := m.BackUp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpHomePop", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JumpHomePop = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Popup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Popup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Popup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SchoolSearchReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SchoolSearchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SchoolSearchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SchoolSearchReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SchoolSearchReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SchoolSearchReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &CampusInfo{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Toast == nil {
				m.Toast = &SearchToast{}
			}
			if err := m.Toast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchToast) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchToast: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchToast: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Online", wireType)
			}
			m.Online = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Online |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SchoolRecommendReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SchoolRecommendReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SchoolRecommendReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Lat = float32(math.Float32frombits(v))
		case 2:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lng", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.Lng = float32(math.Float32frombits(v))
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SchoolRecommendReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SchoolRecommendReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SchoolRecommendReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &CampusInfo{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSpaceSearchDetailsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSpaceSearchDetailsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSpaceSearchDetailsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.DynamicIds = append(m.DynamicIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDynamicV2
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDynamicV2
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.DynamicIds) == 0 {
					m.DynamicIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.DynamicIds = append(m.DynamicIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIds", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchWords", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchWords = append(m.SearchWords, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MobiApp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobiApp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buvid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buvid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetType", wireType)
			}
			m.NetType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NetType |= NetworkType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TfType", wireType)
			}
			m.TfType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TfType |= TFType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DynSpaceSearchDetailsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DynSpaceSearchDetailsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DynSpaceSearchDetailsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Items == nil {
				m.Items = make(map[int64]*DynamicItem)
			}
			var mapkey int64
			var mapvalue *DynamicItem
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDynamicV2
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDynamicV2
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthDynamicV2
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthDynamicV2
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &DynamicItem{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipDynamicV2(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthDynamicV2
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Items[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialAccountsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialAccountsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialAccountsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialAccountsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialAccountsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialAccountsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &OfficialAccountInfo{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialAccountInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialAccountInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialAccountInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &UserInfo{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Relation == nil {
				m.Relation = &Relation{}
			}
			if err := m.Relation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialDynamicsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialDynamicsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialDynamicsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialDynamicsReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialDynamicsReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialDynamicsReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &OfficialItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RcmdType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdArchive", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OfficialRcmdArchive{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RcmdItem = &OfficialItem_RcmdArchive{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdDynamic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OfficialRcmdDynamic{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RcmdItem = &OfficialItem_RcmdDynamic{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialRcmdArchive) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialRcmdArchive: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialRcmdArchive: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverRightText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverRightText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescIcon_1", wireType)
			}
			m.DescIcon_1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DescIcon_1 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescIcon_2", wireType)
			}
			m.DescIcon_2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DescIcon_2 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowThreePoint", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowThreePoint = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			m.DynamicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynamicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OfficialRcmdDynamic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OfficialRcmdDynamic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OfficialRcmdDynamic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverRightTopText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverRightTopText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescIcon_1", wireType)
			}
			m.DescIcon_1 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DescIcon_1 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescIcon_2", wireType)
			}
			m.DescIcon_2 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DescIcon_2 |= CoverIcon(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescText_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescText_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			m.DynamicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynamicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			m.Rid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRedDotReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRedDotReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRedDotReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRedDotReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRedDotReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRedDotReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedDot", wireType)
			}
			m.RedDot = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RedDot |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdFeedReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdFeedReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdFeedReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstTime", wireType)
			}
			m.FirstTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FirstTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scroll", wireType)
			}
			m.Scroll = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Scroll |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewDynId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewDynId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRcmdFeedReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRcmdFeedReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRcmdFeedReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GuideBar", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GuideBar == nil {
				m.GuideBar = &GuideBarInfo{}
			}
			if err := m.GuideBar.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Update", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Update = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GuideBarInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GuideBarInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GuideBarInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Show", wireType)
			}
			m.Show = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Show |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpPage", wireType)
			}
			m.JumpPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpPage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JumpPosition", wireType)
			}
			m.JumpPosition = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.JumpPosition |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicSquareReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicSquareReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicSquareReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicSquareReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicSquareReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicSquareReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &TopicSquareInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicSquareInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicSquareInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicSquareInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &CampusLabel{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rcmd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Rcmd == nil {
				m.Rcmd = &TopicRcmdCard{}
			}
			if err := m.Rcmd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicRcmdCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicRcmdCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicRcmdCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &CampusLabel{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &TopicItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTopicBtn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateTopicBtn == nil {
				m.CreateTopicBtn = &IconButton{}
			}
			if err := m.CreateTopicBtn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RcmdDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RcmdDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &IconButton{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMateLikeListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMateLikeListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMateLikeListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicId", wireType)
			}
			m.DynamicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DynamicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMateLikeListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMateLikeListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMateLikeListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ModuleAuthor{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusFeedbackReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusFeedbackReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusFeedbackReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Infos = append(m.Infos, &CampusFeedbackInfo{})
			if err := m.Infos[len(m.Infos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			m.From = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.From |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusFeedbackInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusFeedbackInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusFeedbackInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizType", wireType)
			}
			m.BizType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BizType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizId", wireType)
			}
			m.BizId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BizId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusFeedbackReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusFeedbackReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusFeedbackReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusBillBoardReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusBillBoardReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusBillBoardReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusBillboardInternalReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusBillboardInternalReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusBillboardInternalReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusBillBoardReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusBillBoardReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusBillBoardReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelpUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HelpUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildTime", wireType)
			}
			m.BuildTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuildTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &OfficialItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindNotice", wireType)
			}
			m.BindNotice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BindNotice |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateToast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateToast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenProgress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OpenProgress == nil {
				m.OpenProgress = &CampusFeatureProgress{}
			}
			if err := m.OpenProgress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusFeatureProgress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusFeatureProgress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusFeatureProgress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgressFull", wireType)
			}
			m.ProgressFull = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProgressFull |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProgressAchieved", wireType)
			}
			m.ProgressAchieved = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProgressAchieved |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DescTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescTitle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Btn == nil {
				m.Btn = &CampusLabel{}
			}
			if err := m.Btn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusTopicRcmdFeedReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusTopicRcmdFeedReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusTopicRcmdFeedReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromType", wireType)
			}
			m.FromType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromType |= CampusReqFromType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusTopicRcmdFeedReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusTopicRcmdFeedReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusTopicRcmdFeedReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinDiscuss", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinDiscuss == nil {
				m.JoinDiscuss = &IconButton{}
			}
			if err := m.JoinDiscuss.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnfollowMatchReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnfollowMatchReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnfollowMatchReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			m.Cid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FetchTabSettingReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FetchTabSettingReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FetchTabSettingReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= HomePageTabSttingStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateTabSettingReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateTabSettingReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateTabSettingReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= HomePageTabSttingStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusSquareReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusSquareReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusSquareReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lat = float64(math.Float64frombits(v))
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lng", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lng = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusSquareReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusSquareReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusSquareReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &RcmdCampusBrief{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Button", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Button == nil {
				m.Button = &CampusLabel{}
			}
			if err := m.Button.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RcmdCampusBrief) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RcmdCampusBrief: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RcmdCampusBrief: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusBadge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusBadge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRecommendReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRecommendReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRecommendReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageNo", wireType)
			}
			m.PageNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageNo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			m.From = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.From |= CampusRcmdReqFrom(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusRecommendReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusRecommendReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusRecommendReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &RcmdItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusHomePagesReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusHomePagesReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusHomePagesReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Top", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Top == nil {
				m.Top = &CampusRcmdTop{}
			}
			if err := m.Top.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusTop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CampusTop == nil {
				m.CampusTop = &CampusTop{}
			}
			if err := m.CampusTop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageType", wireType)
			}
			m.PageType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusHomePagesReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusHomePagesReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusHomePagesReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lat", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lat = float64(math.Float64frombits(v))
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lng", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Lng = float64(math.Float64frombits(v))
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageType", wireType)
			}
			m.PageType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageType |= CampusHomePageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusEntryTabReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusEntryTabReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusEntryTabReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusEntryTabResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusEntryTabResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusEntryTabResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryType", wireType)
			}
			m.EntryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntryType |= CampusEntryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusHomeRcmdTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusHomeRcmdTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusHomeRcmdTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Title == nil {
				m.Title = &ModuleTitle{}
			}
			if err := m.Title.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = append(m.Topic, &TopicItem{})
			if err := m.Topic[len(m.Topic)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HomeSubscribeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HomeSubscribeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HomeSubscribeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HomeSubscribeReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HomeSubscribeReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HomeSubscribeReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Online", wireType)
			}
			m.Online = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Online |= CampusOnlineStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LbsPoiReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LbsPoiReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LbsPoiReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Poi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Poi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshType", wireType)
			}
			m.RefreshType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RefreshType |= Refresh(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LbsPoiDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LbsPoiDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LbsPoiDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Poi", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Poi = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasePic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BasePic = append(m.BasePic, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = append(m.Cover, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LbsPoiReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LbsPoiReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LbsPoiReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Detail", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Detail == nil {
				m.Detail = &LbsPoiDetail{}
			}
			if err := m.Detail.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedFilterReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedFilterReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedFilterReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tab", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tab = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTime", wireType)
			}
			m.LocalTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlayerArgs == nil {
				m.PlayerArgs = &v1.PlayerArgs{}
			}
			if err := m.PlayerArgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdParam", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdParam == nil {
				m.AdParam = &AdParam{}
			}
			if err := m.AdParam.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ColdStart", wireType)
			}
			m.ColdStart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ColdStart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedFilterReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedFilterReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedFilterReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngDetailReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngDetailReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngDetailReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &CampusMngItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopHintBarMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopHintBarMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BottomSubmitHintMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BottomSubmitHintMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditStatus", wireType)
			}
			m.AuditStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuditStatus |= CampusMngAuditStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuditMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ItemType", wireType)
			}
			m.ItemType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ItemType |= CampusMngItemType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MngItemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MngItemId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDel = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BasicInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CampusMngBasicInfo{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &CampusMngItem_BasicInfo{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Badge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CampusMngBadge{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &CampusMngItem_Badge{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slogan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CampusMngSlogan{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &CampusMngItem_Slogan{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quiz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CampusMngQuiz{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Item = &CampusMngItem_Quiz{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngBasicInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngBasicInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngBasicInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampusName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HintMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HintMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngBadge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngBadge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngBadge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BadgeUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadHintMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UploadHintMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngSlogan) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngSlogan: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngSlogan: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slogan", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slogan = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputHintMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputHintMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngQuiz) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngQuiz: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngQuiz: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MoreLabel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MoreLabel == nil {
				m.MoreLabel = &CampusLabel{}
			}
			if err := m.MoreLabel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubmitLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubmitLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuizCount", wireType)
			}
			m.QuizCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QuizCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngSubmitReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngSubmitReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngSubmitReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModifiedItems", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ModifiedItems = append(m.ModifiedItems, &CampusMngItem{})
			if err := m.ModifiedItems[len(m.ModifiedItems)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngSubmitReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngSubmitReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngSubmitReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngQuizDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngQuizDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngQuizDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuizId", wireType)
			}
			m.QuizId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QuizId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Question", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Question = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrectAnswer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrectAnswer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WrongAnswerList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WrongAnswerList = append(m.WrongAnswerList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditStatus", wireType)
			}
			m.AuditStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuditStatus |= CampusMngAuditStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuditMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngQuizOperateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngQuizOperateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngQuizOperateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= CampusMngQuizAction(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampusId", wireType)
			}
			m.CampusId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampusId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quiz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Quiz = append(m.Quiz, &CampusMngQuizDetail{})
			if err := m.Quiz[len(m.Quiz)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CampusMngQuizOperateReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CampusMngQuizOperateReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CampusMngQuizOperateReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Toast", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Toast = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quiz", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Quiz = append(m.Quiz, &CampusMngQuizDetail{})
			if err := m.Quiz[len(m.Quiz)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuizTotal", wireType)
			}
			m.QuizTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QuizTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LegacyTopicFeedReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LegacyTopicFeedReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LegacyTopicFeedReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			m.TopicId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SortType == nil {
				m.SortType = &SortType{}
			}
			if err := m.SortType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardFilter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CardFilter == nil {
				m.CardFilter = &SortType{}
			}
			if err := m.CardFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LegacyTopicFeedReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LegacyTopicFeedReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LegacyTopicFeedReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &DynamicItem{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMore = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportedSortTypes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportedSortTypes = append(m.SupportedSortTypes, &SortType{})
			if err := m.SupportedSortTypes[len(m.SupportedSortTypes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedCardFilters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDynamicV2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedCardFilters = append(m.FeedCardFilters, &SortType{})
			if err := m.FeedCardFilters[len(m.FeedCardFilters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDynamicV2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDynamicV2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDynamicV2(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDynamicV2
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDynamicV2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDynamicV2
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDynamicV2
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDynamicV2
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDynamicV2        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDynamicV2          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDynamicV2 = fmt.Errorf("proto: unexpected end of group")
)
