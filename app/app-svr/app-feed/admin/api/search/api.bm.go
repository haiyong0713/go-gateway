// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package search is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

It is generated from these files:

	api.proto
*/
package search

import (
	"context"

	bm "go-common/library/net/http/blademaster"
	"go-common/library/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathSearchBatchOptWeb = "/main.feed.admin.search.api.Search/BatchOptWeb"
var PathSearchBatchOptResultSpread = "/main.feed.admin.search.api.Search/BatchOptResultSpread"
var PathSearchAddUpAlias = "/main.feed.admin.search.api.Search/AddUpAlias"
var PathSearchEditUpAlias = "/main.feed.admin.search.api.Search/EditUpAlias"
var PathSearchToggleUpAlias = "/main.feed.admin.search.api.Search/ToggleUpAlias"
var PathSearchSearchUpAlias = "/main.feed.admin.search.api.Search/SearchUpAlias"
var PathSearchSyncUpAlias = "/main.feed.admin.search.api.Search/SyncUpAlias"

// SearchBMServer is the server API for Search service.
type SearchBMServer interface {
	BatchOptWeb(ctx context.Context, req *BatchOptWebReq) (resp *BatchOptWebResp, err error)

	BatchOptResultSpread(ctx context.Context, req *BatchOptResultSpreadReq) (resp *BatchOptResultSpreadResp, err error)

	// 搜索后台-up主别名管理
	// 新增
	AddUpAlias(ctx context.Context, req *AddUpAliasReq) (resp *google_protobuf1.Empty, err error)

	// 编辑
	EditUpAlias(ctx context.Context, req *EditUpAliasReq) (resp *google_protobuf1.Empty, err error)

	// 审核
	ToggleUpAlias(ctx context.Context, req *ToggleUpAliasReq) (resp *google_protobuf1.Empty, err error)

	// 查询
	SearchUpAlias(ctx context.Context, req *SearchUpAliasReq) (resp *SearchUpAliasRep, err error)

	// 同步信息
	SyncUpAlias(ctx context.Context, req *SyncUpAliasReq) (resp *SyncUpAliasRep, err error)
}

var SearchSvc SearchBMServer

func searchBatchOptWeb(c *bm.Context) {
	p := new(BatchOptWebReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.BatchOptWeb(c, p)
	c.JSON(resp, err)
}

func searchBatchOptResultSpread(c *bm.Context) {
	p := new(BatchOptResultSpreadReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.BatchOptResultSpread(c, p)
	c.JSON(resp, err)
}

func searchAddUpAlias(c *bm.Context) {
	p := new(AddUpAliasReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.AddUpAlias(c, p)
	c.JSON(resp, err)
}

func searchEditUpAlias(c *bm.Context) {
	p := new(EditUpAliasReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.EditUpAlias(c, p)
	c.JSON(resp, err)
}

func searchToggleUpAlias(c *bm.Context) {
	p := new(ToggleUpAliasReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.ToggleUpAlias(c, p)
	c.JSON(resp, err)
}

func searchSearchUpAlias(c *bm.Context) {
	p := new(SearchUpAliasReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.SearchUpAlias(c, p)
	c.JSON(resp, err)
}

func searchSyncUpAlias(c *bm.Context) {
	p := new(SyncUpAliasReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := SearchSvc.SyncUpAlias(c, p)
	c.JSON(resp, err)
}

// RegisterSearchBMServer Register the blademaster route
func RegisterSearchBMServer(e *bm.Engine, server SearchBMServer) {
	SearchSvc = server
	e.GET("/main.feed.admin.search.api.Search/BatchOptWeb", searchBatchOptWeb)
	e.GET("/main.feed.admin.search.api.Search/BatchOptResultSpread", searchBatchOptResultSpread)
	e.GET("/main.feed.admin.search.api.Search/AddUpAlias", searchAddUpAlias)
	e.GET("/main.feed.admin.search.api.Search/EditUpAlias", searchEditUpAlias)
	e.GET("/main.feed.admin.search.api.Search/ToggleUpAlias", searchToggleUpAlias)
	e.GET("/main.feed.admin.search.api.Search/SearchUpAlias", searchSearchUpAlias)
	e.GET("/main.feed.admin.search.api.Search/SyncUpAlias", searchSyncUpAlias)
}
