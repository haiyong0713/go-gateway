// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto.proto

package model

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	go_common_library_time "go-common/library/time"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AidReason struct {
	Aid                  int64    `protobuf:"varint,1,opt,name=Aid,proto3" json:"aid"`
	Reason               string   `protobuf:"bytes,2,opt,name=Reason,proto3" json:"reason"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AidReason) Reset()         { *m = AidReason{} }
func (m *AidReason) String() string { return proto.CompactTextString(m) }
func (*AidReason) ProtoMessage()    {}
func (*AidReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{0}
}
func (m *AidReason) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AidReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AidReason.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AidReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AidReason.Merge(m, src)
}
func (m *AidReason) XXX_Size() int {
	return m.Size()
}
func (m *AidReason) XXX_DiscardUnknown() {
	xxx_messageInfo_AidReason.DiscardUnknown(m)
}

var xxx_messageInfo_AidReason proto.InternalMessageInfo

type AidReasons struct {
	List                 []*AidReason `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AidReasons) Reset()         { *m = AidReasons{} }
func (m *AidReasons) String() string { return proto.CompactTextString(m) }
func (*AidReasons) ProtoMessage()    {}
func (*AidReasons) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{1}
}
func (m *AidReasons) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AidReasons) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AidReasons.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AidReasons) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AidReasons.Merge(m, src)
}
func (m *AidReasons) XXX_Size() int {
	return m.Size()
}
func (m *AidReasons) XXX_DiscardUnknown() {
	xxx_messageInfo_AidReasons.DiscardUnknown(m)
}

var xxx_messageInfo_AidReasons proto.InternalMessageInfo

type ThemeDetail struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"name"`
	Icon                 string   `protobuf:"bytes,3,opt,name=Icon,proto3" json:"icon"`
	TopPhoto             string   `protobuf:"bytes,4,opt,name=TopPhoto,proto3" json:"top_photo"`
	BgImg                string   `protobuf:"bytes,5,opt,name=BgImg,proto3" json:"bg_img"`
	IsActivated          int64    `protobuf:"varint,6,opt,name=IsActivated,proto3" json:"is_activated"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThemeDetail) Reset()         { *m = ThemeDetail{} }
func (m *ThemeDetail) String() string { return proto.CompactTextString(m) }
func (*ThemeDetail) ProtoMessage()    {}
func (*ThemeDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{2}
}
func (m *ThemeDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThemeDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThemeDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThemeDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeDetail.Merge(m, src)
}
func (m *ThemeDetail) XXX_Size() int {
	return m.Size()
}
func (m *ThemeDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeDetail proto.InternalMessageInfo

type ThemeDetails struct {
	List                 []*ThemeDetail `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ThemeDetails) Reset()         { *m = ThemeDetails{} }
func (m *ThemeDetails) String() string { return proto.CompactTextString(m) }
func (*ThemeDetails) ProtoMessage()    {}
func (*ThemeDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{3}
}
func (m *ThemeDetails) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThemeDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThemeDetails.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ThemeDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeDetails.Merge(m, src)
}
func (m *ThemeDetails) XXX_Size() int {
	return m.Size()
}
func (m *ThemeDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeDetails proto.InternalMessageInfo

type Notice struct {
	Notice               string   `protobuf:"bytes,1,opt,name=Notice,proto3" json:"notice"`
	IsForbid             int64    `protobuf:"varint,2,opt,name=IsForbid,proto3" json:"is_forbid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notice) Reset()         { *m = Notice{} }
func (m *Notice) String() string { return proto.CompactTextString(m) }
func (*Notice) ProtoMessage()    {}
func (*Notice) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{4}
}
func (m *Notice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Notice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Notice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Notice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notice.Merge(m, src)
}
func (m *Notice) XXX_Size() int {
	return m.Size()
}
func (m *Notice) XXX_DiscardUnknown() {
	xxx_messageInfo_Notice.DiscardUnknown(m)
}

var xxx_messageInfo_Notice proto.InternalMessageInfo

type PhotoMall struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ProductName          string   `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name"`
	Price                int64    `protobuf:"varint,3,opt,name=price,proto3" json:"price"`
	IosPrice             int64    `protobuf:"varint,4,opt,name=ios_price,json=iosPrice,proto3" json:"ios_price"`
	CoinType             int64    `protobuf:"varint,5,opt,name=coin_type,json=coinType,proto3" json:"coin_type"`
	VipFree              int64    `protobuf:"varint,6,opt,name=vip_free,json=vipFree,proto3" json:"vip_free"`
	SImg                 string   `protobuf:"bytes,7,opt,name=s_img,json=sImg,proto3" json:"s_img"`
	LImg                 string   `protobuf:"bytes,8,opt,name=l_img,json=lImg,proto3" json:"l_img"`
	AndroidImg           string   `protobuf:"bytes,9,opt,name=android_img,json=androidImg,proto3" json:"android_img"`
	IphoneImg            string   `protobuf:"bytes,10,opt,name=iphone_img,json=iphoneImg,proto3" json:"iphone_img"`
	IpadImg              string   `protobuf:"bytes,11,opt,name=ipad_img,json=ipadImg,proto3" json:"ipad_img"`
	ThumbnailImg         string   `protobuf:"bytes,12,opt,name=thumbnail_img,json=thumbnailImg,proto3" json:"thumbnail_img"`
	SortNum              int64    `protobuf:"varint,13,opt,name=sort_num,json=sortNum,proto3" json:"product_name"`
	Type                 string   `protobuf:"bytes,14,opt,name=type,proto3" json:"type"`
	IsDisable            int64    `protobuf:"varint,15,opt,name=is_disable,json=isDisable,proto3" json:"is_disable"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoMall) Reset()         { *m = PhotoMall{} }
func (m *PhotoMall) String() string { return proto.CompactTextString(m) }
func (*PhotoMall) ProtoMessage()    {}
func (*PhotoMall) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{5}
}
func (m *PhotoMall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhotoMall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhotoMall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhotoMall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoMall.Merge(m, src)
}
func (m *PhotoMall) XXX_Size() int {
	return m.Size()
}
func (m *PhotoMall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoMall.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoMall proto.InternalMessageInfo

type TopPhotoArc struct {
	Aid                  int64                       `protobuf:"varint,1,opt,name=aid,proto3" json:"aid"`
	Mid                  int64                       `protobuf:"varint,2,opt,name=mid,proto3" json:"mid"`
	ImageUrl             string                      `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	Ctime                go_common_library_time.Time `protobuf:"varint,4,opt,name=ctime,proto3,casttype=go-common/library/time.Time" json:"ctime"`
	Mtime                go_common_library_time.Time `protobuf:"varint,5,opt,name=mtime,proto3,casttype=go-common/library/time.Time" json:"mtime"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TopPhotoArc) Reset()         { *m = TopPhotoArc{} }
func (m *TopPhotoArc) String() string { return proto.CompactTextString(m) }
func (*TopPhotoArc) ProtoMessage()    {}
func (*TopPhotoArc) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fcc84b9998d60d8, []int{6}
}
func (m *TopPhotoArc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopPhotoArc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopPhotoArc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopPhotoArc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopPhotoArc.Merge(m, src)
}
func (m *TopPhotoArc) XXX_Size() int {
	return m.Size()
}
func (m *TopPhotoArc) XXX_DiscardUnknown() {
	xxx_messageInfo_TopPhotoArc.DiscardUnknown(m)
}

var xxx_messageInfo_TopPhotoArc proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AidReason)(nil), "AidReason")
	proto.RegisterType((*AidReasons)(nil), "AidReasons")
	proto.RegisterType((*ThemeDetail)(nil), "ThemeDetail")
	proto.RegisterType((*ThemeDetails)(nil), "ThemeDetails")
	proto.RegisterType((*Notice)(nil), "Notice")
	proto.RegisterType((*PhotoMall)(nil), "PhotoMall")
	proto.RegisterType((*TopPhotoArc)(nil), "TopPhotoArc")
}

func init() { proto.RegisterFile("proto.proto", fileDescriptor_2fcc84b9998d60d8) }

var fileDescriptor_2fcc84b9998d60d8 = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x8b, 0xe3, 0x36,
	0x14, 0x1f, 0x4f, 0xe2, 0xc4, 0x7e, 0xc9, 0xec, 0xb6, 0x3e, 0x14, 0xf7, 0x0f, 0x76, 0xc8, 0x65,
	0x67, 0xdb, 0x4e, 0x66, 0xd9, 0x85, 0x1e, 0x0b, 0x09, 0x61, 0x21, 0xa5, 0x1d, 0x16, 0x91, 0x52,
	0xe8, 0xc5, 0xc8, 0xb6, 0xc6, 0x11, 0x58, 0x96, 0xb1, 0x9c, 0x81, 0xf9, 0x26, 0xfd, 0x48, 0x7b,
	0xdc, 0x4f, 0x60, 0xba, 0xe9, 0xcd, 0x97, 0xde, 0x7a, 0xe8, 0xa9, 0xe8, 0xc9, 0x71, 0x32, 0xd0,
	0xc3, 0x5e, 0xec, 0xa7, 0xdf, 0xef, 0xf7, 0xa4, 0xf7, 0x47, 0x4f, 0x30, 0x29, 0x2b, 0x59, 0xcb,
	0x05, 0x7e, 0xbf, 0xba, 0xc9, 0x78, 0xbd, 0xdb, 0xc7, 0x8b, 0x44, 0x8a, 0xdb, 0x4c, 0x66, 0xf2,
	0x16, 0xe1, 0x78, 0x7f, 0x8f, 0x2b, 0x5c, 0xa0, 0x65, 0xe4, 0xf3, 0x9f, 0xc0, 0x5d, 0xf2, 0x94,
	0x30, 0xaa, 0x64, 0xe1, 0x7d, 0x09, 0x83, 0x25, 0x4f, 0x7d, 0x6b, 0x66, 0x5d, 0x0f, 0x56, 0xe3,
	0xb6, 0x09, 0x07, 0x94, 0xa7, 0x44, 0x63, 0xde, 0x1c, 0x46, 0x46, 0xe4, 0x5f, 0xce, 0xac, 0x6b,
	0x77, 0x05, 0x6d, 0x13, 0x8e, 0x2a, 0x44, 0x48, 0xc7, 0xcc, 0xbf, 0x07, 0xe8, 0xf7, 0x52, 0x5e,
	0x00, 0xc3, 0x9f, 0xb9, 0xaa, 0x7d, 0x6b, 0x36, 0xb8, 0x9e, 0xbc, 0x86, 0x45, 0x4f, 0x11, 0xc4,
	0xe7, 0x07, 0x0b, 0x26, 0xdb, 0x1d, 0x13, 0x6c, 0xcd, 0x6a, 0xca, 0x73, 0xef, 0x0b, 0xb8, 0xdc,
	0xac, 0xbb, 0xb3, 0x47, 0x6d, 0x13, 0x5e, 0xf2, 0x94, 0x5c, 0x6e, 0xd6, 0xde, 0x37, 0x30, 0xbc,
	0xa3, 0x82, 0x75, 0xe7, 0x3a, 0x6d, 0x13, 0x0e, 0x0b, 0x2a, 0x18, 0x41, 0x54, 0xb3, 0x9b, 0x44,
	0x16, 0xfe, 0xe0, 0xc4, 0xf2, 0x44, 0x9f, 0xa1, 0x51, 0xef, 0x25, 0x38, 0x5b, 0x59, 0xbe, 0xdb,
	0xc9, 0x5a, 0xfa, 0x43, 0x54, 0x5c, 0xb5, 0x4d, 0xe8, 0xd6, 0xb2, 0x8c, 0x4a, 0x0d, 0x92, 0x9e,
	0xf6, 0x66, 0x60, 0xaf, 0xb2, 0x8d, 0xc8, 0x7c, 0xfb, 0x94, 0x5f, 0x9c, 0x45, 0x5c, 0x64, 0xc4,
	0x10, 0xde, 0x6b, 0x98, 0x6c, 0xd4, 0x32, 0xa9, 0xf9, 0x03, 0xad, 0x59, 0xea, 0x8f, 0x30, 0xd2,
	0xcf, 0xda, 0x26, 0x9c, 0x72, 0x15, 0xd1, 0x23, 0x4e, 0xce, 0x45, 0xf3, 0x57, 0x30, 0x3d, 0xcb,
	0x51, 0x79, 0xb3, 0x27, 0x45, 0x99, 0x2e, 0xce, 0xc8, 0xae, 0x2c, 0xbf, 0xc1, 0xe8, 0x4e, 0xd6,
	0x3c, 0x61, 0xba, 0xe4, 0xc6, 0xc2, 0xa2, 0x74, 0x21, 0x15, 0x88, 0x90, 0xa3, 0xe6, 0x25, 0x38,
	0x1b, 0xf5, 0x56, 0x56, 0x31, 0x4f, 0xb1, 0x40, 0x03, 0x93, 0x20, 0x57, 0xd1, 0x3d, 0x82, 0xa4,
	0xa7, 0xe7, 0xff, 0x0c, 0xc1, 0xc5, 0x54, 0x7f, 0xa1, 0x39, 0x56, 0xbb, 0xef, 0x74, 0x5f, 0x6d,
	0x9e, 0x7a, 0x6f, 0x60, 0x5a, 0x56, 0x32, 0xdd, 0x27, 0x75, 0x54, 0x9c, 0xaa, 0x8e, 0x59, 0x9e,
	0xe3, 0x64, 0xd2, 0xad, 0xb0, 0x09, 0x21, 0xd8, 0x65, 0xa5, 0x03, 0x1d, 0xe0, 0x7e, 0x6e, 0xdb,
	0x84, 0x06, 0x20, 0xe6, 0xe7, 0x7d, 0x0b, 0x2e, 0x97, 0x2a, 0x32, 0xa2, 0xe1, 0x59, 0x9c, 0x47,
	0x90, 0x38, 0x5c, 0xaa, 0x77, 0x47, 0x6d, 0x22, 0x79, 0x11, 0xd5, 0x8f, 0x25, 0xc3, 0x66, 0x74,
	0xda, 0x1e, 0x24, 0x8e, 0x36, 0xb7, 0x8f, 0x25, 0xf3, 0x5e, 0x80, 0xf3, 0xc0, 0xcb, 0xe8, 0xbe,
	0x62, 0xac, 0xeb, 0xc7, 0xb4, 0x6d, 0xc2, 0x1e, 0x23, 0xe3, 0x07, 0x5e, 0xbe, 0xad, 0x18, 0xf3,
	0x02, 0xb0, 0x95, 0xee, 0xa5, 0x3f, 0xc6, 0x7c, 0x30, 0x42, 0x04, 0xc8, 0x50, 0xe9, 0xde, 0x06,
	0x60, 0xe7, 0xc8, 0x3b, 0x27, 0x3e, 0x37, 0x7c, 0xae, 0xf9, 0x57, 0x30, 0xa1, 0x45, 0x5a, 0x49,
	0x9e, 0xa2, 0xca, 0x45, 0xd5, 0xf3, 0xb6, 0x09, 0xcf, 0x61, 0x02, 0xdd, 0x42, 0x7b, 0xdc, 0x00,
	0xf0, 0x72, 0x27, 0x0b, 0x86, 0x0e, 0x80, 0x0e, 0xcf, 0xda, 0x26, 0x3c, 0x43, 0x89, 0x6b, 0x6c,
	0x2d, 0x7f, 0x01, 0x0e, 0x2f, 0xa9, 0xd9, 0x7d, 0x82, 0x62, 0xcc, 0xe4, 0x88, 0x91, 0xb1, 0xb6,
	0xb4, 0xf0, 0x07, 0xb8, 0xaa, 0x77, 0x7b, 0x11, 0x17, 0x94, 0x9b, 0x88, 0xa7, 0xa8, 0xfe, 0xbc,
	0x6d, 0xc2, 0xa7, 0x04, 0x99, 0xf6, 0x4b, 0xed, 0xf7, 0x1d, 0x38, 0x4a, 0x56, 0x75, 0x54, 0xec,
	0x85, 0x7f, 0x75, 0xba, 0xba, 0x4f, 0x9a, 0x3a, 0xd6, 0x8a, 0xbb, 0xbd, 0xd0, 0x53, 0x85, 0xe5,
	0x7f, 0x76, 0x9a, 0x2a, 0xac, 0x3c, 0x7e, 0x31, 0x35, 0x15, 0xa5, 0x5c, 0xd1, 0x38, 0x67, 0xfe,
	0x73, 0xdc, 0xcc, 0xa4, 0xd6, 0xa3, 0xc4, 0xe5, 0x6a, 0x6d, 0xcc, 0xf9, 0xdf, 0x7a, 0xd0, 0xbb,
	0x31, 0x5b, 0x56, 0x89, 0x7e, 0x65, 0xe8, 0xff, 0xbc, 0x32, 0x94, 0xa7, 0x9a, 0x12, 0xfd, 0x4d,
	0x46, 0x4a, 0x68, 0x4a, 0xf0, 0x14, 0xaf, 0x90, 0xa0, 0x19, 0x8b, 0xf6, 0x55, 0xde, 0x4d, 0xbb,
	0xb9, 0x42, 0x47, 0x90, 0x38, 0x68, 0xfe, 0x5a, 0xe5, 0xde, 0x8f, 0x60, 0x27, 0x35, 0x17, 0xc7,
	0xab, 0x76, 0xad, 0xbb, 0x89, 0xc0, 0xbf, 0x4d, 0xf8, 0x75, 0x26, 0x6f, 0x12, 0x29, 0x84, 0x2c,
	0x6e, 0x73, 0x1e, 0x57, 0xb4, 0x7a, 0xbc, 0xd5, 0xcc, 0x62, 0xcb, 0x05, 0x23, 0x46, 0xa5, 0xfd,
	0x05, 0xfa, 0xdb, 0x27, 0x7f, 0xf1, 0x49, 0xfe, 0xa8, 0x5a, 0x85, 0xef, 0x3f, 0x06, 0x17, 0x1f,
	0x3e, 0x06, 0x17, 0xef, 0x0f, 0x81, 0xf5, 0xe1, 0x10, 0x58, 0x7f, 0x1e, 0x02, 0xeb, 0x8f, 0xbf,
	0x82, 0x8b, 0xdf, 0x6d, 0x21, 0x53, 0x96, 0xc7, 0x23, 0x7c, 0x7c, 0xdf, 0xfc, 0x17, 0x00, 0x00,
	0xff, 0xff, 0x25, 0x5b, 0x5a, 0x30, 0xba, 0x05, 0x00, 0x00,
}

func (m *AidReason) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AidReason) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AidReason) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintProto(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if m.Aid != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AidReasons) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AidReasons) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AidReasons) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProto(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ThemeDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThemeDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThemeDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsActivated != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.IsActivated))
		i--
		dAtA[i] = 0x30
	}
	if len(m.BgImg) > 0 {
		i -= len(m.BgImg)
		copy(dAtA[i:], m.BgImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.BgImg)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.TopPhoto) > 0 {
		i -= len(m.TopPhoto)
		copy(dAtA[i:], m.TopPhoto)
		i = encodeVarintProto(dAtA, i, uint64(len(m.TopPhoto)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintProto(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProto(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.ID != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ThemeDetails) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThemeDetails) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ThemeDetails) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProto(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Notice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Notice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Notice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsForbid != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.IsForbid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Notice) > 0 {
		i -= len(m.Notice)
		copy(dAtA[i:], m.Notice)
		i = encodeVarintProto(dAtA, i, uint64(len(m.Notice)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhotoMall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhotoMall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhotoMall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsDisable != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.IsDisable))
		i--
		dAtA[i] = 0x78
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintProto(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x72
	}
	if m.SortNum != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.SortNum))
		i--
		dAtA[i] = 0x68
	}
	if len(m.ThumbnailImg) > 0 {
		i -= len(m.ThumbnailImg)
		copy(dAtA[i:], m.ThumbnailImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.ThumbnailImg)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.IpadImg) > 0 {
		i -= len(m.IpadImg)
		copy(dAtA[i:], m.IpadImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.IpadImg)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.IphoneImg) > 0 {
		i -= len(m.IphoneImg)
		copy(dAtA[i:], m.IphoneImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.IphoneImg)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.AndroidImg) > 0 {
		i -= len(m.AndroidImg)
		copy(dAtA[i:], m.AndroidImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.AndroidImg)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.LImg) > 0 {
		i -= len(m.LImg)
		copy(dAtA[i:], m.LImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.LImg)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SImg) > 0 {
		i -= len(m.SImg)
		copy(dAtA[i:], m.SImg)
		i = encodeVarintProto(dAtA, i, uint64(len(m.SImg)))
		i--
		dAtA[i] = 0x3a
	}
	if m.VipFree != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.VipFree))
		i--
		dAtA[i] = 0x30
	}
	if m.CoinType != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.CoinType))
		i--
		dAtA[i] = 0x28
	}
	if m.IosPrice != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.IosPrice))
		i--
		dAtA[i] = 0x20
	}
	if m.Price != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProductName) > 0 {
		i -= len(m.ProductName)
		copy(dAtA[i:], m.ProductName)
		i = encodeVarintProto(dAtA, i, uint64(len(m.ProductName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopPhotoArc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopPhotoArc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopPhotoArc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mtime != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Mtime))
		i--
		dAtA[i] = 0x28
	}
	if m.Ctime != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Ctime))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintProto(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mid != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if m.Aid != 0 {
		i = encodeVarintProto(dAtA, i, uint64(m.Aid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintProto(dAtA []byte, offset int, v uint64) int {
	offset -= sovProto(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AidReason) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aid != 0 {
		n += 1 + sovProto(uint64(m.Aid))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AidReasons) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovProto(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThemeDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovProto(uint64(m.ID))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.TopPhoto)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.BgImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.IsActivated != 0 {
		n += 1 + sovProto(uint64(m.IsActivated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThemeDetails) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovProto(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Notice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Notice)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.IsForbid != 0 {
		n += 1 + sovProto(uint64(m.IsForbid))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhotoMall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProto(uint64(m.Id))
	}
	l = len(m.ProductName)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovProto(uint64(m.Price))
	}
	if m.IosPrice != 0 {
		n += 1 + sovProto(uint64(m.IosPrice))
	}
	if m.CoinType != 0 {
		n += 1 + sovProto(uint64(m.CoinType))
	}
	if m.VipFree != 0 {
		n += 1 + sovProto(uint64(m.VipFree))
	}
	l = len(m.SImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.LImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.AndroidImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.IphoneImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.IpadImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	l = len(m.ThumbnailImg)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.SortNum != 0 {
		n += 1 + sovProto(uint64(m.SortNum))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.IsDisable != 0 {
		n += 1 + sovProto(uint64(m.IsDisable))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopPhotoArc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aid != 0 {
		n += 1 + sovProto(uint64(m.Aid))
	}
	if m.Mid != 0 {
		n += 1 + sovProto(uint64(m.Mid))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovProto(uint64(l))
	}
	if m.Ctime != 0 {
		n += 1 + sovProto(uint64(m.Ctime))
	}
	if m.Mtime != 0 {
		n += 1 + sovProto(uint64(m.Mtime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProto(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProto(x uint64) (n int) {
	return sovProto(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AidReason) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AidReason: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AidReason: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AidReasons) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AidReasons: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AidReasons: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &AidReason{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThemeDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThemeDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThemeDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopPhoto", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopPhoto = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BgImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActivated", wireType)
			}
			m.IsActivated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsActivated |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThemeDetails) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThemeDetails: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThemeDetails: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ThemeDetail{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Notice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Notice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Notice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notice = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsForbid", wireType)
			}
			m.IsForbid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsForbid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhotoMall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhotoMall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhotoMall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosPrice", wireType)
			}
			m.IosPrice = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IosPrice |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinType", wireType)
			}
			m.CoinType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipFree", wireType)
			}
			m.VipFree = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipFree |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IphoneImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IphoneImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpadImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IpadImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThumbnailImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThumbnailImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SortNum", wireType)
			}
			m.SortNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SortNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDisable", wireType)
			}
			m.IsDisable = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsDisable |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopPhotoArc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopPhotoArc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopPhotoArc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			m.Aid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Aid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctime", wireType)
			}
			m.Ctime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ctime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mtime", wireType)
			}
			m.Mtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mtime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProto(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProto
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProto
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProto
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProto
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProto        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProto          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProto = fmt.Errorf("proto: unexpected end of group")
)
