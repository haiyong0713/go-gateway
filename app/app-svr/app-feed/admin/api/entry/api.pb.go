// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package entry

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	go_common_library_time "go-common/library/time"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OnlineStatus int32

const (
	Offline OnlineStatus = 0
	Online  OnlineStatus = 1
)

var OnlineStatus_name = map[int32]string{
	0: "Offline",
	1: "Online",
}

var OnlineStatus_value = map[string]int32{
	"Offline": 0,
	"Online":  1,
}

func (x OnlineStatus) String() string {
	return proto.EnumName(OnlineStatus_name, int32(x))
}

func (OnlineStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

// --------------------------- 请求和返回的定义 ----------------------------
type CreateEntryReq struct {
	EntryName            string                      `protobuf:"bytes,1,opt,name=entryName,proto3" json:"entry_name" validate:"required"`
	States               []*AppEntryState            `protobuf:"bytes,2,rep,name=states,proto3" json:"states" validate:"required"`
	Stime                go_common_library_time.Time `protobuf:"varint,3,opt,name=stime,proto3,casttype=go-common/library/time.Time" json:"stime" validate:"required"`
	Etime                go_common_library_time.Time `protobuf:"varint,4,opt,name=etime,proto3,casttype=go-common/library/time.Time" json:"etime" validate:"required"`
	Platforms            []*EffectivePlatform        `protobuf:"bytes,5,rep,name=platforms,proto3" json:"platforms" validate:"required"`
	CreatedBy            string                      `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"created_by" validate:"required"`
	TotalLoop            int32                       `protobuf:"varint,7,opt,name=totalLoop,proto3" json:"total_loop" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CreateEntryReq) Reset()         { *m = CreateEntryReq{} }
func (m *CreateEntryReq) String() string { return proto.CompactTextString(m) }
func (*CreateEntryReq) ProtoMessage()    {}
func (*CreateEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *CreateEntryReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateEntryReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEntryReq.Merge(m, src)
}
func (m *CreateEntryReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEntryReq proto.InternalMessageInfo

func (m *CreateEntryReq) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func (m *CreateEntryReq) GetStates() []*AppEntryState {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *CreateEntryReq) GetStime() go_common_library_time.Time {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *CreateEntryReq) GetEtime() go_common_library_time.Time {
	if m != nil {
		return m.Etime
	}
	return 0
}

func (m *CreateEntryReq) GetPlatforms() []*EffectivePlatform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *CreateEntryReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *CreateEntryReq) GetTotalLoop() int32 {
	if m != nil {
		return m.TotalLoop
	}
	return 0
}

type DeleteEntryReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEntryReq) Reset()         { *m = DeleteEntryReq{} }
func (m *DeleteEntryReq) String() string { return proto.CompactTextString(m) }
func (*DeleteEntryReq) ProtoMessage()    {}
func (*DeleteEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *DeleteEntryReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteEntryReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEntryReq.Merge(m, src)
}
func (m *DeleteEntryReq) XXX_Size() int {
	return m.Size()
}
func (m *DeleteEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEntryReq proto.InternalMessageInfo

func (m *DeleteEntryReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type EditEntryReq struct {
	Id                   int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id" validate:"required"`
	EntryName            string                      `protobuf:"bytes,2,opt,name=entryName,proto3" json:"entry_name" validate:"required"`
	States               []*AppEntryState            `protobuf:"bytes,3,rep,name=states,proto3" json:"states" validate:"required"`
	Stime                go_common_library_time.Time `protobuf:"varint,4,opt,name=stime,proto3,casttype=go-common/library/time.Time" json:"stime" validate:"required"`
	Etime                go_common_library_time.Time `protobuf:"varint,5,opt,name=etime,proto3,casttype=go-common/library/time.Time" json:"etime" validate:"required"`
	Platforms            []*EffectivePlatform        `protobuf:"bytes,6,rep,name=platforms,proto3" json:"platforms" validate:"required"`
	CreatedBy            string                      `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"created_by" validate:"required"`
	TotalLoop            int32                       `protobuf:"varint,8,opt,name=totalLoop,proto3" json:"total_loop" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EditEntryReq) Reset()         { *m = EditEntryReq{} }
func (m *EditEntryReq) String() string { return proto.CompactTextString(m) }
func (*EditEntryReq) ProtoMessage()    {}
func (*EditEntryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *EditEntryReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EditEntryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EditEntryReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EditEntryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditEntryReq.Merge(m, src)
}
func (m *EditEntryReq) XXX_Size() int {
	return m.Size()
}
func (m *EditEntryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditEntryReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditEntryReq proto.InternalMessageInfo

func (m *EditEntryReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EditEntryReq) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func (m *EditEntryReq) GetStates() []*AppEntryState {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *EditEntryReq) GetStime() go_common_library_time.Time {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *EditEntryReq) GetEtime() go_common_library_time.Time {
	if m != nil {
		return m.Etime
	}
	return 0
}

func (m *EditEntryReq) GetPlatforms() []*EffectivePlatform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *EditEntryReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *EditEntryReq) GetTotalLoop() int32 {
	if m != nil {
		return m.TotalLoop
	}
	return 0
}

type ToggleEntryOnlineStatusReq struct {
	Id                   int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id" validate:"required"`
	OnlineStatus         OnlineStatus `protobuf:"varint,2,opt,name=onlineStatus,proto3,enum=main.feed.admin.entry.api.OnlineStatus" json:"online_status" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ToggleEntryOnlineStatusReq) Reset()         { *m = ToggleEntryOnlineStatusReq{} }
func (m *ToggleEntryOnlineStatusReq) String() string { return proto.CompactTextString(m) }
func (*ToggleEntryOnlineStatusReq) ProtoMessage()    {}
func (*ToggleEntryOnlineStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *ToggleEntryOnlineStatusReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ToggleEntryOnlineStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ToggleEntryOnlineStatusReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ToggleEntryOnlineStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleEntryOnlineStatusReq.Merge(m, src)
}
func (m *ToggleEntryOnlineStatusReq) XXX_Size() int {
	return m.Size()
}
func (m *ToggleEntryOnlineStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleEntryOnlineStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleEntryOnlineStatusReq proto.InternalMessageInfo

func (m *ToggleEntryOnlineStatusReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ToggleEntryOnlineStatusReq) GetOnlineStatus() OnlineStatus {
	if m != nil {
		return m.OnlineStatus
	}
	return Offline
}

type GetEntryListReq struct {
	PageNum              int32    `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pn"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"ps"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEntryListReq) Reset()         { *m = GetEntryListReq{} }
func (m *GetEntryListReq) String() string { return proto.CompactTextString(m) }
func (*GetEntryListReq) ProtoMessage()    {}
func (*GetEntryListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *GetEntryListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEntryListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEntryListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEntryListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntryListReq.Merge(m, src)
}
func (m *GetEntryListReq) XXX_Size() int {
	return m.Size()
}
func (m *GetEntryListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntryListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntryListReq proto.InternalMessageInfo

func (m *GetEntryListReq) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *GetEntryListReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetEntryListRep struct {
	Page                 *Page       `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`
	Items                []*AppEntry `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetEntryListRep) Reset()         { *m = GetEntryListRep{} }
func (m *GetEntryListRep) String() string { return proto.CompactTextString(m) }
func (*GetEntryListRep) ProtoMessage()    {}
func (*GetEntryListRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *GetEntryListRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEntryListRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEntryListRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEntryListRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEntryListRep.Merge(m, src)
}
func (m *GetEntryListRep) XXX_Size() int {
	return m.Size()
}
func (m *GetEntryListRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEntryListRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetEntryListRep proto.InternalMessageInfo

func (m *GetEntryListRep) GetPage() *Page {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *GetEntryListRep) GetItems() []*AppEntry {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetAppEntryStateReq struct {
	// 系统平台
	Plat int32 `protobuf:"varint,1,opt,name=plat,proto3" json:"plat" validate:"required"`
	// 端版本
	Build                int32    `protobuf:"varint,2,opt,name=build,proto3" json:"build" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppEntryStateReq) Reset()         { *m = GetAppEntryStateReq{} }
func (m *GetAppEntryStateReq) String() string { return proto.CompactTextString(m) }
func (*GetAppEntryStateReq) ProtoMessage()    {}
func (*GetAppEntryStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *GetAppEntryStateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAppEntryStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAppEntryStateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAppEntryStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppEntryStateReq.Merge(m, src)
}
func (m *GetAppEntryStateReq) XXX_Size() int {
	return m.Size()
}
func (m *GetAppEntryStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppEntryStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppEntryStateReq proto.InternalMessageInfo

func (m *GetAppEntryStateReq) GetPlat() int32 {
	if m != nil {
		return m.Plat
	}
	return 0
}

func (m *GetAppEntryStateReq) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

type GetAppEntryStateRep struct {
	// 常驻入口状态id
	StateID int32 `protobuf:"varint,1,opt,name=stateID,json=state_id,proto3" json:"state_id"`
	// 常驻入口状态名
	StateName string `protobuf:"bytes,2,opt,name=stateName,json=state_name,proto3" json:"state_name"`
	// 跳转url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 静态icon，兜底
	StaticIcon string `protobuf:"bytes,4,opt,name=staticIcon,json=static_icon,proto3" json:"static_icon"`
	// 动态icon
	DynamicIcon string `protobuf:"bytes,5,opt,name=dynamicIcon,json=dynamic_icon,proto3" json:"dynamic_icon"`
	// 动态icon循环次数
	LoopCount int32 `protobuf:"varint,6,opt,name=loopCount,json=loop_count,proto3" json:"loop_count"`
	// 状态配置生效时间
	STime go_common_library_time.Time `protobuf:"varint,7,opt,name=sTime,json=stime,proto3,casttype=go-common/library/time.Time" json:"stime"`
	// 入口总配置结束时间
	ETime go_common_library_time.Time `protobuf:"varint,8,opt,name=eTime,json=etime,proto3,casttype=go-common/library/time.Time" json:"etime"`
	// 入口名称
	EntryName string `protobuf:"bytes,9,opt,name=entryName,json=entry_name,proto3" json:"entry_name"`
	// 时间配置ID
	ID                   int32    `protobuf:"varint,10,opt,name=ID,json=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppEntryStateRep) Reset()         { *m = GetAppEntryStateRep{} }
func (m *GetAppEntryStateRep) String() string { return proto.CompactTextString(m) }
func (*GetAppEntryStateRep) ProtoMessage()    {}
func (*GetAppEntryStateRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *GetAppEntryStateRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAppEntryStateRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAppEntryStateRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAppEntryStateRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppEntryStateRep.Merge(m, src)
}
func (m *GetAppEntryStateRep) XXX_Size() int {
	return m.Size()
}
func (m *GetAppEntryStateRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppEntryStateRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppEntryStateRep proto.InternalMessageInfo

func (m *GetAppEntryStateRep) GetStateID() int32 {
	if m != nil {
		return m.StateID
	}
	return 0
}

func (m *GetAppEntryStateRep) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *GetAppEntryStateRep) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetAppEntryStateRep) GetStaticIcon() string {
	if m != nil {
		return m.StaticIcon
	}
	return ""
}

func (m *GetAppEntryStateRep) GetDynamicIcon() string {
	if m != nil {
		return m.DynamicIcon
	}
	return ""
}

func (m *GetAppEntryStateRep) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *GetAppEntryStateRep) GetSTime() go_common_library_time.Time {
	if m != nil {
		return m.STime
	}
	return 0
}

func (m *GetAppEntryStateRep) GetETime() go_common_library_time.Time {
	if m != nil {
		return m.ETime
	}
	return 0
}

func (m *GetAppEntryStateRep) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func (m *GetAppEntryStateRep) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type SetNextStateReq struct {
	EntryID              int32                       `protobuf:"varint,1,opt,name=entryID,proto3" json:"entry_id" validate:"required"`
	StateID              int32                       `protobuf:"varint,2,opt,name=stateID,proto3" json:"state_id" validate:"required"`
	Stime                go_common_library_time.Time `protobuf:"varint,3,opt,name=stime,proto3,casttype=go-common/library/time.Time" json:"stime" validate:"required"`
	CreatedBy            string                      `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"created_by" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SetNextStateReq) Reset()         { *m = SetNextStateReq{} }
func (m *SetNextStateReq) String() string { return proto.CompactTextString(m) }
func (*SetNextStateReq) ProtoMessage()    {}
func (*SetNextStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *SetNextStateReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetNextStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetNextStateReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetNextStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNextStateReq.Merge(m, src)
}
func (m *SetNextStateReq) XXX_Size() int {
	return m.Size()
}
func (m *SetNextStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNextStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetNextStateReq proto.InternalMessageInfo

func (m *SetNextStateReq) GetEntryID() int32 {
	if m != nil {
		return m.EntryID
	}
	return 0
}

func (m *SetNextStateReq) GetStateID() int32 {
	if m != nil {
		return m.StateID
	}
	return 0
}

func (m *SetNextStateReq) GetStime() go_common_library_time.Time {
	if m != nil {
		return m.Stime
	}
	return 0
}

func (m *SetNextStateReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

type GetTimeSettingListReq struct {
	EntryID              int32    `protobuf:"varint,1,opt,name=entryID,proto3" json:"entry_id" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeSettingListReq) Reset()         { *m = GetTimeSettingListReq{} }
func (m *GetTimeSettingListReq) String() string { return proto.CompactTextString(m) }
func (*GetTimeSettingListReq) ProtoMessage()    {}
func (*GetTimeSettingListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}
func (m *GetTimeSettingListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTimeSettingListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTimeSettingListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTimeSettingListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeSettingListReq.Merge(m, src)
}
func (m *GetTimeSettingListReq) XXX_Size() int {
	return m.Size()
}
func (m *GetTimeSettingListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeSettingListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeSettingListReq proto.InternalMessageInfo

func (m *GetTimeSettingListReq) GetEntryID() int32 {
	if m != nil {
		return m.EntryID
	}
	return 0
}

type GetTimeSettingListRep struct {
	Items                []*AppEntryTimeSetting `protobuf:"bytes,1,rep,name=items,proto3" json:"items" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetTimeSettingListRep) Reset()         { *m = GetTimeSettingListRep{} }
func (m *GetTimeSettingListRep) String() string { return proto.CompactTextString(m) }
func (*GetTimeSettingListRep) ProtoMessage()    {}
func (*GetTimeSettingListRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}
func (m *GetTimeSettingListRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTimeSettingListRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTimeSettingListRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTimeSettingListRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeSettingListRep.Merge(m, src)
}
func (m *GetTimeSettingListRep) XXX_Size() int {
	return m.Size()
}
func (m *GetTimeSettingListRep) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeSettingListRep.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeSettingListRep proto.InternalMessageInfo

func (m *GetTimeSettingListRep) GetItems() []*AppEntryTimeSetting {
	if m != nil {
		return m.Items
	}
	return nil
}

// --------------------------- 调用对象和枚举类型的定义 ----------------------------
type AppEntry struct {
	Id                   int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	EntryName            string                      `protobuf:"bytes,2,opt,name=entryName,proto3" json:"entry_name"`
	OnlineStatus         OnlineStatus                `protobuf:"varint,3,opt,name=onlineStatus,proto3,enum=main.feed.admin.entry.api.OnlineStatus" json:"online_status"`
	States               []*AppEntryState            `protobuf:"bytes,4,rep,name=states,proto3" json:"states"`
	STime                go_common_library_time.Time `protobuf:"varint,5,opt,name=sTime,proto3,casttype=go-common/library/time.Time" json:"stime"`
	ETime                go_common_library_time.Time `protobuf:"varint,6,opt,name=eTime,proto3,casttype=go-common/library/time.Time" json:"etime"`
	Platforms            []*EffectivePlatform        `protobuf:"bytes,7,rep,name=platforms,proto3" json:"platforms"`
	CreatedBy            string                      `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"created_by"`
	CurrentState         int32                       `protobuf:"varint,9,opt,name=currentState,proto3" json:"current_state"`
	TotalLoop            int32                       `protobuf:"varint,10,opt,name=totalLoop,proto3" json:"total_loop"`
	SentLoop             int32                       `protobuf:"varint,11,opt,name=sentLoop,proto3" json:"sent_loop"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AppEntry) Reset()         { *m = AppEntry{} }
func (m *AppEntry) String() string { return proto.CompactTextString(m) }
func (*AppEntry) ProtoMessage()    {}
func (*AppEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}
func (m *AppEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppEntry.Merge(m, src)
}
func (m *AppEntry) XXX_Size() int {
	return m.Size()
}
func (m *AppEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_AppEntry.DiscardUnknown(m)
}

var xxx_messageInfo_AppEntry proto.InternalMessageInfo

func (m *AppEntry) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppEntry) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func (m *AppEntry) GetOnlineStatus() OnlineStatus {
	if m != nil {
		return m.OnlineStatus
	}
	return Offline
}

func (m *AppEntry) GetStates() []*AppEntryState {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *AppEntry) GetSTime() go_common_library_time.Time {
	if m != nil {
		return m.STime
	}
	return 0
}

func (m *AppEntry) GetETime() go_common_library_time.Time {
	if m != nil {
		return m.ETime
	}
	return 0
}

func (m *AppEntry) GetPlatforms() []*EffectivePlatform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *AppEntry) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AppEntry) GetCurrentState() int32 {
	if m != nil {
		return m.CurrentState
	}
	return 0
}

func (m *AppEntry) GetTotalLoop() int32 {
	if m != nil {
		return m.TotalLoop
	}
	return 0
}

func (m *AppEntry) GetSentLoop() int32 {
	if m != nil {
		return m.SentLoop
	}
	return 0
}

// 单独状态配置
type AppEntryState struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	StateName            string   `protobuf:"bytes,2,opt,name=stateName,proto3" json:"state_name"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	StaticIcon           string   `protobuf:"bytes,4,opt,name=staticIcon,proto3" json:"static_icon"`
	DynamicIcon          string   `protobuf:"bytes,5,opt,name=dynamicIcon,proto3" json:"dynamic_icon"`
	LoopCount            int32    `protobuf:"varint,6,opt,name=loopCount,proto3" json:"loop_count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppEntryState) Reset()         { *m = AppEntryState{} }
func (m *AppEntryState) String() string { return proto.CompactTextString(m) }
func (*AppEntryState) ProtoMessage()    {}
func (*AppEntryState) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}
func (m *AppEntryState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppEntryState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppEntryState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppEntryState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppEntryState.Merge(m, src)
}
func (m *AppEntryState) XXX_Size() int {
	return m.Size()
}
func (m *AppEntryState) XXX_DiscardUnknown() {
	xxx_messageInfo_AppEntryState.DiscardUnknown(m)
}

var xxx_messageInfo_AppEntryState proto.InternalMessageInfo

func (m *AppEntryState) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppEntryState) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *AppEntryState) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AppEntryState) GetStaticIcon() string {
	if m != nil {
		return m.StaticIcon
	}
	return ""
}

func (m *AppEntryState) GetDynamicIcon() string {
	if m != nil {
		return m.DynamicIcon
	}
	return ""
}

func (m *AppEntryState) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

type AppEntryTimeSetting struct {
	Id                   int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	StateName            string                      `protobuf:"bytes,2,opt,name=stateName,proto3" json:"state_name"`
	EntryId              int32                       `protobuf:"varint,3,opt,name=entryId,proto3" json:"entry_id"`
	StateId              int32                       `protobuf:"varint,4,opt,name=stateId,proto3" json:"state_id"`
	STime                go_common_library_time.Time `protobuf:"varint,5,opt,name=sTime,proto3,casttype=go-common/library/time.Time" json:"stime"`
	CreatedBy            string                      `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"created_by"`
	PushTime             go_common_library_time.Time `protobuf:"varint,7,opt,name=pushTime,proto3,casttype=go-common/library/time.Time" json:"push_time"`
	CTime                go_common_library_time.Time `protobuf:"varint,8,opt,name=cTime,proto3,casttype=go-common/library/time.Time" json:"ctime"`
	IsDeprecated         int32                       `protobuf:"varint,9,opt,name=isDeprecated,proto3" json:"is_deprecated"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AppEntryTimeSetting) Reset()         { *m = AppEntryTimeSetting{} }
func (m *AppEntryTimeSetting) String() string { return proto.CompactTextString(m) }
func (*AppEntryTimeSetting) ProtoMessage()    {}
func (*AppEntryTimeSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}
func (m *AppEntryTimeSetting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppEntryTimeSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppEntryTimeSetting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppEntryTimeSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppEntryTimeSetting.Merge(m, src)
}
func (m *AppEntryTimeSetting) XXX_Size() int {
	return m.Size()
}
func (m *AppEntryTimeSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_AppEntryTimeSetting.DiscardUnknown(m)
}

var xxx_messageInfo_AppEntryTimeSetting proto.InternalMessageInfo

func (m *AppEntryTimeSetting) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AppEntryTimeSetting) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *AppEntryTimeSetting) GetEntryId() int32 {
	if m != nil {
		return m.EntryId
	}
	return 0
}

func (m *AppEntryTimeSetting) GetStateId() int32 {
	if m != nil {
		return m.StateId
	}
	return 0
}

func (m *AppEntryTimeSetting) GetSTime() go_common_library_time.Time {
	if m != nil {
		return m.STime
	}
	return 0
}

func (m *AppEntryTimeSetting) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AppEntryTimeSetting) GetPushTime() go_common_library_time.Time {
	if m != nil {
		return m.PushTime
	}
	return 0
}

func (m *AppEntryTimeSetting) GetCTime() go_common_library_time.Time {
	if m != nil {
		return m.CTime
	}
	return 0
}

func (m *AppEntryTimeSetting) GetIsDeprecated() int32 {
	if m != nil {
		return m.IsDeprecated
	}
	return 0
}

type EffectivePlatform struct {
	// 生效平台
	Platform int32 `protobuf:"varint,1,opt,name=platform,proto3" json:"plat" validate:"required"`
	// 版本运算符
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"conditions" validate:"required"`
	// 平台版本
	Build                int32    `protobuf:"varint,3,opt,name=build,proto3" json:"build" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EffectivePlatform) Reset()         { *m = EffectivePlatform{} }
func (m *EffectivePlatform) String() string { return proto.CompactTextString(m) }
func (*EffectivePlatform) ProtoMessage()    {}
func (*EffectivePlatform) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}
func (m *EffectivePlatform) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EffectivePlatform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EffectivePlatform.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EffectivePlatform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EffectivePlatform.Merge(m, src)
}
func (m *EffectivePlatform) XXX_Size() int {
	return m.Size()
}
func (m *EffectivePlatform) XXX_DiscardUnknown() {
	xxx_messageInfo_EffectivePlatform.DiscardUnknown(m)
}

var xxx_messageInfo_EffectivePlatform proto.InternalMessageInfo

func (m *EffectivePlatform) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *EffectivePlatform) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *EffectivePlatform) GetBuild() int32 {
	if m != nil {
		return m.Build
	}
	return 0
}

type Page struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	PageNum              int32    `protobuf:"varint,2,opt,name=pageNum,proto3" json:"num"`
	PageSize             int32    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Page) Reset()         { *m = Page{} }
func (m *Page) String() string { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()    {}
func (*Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}
func (m *Page) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Page.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Page.Merge(m, src)
}
func (m *Page) XXX_Size() int {
	return m.Size()
}
func (m *Page) XXX_DiscardUnknown() {
	xxx_messageInfo_Page.DiscardUnknown(m)
}

var xxx_messageInfo_Page proto.InternalMessageInfo

func (m *Page) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Page) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *Page) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type AppEntryForDataBus struct {
	// 常驻入口状态id
	StateID int32 `protobuf:"varint,1,opt,name=stateID,json=state_id,proto3" json:"state_id"`
	// 常驻入口状态名
	StateName string `protobuf:"bytes,2,opt,name=stateName,json=state_name,proto3" json:"state_name"`
	// 跳转url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	// 静态icon，兜底
	StaticIcon string `protobuf:"bytes,4,opt,name=staticIcon,json=static_icon,proto3" json:"static_icon"`
	// 动态icon
	DynamicIcon string `protobuf:"bytes,5,opt,name=dynamicIcon,json=dynamic_icon,proto3" json:"dynamic_icon"`
	// 动态icon循环次数
	LoopCount int32 `protobuf:"varint,6,opt,name=loopCount,json=loop_count,proto3" json:"loop_count"`
	// 状态配置生效时间
	STime go_common_library_time.Time `protobuf:"varint,7,opt,name=sTime,json=stime,proto3,casttype=go-common/library/time.Time" json:"stime"`
	// 入口总配置结束时间
	ETime go_common_library_time.Time `protobuf:"varint,8,opt,name=eTime,json=etime,proto3,casttype=go-common/library/time.Time" json:"etime"`
	// 生效平台
	Platforms []*EffectivePlatform `protobuf:"bytes,9,rep,name=platforms,proto3" json:"platforms"`
	// 时间配置ID
	ID int32 `protobuf:"varint,10,opt,name=ID,json=id,proto3" json:"id"`
	// 入口名称
	EntryName            string   `protobuf:"bytes,11,opt,name=entryName,json=entry_name,proto3" json:"entry_name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppEntryForDataBus) Reset()         { *m = AppEntryForDataBus{} }
func (m *AppEntryForDataBus) String() string { return proto.CompactTextString(m) }
func (*AppEntryForDataBus) ProtoMessage()    {}
func (*AppEntryForDataBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}
func (m *AppEntryForDataBus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppEntryForDataBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppEntryForDataBus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppEntryForDataBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppEntryForDataBus.Merge(m, src)
}
func (m *AppEntryForDataBus) XXX_Size() int {
	return m.Size()
}
func (m *AppEntryForDataBus) XXX_DiscardUnknown() {
	xxx_messageInfo_AppEntryForDataBus.DiscardUnknown(m)
}

var xxx_messageInfo_AppEntryForDataBus proto.InternalMessageInfo

func (m *AppEntryForDataBus) GetStateID() int32 {
	if m != nil {
		return m.StateID
	}
	return 0
}

func (m *AppEntryForDataBus) GetStateName() string {
	if m != nil {
		return m.StateName
	}
	return ""
}

func (m *AppEntryForDataBus) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AppEntryForDataBus) GetStaticIcon() string {
	if m != nil {
		return m.StaticIcon
	}
	return ""
}

func (m *AppEntryForDataBus) GetDynamicIcon() string {
	if m != nil {
		return m.DynamicIcon
	}
	return ""
}

func (m *AppEntryForDataBus) GetLoopCount() int32 {
	if m != nil {
		return m.LoopCount
	}
	return 0
}

func (m *AppEntryForDataBus) GetSTime() go_common_library_time.Time {
	if m != nil {
		return m.STime
	}
	return 0
}

func (m *AppEntryForDataBus) GetETime() go_common_library_time.Time {
	if m != nil {
		return m.ETime
	}
	return 0
}

func (m *AppEntryForDataBus) GetPlatforms() []*EffectivePlatform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *AppEntryForDataBus) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *AppEntryForDataBus) GetEntryName() string {
	if m != nil {
		return m.EntryName
	}
	return ""
}

func init() {
	proto.RegisterEnum("main.feed.admin.entry.api.OnlineStatus", OnlineStatus_name, OnlineStatus_value)
	proto.RegisterType((*CreateEntryReq)(nil), "main.feed.admin.entry.api.CreateEntryReq")
	proto.RegisterType((*DeleteEntryReq)(nil), "main.feed.admin.entry.api.DeleteEntryReq")
	proto.RegisterType((*EditEntryReq)(nil), "main.feed.admin.entry.api.EditEntryReq")
	proto.RegisterType((*ToggleEntryOnlineStatusReq)(nil), "main.feed.admin.entry.api.ToggleEntryOnlineStatusReq")
	proto.RegisterType((*GetEntryListReq)(nil), "main.feed.admin.entry.api.GetEntryListReq")
	proto.RegisterType((*GetEntryListRep)(nil), "main.feed.admin.entry.api.GetEntryListRep")
	proto.RegisterType((*GetAppEntryStateReq)(nil), "main.feed.admin.entry.api.GetAppEntryStateReq")
	proto.RegisterType((*GetAppEntryStateRep)(nil), "main.feed.admin.entry.api.GetAppEntryStateRep")
	proto.RegisterType((*SetNextStateReq)(nil), "main.feed.admin.entry.api.SetNextStateReq")
	proto.RegisterType((*GetTimeSettingListReq)(nil), "main.feed.admin.entry.api.GetTimeSettingListReq")
	proto.RegisterType((*GetTimeSettingListRep)(nil), "main.feed.admin.entry.api.GetTimeSettingListRep")
	proto.RegisterType((*AppEntry)(nil), "main.feed.admin.entry.api.AppEntry")
	proto.RegisterType((*AppEntryState)(nil), "main.feed.admin.entry.api.AppEntryState")
	proto.RegisterType((*AppEntryTimeSetting)(nil), "main.feed.admin.entry.api.AppEntryTimeSetting")
	proto.RegisterType((*EffectivePlatform)(nil), "main.feed.admin.entry.api.EffectivePlatform")
	proto.RegisterType((*Page)(nil), "main.feed.admin.entry.api.Page")
	proto.RegisterType((*AppEntryForDataBus)(nil), "main.feed.admin.entry.api.AppEntryForDataBus")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcf, 0x6f, 0x13, 0xc7,
	0x17, 0xc7, 0x3f, 0xd6, 0x3f, 0x9e, 0x4d, 0x08, 0x83, 0xbe, 0x5f, 0x85, 0xa0, 0x66, 0xc3, 0x42,
	0x4b, 0x40, 0x89, 0x83, 0x82, 0xe0, 0xd0, 0x0a, 0x50, 0x4d, 0x52, 0x8a, 0x14, 0x41, 0xb4, 0xa1,
	0xad, 0x5a, 0x55, 0xb5, 0x36, 0xde, 0xb1, 0x19, 0xc9, 0xfb, 0x03, 0xef, 0x18, 0x11, 0x2e, 0x95,
	0xda, 0xbf, 0xa0, 0x97, 0xf6, 0x8f, 0xe8, 0x5f, 0xd0, 0x53, 0xa5, 0x9e, 0xb8, 0x54, 0xe2, 0xdc,
	0x83, 0x55, 0x50, 0x7b, 0xf1, 0xb1, 0xc7, 0x9e, 0xaa, 0x79, 0xe3, 0xdd, 0x9d, 0x75, 0xd8, 0xc5,
	0x4e, 0x00, 0xf5, 0xd0, 0x8b, 0xbd, 0xfb, 0xe6, 0x7d, 0xde, 0xbc, 0x9d, 0x79, 0x3f, 0x3e, 0x33,
	0x50, 0xb5, 0x7c, 0xd6, 0xf0, 0xfb, 0x1e, 0xf7, 0xc8, 0x69, 0xc7, 0x62, 0x6e, 0xa3, 0x43, 0xa9,
	0xdd, 0xb0, 0x6c, 0x87, 0xb9, 0x0d, 0xea, 0xf2, 0xfe, 0x7e, 0xc3, 0xf2, 0xd9, 0xe2, 0x5a, 0x97,
	0xf1, 0x07, 0x83, 0xbd, 0x46, 0xdb, 0x73, 0xd6, 0xbb, 0x5e, 0xd7, 0x5b, 0x47, 0xc4, 0xde, 0xa0,
	0x83, 0x6f, 0xf8, 0x82, 0x4f, 0xd2, 0xd2, 0xe2, 0x99, 0xae, 0xe7, 0x75, 0x7b, 0x34, 0xd6, 0xa2,
	0x8e, 0xcf, 0xf7, 0xe5, 0xa0, 0xf1, 0x47, 0x11, 0xe6, 0x6e, 0xf5, 0xa9, 0xc5, 0xe9, 0x96, 0xb0,
	0x6f, 0xd2, 0x87, 0xe4, 0x16, 0x54, 0x71, 0xae, 0xbb, 0x96, 0x43, 0x17, 0x72, 0xcb, 0xb9, 0x95,
	0x6a, 0xf3, 0xdd, 0xd1, 0x50, 0x07, 0x14, 0xb6, 0x5c, 0xcb, 0xa1, 0x7f, 0x0d, 0xf5, 0x53, 0x8f,
	0xac, 0x1e, 0xb3, 0x2d, 0x4e, 0xdf, 0x37, 0xfa, 0xf4, 0xe1, 0x80, 0xf5, 0xa9, 0x6d, 0x98, 0x31,
	0x8e, 0xb4, 0xa1, 0x14, 0x70, 0x8b, 0xd3, 0x60, 0x21, 0xbf, 0x5c, 0x58, 0xa9, 0x6d, 0xac, 0x34,
	0x52, 0xbf, 0xa7, 0xf1, 0xa1, 0xef, 0xe3, 0xe4, 0xbb, 0x02, 0xd0, 0x3c, 0x3b, 0x1a, 0xea, 0x63,
	0x6c, 0xda, 0x3c, 0xe3, 0x61, 0xf2, 0x09, 0x68, 0x01, 0x67, 0x0e, 0x5d, 0x28, 0x2c, 0xe7, 0x56,
	0x0a, 0xcd, 0x9b, 0xa3, 0xa1, 0x2e, 0x05, 0x29, 0xc0, 0xbf, 0x87, 0xfa, 0x99, 0xae, 0xb7, 0xd6,
	0xf6, 0x1c, 0xc7, 0x73, 0xd7, 0x7b, 0x6c, 0xaf, 0x6f, 0xf5, 0xf7, 0xd7, 0x05, 0xa0, 0x71, 0x9f,
	0x39, 0xd4, 0x94, 0x60, 0x61, 0x96, 0xa2, 0xd9, 0x62, 0x6c, 0x96, 0x1e, 0xc5, 0x2c, 0x82, 0x89,
	0x0f, 0x55, 0xbf, 0x67, 0xf1, 0x8e, 0xd7, 0x77, 0x82, 0x05, 0x0d, 0x57, 0x65, 0x35, 0x63, 0x55,
	0xb6, 0x3a, 0x1d, 0xda, 0xe6, 0xec, 0x11, 0xdd, 0x19, 0x83, 0x9a, 0xe7, 0x47, 0x43, 0x3d, 0x36,
	0x91, 0xba, 0x09, 0x91, 0x86, 0xd8, 0xc9, 0x36, 0xee, 0xad, 0xdd, 0xdc, 0x5f, 0x28, 0xc5, 0x3b,
	0x39, 0x16, 0xb6, 0xf6, 0xf6, 0x53, 0x8d, 0x44, 0x38, 0x61, 0x84, 0x7b, 0xdc, 0xea, 0x6d, 0x7b,
	0x9e, 0xbf, 0x50, 0x5e, 0xce, 0xad, 0x68, 0xd2, 0x08, 0x0a, 0x5b, 0x3d, 0xcf, 0xf3, 0x53, 0x8d,
	0x44, 0x38, 0xe3, 0x26, 0xcc, 0x6d, 0xd2, 0x1e, 0x55, 0xa2, 0x6c, 0x0d, 0xf2, 0xcc, 0xc6, 0xf0,
	0xd2, 0x9a, 0xef, 0x8c, 0x86, 0x7a, 0x9e, 0xd9, 0x69, 0x76, 0xf2, 0xcc, 0x36, 0xbe, 0xd3, 0xa0,
	0xbe, 0x65, 0x33, 0x7e, 0x48, 0x7c, 0x32, 0xa8, 0xf3, 0x47, 0x0e, 0xea, 0xc2, 0x5b, 0x08, 0xea,
	0xe2, 0x9b, 0x09, 0x6a, 0xed, 0xcd, 0x05, 0x75, 0xe9, 0xad, 0x07, 0x75, 0xf9, 0x75, 0x04, 0x75,
	0xe5, 0x90, 0x41, 0xfd, 0x4b, 0x0e, 0x16, 0xef, 0x7b, 0xdd, 0x6e, 0x4f, 0x46, 0xf5, 0x3d, 0xb7,
	0xc7, 0x5c, 0x2a, 0xf6, 0x7b, 0x10, 0x1c, 0x22, 0x42, 0x07, 0x50, 0xf7, 0x14, 0x0b, 0x18, 0xa4,
	0x73, 0x1b, 0x17, 0x32, 0x16, 0x53, 0x9d, 0xb0, 0xb9, 0x32, 0x1a, 0xea, 0xc7, 0xa5, 0x81, 0x56,
	0x80, 0xa2, 0xb4, 0xc9, 0x12, 0xd3, 0x18, 0x9f, 0xc1, 0x89, 0xdb, 0x54, 0xa6, 0xd5, 0x36, 0x0b,
	0xb8, 0x70, 0x7c, 0x19, 0xca, 0xbe, 0xd5, 0xa5, 0x77, 0x07, 0xce, 0xd8, 0xfb, 0x92, 0xf0, 0xde,
	0x77, 0xcd, 0x50, 0x4c, 0x0c, 0xa8, 0x88, 0xc7, 0x5d, 0xf6, 0x44, 0x26, 0x53, 0xa8, 0x12, 0x98,
	0x91, 0xdc, 0xf8, 0x3e, 0x37, 0x69, 0xd9, 0x27, 0xd7, 0xa1, 0x28, 0xc6, 0xd1, 0x6c, 0x6d, 0x43,
	0xcf, 0xf8, 0xb6, 0x1d, 0xab, 0x4b, 0x9b, 0x95, 0xd1, 0x50, 0x47, 0x80, 0x89, 0xbf, 0x64, 0x13,
	0x34, 0xc6, 0xa9, 0x13, 0xf6, 0x94, 0x73, 0x53, 0xa4, 0x5f, 0xb3, 0x2a, 0x02, 0x1d, 0x51, 0xa6,
	0xfc, 0x33, 0xbe, 0xc9, 0xc1, 0xa9, 0xdb, 0x94, 0x27, 0x12, 0x54, 0x7c, 0xf6, 0x15, 0x28, 0x8a,
	0x28, 0x1b, 0x7f, 0xb3, 0x8e, 0x73, 0xf7, 0x2c, 0x9e, 0xb6, 0x8c, 0x38, 0x48, 0xae, 0x81, 0xb6,
	0x37, 0x60, 0x3d, 0x7b, 0xbc, 0x0c, 0xcb, 0x62, 0x36, 0x14, 0xa4, 0xc1, 0xe4, 0xa8, 0xf1, 0x67,
	0xe1, 0x65, 0x4e, 0xf8, 0xe4, 0x02, 0x94, 0xb1, 0x0e, 0xdc, 0xd9, 0x1c, 0xfb, 0x51, 0x1f, 0x0d,
	0xf5, 0x0a, 0x8a, 0x5a, 0xcc, 0x36, 0xa3, 0x27, 0xb2, 0x06, 0x55, 0x7c, 0x56, 0x0a, 0xda, 0x9c,
	0x88, 0x60, 0xa9, 0x20, 0x0a, 0x9a, 0xa9, 0x3c, 0x93, 0xd3, 0x50, 0x18, 0xf4, 0x7b, 0xd8, 0x28,
	0xab, 0xcd, 0xf2, 0x68, 0xa8, 0x8b, 0x57, 0x53, 0xfc, 0x90, 0xcb, 0x80, 0x8a, 0xac, 0x7d, 0xa7,
	0xed, 0xb9, 0x58, 0x75, 0xaa, 0xcd, 0x13, 0xa3, 0xa1, 0x5e, 0x93, 0xd2, 0x16, 0x6b, 0x7b, 0xae,
	0xa9, 0xbe, 0x90, 0x2b, 0x50, 0xb3, 0xf7, 0x5d, 0xcb, 0x19, 0x43, 0x34, 0x84, 0xcc, 0x8f, 0x86,
	0x7a, 0x7d, 0x2c, 0x96, 0x98, 0xc4, 0x9b, 0x70, 0x58, 0xe4, 0xd5, 0x2d, 0x6f, 0xe0, 0x72, 0x6c,
	0x46, 0x9a, 0x74, 0x58, 0x08, 0x5b, 0x6d, 0x21, 0x35, 0x95, 0x67, 0x72, 0x03, 0xb4, 0x40, 0x14,
	0x1a, 0x4c, 0xf1, 0x02, 0x86, 0xb7, 0xac, 0x64, 0x53, 0xd6, 0xbb, 0x1b, 0xa0, 0x51, 0xc4, 0x57,
	0x62, 0x3c, 0x9d, 0x0a, 0x2f, 0x0b, 0xdb, 0x9a, 0xda, 0x30, 0xaa, 0xf1, 0xfa, 0xc6, 0x0d, 0xc3,
	0x54, 0x9e, 0xc9, 0xff, 0x21, 0x7f, 0x67, 0x73, 0x01, 0xe2, 0x5c, 0x60, 0x36, 0xf6, 0xad, 0x1f,
	0xf3, 0x70, 0x62, 0x97, 0xf2, 0xbb, 0xf4, 0x31, 0x8f, 0x02, 0xed, 0x3a, 0x94, 0x11, 0x19, 0xed,
	0xf1, 0x39, 0xb1, 0xc7, 0xd2, 0x58, 0x7a, 0x8d, 0x08, 0x31, 0x02, 0x1e, 0x86, 0x48, 0x3e, 0x86,
	0x87, 0x81, 0x91, 0x0a, 0x1f, 0x63, 0xde, 0x14, 0x69, 0x4a, 0x94, 0xe5, 0xe2, 0xe1, 0xca, 0xb2,
	0xf1, 0x29, 0xfc, 0xef, 0x36, 0xe5, 0xc2, 0xec, 0x2e, 0xe5, 0x9c, 0xb9, 0xdd, 0xb0, 0x24, 0x1d,
	0x6d, 0xc9, 0x8c, 0xaf, 0x5f, 0x6e, 0xd7, 0x27, 0x9d, 0xb0, 0xa2, 0xe4, 0xb0, 0xa2, 0x34, 0xa6,
	0xa8, 0x28, 0x8a, 0x15, 0x99, 0xee, 0x68, 0x20, 0x35, 0xdd, 0x65, 0xcd, 0xf9, 0x41, 0x83, 0x4a,
	0x68, 0x40, 0xc4, 0x4a, 0xd4, 0x18, 0x94, 0x58, 0x21, 0xab, 0x07, 0x39, 0xca, 0x64, 0xc8, 0x29,
	0x64, 0xe4, 0xab, 0x89, 0x7e, 0x51, 0x98, 0xad, 0x5f, 0x9c, 0x3c, 0xd0, 0x2f, 0x92, 0x8d, 0x81,
	0x6c, 0x47, 0x64, 0xa7, 0x38, 0x23, 0xd9, 0x81, 0x98, 0xec, 0x44, 0xac, 0x26, 0x4a, 0x67, 0x6d,
	0xe6, 0x74, 0xbe, 0x9f, 0x48, 0xe7, 0xd2, 0xcc, 0xe9, 0x8c, 0xf8, 0xcf, 0x55, 0x9e, 0x52, 0x3e,
	0x04, 0x4f, 0x39, 0x9e, 0xe0, 0x29, 0x2a, 0x21, 0x59, 0x55, 0x23, 0xbf, 0x12, 0x6f, 0x5b, 0x1c,
	0xf9, 0x2a, 0xf3, 0xb8, 0x0a, 0xf5, 0xf6, 0xa0, 0xdf, 0xa7, 0xae, 0xac, 0x07, 0x58, 0x5a, 0x34,
	0xb9, 0x1b, 0x63, 0x39, 0x6e, 0x07, 0x35, 0x13, 0x6a, 0x62, 0x92, 0x98, 0xb0, 0x40, 0x5c, 0x3d,
	0x63, 0xc2, 0xa2, 0x30, 0x13, 0x72, 0x11, 0x2a, 0x01, 0x75, 0x39, 0x2a, 0xd7, 0x50, 0x19, 0xdd,
	0x17, 0x32, 0xa9, 0x1b, 0x0d, 0x1b, 0xdf, 0xe6, 0xe1, 0x78, 0x62, 0xfb, 0xb2, 0xc2, 0xf3, 0x55,
	0x1d, 0x27, 0x56, 0xc8, 0x6a, 0x38, 0xeb, 0xd3, 0x34, 0x1c, 0x45, 0x85, 0x6c, 0x4c, 0xd7, 0x6f,
	0x54, 0x25, 0xe1, 0xed, 0xab, 0xda, 0x4d, 0xac, 0x60, 0xfc, 0x56, 0x80, 0x53, 0x2f, 0x49, 0xf0,
	0xd7, 0xb4, 0x16, 0xef, 0x85, 0xd5, 0xcb, 0xc6, 0xf5, 0x18, 0x37, 0xf5, 0xb0, 0x7a, 0x85, 0x65,
	0xca, 0x16, 0x7a, 0xb2, 0x4a, 0xdb, 0xb8, 0x2a, 0x93, 0xcd, 0x3f, 0x1c, 0x3c, 0x72, 0x32, 0xad,
	0x1e, 0x3c, 0x17, 0x66, 0x44, 0xec, 0xc7, 0x50, 0xf1, 0x07, 0xc1, 0x03, 0xa5, 0x19, 0xaf, 0x62,
	0x2e, 0x0c, 0x82, 0x07, 0xad, 0x69, 0x26, 0x8d, 0xd0, 0xc2, 0xef, 0xf6, 0x64, 0x4f, 0x6e, 0x4f,
	0xe5, 0x37, 0xc2, 0x44, 0xee, 0xb0, 0x60, 0x93, 0xfa, 0x7d, 0xda, 0x16, 0xbe, 0xa9, 0xb9, 0xc3,
	0x82, 0x96, 0x1d, 0x0d, 0x98, 0x09, 0x35, 0xe3, 0xd7, 0x1c, 0x9c, 0x3c, 0x90, 0xd0, 0xe4, 0x03,
	0xa8, 0x84, 0x39, 0x3c, 0x2d, 0xe5, 0x8b, 0x00, 0xd8, 0xed, 0x3c, 0xd7, 0x66, 0x9c, 0x79, 0xae,
	0x7a, 0x9c, 0x8c, 0x84, 0xe9, 0x27, 0x99, 0x48, 0x25, 0xe6, 0x8e, 0x85, 0xd9, 0xb8, 0xa3, 0x0f,
	0x45, 0x41, 0x8f, 0x89, 0x0e, 0x1a, 0xa6, 0xfc, 0xd8, 0x7d, 0x64, 0xba, 0x28, 0x30, 0xe5, 0x1f,
	0x39, 0x1b, 0x13, 0x79, 0xc9, 0x14, 0x30, 0x0f, 0xdd, 0x81, 0x13, 0x33, 0xf9, 0xf3, 0x0a, 0x93,
	0x97, 0x6e, 0x20, 0xe9, 0x0e, 0xd8, 0x13, 0xaa, 0x70, 0xf9, 0x9f, 0x8b, 0x40, 0xc2, 0xf4, 0xf8,
	0xc8, 0xeb, 0x6f, 0x5a, 0xdc, 0x6a, 0x0e, 0x82, 0xff, 0xc8, 0xea, 0xbf, 0x85, 0xac, 0x26, 0xba,
	0x5b, 0xf5, 0xb5, 0x76, 0xb7, 0x14, 0x62, 0x9b, 0xe4, 0xc7, 0xb5, 0x57, 0xf1, 0xe3, 0x4b, 0x17,
	0xa0, 0xae, 0xd2, 0x0f, 0x52, 0x83, 0xf2, 0xbd, 0x4e, 0x47, 0x08, 0xe6, 0x8f, 0x11, 0x80, 0x92,
	0x1c, 0x9c, 0xcf, 0x6d, 0xfc, 0x54, 0x02, 0x4d, 0xd2, 0xa4, 0x6b, 0x50, 0xdc, 0xc1, 0x1a, 0xdc,
	0x90, 0x17, 0x98, 0x8d, 0xf0, 0x02, 0xb3, 0xb1, 0xe5, 0xf8, 0x7c, 0x7f, 0x31, 0x45, 0x4e, 0x76,
	0xa0, 0xa6, 0xdc, 0x68, 0x92, 0x8b, 0x19, 0x0b, 0x91, 0xbc, 0xf9, 0xcc, 0xb2, 0xa8, 0xdc, 0x5e,
	0x65, 0x5a, 0x4c, 0xde, 0x72, 0xa5, 0x5a, 0xdc, 0x86, 0x6a, 0x74, 0x9b, 0x45, 0xb2, 0x38, 0x9b,
	0x7a, 0xe7, 0x95, 0x6a, 0xed, 0x4b, 0xa8, 0x29, 0xf7, 0x10, 0xe4, 0x6a, 0x86, 0xbd, 0xf4, 0xfb,
	0x8a, 0x54, 0xeb, 0x1d, 0xa8, 0xab, 0xe7, 0x78, 0x72, 0x29, 0xc3, 0xfc, 0xc4, 0x55, 0xc2, 0xe2,
	0xf4, 0xba, 0x3e, 0xe9, 0xc3, 0xfc, 0xe4, 0x89, 0x98, 0x34, 0xb2, 0xf1, 0x93, 0x67, 0xf8, 0xc5,
	0xd9, 0xf4, 0x7d, 0x62, 0x42, 0x5d, 0x3d, 0x9d, 0x65, 0x7e, 0xdb, 0xc4, 0x31, 0x2e, 0x75, 0xbd,
	0x1e, 0x03, 0x39, 0x78, 0xd8, 0x20, 0x97, 0xb3, 0x3d, 0x3b, 0x78, 0xe6, 0x59, 0x9c, 0x15, 0xe1,
	0x37, 0xcf, 0x3c, 0x7d, 0xbe, 0x94, 0x7b, 0xf6, 0x7c, 0xe9, 0xd8, 0xd3, 0x17, 0x4b, 0xb9, 0x67,
	0x2f, 0x96, 0x72, 0xbf, 0xbf, 0x58, 0xca, 0x7d, 0xa1, 0x21, 0x6c, 0xaf, 0x84, 0x6e, 0x5e, 0xf9,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x50, 0x9e, 0x3b, 0xa4, 0x64, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EntryClient is the client API for Entry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EntryClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// 创建入口
	CreateEntry(ctx context.Context, in *CreateEntryReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 删除入口
	DeleteEntry(ctx context.Context, in *DeleteEntryReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 编辑入口
	EditEntry(ctx context.Context, in *EditEntryReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 入口上/下线
	ToggleEntry(ctx context.Context, in *ToggleEntryOnlineStatusReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 获取入口列表
	GetEntryList(ctx context.Context, in *GetEntryListReq, opts ...grpc.CallOption) (*GetEntryListRep, error)
	// 获取当前生效的入口状态
	GetAppEntryState(ctx context.Context, in *GetAppEntryStateReq, opts ...grpc.CallOption) (*GetAppEntryStateRep, error)
	// 设置下一个生效状态
	SetNextState(ctx context.Context, in *SetNextStateReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 获取时间配置列表
	GetTimeSettingList(ctx context.Context, in *GetTimeSettingListReq, opts ...grpc.CallOption) (*GetTimeSettingListRep, error)
}

type entryClient struct {
	cc *grpc.ClientConn
}

func NewEntryClient(cc *grpc.ClientConn) EntryClient {
	return &entryClient{cc}
}

func (c *entryClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) CreateEntry(ctx context.Context, in *CreateEntryReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/CreateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) DeleteEntry(ctx context.Context, in *DeleteEntryReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/DeleteEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) EditEntry(ctx context.Context, in *EditEntryReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/EditEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) ToggleEntry(ctx context.Context, in *ToggleEntryOnlineStatusReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/ToggleEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) GetEntryList(ctx context.Context, in *GetEntryListReq, opts ...grpc.CallOption) (*GetEntryListRep, error) {
	out := new(GetEntryListRep)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/GetEntryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) GetAppEntryState(ctx context.Context, in *GetAppEntryStateReq, opts ...grpc.CallOption) (*GetAppEntryStateRep, error) {
	out := new(GetAppEntryStateRep)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/GetAppEntryState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) SetNextState(ctx context.Context, in *SetNextStateReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/SetNextState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *entryClient) GetTimeSettingList(ctx context.Context, in *GetTimeSettingListReq, opts ...grpc.CallOption) (*GetTimeSettingListRep, error) {
	out := new(GetTimeSettingListRep)
	err := c.cc.Invoke(ctx, "/main.feed.admin.entry.api.Entry/GetTimeSettingList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EntryServer is the server API for Entry service.
type EntryServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
	// 创建入口
	CreateEntry(context.Context, *CreateEntryReq) (*empty.Empty, error)
	// 删除入口
	DeleteEntry(context.Context, *DeleteEntryReq) (*empty.Empty, error)
	// 编辑入口
	EditEntry(context.Context, *EditEntryReq) (*empty.Empty, error)
	// 入口上/下线
	ToggleEntry(context.Context, *ToggleEntryOnlineStatusReq) (*empty.Empty, error)
	// 获取入口列表
	GetEntryList(context.Context, *GetEntryListReq) (*GetEntryListRep, error)
	// 获取当前生效的入口状态
	GetAppEntryState(context.Context, *GetAppEntryStateReq) (*GetAppEntryStateRep, error)
	// 设置下一个生效状态
	SetNextState(context.Context, *SetNextStateReq) (*empty.Empty, error)
	// 获取时间配置列表
	GetTimeSettingList(context.Context, *GetTimeSettingListReq) (*GetTimeSettingListRep, error)
}

// UnimplementedEntryServer can be embedded to have forward compatible implementations.
type UnimplementedEntryServer struct {
}

func (*UnimplementedEntryServer) Ping(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedEntryServer) CreateEntry(ctx context.Context, req *CreateEntryReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntry not implemented")
}
func (*UnimplementedEntryServer) DeleteEntry(ctx context.Context, req *DeleteEntryReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntry not implemented")
}
func (*UnimplementedEntryServer) EditEntry(ctx context.Context, req *EditEntryReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditEntry not implemented")
}
func (*UnimplementedEntryServer) ToggleEntry(ctx context.Context, req *ToggleEntryOnlineStatusReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleEntry not implemented")
}
func (*UnimplementedEntryServer) GetEntryList(ctx context.Context, req *GetEntryListReq) (*GetEntryListRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntryList not implemented")
}
func (*UnimplementedEntryServer) GetAppEntryState(ctx context.Context, req *GetAppEntryStateReq) (*GetAppEntryStateRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppEntryState not implemented")
}
func (*UnimplementedEntryServer) SetNextState(ctx context.Context, req *SetNextStateReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNextState not implemented")
}
func (*UnimplementedEntryServer) GetTimeSettingList(ctx context.Context, req *GetTimeSettingListReq) (*GetTimeSettingListRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeSettingList not implemented")
}

func RegisterEntryServer(s *grpc.Server, srv EntryServer) {
	s.RegisterService(&_Entry_serviceDesc, srv)
}

func _Entry_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_CreateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).CreateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/CreateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).CreateEntry(ctx, req.(*CreateEntryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_DeleteEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).DeleteEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/DeleteEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).DeleteEntry(ctx, req.(*DeleteEntryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_EditEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditEntryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).EditEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/EditEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).EditEntry(ctx, req.(*EditEntryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_ToggleEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleEntryOnlineStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).ToggleEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/ToggleEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).ToggleEntry(ctx, req.(*ToggleEntryOnlineStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_GetEntryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntryListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).GetEntryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/GetEntryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).GetEntryList(ctx, req.(*GetEntryListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_GetAppEntryState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppEntryStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).GetAppEntryState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/GetAppEntryState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).GetAppEntryState(ctx, req.(*GetAppEntryStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_SetNextState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNextStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).SetNextState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/SetNextState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).SetNextState(ctx, req.(*SetNextStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Entry_GetTimeSettingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTimeSettingListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EntryServer).GetTimeSettingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.feed.admin.entry.api.Entry/GetTimeSettingList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EntryServer).GetTimeSettingList(ctx, req.(*GetTimeSettingListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Entry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.feed.admin.entry.api.Entry",
	HandlerType: (*EntryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Entry_Ping_Handler,
		},
		{
			MethodName: "CreateEntry",
			Handler:    _Entry_CreateEntry_Handler,
		},
		{
			MethodName: "DeleteEntry",
			Handler:    _Entry_DeleteEntry_Handler,
		},
		{
			MethodName: "EditEntry",
			Handler:    _Entry_EditEntry_Handler,
		},
		{
			MethodName: "ToggleEntry",
			Handler:    _Entry_ToggleEntry_Handler,
		},
		{
			MethodName: "GetEntryList",
			Handler:    _Entry_GetEntryList_Handler,
		},
		{
			MethodName: "GetAppEntryState",
			Handler:    _Entry_GetAppEntryState_Handler,
		},
		{
			MethodName: "SetNextState",
			Handler:    _Entry_SetNextState_Handler,
		},
		{
			MethodName: "GetTimeSettingList",
			Handler:    _Entry_GetTimeSettingList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func (m *CreateEntryReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateEntryReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateEntryReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalLoop != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TotalLoop))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Platforms) > 0 {
		for iNdEx := len(m.Platforms) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Platforms[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Etime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Etime))
		i--
		dAtA[i] = 0x20
	}
	if m.Stime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x18
	}
	if len(m.States) > 0 {
		for iNdEx := len(m.States) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.States[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteEntryReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteEntryReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteEntryReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EditEntryReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EditEntryReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EditEntryReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalLoop != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TotalLoop))
		i--
		dAtA[i] = 0x40
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Platforms) > 0 {
		for iNdEx := len(m.Platforms) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Platforms[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Etime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Etime))
		i--
		dAtA[i] = 0x28
	}
	if m.Stime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x20
	}
	if len(m.States) > 0 {
		for iNdEx := len(m.States) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.States[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ToggleEntryOnlineStatusReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ToggleEntryOnlineStatusReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ToggleEntryOnlineStatusReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OnlineStatus != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OnlineStatus))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetEntryListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEntryListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetEntryListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.PageNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageNum))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetEntryListRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEntryListRep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetEntryListRep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Page != nil {
		{
			size, err := m.Page.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAppEntryStateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAppEntryStateReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAppEntryStateReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Build != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x10
	}
	if m.Plat != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Plat))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAppEntryStateRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAppEntryStateRep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAppEntryStateRep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x50
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0x4a
	}
	if m.ETime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ETime))
		i--
		dAtA[i] = 0x40
	}
	if m.STime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.STime))
		i--
		dAtA[i] = 0x38
	}
	if m.LoopCount != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LoopCount))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DynamicIcon) > 0 {
		i -= len(m.DynamicIcon)
		copy(dAtA[i:], m.DynamicIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DynamicIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StaticIcon) > 0 {
		i -= len(m.StaticIcon)
		copy(dAtA[i:], m.StaticIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StaticIcon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StateName) > 0 {
		i -= len(m.StateName)
		copy(dAtA[i:], m.StateName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StateName)))
		i--
		dAtA[i] = 0x12
	}
	if m.StateID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.StateID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SetNextStateReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetNextStateReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetNextStateReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x22
	}
	if m.Stime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Stime))
		i--
		dAtA[i] = 0x18
	}
	if m.StateID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.StateID))
		i--
		dAtA[i] = 0x10
	}
	if m.EntryID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.EntryID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetTimeSettingListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTimeSettingListReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTimeSettingListReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EntryID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.EntryID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetTimeSettingListRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTimeSettingListRep) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTimeSettingListRep) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AppEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AppEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SentLoop != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.SentLoop))
		i--
		dAtA[i] = 0x58
	}
	if m.TotalLoop != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.TotalLoop))
		i--
		dAtA[i] = 0x50
	}
	if m.CurrentState != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CurrentState))
		i--
		dAtA[i] = 0x48
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Platforms) > 0 {
		for iNdEx := len(m.Platforms) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Platforms[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.ETime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ETime))
		i--
		dAtA[i] = 0x30
	}
	if m.STime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.STime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.States) > 0 {
		for iNdEx := len(m.States) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.States[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.OnlineStatus != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OnlineStatus))
		i--
		dAtA[i] = 0x18
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AppEntryState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppEntryState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AppEntryState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LoopCount != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LoopCount))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DynamicIcon) > 0 {
		i -= len(m.DynamicIcon)
		copy(dAtA[i:], m.DynamicIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DynamicIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StaticIcon) > 0 {
		i -= len(m.StaticIcon)
		copy(dAtA[i:], m.StaticIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StaticIcon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StateName) > 0 {
		i -= len(m.StateName)
		copy(dAtA[i:], m.StateName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StateName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AppEntryTimeSetting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppEntryTimeSetting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AppEntryTimeSetting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsDeprecated != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.IsDeprecated))
		i--
		dAtA[i] = 0x48
	}
	if m.CTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.CTime))
		i--
		dAtA[i] = 0x40
	}
	if m.PushTime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PushTime))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintApi(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x32
	}
	if m.STime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.STime))
		i--
		dAtA[i] = 0x28
	}
	if m.StateId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.StateId))
		i--
		dAtA[i] = 0x20
	}
	if m.EntryId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.EntryId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.StateName) > 0 {
		i -= len(m.StateName)
		copy(dAtA[i:], m.StateName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StateName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EffectivePlatform) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EffectivePlatform) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EffectivePlatform) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Build != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Build))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Condition) > 0 {
		i -= len(m.Condition)
		copy(dAtA[i:], m.Condition)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Condition)))
		i--
		dAtA[i] = 0x12
	}
	if m.Platform != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Platform))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Page) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Page) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Page) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.PageNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.PageNum))
		i--
		dAtA[i] = 0x10
	}
	if m.Total != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AppEntryForDataBus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppEntryForDataBus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AppEntryForDataBus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EntryName) > 0 {
		i -= len(m.EntryName)
		copy(dAtA[i:], m.EntryName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.EntryName)))
		i--
		dAtA[i] = 0x5a
	}
	if m.ID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x50
	}
	if len(m.Platforms) > 0 {
		for iNdEx := len(m.Platforms) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Platforms[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ETime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ETime))
		i--
		dAtA[i] = 0x40
	}
	if m.STime != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.STime))
		i--
		dAtA[i] = 0x38
	}
	if m.LoopCount != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LoopCount))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DynamicIcon) > 0 {
		i -= len(m.DynamicIcon)
		copy(dAtA[i:], m.DynamicIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.DynamicIcon)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StaticIcon) > 0 {
		i -= len(m.StaticIcon)
		copy(dAtA[i:], m.StaticIcon)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StaticIcon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.StateName) > 0 {
		i -= len(m.StateName)
		copy(dAtA[i:], m.StateName)
		i = encodeVarintApi(dAtA, i, uint64(len(m.StateName)))
		i--
		dAtA[i] = 0x12
	}
	if m.StateID != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.StateID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateEntryReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.States) > 0 {
		for _, e := range m.States {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.Stime != 0 {
		n += 1 + sovApi(uint64(m.Stime))
	}
	if m.Etime != 0 {
		n += 1 + sovApi(uint64(m.Etime))
	}
	if len(m.Platforms) > 0 {
		for _, e := range m.Platforms {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TotalLoop != 0 {
		n += 1 + sovApi(uint64(m.TotalLoop))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteEntryReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EditEntryReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.States) > 0 {
		for _, e := range m.States {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.Stime != 0 {
		n += 1 + sovApi(uint64(m.Stime))
	}
	if m.Etime != 0 {
		n += 1 + sovApi(uint64(m.Etime))
	}
	if len(m.Platforms) > 0 {
		for _, e := range m.Platforms {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.TotalLoop != 0 {
		n += 1 + sovApi(uint64(m.TotalLoop))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ToggleEntryOnlineStatusReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	if m.OnlineStatus != 0 {
		n += 1 + sovApi(uint64(m.OnlineStatus))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEntryListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PageNum != 0 {
		n += 1 + sovApi(uint64(m.PageNum))
	}
	if m.PageSize != 0 {
		n += 1 + sovApi(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEntryListRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != nil {
		l = m.Page.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAppEntryStateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Plat != 0 {
		n += 1 + sovApi(uint64(m.Plat))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAppEntryStateRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StateID != 0 {
		n += 1 + sovApi(uint64(m.StateID))
	}
	l = len(m.StateName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.StaticIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.DynamicIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LoopCount != 0 {
		n += 1 + sovApi(uint64(m.LoopCount))
	}
	if m.STime != 0 {
		n += 1 + sovApi(uint64(m.STime))
	}
	if m.ETime != 0 {
		n += 1 + sovApi(uint64(m.ETime))
	}
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.ID != 0 {
		n += 1 + sovApi(uint64(m.ID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetNextStateReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EntryID != 0 {
		n += 1 + sovApi(uint64(m.EntryID))
	}
	if m.StateID != 0 {
		n += 1 + sovApi(uint64(m.StateID))
	}
	if m.Stime != 0 {
		n += 1 + sovApi(uint64(m.Stime))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTimeSettingListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EntryID != 0 {
		n += 1 + sovApi(uint64(m.EntryID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTimeSettingListRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AppEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.OnlineStatus != 0 {
		n += 1 + sovApi(uint64(m.OnlineStatus))
	}
	if len(m.States) > 0 {
		for _, e := range m.States {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.STime != 0 {
		n += 1 + sovApi(uint64(m.STime))
	}
	if m.ETime != 0 {
		n += 1 + sovApi(uint64(m.ETime))
	}
	if len(m.Platforms) > 0 {
		for _, e := range m.Platforms {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.CurrentState != 0 {
		n += 1 + sovApi(uint64(m.CurrentState))
	}
	if m.TotalLoop != 0 {
		n += 1 + sovApi(uint64(m.TotalLoop))
	}
	if m.SentLoop != 0 {
		n += 1 + sovApi(uint64(m.SentLoop))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AppEntryState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.StateName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.StaticIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.DynamicIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LoopCount != 0 {
		n += 1 + sovApi(uint64(m.LoopCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AppEntryTimeSetting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.StateName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.EntryId != 0 {
		n += 1 + sovApi(uint64(m.EntryId))
	}
	if m.StateId != 0 {
		n += 1 + sovApi(uint64(m.StateId))
	}
	if m.STime != 0 {
		n += 1 + sovApi(uint64(m.STime))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.PushTime != 0 {
		n += 1 + sovApi(uint64(m.PushTime))
	}
	if m.CTime != 0 {
		n += 1 + sovApi(uint64(m.CTime))
	}
	if m.IsDeprecated != 0 {
		n += 1 + sovApi(uint64(m.IsDeprecated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EffectivePlatform) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Platform != 0 {
		n += 1 + sovApi(uint64(m.Platform))
	}
	l = len(m.Condition)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.Build != 0 {
		n += 1 + sovApi(uint64(m.Build))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Page) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Total != 0 {
		n += 1 + sovApi(uint64(m.Total))
	}
	if m.PageNum != 0 {
		n += 1 + sovApi(uint64(m.PageNum))
	}
	if m.PageSize != 0 {
		n += 1 + sovApi(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AppEntryForDataBus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StateID != 0 {
		n += 1 + sovApi(uint64(m.StateID))
	}
	l = len(m.StateName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.StaticIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.DynamicIcon)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LoopCount != 0 {
		n += 1 + sovApi(uint64(m.LoopCount))
	}
	if m.STime != 0 {
		n += 1 + sovApi(uint64(m.STime))
	}
	if m.ETime != 0 {
		n += 1 + sovApi(uint64(m.ETime))
	}
	if len(m.Platforms) > 0 {
		for _, e := range m.Platforms {
			l = e.Size()
			n += 1 + l + sovApi(uint64(l))
		}
	}
	if m.ID != 0 {
		n += 1 + sovApi(uint64(m.ID))
	}
	l = len(m.EntryName)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateEntryReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateEntryReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateEntryReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field States", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.States = append(m.States, &AppEntryState{})
			if err := m.States[len(m.States)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Etime", wireType)
			}
			m.Etime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Etime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platforms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platforms = append(m.Platforms, &EffectivePlatform{})
			if err := m.Platforms[len(m.Platforms)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoop", wireType)
			}
			m.TotalLoop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalLoop |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteEntryReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteEntryReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteEntryReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EditEntryReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EditEntryReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EditEntryReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field States", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.States = append(m.States, &AppEntryState{})
			if err := m.States[len(m.States)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Etime", wireType)
			}
			m.Etime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Etime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platforms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platforms = append(m.Platforms, &EffectivePlatform{})
			if err := m.Platforms[len(m.Platforms)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoop", wireType)
			}
			m.TotalLoop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalLoop |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ToggleEntryOnlineStatusReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ToggleEntryOnlineStatusReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ToggleEntryOnlineStatusReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlineStatus", wireType)
			}
			m.OnlineStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OnlineStatus |= OnlineStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEntryListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEntryListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEntryListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageNum", wireType)
			}
			m.PageNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEntryListRep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEntryListRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEntryListRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page == nil {
				m.Page = &Page{}
			}
			if err := m.Page.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &AppEntry{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAppEntryStateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAppEntryStateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAppEntryStateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plat", wireType)
			}
			m.Plat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Plat |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAppEntryStateRep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAppEntryStateRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAppEntryStateRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateID", wireType)
			}
			m.StateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StaticIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopCount", wireType)
			}
			m.LoopCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoopCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field STime", wireType)
			}
			m.STime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.STime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ETime", wireType)
			}
			m.ETime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ETime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetNextStateReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetNextStateReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetNextStateReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryID", wireType)
			}
			m.EntryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntryID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateID", wireType)
			}
			m.StateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stime", wireType)
			}
			m.Stime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTimeSettingListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTimeSettingListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTimeSettingListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryID", wireType)
			}
			m.EntryID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntryID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTimeSettingListRep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTimeSettingListRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTimeSettingListRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &AppEntryTimeSetting{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlineStatus", wireType)
			}
			m.OnlineStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OnlineStatus |= OnlineStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field States", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.States = append(m.States, &AppEntryState{})
			if err := m.States[len(m.States)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field STime", wireType)
			}
			m.STime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.STime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ETime", wireType)
			}
			m.ETime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ETime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platforms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platforms = append(m.Platforms, &EffectivePlatform{})
			if err := m.Platforms[len(m.Platforms)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentState", wireType)
			}
			m.CurrentState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrentState |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalLoop", wireType)
			}
			m.TotalLoop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalLoop |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SentLoop", wireType)
			}
			m.SentLoop = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SentLoop |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppEntryState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppEntryState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppEntryState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StaticIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopCount", wireType)
			}
			m.LoopCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoopCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppEntryTimeSetting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppEntryTimeSetting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppEntryTimeSetting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryId", wireType)
			}
			m.EntryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntryId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateId", wireType)
			}
			m.StateId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field STime", wireType)
			}
			m.STime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.STime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushTime", wireType)
			}
			m.PushTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PushTime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CTime", wireType)
			}
			m.CTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CTime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDeprecated", wireType)
			}
			m.IsDeprecated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsDeprecated |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EffectivePlatform) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EffectivePlatform: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EffectivePlatform: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Condition", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Build", wireType)
			}
			m.Build = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Build |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Page) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Page: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Page: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageNum", wireType)
			}
			m.PageNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppEntryForDataBus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppEntryForDataBus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppEntryForDataBus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateID", wireType)
			}
			m.StateID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StateName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StaticIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DynamicIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DynamicIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoopCount", wireType)
			}
			m.LoopCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoopCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field STime", wireType)
			}
			m.STime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.STime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ETime", wireType)
			}
			m.ETime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ETime |= go_common_library_time.Time(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platforms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platforms = append(m.Platforms, &EffectivePlatform{})
			if err := m.Platforms[len(m.Platforms)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
