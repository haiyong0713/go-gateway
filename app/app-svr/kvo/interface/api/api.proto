// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
//  - http://info.bilibili.co/display/documentation/gRPC+Proto
// protobuf 生成 HTTP 工具:
//  -
//  http://git.bilibili.co/platform/go-common/tree/master/app/tool/protoc-gen-bm
// gRPC Golang Model:
//  - http://info.bilibili.co/display/documentation/gRPC+Golang+Model
// gRPC Golang Warden Gen:
//  - http://info.bilibili.co/display/documentation/gRPC+Golang+Warden+Gen
// gRPC http 调试工具(无需pb文件):
//  - http://info.bilibili.co/pages/viewpage.action?pageId=12877366
// grpc 命令行调试工具(无需pb文件):
//  - http://info.bilibili.co/pages/viewpage.action?pageId=11869411
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package main.community.kvo;

option go_package = "api";
// do not generate getXXX() method
option (gogoproto.goproto_getters_all) = true;


service kvo {
    rpc addDoc (addDocReq) returns (addDocReply);
    rpc getDoc(getDocReq) returns (getDocReply);
}

// addDocReq.
message addDocReq {
    int64 Mid = 1;
    DmPlayerConfigReq Body = 2;
    string platform = 3;
    string buvid = 4;
    string module = 5;
    string doc = 6;
}

// getDocReq.
message getDocReq {
    int64 Mid = 1;
    string buvid =2;
    string platform = 3;
    string module =4;
}

// getDocReply.
message getDocReply{
    string data = 1;
}

// DmPlayerConfigReq.
message DmPlayerConfigReq {
    int64 ts = 1;
    PlayerDanmakuSwitch switch = 2;
    PlayerDanmakuSwitchSave switch_save = 3;
    PlayerDanmakuUseDefaultConfig use_default_config = 4;
    PlayerDanmakuAiRecommendedSwitch ai_recommended_switch = 5;
    PlayerDanmakuAiRecommendedLevel ai_recommended_level = 6;
    PlayerDanmakuBlocktop blocktop = 7;
    PlayerDanmakuBlockscroll blockscroll = 8;
    PlayerDanmakuBlockbottom blockbottom = 9;
    PlayerDanmakuBlockcolorful blockcolorful = 10;
    PlayerDanmakuBlockrepeat blockrepeat = 11;
    PlayerDanmakuBlockspecial blockspecial = 12;
    PlayerDanmakuOpacity opacity = 13;
    PlayerDanmakuScalingfactor scalingfactor = 14;
    PlayerDanmakuDomain domain = 15;
    PlayerDanmakuSpeed speed = 16;
    PlayerDanmakuEnableblocklist enableblocklist = 17;
}

message addDocReply {
}

// --------------------------------------player--------------------------------------
message DanmuPlayerConfig {
    // 是否开启弹幕
    bool player_danmaku_switch = 1 [(gogoproto.jsontag) = "player_danmaku_switch"];
    // 是否记录弹幕开关设置 (Android only)
    bool player_danmaku_switch_save = 2 [(gogoproto.jsontag) = "player_danmaku_switch_save"];
    // 是否使用推荐弹幕设置
    bool player_danmaku_use_default_config = 3 [(gogoproto.jsontag) = "player_danmaku_use_default_config"];
    //AI 智能推荐弹幕，是否开启
    bool player_danmaku_ai_recommended_switch = 4 [(gogoproto.jsontag) = "player_danmaku_ai_recommended_switch"];
    //AI 智能推荐弹幕，屏蔽等级
    int32 player_danmaku_ai_recommended_level = 5 [(gogoproto.jsontag) = "player_danmaku_ai_recommended_level"];
    // 是否屏蔽顶端弹幕
    bool player_danmaku_blocktop = 6 [(gogoproto.jsontag) = "player_danmaku_blocktop"];
    // 是否屏蔽滚动弹幕
    bool player_danmaku_blockscroll = 7 [(gogoproto.jsontag) = "player_danmaku_blockscroll"];
    // 是否屏蔽底端弹幕
    bool player_danmaku_blockbottom = 8 [(gogoproto.jsontag) = "player_danmaku_blockbottom"];
    // 是否屏蔽彩色弹幕
    bool player_danmaku_blockcolorful = 9 [(gogoproto.jsontag) = "player_danmaku_blockcolorful"];
    // 是否屏蔽重复弹幕 (Android only)
    bool player_danmaku_blockrepeat = 10 [(gogoproto.jsontag) = "player_danmaku_blockrepeat"];
    // 是否屏蔽高级弹幕
    bool player_danmaku_blockspecial = 11 [(gogoproto.jsontag) = "player_danmaku_blockspecial"];
    // 弹幕不透明度
    float player_danmaku_opacity = 12 [(gogoproto.jsontag) = "player_danmaku_opacity"];
    // 弹幕缩放比例
    float player_danmaku_scalingfactor = 13 [(gogoproto.jsontag) = "player_danmaku_scalingfactor"];
    // 弹幕显示区域（0.25=1/4屏；0.5=半屏；0.75=3/4屏；1.0=满屏; 2.0=无限）
    float player_danmaku_domain = 14 [(gogoproto.jsontag) = "player_danmaku_domain"];
    // 弹幕速度 (极慢: 10, 慢: 20, 适中: 30, 快: 40, 极快: 50)
    int32 player_danmaku_speed = 15 [(gogoproto.jsontag) = "player_danmaku_speed"];
    // 是否开启屏蔽列表
    bool player_danmaku_enableblocklist = 16 [(gogoproto.jsontag) = "player_danmaku_enableblocklist"];
}

message DanmuPlayerConfigSha1 {
    // 是否开启弹幕
    bool player_danmaku_switch = 1;
    // 是否记录弹幕开关设置 (Android only)
    bool player_danmaku_switch_save = 2;
    // 是否使用推荐弹幕设置
    bool player_danmaku_use_default_config = 3;
    //AI 智能推荐弹幕，是否开启
    bool player_danmaku_ai_recommended_switch = 4;
    //AI 智能推荐弹幕，屏蔽等级
    int32 player_danmaku_ai_recommended_level = 5;
    // 是否屏蔽顶端弹幕
    bool player_danmaku_blocktop = 6;
    // 是否屏蔽滚动弹幕
    bool player_danmaku_blockscroll = 7;
    // 是否屏蔽底端弹幕
    bool player_danmaku_blockbottom = 8;
    // 是否屏蔽彩色弹幕
    bool player_danmaku_blockcolorful = 9;
    // 是否屏蔽重复弹幕 (Android only)
    bool player_danmaku_blockrepeat = 10;
    // 是否屏蔽高级弹幕
    bool player_danmaku_blockspecial = 11;
    // 弹幕不透明度
    float player_danmaku_opacity = 12;
    // 弹幕缩放比例
    float player_danmaku_scalingfactor = 13;
    // 弹幕显示区域（0.25=1/4屏；0.5=半屏；0.75=3/4屏；1.0=满屏; 2.0=无限）
    float player_danmaku_domain = 14;
    // 弹幕速度 (极慢: 10, 慢: 20, 适中: 30, 快: 40, 极快: 50)
    int32 player_danmaku_speed = 15;
    // 是否开启屏蔽列表
    bool player_danmaku_enableblocklist = 16;
}

message PlayerDanmakuSwitch {
    bool value = 1;
}
message PlayerDanmakuSwitchSave {
    bool value = 1;
}
message PlayerDanmakuUseDefaultConfig {
    bool value = 1;
}
message PlayerDanmakuAiRecommendedSwitch {
    bool value = 1;
}
message PlayerDanmakuAiRecommendedLevel {
    int32 value = 1;
}
message PlayerDanmakuBlocktop {
    bool value = 1;
}
message PlayerDanmakuBlockscroll {
    bool value = 1;
}
message PlayerDanmakuBlockbottom {
    bool value = 1;
}
message PlayerDanmakuBlockcolorful {
    bool value = 1;
}
message PlayerDanmakuBlockrepeat {
    bool value = 1;
}
message PlayerDanmakuBlockspecial {
    bool value = 1;
}
message PlayerDanmakuOpacity {
    float value = 1;
}
message PlayerDanmakuScalingfactor {
    float value = 1;
}
message PlayerDanmakuDomain {
    float value = 1;
}
message PlayerDanmakuSpeed {
    int32 value = 1;
}
message PlayerDanmakuEnableblocklist {
    bool value = 1;
}
// --------------------------------------player--------------------------------------

