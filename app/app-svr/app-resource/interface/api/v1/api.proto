syntax = "proto3";

// use {app_id}.{version} as package name
package app.resource.v1;

// specify golang package name
option go_package = "v1";

service AppResource {
    // 更新静态资源所有缓存
    rpc ModuleUpdateCache(NoArgRequest) returns(NoReply);
    // PrivacyConfig 获取隐私设置
    rpc PrivacyConfig(NoArgRequest) returns(PrivacyConfigReply);
    // PrivacyConfig 修改隐私设置
    rpc SetPrivacyConfig(SetPrivacyConfigRequest) returns(NoReply);
    // CheckEntranceInfoc 检查入口上报信息是否存在
    rpc CheckEntranceInfoc(CheckEntranceInfocRequest) returns(CheckEntranceInfocReply);
}

// NoArgReq
message NoArgRequest{}
// NoReply
message NoReply{}

message PrivacyConfigReply{
    repeated PrivacyConfigItem privacy_config_item = 1;
}

message PrivacyConfigItem{
    PrivacyConfigType privacy_config_type = 1;
    string title = 2;
    PrivacyConfigState state = 3;
    string sub_title = 4;
    string sub_title_uri = 5;
}

// PrivacyConfigType 枚举-隐私开关类型
enum PrivacyConfigType {
    none = 0;              // 无意义 保留字段
    dynamic_city = 1;      // 动态同城
}

// PrivacyConfigState 枚举-隐私开关状态
enum PrivacyConfigState {
    close = 0;      // 关闭
    open = 1;      // 打开
}

message SetPrivacyConfigRequest {
    PrivacyConfigType privacy_config_type = 1;
    PrivacyConfigState state = 2;
}

message CheckEntranceInfocRequest {
  int64 mid = 1;
  string business = 2;
  int64 upMid = 3;
}

message CheckEntranceInfocReply {
  bool is_existed = 1;
}