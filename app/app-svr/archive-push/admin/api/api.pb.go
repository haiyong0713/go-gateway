// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArchiveStatus_Enum int32

const (
	ArchiveStatus_UNKNOWN        ArchiveStatus_Enum = 0
	ArchiveStatus_NOT_EXISTS     ArchiveStatus_Enum = -1
	ArchiveStatus_NOT_OPEN       ArchiveStatus_Enum = -2
	ArchiveStatus_FORMAT_INVALID ArchiveStatus_Enum = -3
	ArchiveStatus_OPEN           ArchiveStatus_Enum = 1
	ArchiveStatus_WITHDRAW       ArchiveStatus_Enum = 2
)

var ArchiveStatus_Enum_name = map[int32]string{
	0:  "UNKNOWN",
	-1: "NOT_EXISTS",
	-2: "NOT_OPEN",
	-3: "FORMAT_INVALID",
	1:  "OPEN",
	2:  "WITHDRAW",
}

var ArchiveStatus_Enum_value = map[string]int32{
	"UNKNOWN":        0,
	"NOT_EXISTS":     -1,
	"NOT_OPEN":       -2,
	"FORMAT_INVALID": -3,
	"OPEN":           1,
	"WITHDRAW":       2,
}

func (x ArchiveStatus_Enum) String() string {
	return proto.EnumName(ArchiveStatus_Enum_name, int32(x))
}

func (ArchiveStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0, 0}
}

type ArchivePushBatchPushStatus_Enum int32

const (
	ArchivePushBatchPushStatus_TO_PUSH      ArchivePushBatchPushStatus_Enum = 0
	ArchivePushBatchPushStatus_PUSHING      ArchivePushBatchPushStatus_Enum = 1
	ArchivePushBatchPushStatus_SUCCESS      ArchivePushBatchPushStatus_Enum = 2
	ArchivePushBatchPushStatus_FAIL         ArchivePushBatchPushStatus_Enum = 3
	ArchivePushBatchPushStatus_FAIL_PARTIAL ArchivePushBatchPushStatus_Enum = 4
)

var ArchivePushBatchPushStatus_Enum_name = map[int32]string{
	0: "TO_PUSH",
	1: "PUSHING",
	2: "SUCCESS",
	3: "FAIL",
	4: "FAIL_PARTIAL",
}

var ArchivePushBatchPushStatus_Enum_value = map[string]int32{
	"TO_PUSH":      0,
	"PUSHING":      1,
	"SUCCESS":      2,
	"FAIL":         3,
	"FAIL_PARTIAL": 4,
}

func (x ArchivePushBatchPushStatus_Enum) String() string {
	return proto.EnumName(ArchivePushBatchPushStatus_Enum_name, int32(x))
}

func (ArchivePushBatchPushStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1, 0}
}

type ArchivePushDetailPushStatus_Enum int32

const (
	ArchivePushDetailPushStatus_UNKNOWN    ArchivePushDetailPushStatus_Enum = 0
	ArchivePushDetailPushStatus_SUCCESS    ArchivePushDetailPushStatus_Enum = 1
	ArchivePushDetailPushStatus_INNER_FAIL ArchivePushDetailPushStatus_Enum = 2
	ArchivePushDetailPushStatus_OUTER_FAIL ArchivePushDetailPushStatus_Enum = 3
)

var ArchivePushDetailPushStatus_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "INNER_FAIL",
	3: "OUTER_FAIL",
}

var ArchivePushDetailPushStatus_Enum_value = map[string]int32{
	"UNKNOWN":    0,
	"SUCCESS":    1,
	"INNER_FAIL": 2,
	"OUTER_FAIL": 3,
}

func (x ArchivePushDetailPushStatus_Enum) String() string {
	return proto.EnumName(ArchivePushDetailPushStatus_Enum_name, int32(x))
}

func (ArchivePushDetailPushStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2, 0}
}

type ArchivePushEventName_Enum int32

const (
	ArchivePushEventName_UNKNOWN   ArchivePushEventName_Enum = 0
	ArchivePushEventName_PUSH_UP   ArchivePushEventName_Enum = 1
	ArchivePushEventName_PUSH_DOWN ArchivePushEventName_Enum = 2
	ArchivePushEventName_BACKFLOW  ArchivePushEventName_Enum = 3
)

var ArchivePushEventName_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "PUSH_UP",
	2: "PUSH_DOWN",
	3: "BACKFLOW",
}

var ArchivePushEventName_Enum_value = map[string]int32{
	"UNKNOWN":   0,
	"PUSH_UP":   1,
	"PUSH_DOWN": 2,
	"BACKFLOW":  3,
}

func (x ArchivePushEventName_Enum) String() string {
	return proto.EnumName(ArchivePushEventName_Enum_name, int32(x))
}

func (ArchivePushEventName_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3, 0}
}

type ArchivePushType_Enum int32

const (
	ArchivePushType_UNKNOWN ArchivePushType_Enum = 0
	ArchivePushType_BVID    ArchivePushType_Enum = 1
	ArchivePushType_AUTHOR  ArchivePushType_Enum = 2
)

var ArchivePushType_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "BVID",
	2: "AUTHOR",
}

var ArchivePushType_Enum_value = map[string]int32{
	"UNKNOWN": 0,
	"BVID":    1,
	"AUTHOR":  2,
}

func (x ArchivePushType_Enum) String() string {
	return proto.EnumName(ArchivePushType_Enum_name, int32(x))
}

func (ArchivePushType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4, 0}
}

type AuthorAuthorizationStatus_Enum int32

const (
	AuthorAuthorizationStatus_UNAUTHORIZED AuthorAuthorizationStatus_Enum = 0
	AuthorAuthorizationStatus_AUTHORIZED   AuthorAuthorizationStatus_Enum = 1
	AuthorAuthorizationStatus_CANCELED     AuthorAuthorizationStatus_Enum = -1
)

var AuthorAuthorizationStatus_Enum_name = map[int32]string{
	0:  "UNAUTHORIZED",
	1:  "AUTHORIZED",
	-1: "CANCELED",
}

var AuthorAuthorizationStatus_Enum_value = map[string]int32{
	"UNAUTHORIZED": 0,
	"AUTHORIZED":   1,
	"CANCELED":     -1,
}

func (x AuthorAuthorizationStatus_Enum) String() string {
	return proto.EnumName(AuthorAuthorizationStatus_Enum_name, int32(x))
}

func (AuthorAuthorizationStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5, 0}
}

type AuthorBindStatus_Enum int32

const (
	AuthorBindStatus_UNBINDED AuthorBindStatus_Enum = 0
	AuthorBindStatus_BINDED   AuthorBindStatus_Enum = 1
	AuthorBindStatus_CANCELED AuthorBindStatus_Enum = -1
)

var AuthorBindStatus_Enum_name = map[int32]string{
	0:  "UNBINDED",
	1:  "BINDED",
	-1: "CANCELED",
}

var AuthorBindStatus_Enum_value = map[string]int32{
	"UNBINDED": 0,
	"BINDED":   1,
	"CANCELED": -1,
}

func (x AuthorBindStatus_Enum) String() string {
	return proto.EnumName(AuthorBindStatus_Enum_name, int32(x))
}

func (AuthorBindStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6, 0}
}

type AuthorVerificationStatus_Enum int32

const (
	AuthorVerificationStatus_UNVERIFIED AuthorVerificationStatus_Enum = 0
	AuthorVerificationStatus_VERIFYING  AuthorVerificationStatus_Enum = 1
	AuthorVerificationStatus_VERIFIED   AuthorVerificationStatus_Enum = 2
	AuthorVerificationStatus_FAILED     AuthorVerificationStatus_Enum = -1
	AuthorVerificationStatus_CANCELED   AuthorVerificationStatus_Enum = -2
)

var AuthorVerificationStatus_Enum_name = map[int32]string{
	0:  "UNVERIFIED",
	1:  "VERIFYING",
	2:  "VERIFIED",
	-1: "FAILED",
	-2: "CANCELED",
}

var AuthorVerificationStatus_Enum_value = map[string]int32{
	"UNVERIFIED": 0,
	"VERIFYING":  1,
	"VERIFIED":   2,
	"FAILED":     -1,
	"CANCELED":   -2,
}

func (x AuthorVerificationStatus_Enum) String() string {
	return proto.EnumName(AuthorVerificationStatus_Enum_name, int32(x))
}

func (AuthorVerificationStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7, 0}
}

type AuthorPushStatus_Enum int32

const (
	AuthorPushStatus_UNPUSHED  AuthorPushStatus_Enum = 0
	AuthorPushStatus_EFFECTIVE AuthorPushStatus_Enum = 1
	AuthorPushStatus_CANCELED  AuthorPushStatus_Enum = -1
)

var AuthorPushStatus_Enum_name = map[int32]string{
	0:  "UNPUSHED",
	1:  "EFFECTIVE",
	-1: "CANCELED",
}

var AuthorPushStatus_Enum_value = map[string]int32{
	"UNPUSHED":  0,
	"EFFECTIVE": 1,
	"CANCELED":  -1,
}

func (x AuthorPushStatus_Enum) String() string {
	return proto.EnumName(AuthorPushStatus_Enum_name, int32(x))
}

func (AuthorPushStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8, 0}
}

// ArchiveStatus 稿件状态
type ArchiveStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveStatus) Reset()         { *m = ArchiveStatus{} }
func (m *ArchiveStatus) String() string { return proto.CompactTextString(m) }
func (*ArchiveStatus) ProtoMessage()    {}
func (*ArchiveStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *ArchiveStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArchiveStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArchiveStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArchiveStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveStatus.Merge(m, src)
}
func (m *ArchiveStatus) XXX_Size() int {
	return m.Size()
}
func (m *ArchiveStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveStatus proto.InternalMessageInfo

// ArchivePushBatchPushStatus 稿件推送批次状态
type ArchivePushBatchPushStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchivePushBatchPushStatus) Reset()         { *m = ArchivePushBatchPushStatus{} }
func (m *ArchivePushBatchPushStatus) String() string { return proto.CompactTextString(m) }
func (*ArchivePushBatchPushStatus) ProtoMessage()    {}
func (*ArchivePushBatchPushStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *ArchivePushBatchPushStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArchivePushBatchPushStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArchivePushBatchPushStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArchivePushBatchPushStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchivePushBatchPushStatus.Merge(m, src)
}
func (m *ArchivePushBatchPushStatus) XXX_Size() int {
	return m.Size()
}
func (m *ArchivePushBatchPushStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchivePushBatchPushStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ArchivePushBatchPushStatus proto.InternalMessageInfo

// ArchivePushDetailPushStatus 稿件推送详情状态
type ArchivePushDetailPushStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchivePushDetailPushStatus) Reset()         { *m = ArchivePushDetailPushStatus{} }
func (m *ArchivePushDetailPushStatus) String() string { return proto.CompactTextString(m) }
func (*ArchivePushDetailPushStatus) ProtoMessage()    {}
func (*ArchivePushDetailPushStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *ArchivePushDetailPushStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArchivePushDetailPushStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArchivePushDetailPushStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArchivePushDetailPushStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchivePushDetailPushStatus.Merge(m, src)
}
func (m *ArchivePushDetailPushStatus) XXX_Size() int {
	return m.Size()
}
func (m *ArchivePushDetailPushStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchivePushDetailPushStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ArchivePushDetailPushStatus proto.InternalMessageInfo

// ArchivePushEventName 稿件推送事件
type ArchivePushEventName struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchivePushEventName) Reset()         { *m = ArchivePushEventName{} }
func (m *ArchivePushEventName) String() string { return proto.CompactTextString(m) }
func (*ArchivePushEventName) ProtoMessage()    {}
func (*ArchivePushEventName) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *ArchivePushEventName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArchivePushEventName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArchivePushEventName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArchivePushEventName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchivePushEventName.Merge(m, src)
}
func (m *ArchivePushEventName) XXX_Size() int {
	return m.Size()
}
func (m *ArchivePushEventName) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchivePushEventName.DiscardUnknown(m)
}

var xxx_messageInfo_ArchivePushEventName proto.InternalMessageInfo

// ArchivePushType 稿件推送类型
type ArchivePushType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchivePushType) Reset()         { *m = ArchivePushType{} }
func (m *ArchivePushType) String() string { return proto.CompactTextString(m) }
func (*ArchivePushType) ProtoMessage()    {}
func (*ArchivePushType) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *ArchivePushType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArchivePushType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArchivePushType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArchivePushType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchivePushType.Merge(m, src)
}
func (m *ArchivePushType) XXX_Size() int {
	return m.Size()
}
func (m *ArchivePushType) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchivePushType.DiscardUnknown(m)
}

var xxx_messageInfo_ArchivePushType proto.InternalMessageInfo

// AuthorAuthorizationStatus 作者授权状态
type AuthorAuthorizationStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorAuthorizationStatus) Reset()         { *m = AuthorAuthorizationStatus{} }
func (m *AuthorAuthorizationStatus) String() string { return proto.CompactTextString(m) }
func (*AuthorAuthorizationStatus) ProtoMessage()    {}
func (*AuthorAuthorizationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *AuthorAuthorizationStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorAuthorizationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorAuthorizationStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorAuthorizationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorAuthorizationStatus.Merge(m, src)
}
func (m *AuthorAuthorizationStatus) XXX_Size() int {
	return m.Size()
}
func (m *AuthorAuthorizationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorAuthorizationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorAuthorizationStatus proto.InternalMessageInfo

// AuthorBindStatus 作者绑定状态
type AuthorBindStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorBindStatus) Reset()         { *m = AuthorBindStatus{} }
func (m *AuthorBindStatus) String() string { return proto.CompactTextString(m) }
func (*AuthorBindStatus) ProtoMessage()    {}
func (*AuthorBindStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *AuthorBindStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorBindStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorBindStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorBindStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorBindStatus.Merge(m, src)
}
func (m *AuthorBindStatus) XXX_Size() int {
	return m.Size()
}
func (m *AuthorBindStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorBindStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorBindStatus proto.InternalMessageInfo

// AuthorVerificationStatus 作者认证状态
type AuthorVerificationStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorVerificationStatus) Reset()         { *m = AuthorVerificationStatus{} }
func (m *AuthorVerificationStatus) String() string { return proto.CompactTextString(m) }
func (*AuthorVerificationStatus) ProtoMessage()    {}
func (*AuthorVerificationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *AuthorVerificationStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorVerificationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorVerificationStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorVerificationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorVerificationStatus.Merge(m, src)
}
func (m *AuthorVerificationStatus) XXX_Size() int {
	return m.Size()
}
func (m *AuthorVerificationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorVerificationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorVerificationStatus proto.InternalMessageInfo

// AuthorPushStatus 稿件作者推送状态
type AuthorPushStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorPushStatus) Reset()         { *m = AuthorPushStatus{} }
func (m *AuthorPushStatus) String() string { return proto.CompactTextString(m) }
func (*AuthorPushStatus) ProtoMessage()    {}
func (*AuthorPushStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *AuthorPushStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorPushStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorPushStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorPushStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorPushStatus.Merge(m, src)
}
func (m *AuthorPushStatus) XXX_Size() int {
	return m.Size()
}
func (m *AuthorPushStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorPushStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorPushStatus proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("archive.push.admin.v1.ArchiveStatus_Enum", ArchiveStatus_Enum_name, ArchiveStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.ArchivePushBatchPushStatus_Enum", ArchivePushBatchPushStatus_Enum_name, ArchivePushBatchPushStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.ArchivePushDetailPushStatus_Enum", ArchivePushDetailPushStatus_Enum_name, ArchivePushDetailPushStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.ArchivePushEventName_Enum", ArchivePushEventName_Enum_name, ArchivePushEventName_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.ArchivePushType_Enum", ArchivePushType_Enum_name, ArchivePushType_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.AuthorAuthorizationStatus_Enum", AuthorAuthorizationStatus_Enum_name, AuthorAuthorizationStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.AuthorBindStatus_Enum", AuthorBindStatus_Enum_name, AuthorBindStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.AuthorVerificationStatus_Enum", AuthorVerificationStatus_Enum_name, AuthorVerificationStatus_Enum_value)
	proto.RegisterEnum("archive.push.admin.v1.AuthorPushStatus_Enum", AuthorPushStatus_Enum_name, AuthorPushStatus_Enum_value)
	proto.RegisterType((*ArchiveStatus)(nil), "archive.push.admin.v1.ArchiveStatus")
	proto.RegisterType((*ArchivePushBatchPushStatus)(nil), "archive.push.admin.v1.ArchivePushBatchPushStatus")
	proto.RegisterType((*ArchivePushDetailPushStatus)(nil), "archive.push.admin.v1.ArchivePushDetailPushStatus")
	proto.RegisterType((*ArchivePushEventName)(nil), "archive.push.admin.v1.ArchivePushEventName")
	proto.RegisterType((*ArchivePushType)(nil), "archive.push.admin.v1.ArchivePushType")
	proto.RegisterType((*AuthorAuthorizationStatus)(nil), "archive.push.admin.v1.AuthorAuthorizationStatus")
	proto.RegisterType((*AuthorBindStatus)(nil), "archive.push.admin.v1.AuthorBindStatus")
	proto.RegisterType((*AuthorVerificationStatus)(nil), "archive.push.admin.v1.AuthorVerificationStatus")
	proto.RegisterType((*AuthorPushStatus)(nil), "archive.push.admin.v1.AuthorPushStatus")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdb, 0xae, 0xd2, 0x40,
	0x14, 0x86, 0x69, 0x21, 0xd8, 0xbd, 0x36, 0xe0, 0xa4, 0x4a, 0x3c, 0xec, 0x84, 0x8b, 0xb9, 0xf3,
	0x86, 0x44, 0xbd, 0x30, 0x31, 0x1a, 0x1d, 0xda, 0xa9, 0x4c, 0xc0, 0x29, 0xe9, 0x01, 0x74, 0xc7,
	0xa4, 0xa9, 0xec, 0x2a, 0x93, 0xc8, 0x21, 0xd0, 0x12, 0x0f, 0x4f, 0xe0, 0x1b, 0xf8, 0x48, 0x5e,
	0xfa, 0x08, 0x06, 0x9f, 0xc3, 0x43, 0xa6, 0x2d, 0x32, 0x3b, 0xd9, 0xf4, 0xa2, 0x59, 0x7f, 0x57,
	0xfb, 0xfd, 0x6b, 0xcd, 0x5a, 0x85, 0x93, 0x78, 0x25, 0xba, 0xab, 0xf5, 0x32, 0x5d, 0x9a, 0xed,
	0x78, 0x3d, 0x9d, 0x89, 0x6d, 0xd2, 0x5d, 0x65, 0x9b, 0x59, 0x37, 0xbe, 0x98, 0x8b, 0x45, 0x77,
	0x7b, 0x1f, 0x7f, 0xd5, 0xa0, 0x49, 0x8a, 0x8c, 0x9f, 0xc6, 0x69, 0xb6, 0xc1, 0x1f, 0xa1, 0x46,
	0x17, 0xd9, 0xdc, 0x3c, 0x85, 0x6b, 0x21, 0x1f, 0x70, 0x77, 0xc2, 0x51, 0xc5, 0xbc, 0x05, 0xc0,
	0xdd, 0x20, 0xa2, 0xaf, 0x98, 0x1f, 0xf8, 0xe8, 0xef, 0xfe, 0xd2, 0xcc, 0x36, 0x18, 0x32, 0xe1,
	0x8e, 0x28, 0x47, 0x7f, 0x0e, 0x8f, 0xcf, 0xa0, 0xe5, 0xb8, 0xde, 0x4b, 0x12, 0x44, 0x8c, 0x8f,
	0xc9, 0x90, 0xd9, 0xe8, 0xf7, 0x21, 0x69, 0x40, 0x2d, 0x7f, 0x5f, 0x33, 0x1b, 0x60, 0x4c, 0x58,
	0xd0, 0xb7, 0x3d, 0x32, 0x41, 0x3a, 0x7e, 0x0f, 0x77, 0xcb, 0x52, 0x46, 0xd9, 0x66, 0xd6, 0x8b,
	0xd3, 0xe9, 0x4c, 0x06, 0x65, 0x5d, 0xec, 0x50, 0x57, 0xe0, 0x46, 0xa3, 0xd0, 0xef, 0xa3, 0x8a,
	0x14, 0x32, 0x62, 0xfc, 0x05, 0xd2, 0xa4, 0xf0, 0x43, 0xcb, 0xa2, 0xbe, 0x8f, 0x74, 0x69, 0xe2,
	0x10, 0x36, 0x44, 0x55, 0x13, 0x41, 0x43, 0x46, 0xd1, 0x88, 0x78, 0x01, 0x23, 0x43, 0x54, 0xc3,
	0x11, 0x9c, 0x29, 0x46, 0x76, 0x92, 0xc6, 0xe2, 0x83, 0xe2, 0xf4, 0xfc, 0xaa, 0x13, 0x50, 0xe0,
	0x9a, 0xd9, 0x02, 0x60, 0x9c, 0x53, 0x2f, 0xca, 0x2d, 0x74, 0xa9, 0xdd, 0x30, 0xd8, 0xeb, 0x2a,
	0x0e, 0xe1, 0xa6, 0x62, 0x40, 0xb7, 0xc9, 0x22, 0xe5, 0xf1, 0x3c, 0xc1, 0x4f, 0x8f, 0x90, 0x65,
	0x0f, 0x51, 0x38, 0x42, 0x9a, 0xd9, 0x84, 0x93, 0x5c, 0xd8, 0x32, 0xa7, 0xcb, 0x03, 0xea, 0x11,
	0x6b, 0xe0, 0x0c, 0xdd, 0x09, 0xaa, 0xe2, 0x27, 0x70, 0x5d, 0xc1, 0x06, 0x9f, 0x56, 0x09, 0xbe,
	0x77, 0x15, 0xd1, 0x80, 0x5a, 0x6f, 0xcc, 0x6c, 0xa4, 0x99, 0x00, 0x75, 0x12, 0x06, 0x7d, 0xd7,
	0x43, 0x3a, 0x7e, 0x03, 0x77, 0x48, 0x96, 0xce, 0x96, 0xeb, 0xe2, 0x2e, 0x3e, 0xc7, 0xa9, 0x58,
	0x2e, 0xca, 0x9e, 0x9f, 0x95, 0x1c, 0x04, 0x8d, 0x90, 0x17, 0x9f, 0xb0, 0x73, 0x6a, 0xa3, 0x8a,
	0xec, 0x4d, 0xd1, 0xf9, 0xc4, 0x2d, 0xc2, 0x2d, 0x3a, 0xa4, 0xb6, 0xb2, 0x08, 0x78, 0x00, 0xa8,
	0xe0, 0xf6, 0xc4, 0xe2, 0xa2, 0x84, 0x3e, 0x2a, 0xa1, 0x0d, 0x30, 0x42, 0xde, 0x63, 0xdc, 0xce,
	0x81, 0x00, 0xf5, 0x32, 0x3e, 0x0a, 0xfb, 0x02, 0xb7, 0x0b, 0xd8, 0x38, 0x59, 0x8b, 0x77, 0x62,
	0xaa, 0x56, 0x1a, 0x95, 0xd0, 0x16, 0x40, 0xc8, 0xc7, 0xd4, 0x63, 0x0e, 0xcb, 0xb1, 0x4d, 0x38,
	0xc9, 0xd5, 0xeb, 0x62, 0x19, 0x1a, 0x60, 0xfc, 0x4f, 0xea, 0xe6, 0x0d, 0xa8, 0xcb, 0xd1, 0x5c,
	0x72, 0xb9, 0x64, 0x7e, 0xd8, 0x5d, 0xcc, 0xf7, 0x9d, 0x28, 0x2b, 0xf1, 0x58, 0xed, 0x44, 0x0e,
	0x68, 0x6f, 0x49, 0x1d, 0x87, 0x5a, 0x01, 0x1b, 0xd3, 0xa3, 0xcd, 0x3c, 0x68, 0xc2, 0xa9, 0xba,
	0xd6, 0xed, 0xef, 0xbb, 0x8e, 0xf6, 0x63, 0xd7, 0xd1, 0x7e, 0xee, 0x3a, 0xda, 0xb7, 0x5f, 0x9d,
	0xca, 0x79, 0x35, 0x5e, 0x89, 0xb7, 0xf5, 0xfc, 0x37, 0x7d, 0xf8, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0xeb, 0x82, 0x48, 0x96, 0xb3, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArchivePushClient is the client API for ArchivePush service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArchivePushClient interface {
}

type archivePushClient struct {
	cc *grpc.ClientConn
}

func NewArchivePushClient(cc *grpc.ClientConn) ArchivePushClient {
	return &archivePushClient{cc}
}

// ArchivePushServer is the server API for ArchivePush service.
type ArchivePushServer interface {
}

// UnimplementedArchivePushServer can be embedded to have forward compatible implementations.
type UnimplementedArchivePushServer struct {
}

func RegisterArchivePushServer(s *grpc.Server, srv ArchivePushServer) {
	s.RegisterService(&_ArchivePush_serviceDesc, srv)
}

var _ArchivePush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "archive.push.admin.v1.ArchivePush",
	HandlerType: (*ArchivePushServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api.proto",
}

func (m *ArchiveStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArchiveStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArchiveStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ArchivePushBatchPushStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArchivePushBatchPushStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArchivePushBatchPushStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ArchivePushDetailPushStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArchivePushDetailPushStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArchivePushDetailPushStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ArchivePushEventName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArchivePushEventName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArchivePushEventName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ArchivePushType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArchivePushType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArchivePushType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AuthorAuthorizationStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorAuthorizationStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorAuthorizationStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AuthorBindStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorBindStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorBindStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AuthorVerificationStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorVerificationStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorVerificationStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *AuthorPushStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorPushStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorPushStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ArchiveStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArchivePushBatchPushStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArchivePushDetailPushStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArchivePushEventName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArchivePushType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthorAuthorizationStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthorBindStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthorVerificationStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthorPushStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ArchiveStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArchiveStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArchiveStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArchivePushBatchPushStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArchivePushBatchPushStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArchivePushBatchPushStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArchivePushDetailPushStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArchivePushDetailPushStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArchivePushDetailPushStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArchivePushEventName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArchivePushEventName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArchivePushEventName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArchivePushType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArchivePushType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArchivePushType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthorAuthorizationStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorAuthorizationStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorAuthorizationStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthorBindStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorBindStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorBindStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthorVerificationStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorVerificationStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorVerificationStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthorPushStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorPushStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorPushStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
