// Code generated by kratos tool btsgen. DO NOT EDIT.

/*
  Package knowledge is a generated cache proxy package.
  It is generated from:
  type _bts interface {
		// bts: -struct_name=Dao  -sync=true  -nullcache=&knowledge.UserInfo{MID:-1} -check_null_code=$.MID==-1
		UsersMid(c context.Context, mid int64, sid int64) (*knowledge.UserInfo, error)
	}
*/

package knowledge

import (
	"context"

	"go-common/library/cache"
	"go-gateway/app/web-svr/activity/interface/model/knowledge"
)

var _ _bts

// UsersMid get data from cache if miss will call source method, then add to cache.
func (d *Dao) UsersMid(c context.Context, mid int64, sid int64) (res *knowledge.UserInfo, err error) {
	addCache := true
	res, err = d.CacheUsersMid(c, mid, sid)
	if err != nil {
		addCache = false
		err = nil
	}
	defer func() {
		if res.MID == -1 {
			res = nil
		}
	}()
	if res != nil {
		cache.MetricHits.Inc("bts:UsersMid")
		return
	}
	cache.MetricMisses.Inc("bts:UsersMid")
	res, err = d.RawUsersMid(c, mid, sid)
	if err != nil {
		return
	}
	miss := res
	if miss == nil {
		miss = &knowledge.UserInfo{MID: -1}
	}
	if !addCache {
		return
	}
	d.AddCacheUsersMid(c, mid, miss, sid)
	return
}
